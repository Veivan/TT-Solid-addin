<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PLMScripting</name>
    </assembly>
    <members>
        <member name="T:ProgramSoyuz.PLM.Scripting.EndCapStyle">
            <summary>
            Стили окончания линии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.EndCapStyle.SimpleArrow">
            <summary>
            Простая стрелка из 2-х линий
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.EndCapStyle.FillArrow">
            <summary>
            Заполненный цветом треугольник
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Role">
            <summary>
            Роль. Обозначает именованный набор разрешений на различные операции с 
            объектами определенных типов/ролей в соответствии с вложенными 
            правилами доступа <see cref="P:ProgramSoyuz.PLM.Scripting.Role.AccessRules"/>.
            Роль представляет собой вид отношения кого-либо к чему-либо в плане прав доступа
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject">
            <summary>
            Базовый класс для сущностей PLM системы, используемых в скриптинге
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingObject">
            <summary>
            Базовый класс для сущностей PLM системы, используемых в скриптинге
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectWithSystemAttributes.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingObject.m_Id">
            <summary>
            Идентификатор объекта по базе
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingObject.m_OperationStatus">
            <summary>
            Набор битовых полей для внутренний логики операции группового сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.#ctor">
            <summary>
            Конструктор по умолчанию для создания новых объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.#ctor(System.UInt32)">
            <summary>
            Конструктор для объектов-оболочек над объектами из базы
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.GetChangesInfo">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.GetDifferencesReport(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Формирует подробный отчёт о различии между двумя объектами одного типа
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.GetDifferencesReport(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.RtfFormatter)">
            <summary>
            Формирует подробный отчет о различии между двумя объектами одного типа
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.IncludeInDifferencesReport(System.String)">
            <summary>
            Возвращает true если свойство следует включить в отчет об изменениях
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.GetAllGenerativeObjects(System.Object,System.Func{ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Object,System.Boolean})">
            <summary>
            Перечислитель всех объектов, образующих для данного
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.GetAllGenerativeObjects(Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.ScriptingObject},System.Object,System.Func{ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Object,System.Boolean})">
            <summary>
            Перечислитель всех объектов, образующих для данного
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.PrepareToSave">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для подготовки операции сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.OnRawObjectUpdated">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.Save">
            <summary>
            Сохранение этого объекта вне зависимости от наличия текущего контекста группового сохранения
            </summary>
            <remarks>
            Если у объекта установлен флаг <see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsDirectSaveRequestIgnored"/>,
            то этот метод ничего не делает
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.Save(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Сохранение этого объекта вне зависимости от наличия текущего контекста группового сохранения
            </summary>
            <param name="saveRelatedRange">диапазон "затягивания в сохранение"
            измененных связанных объектов</param>
            <remarks>
            Этот метод не проверяет флаг <see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsDirectSaveRequestIgnored"/>,
            сохранение происходит вне зависимости от его наличия
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.Save(System.Nullable{System.DateTime})">
            <summary>
            Сохранение этого объекта вне зависимости от наличия текущего контекста группового сохранения
            </summary>
            <param name="utcFixedOperationTime">Время фиксации операции в UTC, затребованное клиентской стороной для проведения слегка "размазанных"
            во времени операций так, чтобы они шли с одной временной меткой. См. <see cref="P:ProgramSoyuz.PLM.Scripting.Service.FixedGroupOperationTime"/>&gt;</param>
            <remarks>
            Этот метод не проверяет флаг <see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsDirectSaveRequestIgnored"/>,
            сохранение происходит вне зависимости от его наличия
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.Save(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange,System.Nullable{System.DateTime})">
            <summary>
            Сохранение этого объекта вне зависимости от наличия текущего контекста группового сохранения
            </summary>
            <param name="saveRelatedRange">диапазон "затягивания в сохранение"
            измененных связанных объектов</param>
            <param name="utcFixedOperationTime">Время фиксации операции в UTC, затребованное клиентской стороной для проведения слегка "размазанных"
            во времени операций так, чтобы они шли с одной временной меткой. См. <see cref="P:ProgramSoyuz.PLM.Scripting.Service.FixedGroupOperationTime"/>&gt;</param>
            <remarks>
            Этот метод не проверяет флаг <see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsDirectSaveRequestIgnored"/>,
            сохранение происходит вне зависимости от его наличия
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.Erase">
            <summary>
            Удаление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.DoEraseChildrenOrRelated">
            <summary>
            Каскадное удаление дочерних объектов, 
            а так же малозначимых объектов, ссылающихся на данный
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.CancelChanges">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.CancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте и в его связанных объектах
            </summary>
            <param name="sendNotifications">true, если следует рассылать UI нотификации об изменениях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.CancelChangesSelf">
            <summary>
            Отмена измений, сделанных в объекте (связанные объекты метод не трогает)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.CancelChangesSelf(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте (связанные объекты метод не трогает)
            </summary>
            <param name="sendNotifications">true, если следует рассылать UI нотификации об изменениях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена собственных измений, сделанных в объекте и исключение объекта из текущего набора для сохранения (SaveSet), если есть
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.CloneWrapperWithoutChanges">
            <summary>
            Создает новый (или кешированный) редактируемый враппер по тому же объекту кеша
            </summary>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.Equals(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Сравнение объектов
            </summary>
            <param name="other">Сравниваемый объект</param>
            <returns>true если объекты одинаковые</returns>
            <remarks>Объекты из базы считаются одинаковыми если они одного типа и их идентификаторы совпадают.
            Новые объекты считаются одинаковыми если это один и тот же объект</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.Equals(System.Object)">
            <summary>
            Переопределяем сравнение на равенство
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.GetHashCode">
            <summary>
            Переопределяем вычисление хэш кода
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.rawGetHashCode">
            <summary>
            Штатное вычисление хэш кода
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.op_Equality(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Переопределяем оператор равенства
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.op_Inequality(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Переопределяем оператор неравенства
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.SerializeToStream(System.IO.Stream)">
            <summary>
            Выполняет бинарную сериализацию этого объекта в стрим
            </summary>
            <remarks>Выделенная сериализация нужна, чтобы можно было сериализовать этот объект вызовом из
            другого домена</remarks>
            <param name="stream">Стрим, куда сериализуем объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.ToString(System.Boolean)">
            <summary>
            Возвращает строковое представление объекта (модифицированное или оригинальное)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.GetFormalName">
            <summary>
            Возвращает формальное строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.DebuggerDisplayString">
            <summary>
            Формирует представление объекта для дебаггера
            </summary>
            <returns>Строка, которую отображает дебаггер для этого объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingObject.ComparerById">
            <summary>
            Сравнивающий объект для сортировки объектов по паре Entity:Id
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.GetLocalized(System.String,System.String)">
            <summary>
            Возвращает локализованное для текущего языка значение свойства, либо <paramref name="value"/>
            </summary>
            <param name="nameKey">Ключ для пользовательской локализованной строки без привязки к конкретному свойству объекта</param>
            <param name="value">Нейтральное значение, используемое по умолчанию</param>
            <returns>Найденное значение, либо <paramref name="value"/></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.GetLocalized(ProgramSoyuz.DataModel.LocalizedStringBase.PropertyIdEnum,System.String,System.String)">
            <summary>
            Возвращает локализованное для текущего языка значение свойства, либо <paramref name="value"/>
            </summary>
            <param name="prop">Свойство, для которого ищется локализация</param>
            <param name="nameKey">Ключ для вложенной в основное значение свойства локализованной строки</param>
            <param name="value">Нейтральное значение, используемое по умолчанию</param>
            <returns>Найденное значение, либо <paramref name="value"/></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.GetLocalized(ProgramSoyuz.DataModel.LocalizedStringBase.PropertyIdEnum,System.String)">
            <summary>
            Возвращает локализованное для текущего языка значение свойства, либо <paramref name="value"/>
            </summary>
            <param name="prop">Свойство, для которого ищется локализация</param>
            <param name="value">Нейтральное значение, используемое по умолчанию</param>
            <returns>Найденное значение, либо <paramref name="value"/></returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.Id">
            <summary>
            Возвращает идентификатор объекта по базе.
            Для новых объектов возвращается 0
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.RealId">
            <summary>
            Возвращает реальный идентификатор объекта по базе.
            Присвоение значения сбрасывает бит фиктивности идентификатора
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.FakeId">
            <summary>
            Возвращает фиктивный временный идентификатор объекта еще несуществующего объекта.
            Присвоение 0 сбрасывает бит фиктивного идентификатора
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.Operation">
            <summary>
            Возвращает ид операции, производимой с этим объекте в текущем SaveSetе 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.OperationUserId">
            <summary>
            Возвращает идентификатор пользователя, выполняющего операцию
            Текущий пользователь для объектов изначально имевшихся в наборе для сохранения и
            для добавленных туда триггерами
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.OperationStatus">
            <summary>
            Возвращает ид операции, производимой с этим объекте в текущем SaveSetе 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsBySystem">
            <summary>
            Возвращает true если объект изначально не присутствовал в наборе для сохранения,
            а появился в результате работы серверных триггеров
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsOriginal">
            <summary>
            Возвращает true если объект является нередактируемой оболочкой объекта из кеша
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.SavePhase">
            <summary>
            Возвращает текущую фазу обработки объекта при групповом сохранении
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsAttributesPersisted">
            <summary>
            Возвращает true если атрибуты объекта уже были сохранены
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsInitializationInProgress">
            <summary>
            Возвращает true если объект находится в фазе инициализации атрибутов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.MoveRange">
            <summary>
            Возвращает зону перемещения объекта при групповом сохранении
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsDirectSaveRequestIgnored">
            <summary>
            Возвращает true если прямой запрос сохранения объекта следует игнорировать.
            Флаг может использоваться кодом кастомизации для 
            предотвращения нежелательного сохранения при закрытии
            карточки объекта.
            При этом через групповое сохранение или через <see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjects">привязанные объекты</see>
            сохранение происходит как обычно.
            Метод <see cref="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.Save(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)"/>так же выполняет сохранение 
            вне зависимости от того, установлен ли этот флаг.
            </summary>
            <remarks>См. также <see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsAnySaveRequestIgnored"/></remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsAnySaveRequestIgnored">
            <summary>
            Возвращает true если любой (как прямой, так и косвенный) запрос сохранения объекта следует игнорировать.
            Флаг может использоваться кодом кастомизации для 
            предотвращения нежелательной передачи объекта на сервер, даже если он попал в сейвсет или явно сохраняется скриптом
            </summary>
            <remarks>См. также <see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsDirectSaveRequestIgnored"/>.
            Синоним для<see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsNonPersisted"/></remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsNonPersisted">
            <summary>
            Возвращает true для нехранимых (виртуальных) объектов. Такие объекты не сохраняются в базу, 
            не добавляются в SaveSet и предназначены для использования в виртуальных деревьях и тому подобных
            конструкциях.
            Флаг влияет на работу различных получателей свойств, например <see cref="P:ProgramSoyuz.PLM.Scripting.InfoObject.Children"/>. 
            В контексте группового сохранения эти геттеры проверяют объекты в SaveSetе в поисках возможных вновь 
            добавленных детей. Для нехранимых объектов такой поиск не осуществляется. Для нехранимых объектов список
            детей формируется на основе списка <see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjects"/>
            </summary>
            <remarks>Синоним для<see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsAnySaveRequestIgnored"/></remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.ObjectIdentifier">
            <summary>
            Возвращает полный идентификатор объекта (тип сущности, id)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IdentityName">
            <summary>
            Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.FriendlyIdentityName">
            <summary>
            Возвращает подробное название объекта без идентификатора (используется для показа в сообщениях  об ошибках и т.п.)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsWrappedObjectAlive">
            <summary>
            Возвращает true, если обёрнутый объект из кеша существует
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsExisting">
            <summary>
            Возвращает true, если у объекта есть идентификатор по базе, то есть он сохранён в базу
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.AllGenerativeObjects">
            <summary>
            Перечислитель всех объектов, образующих для данного
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.GenerativeObjects">
            <summary>
            Перечислитель объектов, образующих для данного
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.NestedObjects">
            <summary>
            Перечислитель объектов, вложенных в данный
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsEditable">
            <summary>
            Возвращает true если эта оболочка может использоваться для редактирования объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.ExternalLinkAdditionalData">
            <summary>
            Дополнительные данные при создании линка в пакете конфигурации
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingObject.OperationEnum">
            <summary>
            Набор операций серверной логики группового сохранения
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingObject.SavePhaseEnum">
            <summary>
            Набор фаз обработки объекта при групповом сохранении
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingObject.MoveRangeEnum">
            <summary>
            Набор зон перемещения объекта при групповом сохранении
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingObject.ComparererById`1">
            <summary>
            Типизированный компаратор по идентификторам объектов
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingObject.IdComparer`1">
            <summary>
            Сравнивающий объект для реализации сортированных списков, в которых объекты сортируются по идентификатору
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingObject.IdComparer`1.Default">
            <summary>
            Экземпляр компаратора по умолчанию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObject.IdComparer`1.Compare(`0,`0)">
            <summary>
            Сравнивает два объекта по их ключам (NameKey)
            </summary>
            <returns>-1, 0 или 1 по результату сравнения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.#ctor">
            <summary>
            Конструктор по умолчанию для создания новых объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.#ctor(System.UInt32)">
            <summary>
            Конструктор для объектов-оболочек над объектами из базы
            </summary>
            <param name="id"></param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject._boundObjects">
            <summary>
            Набор связанных объектов, которые следует сохранить вместе с объектом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.ClearBoundObjects">
            <summary>
            Сброс списка прицепленных объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.NotifyBoundObjectsChanged">
            <summary>
            Оповещает подписчиков об изменении в связанных объектах
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.LookupBoundObject``1(System.UInt32)">
            <summary>
            Возвращает нужный объект по указанному Id из списка связанных с объектом
            </summary>
        </member>
        <!-- Некорректный XML-комментарий для члена "M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.LookupBoundObject``1(``0)" проигнорирован -->
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.LookupBoundObject``1(System.Func{``0,System.Boolean})">
            <summary>
            Возвращает нужный объект по указанному криптерию из списка связанных с объектом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.LookupBoundObjects``1(System.Func{``0,System.Boolean})">
            <summary>
            Возвращает нужные объекты по указанному криптерию из списка связанных с объектом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.CancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте и в его связанных объектах
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.GetAllBoundObjects">
            <summary>
            Рекурсивно перечисляет все объекты, связанные с данным (с защитой от зацикливания)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.DoGetAllBoundObjects(Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject})">
            <summary>
            Рекурсивно перечисляет все объекты, связанные с данным (с защитой от зацикливания)
            </summary>
            <param name="objects">Множество обработанных объектов для защиты от зацикливания. BoundObjects могу ссылаться друг на друга</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.DropUnsavedBoundObjects(Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject})">
            <summary>
            Рекурсивно сбрасывает все несуществующие объекты, связанные с данным (с защитой от зацикливания)
            </summary>
            <param name="objects">Множество обработанных объектов для защиты от зацикливания. BoundObjects могу ссылаться друг на друга</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.EnumRelatedObjects``1(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты нужного типа так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
            <remarks>Объект попадает в результат лишь один раз</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.GetModifiedObjectsAroundThisOne(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Рекурсивно формирует множество объектов, подлежащих сохранению, связанных с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
            <returns>Множество найденных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.DoGetModifiedObjectsAroundThisOne(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange,ProgramSoyuz.PLM.Scripting.ScriptingBaseObject,Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject})">
            <summary>
            Рекурсивно формирует множество объектов, подлежащих сохранению, связанных с указанным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
            <param name="obj">Очередной объект для выявления связанных с ним</param>
            <param name="objects">Множество уже найденных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.AddToSaveSet">
            <summary>
            Добавляет скриптовую оболочку к сохраняемому набору
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.RemoveFromSaveSet">
            <summary>
            Удаляе объект из набора для сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.PreCheckModification">
            <summary>
            Проверяет возможность модификации данной скриптовой оболочки.
            Выдаёт исключение, если объект не подлежит изменению
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.EnsureObjectInSaveSet">
            <summary>
            Добавляет скриптовую оболочку измененного объекта к сохраняемому набору в ее текущем состоянии.
            </summary>
            <remarks>
            Такое действие может быть полезным в клиентских триггерах при использовании объектов,
            которые уже были ранее добавлены в другой сейвсет, сохранение которого было прервано.
            В новый сейвсет такие объекты могут попасть только посредством этого метода, либо 
            через вызов CancelChanges c последующим изменением объекта.
            Этот метод никак не меняет признак измененности объекта. 
            Если объект неизмененный, в сохраняемый набор он добавлен не будет.
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject._GetLocalizedChangedProp(System.String,ProgramSoyuz.DataModel.LocalizedStringBase.PropertyIdEnum)">
            <summary>
            Измененное значение локализованного свойства (с поддержкой локализации)
            </summary>
            <param name="changedValue">Измененное значение на нейтральном языке, если есть</param>
            <param name="prop">Интересующее свойство</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjects">
            <summary>
            Набор связанных объектов, которые следует сохранить вместе с объектом.
            Список связанных объектов используется различными получателями свойств, такими как <see cref="P:ProgramSoyuz.PLM.Scripting.InfoObject.Children"/>. 
            В контексте группового сохранения эти геттеры проверяют объекты в SaveSetе в поисках возможных вновь 
            добавленных детей. Для нехранимых объектов такой поиск не осуществляется. Для нехранимых объектов список
            детей или привязок прав доступа формируется исключительно на основе списка BoundObjects.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения (с учетом BoundObjects)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.IsDirtySelf">
            <summary>
            Возвращает true, если сам объект был изменен и требует сохранения (без учета BoundObjects)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject._BoundObjects">
            <summary>
            Набор связанных объектов, которые следует сохранить вместе с объектом
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.GenerativeObjects">
            <summary>
            Перечислитель объектов, образующих для данного
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.NestedObjects">
            <summary>
            Перечислитель объектов, вложенных в данный
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange">
            <summary>
            Диапазон поиска связанных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange.Generative">
            <summary>
            Образующие. То есть те, существование которых требуется для сохранения текущего объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange.Dependent">
            <summary>
            Зависимые. То есть, те чье существование зависит от данного объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange.AttributeLinks">
            <summary>
            Объекты на которые есть ссылки среди атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange.BoundObjects">
            <summary>
            Объекты из коллекции связанных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange.Nested">
            <summary>
            Вложенные. То есть те, которые существуют вместе со своим "хозяином" 
            (например определения атрибутов у шаблона)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange.Desendant">
            <summary>
            Дочерние. То есть, те чье существование в иерархии зависит от данного объекта, как от родительского
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjectList">
            <summary>
            Класс оболочка для операций со списком дополнительных родителей
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjectList._owner">
            <summary>
            Объект, чья коллекция
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjectList.#ctor(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Конструктор
            </summary>
            <param name="pOwner">Объект, чья коллекция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjectList.Add(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Adds a new item to the set. If the set already contains an item equal to
            <paramref name="item"/>, that item is replaced with <paramref name="item"/>.
            </summary>
            <remarks>
            <para>Equality between items is determined by the comparison instance or delegate used
            to create the set.</para>
            <para>Adding an item takes approximately constant time, regardless of the number of items in the set.</para></remarks>
            <param name="item">The item to add to the set.</param>
            <returns>True if the set already contained an item equal to <paramref name="item"/> (which was replaced), false 
            otherwise.</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjectList.System#Collections#Generic#ICollection{ProgramSoyuz#PLM#Scripting#ScriptingBaseObject}#Add(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Adds a new item to the set. If the set already contains an item equal to
            <paramref name="item"/>, that item is replaced with <paramref name="item"/>.
            </summary>
            <remarks>
            <para>Equality between items is determined by the comparison instance or delegate used
            to create the set.</para>
            <para>Adding an item takes approximately constant time, regardless of the number of items in the set.</para></remarks>
            <param name="item">The item to add to the set.</param>
            <returns>True if the set already contained an item equal to <paramref name="item"/> (which was replaced), false 
            otherwise.</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjectList.AddRange(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject})">
            <summary>
            Adds all the items in <paramref name="collection"/> to the set. If the set already contains an item equal to
            one of the items in <paramref name="collection"/>, that item will be replaced.
            </summary>
            <remarks>
            <para>Equality between items is determined by the comparison instance or delegate used
            to create the set.</para>
            <para>Adding the collection takes time O(M), where M is the 
            number of items in <paramref name="collection"/>.</para></remarks>
            <param name="collection">A collection of items to add to the set.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjectList.AddMany(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject})">
            <summary>
            Adds all the items in <paramref name="collection"/> to the set. If the set already contains an item equal to
            one of the items in <paramref name="collection"/>, that item will be replaced.
            </summary>
            <remarks>
            <para>Equality between items is determined by the comparison instance or delegate used
            to create the set.</para>
            <para>Adding the collection takes time O(M), where M is the 
            number of items in <paramref name="collection"/>.</para></remarks>
            <param name="collection">A collection of items to add to the set.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjectList.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjectList.Remove(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Searches the set for an item equal to <paramref name="item"/>, and if found,
            removes it from the set. If not found, the set is unchanged.
            </summary>
            <remarks>
            <para>Equality between items is determined by the comparison instance or delegate used
            to create the set.</para>
            <para>Removing an item from the set takes approximately constant time, regardless of the size of the set.</para></remarks>
            <param name="item">The item to remove.</param>
            <returns>True if <paramref name="item"/> was found and removed. False if <paramref name="item"/> was not in the set.</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjectList.RemoveMany(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject})">
            <summary>
            Removes all the items in <paramref name="collection"/> from the set. 
            </summary>
            <remarks>
            <para>Equality between items is determined by the comparison instance or delegate used
            to create the set.</para>
            <para>Removing the collection takes time O(M), where M is the 
            number of items in <paramref name="collection"/>.</para></remarks>
            <param name="collection">A collection of items to remove from the set.</param>
            <returns>The number of items removed from the set.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjectList.RemoveAll(System.Predicate{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject})">
            <summary>
            Removes all the items in the collection that satisfy the condition
            defined by <paramref name="predicate"/>.
            </summary>
            <param name="predicate">A delegate that defines the condition to check for.</param>
            <returns>Returns a collection of the items that were removed, in sorted order.</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IIconableObject">
            <summary>
            Интерфейс для объектов, у которых есть своя иконка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IIconableObject.Icon">
            <summary>
            Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IIconableObject.DisplayIcon">
            <summary>
            Иконка, показываемая в UI
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IObjectWithParentConfiguration">
            <summary>
            Интерфейс для объектов конфигурации
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IConfigurationObject">
            <summary>
            Интерфейс для объектов конфигурации, обладающих глобальным идентификатором
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IConfigurationObject.InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IConfigurationObject.InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IObjectWithParentConfiguration.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IObjectWithParentConfiguration.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IMergeableByNameKey`1">
            <summary>
            Интерфейс для объектов подлежащих слиянию при импорте по одинаковому ключу среди своих соседей
            </summary>
            <typeparam name="T">Основной класс, к которому применяется интерфейс</typeparam>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IMergeableByNameKey`1.MergeWith(`0)">
            <summary>
            Склеивает текущий создаваемый объект с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IMergeableByNameKey`1.ReplaceWith(`0)">
            <summary>
            Склеивает текущий создаваемый объект с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IMergeableByNameKey`1.SetParent(`0)">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IMergeableByNameKey`1.ReplacedByItem">
            <summary>
            В ходе сохранения, если создается второй такой же объект, то ему прописывается ссылка
            на реально создаваемый объект, а операция сбрасывается
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IMergeableByNameKey`1.BrotherItems">
            <summary>
            Перечисляет соседние элементы, включая себя (дети своего родителя)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.PrepareModification">
            <summary>
              Подготовка объекта к внесению изменений
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.CreateWrapper(ProgramSoyuz.DataModel.RoleBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="role">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.#ctor(ProgramSoyuz.DataModel.RoleBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="role">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.#ctor(System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="nameKey">Программное название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.#ctor(ProgramSoyuz.DataModel.RoleBase.RoleKindEnum,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="kind">Тип сущности, к которой применяется роль</param>
            <param name="nameKey">Программное название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.#ctor(ProgramSoyuz.PLM.Scripting.Role,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительская роль</param>
            <param name="nameKey">Программное название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.#ctor(ProgramSoyuz.PLM.Scripting.Role.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.#ctor">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.GetDifferencesReport(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.RtfFormatter)">
            <summary>
            Формирует подробный отчет о различии между двумя объектами одного типа
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.MoveTo(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Перенос объекта к другому родителю.
            </summary>
            <param name="parent">Новый родительский объект</param>
            <remarks>Происходит только перенос к другому родителю. 
            Какого-либо сохранения общих свойств этим методом не осуществляется</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.DoEraseChildrenOrRelated">
            <summary>
            Каскадное удаление дочерних объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.GetNameUILocalizedNonModified(System.String)">
            <summary>
              Пользовательское название объекта (без применения модификаторов) (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.GetMasterNameUILocalizedNonModified(System.String)">
            <summary>
              Пользовательское (интерфейсное) название первого пользователя в этом отношении между пользователями (без применения модификаторов) (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.GetSlaveNameUILocalizedNonModified(System.String)">
            <summary>
              Пользовательское (интерфейсное) название второго пользователя в этом отношении между пользователями (без применения модификаторов) (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.GetNotesLocalizedNonModified(System.String)">
            <summary>
              Дополнительная информация о роли, отображаемая в UI (без применения модификаторов) (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.GetAccessRule(System.UInt32)">
            <summary>
            Возвращает правило доступа по ключу
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.GetChild(System.String)">
            <summary>
            Доступ к дочерней роли по основному пути наследования rootNameKey\NameKey1\..\NameKeyN
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.m_pOtherParentList">
            <summary>
            Оболочка для работы со списком элементов коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.AddOtherParent(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Добавление дополнительного родителя к объекту
            </summary>
            <param name="role">Дополнительный родитель</param>
            <returns>true если такого родителя еще не было</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.RemoveOtherParent(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Удаление дополнительного родителя объекта
            </summary>
            <param name="role">Дополнительный родитель</param>
            <returns>true если такого родитель был и исключен из списка дополнительных</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.m_ModificatorsList">
            <summary>
              Оболочка для работы со списком модификаторов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.AddModificator(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
              Добавление модификатора к объекту
            </summary>
            <param name = "role">Шаблон-модификатор</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.RemoveModificator(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
              Удаление модификатора объекта
            </summary>
            <param name = "role">Шаблон-модификатор</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.IsVisibleInUI">
            <summary>
            Возвращает true, если эта роль видна в пользовательском интерфейсе
            </summary>
            <returns>true если роль видна</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.IsVisibleInUI(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Возвращает true, если эта роль видна в списке ролей доступа, показанных для объектов
            </summary>
            <param name="objects">Проверяемые объекты</param>
            <returns>true если роль видна</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.IsVisibleInUI(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает true, если эта роль видна в списке ролей доступа, показанных для объекта
            </summary>
            <param name="obj">Проверяемый объект</param>
            <returns>true если роль видна</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.IsBasedOn(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Возвращает true, если объект является унаследованным от указанного
            </summary>
            <remarks>Считается что объект наследует самого себя</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.IsBasedOn(ProgramSoyuz.PLM.Scripting.Role,System.Boolean)">
            <summary>
            Возвращает true, если объект является унаследованным от указанного
            </summary>
            <param name="role">Проверяемый объект</param>
            <param name="applyAllModificators">Если false то проверка производится по доп. родителям
            только активных модификаторов, если true, то по всем</param>
            <remarks>Считается что объект наследует самого себя</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.IsChildOf(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Проверяет является ли этот объект дочерним по отношению к role. 
            Проверка производится с учетом множественного наследования.
            </summary>
            <param name="role">Роль, проверяемый на то, что он является родительским к данному</param>
            <returns>true если этот объект является дочерним по отношению к role или совпадает с ним</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.IsChildOf(ProgramSoyuz.PLM.Scripting.Role,System.Boolean)">
            <summary>
            Проверяет является ли этот объект дочерним по отношению к role. 
            Проверка производится с учетом множественного наследования.
            </summary>
            <param name="role">Роль, проверяемый на то, что он является родительским к данному</param>
            <param name="applyAllModificators">Если false то проверка производится по доп. родителям
            только активных модификаторов, если true, то по всем</param>
            <returns>true если этот объект является дочерним по отношению к role или совпадает с ним</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.GetAllParents">
            <summary>
            Формирует список всех родительских ролей и себя в порядке от старших к младшим
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.DoGetAllParents(System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.Role})">
            <summary>
            Формирует список всех родительских ролей и себя в порядке от старших к младшим
            </summary>
            <param name="parents">Список родительских ролей</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#Role}#SetParent(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#Role}#MergeWith(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Склеивает текущий создаваемый объект с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#Role}#ReplaceWith(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Склеивает текущий создаваемый объект с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ToString">
            <summary>
            Возвращает основное название объекта по умолчанию
            </summary>
            <returns>Возвращает основное название объекта по умолчанию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ToString(System.Boolean)">
            <summary>
            Возвращает строковое представление объекта (модифицированное или оригинальное)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ToString(ProgramSoyuz.Common.WordFormEnum)">
            <summary>
            Возвращает основное название объекта по умолчанию
            </summary>
            <returns>Возвращает основное название объекта по умолчанию</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.IsInActiveConfiguration">
            <summary>
              Возвращает true если объект принадлежит активной в данном продукте конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.NameKey">
            <summary>
            Программное название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.NameUILocalized">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.NameUILocalizedNonModified">
            <summary>
              Пользовательское название объекта (без применения модификаторов) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.NameUINonModified">
            <summary>
              Пользовательское название объекта (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.MasterNameUILocalized">
            <summary>
              Пользовательское (интерфейсное) название первого пользователя в этом отношении между пользователями (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.MasterNameUILocalizedNonModified">
            <summary>
              Пользовательское (интерфейсное) название первого пользователя в этом отношении между пользователями (без применения модификаторов) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.MasterNameUI">
            <summary>
            Пользовательское (интерфейсное) название первого пользователя в этом отношении между пользователями
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.MasterNameUINonModified">
            <summary>
            Пользовательское (интерфейсное) название первого пользователя в этом отношении между пользователями (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.SlaveNameUILocalized">
            <summary>
              Пользовательское (интерфейсное) название второго пользователя в этом отношении между пользователями (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.SlaveNameUILocalizedNonModified">
            <summary>
              Пользовательское (интерфейсное) название второго пользователя в этом отношении между пользователями (без применения модификаторов) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.SlaveNameUI">
            <summary>
            Пользовательское (интерфейсное) название второго пользователя в этом отношении между пользователями
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.SlaveNameUINonModified">
            <summary>
            Пользовательское (интерфейсное) название второго пользователя в этом отношении между пользователями (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.GroupKey">
            <summary>
              Строка, определяющая порядок сортировки ролей между собой и группирования производных объектов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.GroupKeyNonModified">
            <summary>
              Строка, определяющая порядок сортировки ролей между собой и группирования производных объектов (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.NotesLocalized">
            <summary>
              Дополнительная информация о роли, отображаемая в UI (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.NotesLocalizedNonModified">
            <summary>
              Дополнительная информация о роли, отображаемая в UI (без применения модификаторов) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.Notes">
            <summary>
            Дополнительная информация о роли, отображаемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.NotesNonModified">
            <summary>
            Дополнительная информация о роли, отображаемая в UI (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.Params">
            <summary>
            Пользовательские дополнительные параметры объекта, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ParamsNonModified">
            <summary>
            Пользовательские дополнительные параметры объекта, возможно определяющие программное поведение (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.Tags">
            <summary>
            Строка с тэгами объекта, для использования логикой конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.TagsNonModified">
            <summary>
            Строка с тэгами объекта, для использования логикой конфигурации (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.FlagsNonModified">
            <summary>
            Набор битовых флагов объекта (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.IsAbstract">
            <summary>
            Возвращает true если роль является абстрактной
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.IsHidden">
            <summary>
            Этим битом помечены роли для внутреннего использования. Пользователь с ними не работает
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.IsHiddenForOtherObjects">
            <summary>
            В списке доступа не показывать роль для объектов, которые не упомянуты в правилах доступа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.IsSymmetric">
            <summary>
            Роль (пользователь-пользователь) является симметричной, то есть установленные отношения между пользователями
            действует в обе стороны. Возвратность правил игнорируется.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.Kind">
            <summary>
            Тип роли
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.DateModified">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ModifiedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.NativeAccessRules">
            <summary>
            Возвращает массив вложенных правил контроля доступа, определенных для этой роли
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.AccessRules">
            <summary>
            Возвращает массив правил доступа (без применения модификации), определенных в этой роли и во всех родительских ролях
            Сначала идут правила этой роли, потом родительских
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.AccessRulesModified">
            <summary>
            Возвращает массив УИ команд (с примененными модификаторами), определенных в этом объекте и во всех родительских объектах
            Сначала идут объекты этого объекта, потом родительских
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role._AllAccessRules">
            <summary>
            Возвращает перечислитель всех правил доступа, определенных в этом объекте и во всех родительских объектах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role._AllRawAccessRules">
            <summary>
            Возвращает перечислитель всех правил доступа, определенных в этом объекте и во всех родительских объектах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role._AllRawInheritedAccessRules">
            <summary>
            Возвращает перечислитель всех УИ команд, определенных в этом объекте и во всех родительских объектах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.Icon">
            <summary>
            Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.IconNonModified">
            <summary>
              Иконка, установленная для этого объекта (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.DisplayIcon">
            <summary>
            Иконка, показываемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.Parent">
            <summary>
            Доступ к родительской роли по прямой ветке наследования
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.Root">
            <summary>
            Возвращает корневой объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.MasterRole">
            <summary>
              Доступ к объекту, для которого данный является модификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.IsModificator">
            <summary>
              Возвращает true если этот объект является модификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role._Children">
            <summary>
            Возвращает перечислитель дочерних (по прямой ветке наследования) ролей.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role._AllChildren">
            <summary>
            Перечисляет рекурсивно всех детей (по прямой ветке наследования) (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role._AllDescendants">
            <summary>
            Возвращает перечислитель дочерних (по прямой и дополнительной веткам наследования на все уровни) ролей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.Children">
            <summary>
            Возвращает перечислитель дочерних (по прямой ветке наследования) ролей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.AllChildren">
            <summary>
            Возвращает перечислитель дочерних (по прямой ветке наследования на все уровни) ролей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.AllDescendants">
            <summary>
            Возвращает перечислитель дочерних (по прямой и дополнительной веткам наследования на все уровни) ролей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.OtherChildren">
            <summary>
            Возвращает массив дочерних (по дополнительной ветке наследования) ролей.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role._OtherChildren">
            <summary>
            Возвращает массив дочерних (по дополнительной ветке наследования) ролей.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ExistingOtherParents">
            <summary>
            Возвращает перечислитель существующих дополнительных родителей объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.OtherParentsWithModificatorsApplied">
            <summary>
              Возвращает перечислитель дополнительных родительских объектов с учетом примененных модификаторов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.OtherParentsWithAllModificatorsApplied">
            <summary>
              Возвращает перечислитель дополнительных родительских объектов с учетом примененных модификаторов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.OtherParents">
            <summary>
            Возвращает перечислитель элементов коллекции спискового атрибута, существующих в базе.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ExistingModificators">
            <summary>
              Возвращает перечислитель существующих модификаторов роли
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.Modificators">
            <summary>
              Возвращает перечислитель модификаторов роли
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ActiveModificators">
            <summary>
              Возвращает коллекцию объектов модификаторов. Если таковых нет, возвращается пустая коллекция
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#Role}#DirectChildren">
            <summary>
            Перечисляет рекурсивно всех прямых детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#Role}#AllDirectChildren">
            <summary>
            Перечисляет рекурсивно всех прямых детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#Role}#ReplacedByItem">
            <summary>
            В ходе сохранения, если создается второй такой же объект, то ему прописывается ссылка
            на реально создаваемый объект, а операция сбрасывается
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#Role}#BrotherItems">
            <summary>
            Перечисляет соседние элементы, включая себя (дети своего родителя)
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Role.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CreationDataBase">
            <summary>
            Базовый класс для набора измененных данных скриптовой оболочкb
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CreationDataBase.Mask">
            <summary>
              Битовая маска, описывающая какие из ссылочных полей были инициализированы
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CreationDataBase.IsDefined(ProgramSoyuz.PLM.Scripting.ValidReferencesEnum)">
            <summary>
              Проверяет установлены ли указанные биты маски
            </summary>
            <returns>true если установлены какие-нибудь из указанных битов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CreationDataBase.GetChangesLevel(System.Type)">
            <summary>
            Определяет уровень изменений, накопленных в этом объекте: данные или скин
            </summary>
            <param name="dataType">Тип данных для сохранения объекта в пакете, производный от <see cref="T:ProgramSoyuz.DataModel.ObjectPackDataBase"/></param>
            <returns>Флаги, характеризующие имеющиеся изменения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CreationDataBase.AppendChanges(System.Text.StringBuilder)">
            <summary>
            Добавляет информацию об измененениях, накопленных в этом объекте
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.CreationData.PrepareDefaults">
            <summary>
            Установка значений по умолчанию для новых объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.MasterNameUI">
            <summary>
            Пользовательское (интерфейсное) название первого пользователя в этом отношении
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.SlaveNameUI">
            <summary>
            Пользовательское (интерфейсное) название второго пользователя в этом отношении
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.GroupKey">
            <summary>
              Строка, определяющая порядок сортировки ролей между собой и группирования производных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.Kind">
            <summary>
            Тип роли 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.Params">
            <summary>
            Пользовательские дополнительные параметры объекта, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.Tags">
            <summary>
            Строка с тэгами объекта, для использования логикой конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.m_Parent">
            <summary>
            Родительский (по прямой ветке наследования) объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.m_MasterRole">
            <summary>
              Шаблон, для которого данный служит модификатором
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.ModificatorsToAdd">
            <summary>
              Шаблоны-модификаторы для добавления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.ModificatorsToRemove">
            <summary>
              Шаблоны-модификаторы для удаления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.OtherParentsToAdd">
            <summary>
            Дополнительные родительские объекты для добавления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.OtherParentsToRemove">
            <summary>
            Дополнительные родительские объекты для удаления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.m_Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.CreationData.ReplacedByItem">
            <summary>
            В ходе сохранения, если создается второй такой же объект, то ему прописывается ссылка
            на реально создаваемый объект, а операция сбрасывается
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.CreationData.WriteTo(ProgramSoyuz.DataModel.RoleBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.CreationData.GetChangesLevel(System.Type)">
            <summary>
            Определяет уровень изменений, накопленных в этом объекте: данные или скин
            </summary>
            <param name="dataType">Тип данных для сохранения объекта в пакете, производный от <see cref="T:ProgramSoyuz.DataModel.ObjectPackDataBase"/></param>
            <returns>Флаги, характеризующие имеющиеся изменения</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.CreationData.Parent">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.CreationData.MasterRole">
            <summary>
              Шаблон, для которого данный служит модификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.CreationData.Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Role.OtherParentList">
            <summary>
            Класс оболочка для операций со списком дополнительных родителей
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.OtherParentList.m_pOwner">
            <summary>
            Роль, чья коллекция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.OtherParentList.m_ExistingOtherParents">
            <summary>
            Список существующих элементов коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.OtherParentList.#ctor(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Конструктор
            </summary>
            <param name="pOwner">Роль, чья коллекция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.OtherParentList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.OtherParentList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.OtherParentList.Add(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.OtherParentList.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.OtherParentList.Contains(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.OtherParentList.CopyTo(ProgramSoyuz.PLM.Scripting.Role[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional.-or-<paramref name="arrayIndex" /> is equal to or greater than the length of <paramref name="array" />.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.-or-Type cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.OtherParentList.Remove(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.OtherParentList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.OtherParentList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList">
            <summary>
              Класс оболочка для операций со списком модификаторов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList.m_pOwner">
            <summary>
              Роль, чья коллекция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList.m_ExistingModificators">
            <summary>
              Список существующих модификаторов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList.#ctor(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
              Конструктор
            </summary>
            <param name = "pOwner">Шаблон, чья коллекция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref = "T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              An <see cref = "T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList.Add(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
              Adds an item to the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name = "item">The object to add to the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList.Clear">
            <summary>
              Removes all items from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList.Contains(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
              Determines whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
              true if <paramref name = "item" /> is found in the <see cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name = "item">The object to locate in the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList.CopyTo(ProgramSoyuz.PLM.Scripting.Role[],System.Int32)">
            <summary>
              Copies the elements of the <see cref = "T:System.Collections.Generic.ICollection`1" /> to an <see
               cref = "T:System.Array" />, starting at a particular <see cref = "T:System.Array" /> index.
            </summary>
            <param name = "array">The one-dimensional <see cref = "T:System.Array" /> that is the destination of the elements copied from <see
               cref = "T:System.Collections.Generic.ICollection`1" />. The <see cref = "T:System.Array" /> must have zero-based indexing.</param>
            <param name = "arrayIndex">The zero-based index in <paramref name = "array" /> at which copying begins.</param>
            <exception cref = "T:System.ArgumentNullException"><paramref name = "array" /> is null.</exception>
            <exception cref = "T:System.ArgumentOutOfRangeException"><paramref name = "arrayIndex" /> is less than 0.</exception>
            <exception cref = "T:System.ArgumentException"><paramref name = "array" /> is multidimensional.-or-<paramref
              name = "arrayIndex" /> is equal to or greater than the length of <paramref name = "array" />.-or-The number of elements in the source <see
               cref = "T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref
               name = "arrayIndex" /> to the end of the destination <paramref name = "array" />.-or-Type cannot be cast automatically to the type of the destination <paramref
               name = "array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList.Remove(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
              Removes the first occurrence of a specific object from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              true if <paramref name = "item" /> was successfully removed from the <see
               cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref
               name = "item" /> is not found in the original <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name = "item">The object to remove from the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList.Count">
            <summary>
              Gets the number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              The number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Role.ModificatorsList.IsReadOnly">
            <summary>
              Gets a value indicating whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
              true if the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UICommand">
            <summary>
              Команда пользовательского интерфейса.
              Используется для кастомизации пользовательского интерфейса. Кнопок, контекстного меню, тулбаров
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IObjectWithCustomizationCode">
            <summary>
            Интерфейс для объектов, у которых есть код кастомизации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IObjectWithCustomizationCode.CustomizationCode">
            <summary>
            Код скрипта кастомизации объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ITemplateNestedObject">
            <summary>
              Интерфейсов для подчиненных шаблону объектов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ITemplateNestedObject.Parent">
            <summary>
              Доступ к родительскому шаблону
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.m_pData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.PrepareModification">
            <summary>
              Подготовка объекта к внесению изменений
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.m_pRealObject">
            <summary>
              Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
              При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.CreateWrapper(ProgramSoyuz.DataModel.UICommandBase,System.Boolean)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "cmd">Реальный объект</param>
            <param name = "original">false, если предполагается возможность редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
              Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.Uninitialized">
            <summary>
              Значение для обозначения неицициализированной ссылки на предшественника по наследованию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.#ctor">
            <summary>
              Конструктор для значения Uninitialized
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.#ctor(ProgramSoyuz.DataModel.UICommandBase,System.Boolean)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "cmd">Реальный объект</param>
            <param name = "original">false, если предполагается возможность редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.#ctor(ProgramSoyuz.PLM.Scripting.Template,System.String)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "template">Шаблон к которому относится закладка</param>
            <param name = "nameKey">Программное название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.#ctor(ProgramSoyuz.PLM.Scripting.AttributeDef,System.String)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "attr">Шаблон к которому относится закладка</param>
            <param name = "nameKey">Программное название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.#ctor(ProgramSoyuz.PLM.Scripting.UICommand.CreationData)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.MakeUnsavedCopy(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Создает новый объект - несохраненную копию данного
            </summary>
            <param name="newParent">Новый родительский шаблон, для которого делается копия объекта</param>
            <returns>Копию объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
              Инициализирует этот объект по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
              Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name = "objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.IdAssigned(System.UInt32)">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name = "id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.SaveCompleted">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
              что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.MoveTo(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Перенос объекта к другому родителю.
            </summary>
            <param name="newParent">Новый родительский объект для закладки</param>
            <exception cref="T:ProgramSoyuz.PLM.Scripting.InvalidRequestException">Объект еще не создан</exception>
            <remarks>
              Происходит только перенос к другому родителю. 
              Какого-либо сохранения общих свойств этим методом не осуществляется
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.DoCancelChanges(System.Boolean)">
            <summary>
              Отмена измений, сделанных в объекте
            </summary>
            <param name = "sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
              Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name = "range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.CheckWrappedObject">
            <summary>
              Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
              Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.Invoke(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
              Выполнение команды над указанным объектом
            </summary>
            <param name = "obj">Объект, к которому примененяется команда</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.Invoke(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
              Выполнение команды над указанным объектом
            </summary>
            <param name = "objects">Объекты к которым примененяется команда</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.Invoke(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
              Выполнение команды над указанным объектом
            </summary>
            <param name = "attr">Объект, к которому примененяется команда</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.InvokeOnListAttribute(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement})">
            <summary>
              Выполнение команды над указанным объектом
            </summary>
            <param name = "attr">Объект, к которому примененяется команда</param>
            <param name = "selectedElements">набор выделенных элементов списка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.Invoke(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement})">
            <summary>
              Выполнение команды над указанным объектом
            </summary>
            <param name = "attr">Объект, к которому примененяется команда</param>
            <param name = "selectedElements">набор выделенных элементов списка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.InvokeOnSetAttribute(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject})">
            <summary>
              Выполнение команды над указанным объектом
            </summary>
            <param name = "attr">Объект, к которому примененяется команда</param>
            <param name = "selectedElements">набор выделенных элементов множества</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.PrecheckUICommandInvocation">
            <summary>
            ПРедварительные проверки при вызове UI команды
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.IsValid(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name = "obj">Объект, к которому примененяется команда</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.IsValid(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name = "objects">Объекты, к которым примененяется команда</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.IsValid(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name = "attr">Объект, к которому примененяется команда</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.UpdateState(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объекта
            </summary>
            <param name="obj">Потенциальный объект применения команды</param>
            <param name="cmdUI">Интерфейс доступа к элементу пользовательского интерфейса</param>
            <remarks>В качестве простого <paramref name="cmdUI"/>можно использовать класс <see cref="T:ProgramSoyuz.Common.GuiLib.ShortcutCmdUI"/></remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.UpdateState(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объекта
            </summary>
            <param name="objects">Объекты к которым примененяется команда</param>
            <param name="cmdUI">Интерфейс доступа к элементу пользовательского интерфейса</param>
            <remarks>В качестве простого <paramref name="cmdUI"/>можно использовать класс <see cref="T:ProgramSoyuz.Common.GuiLib.ShortcutCmdUI"/></remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.UpdateState(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объекта
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
            <param name="cmdUI">Интерфейс доступа к элементу пользовательского интерфейса</param>
            <remarks>В качестве простого <paramref name="cmdUI"/>можно использовать класс <see cref="T:ProgramSoyuz.Common.GuiLib.ShortcutCmdUI"/></remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.UpdateStateOnListAttribute(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объекта
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
            <param name="cmdUI">Интерфейс доступа к элементу пользовательского интерфейса</param>
            <remarks>В качестве простого <paramref name="cmdUI"/>можно использовать класс <see cref="T:ProgramSoyuz.Common.GuiLib.ShortcutCmdUI"/></remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.UpdateState(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объекта
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
            <param name="cmdUI">Интерфейс доступа к элементу пользовательского интерфейса</param>
            <remarks>В качестве простого <paramref name="cmdUI"/>можно использовать класс <see cref="T:ProgramSoyuz.Common.GuiLib.ShortcutCmdUI"/></remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.UpdateStateOnSetAttribute(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объекта
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
            <param name="cmdUI">Интерфейс доступа к элементу пользовательского интерфейса</param>
            <remarks>В качестве простого <paramref name="cmdUI"/>можно использовать класс <see cref="T:ProgramSoyuz.Common.GuiLib.ShortcutCmdUI"/></remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.GetNameUILocalizedNonModified(System.String)">
            <summary>
              Пользовательское название объекта (без применения модификаторов) (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.GetNotesLocalizedNonModified(System.String)">
            <summary>
              Пользовательские заметки об объекте (всплывающая подсказка) (без применения модификаторов) (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.GetTooltipLocalizedNonModified(System.String)">
            <summary>
              Всплывающая подсказка для кнопки (без применения модификаторов) (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.m_Predecessor">
            <summary>
              Предшественник по наследованию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.PrepareForAnotherKind(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Сбрасывает неактуальные атрибуты после создания копии объекта для шаблона другого типа.
            Вызывается в коде сеттера родительского шаблона
            </summary>
            <param name="oldKind">Старый тип шаблона</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.MergeWith(ProgramSoyuz.PLM.Scripting.UICommand)">
            <summary>
            Склеивает текущий создаваемый объект с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.ToString">
            <summary>
              Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.Entity">
            <summary>
              Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ChangedData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.RealObject">
            <summary>
              Доступ к "реальному" объекту.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.WrappedObject">
            <summary>
              Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.IsDirtySelf">
            <summary>
              Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ParentConfigurationId">
            <summary>
              Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ParentConfigurationInEffect">
            <summary>
              Конфигурация, к которой относится этот объект с учётом возможного наследования
              конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.NameKey">
            <summary>
              Программное название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ParentNameKey">
            <summary>
              Программное название родительской команды-меню
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ParentNameKeyNonModified">
            <summary>
              Программное название родительской команды-меню (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.NameUILocalized">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.NameUILocalizedNonModified">
            <summary>
              Пользовательское название объекта (без применения модификаторов) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.NameUI">
            <summary>
              Пользовательское название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.NameUINonModified">
            <summary>
              Пользовательское название объекта (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.NotesLocalized">
            <summary>
             Пользовательские заметки об объекте (всплывающая подсказка) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.NotesLocalizedNonModified">
            <summary>
              Пользовательские заметки об объекте (всплывающая подсказка) (без применения модификаторов) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.Notes">
            <summary>
            Пользовательские заметки об объекте (всплывающая подсказка)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.NotesNonModified">
            <summary>
            Пользовательские заметки об объекте (всплывающая подсказка) (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ShortcutKey">
            <summary>
              Клавиатурный шорткат на операцию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ShortcutKeyNonModified">
            <summary>
              Клавиатурный шорткат на операцию (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.GroupKey">
            <summary>
              Строка, определяющая порядок закладок, используется для сортировки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.GroupKeyNonModified">
            <summary>
              Строка, определяющая порядок закладок, используется для сортировки (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ProgramSoyuz#PLM#Scripting#IObjectWithCustomizationCode#CustomizationCode">
            <summary>
              Код скрипта кастомизации объектов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.CustomizationCode">
            <summary>
              Код скрипта команды
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.CustomizationCodeNonModified">
            <summary>
              Код скрипта команды (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.HasCustomizationCode">
            <summary>
              Возвращает true если у raw объекта собственный (неунаследованный) код кастомизации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.PredefinedCommandId">
            <summary>
              Код команды, предопределенной в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.PredefinedCommandIdNonModified">
            <summary>
              Код команды, предопределенной в UI (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.Kind">
            <summary>
              Тип применимости команды
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.KindNonModified">
            <summary>
              Тип применимости команды (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.IsErasedByInheritance">
            <summary>
              Возвращает true если этот объект является удалённой заглушкой
              для исключения предшественника из иерархии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.FlagsNonModified">
            <summary>
              Набор битовых флагов объекта (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.IsContextMenuCommand">
            <summary>
              Возвращает true если команда актуальна для показа в контектном меню объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.IsToolbarButton">
            <summary>
              Возвращает true если команда актуальна для показа в тулбаре объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.IsCellButton">
            <summary>
            Возвращает true если команда актуальна для показа на ячейке грида
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.IsFormButton">
            <summary>
              Команда актуальна для показа в виде кнопки на форме
              GroupKey в этом случае используется для определения места в списке атрибутов формы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.IsAllowInvokeForReadOnlyObject">
            <summary>
              Команда может работать и с объектами доступными только для чтения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.IsAllowInvokeOnRevision">
            <summary>
              Команда может работать и с объектами прокси конкретных ревизий
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.IsInvokeOnDoubleClick">
            <summary>
              Команда может работать и с объектами прокси конкретных ревизий
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.IsValidForPersistedObjectsOnly">
            <summary>
            Команда применима только к существующим в базе объектам
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.AttributeNameKey">
            <summary>
              Ключ атрибута, к которому относится эта команда
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.AttributeNameKeyNonModified">
            <summary>
              Ключ атрибута, к которому относится эта команда (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.PageNameKey">
            <summary>
            Ключ закладки, к которой относится эта команда
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.PageNameKeyNonModified">
            <summary>
            Ключ закладки, к которой относится эта команда (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.DisplayParams">
            <summary>
              Параметры отображения команды в пользовательском интерфейсе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.DisplayParamsNonModified">
            <summary>
              Параметры отображения команды в пользовательском интерфейсе (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ButtonDisplayStyle">
            <summary>
              Стиль кнопки на тулбаре
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ButtonDisplayStyleNonModified">
            <summary>
              Стиль кнопки на тулбаре (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.TooltipLocalized">
            <summary>
            Всплывающая подсказка для кнопки (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.TooltipLocalizedNonModified">
            <summary>
             Всплывающая подсказка для кнопки (без применения модификаторов) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.Tooltip">
            <summary>
              Всплывающая подсказка для кнопки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.TooltipNonModified">
            <summary>
              Всплывающая подсказка для кнопки (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.AttributeDataType">
            <summary>
              Возможный тип данных атрибута, к которому относится эта команда
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.AttributeDataTypeNonModified">
            <summary>
              Возможный тип данных атрибута, к которому относится эта команда (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.DateCreated">
            <summary>
              Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.CreatedByUser">
            <summary>
              Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.DateModified">
            <summary>
              Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ModifiedByUser">
            <summary>
              Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.Icon">
            <summary>
              Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.IconNonModified">
            <summary>
              Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.DisplayIcon">
            <summary>
              Иконка, показываемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.Parent">
            <summary>
              Доступ к родительскому шаблону
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ParentMaster">
            <summary>
              Родительский шаблон (или его мастер, если родитель является модификатором)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.Predecessor">
            <summary>
              Предшественник по наследованию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.ModifiedClone">
            <summary>
              Модифицированная версия этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.IdentityName">
            <summary>
              Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UICommand.CreationData">
            <summary>
              Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.PrepareDefaults">
            <summary>
            Установка значений по умолчанию для новых объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.NameKey">
            <summary>
              Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.NameUI">
            <summary>
              Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.ParentNameKey">
            <summary>
              Программное название родительской команды-меню
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.Notes">
            <summary>
              Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.ShortcutKey">
            <summary>
              Клавиатурный шорткат на операцию
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.GroupKey">
            <summary>
              Строка, определяющая порядок закладок, используется для сортировки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.CustomizationCode">
            <summary>
              Код скрипта валидации и/или вычисления атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.PageNameKey">
            <summary>
            Ключ закладки, к которой относится эта команда
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.AttributeNameKey">
            <summary>
              Ключ атрибута, к которому относится эта команда
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.DisplayParams">
            <summary>
              Дополнительное поле для параметров отображения команды в пользовательском интерфейсе
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.AttributeDataType">
            <summary>
              Возможный тип данных атрибута, к которому относится эта команда
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.Kind">
            <summary>
              Тип применимости команды
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.PredefinedCommandId">
            <summary>
              Код команды, предопределенной в UI
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.ButtonDisplayStyle">
            <summary>
              Стиль кнопки на тулбаре
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.Tooltip">
            <summary>
              Всплывающая подсказка для кнопки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.m_ParentTemplate">
            <summary>
              Родительский шаблон, к которому относится команда
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.m_Icon">
            <summary>
              Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.m_ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.WriteTo(ProgramSoyuz.DataModel.UICommandBase.Body)">
            <summary>
              Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name = "pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.MakeCopy(ProgramSoyuz.DataModel.UICommandBase.Body)">
            <summary>
              Создает копию этого класса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.Parent">
            <summary>
              Родительский шаблон
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.Icon">
            <summary>
              Иконка для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UICommand.CreationData.ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UICommand.DistinctKeyEqualityComparer">
            <summary>
              Сравнение объектов по ключевым свойствам
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UICommand.DistinctKeyEqualityComparer.Default">
            <summary>
              Сравнивающий объект для реализации словаря различных по ключевым свойствам объектов
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchExpressionItem">
            <summary>
            Базовый класс для элемента дерева поискового запроса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.m_SearchOperation">
            <summary>
            Поисковая операция, которой принадлежит элемент поискового дерева.
            Актуальна только на сервере после подготовки к выполнению поискового запроса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.m_Parent">
            <summary>
            Родительский элемент поискового дерева
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.m_Children">
            <summary>
            Дочерние элементы поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.IsChildOf(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true, если элемент является дочерним к указанному
            </summary>
            <remarks>Считается что объект является дочерним сам к себе</remarks>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.RangeIds">
            <summary>
            Список идентификаторов, определяющих область поиска
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.RangeSubquery">
            <summary>
            Подзапрос, определяющий область поиска
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.RangeQueryParameters">
            <summary>
            Параметры подзапросы, определяющего область поиска
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.DoValidate">
            <summary>
            Выполняет предварительную проверку корректности запроса.
            Генерирует исключение, если что-то не корректно
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.DoPrepare(ProgramSoyuz.PLM.Scripting.SearchOperation)">
            <summary>
            Выполняет предварительную подготовку элементов поискового запроса к выполнению операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.DefaultComparer">
            <summary>
            Сравнивающий класс
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.GetQueryExpression(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует поисковое SQL выражение для себя и своих детей
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>SQL строку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.GetAliasFor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem.AliasEnum,ProgramSoyuz.DataModel.EntityIdentifier,System.Int32,System.Int32)">
            <summary>
            Формирует псевдоним указанного уровня вложенности для использования в поисковых запросах
            </summary>
            <param name="aliasId">Идентификатор запрошенного псевдонима</param>
            <param name="entity">Тип искомой сущности</param>
            <param name="depthLevel">Уровень вложенности подзапроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции</param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.GenerateCode(System.Text.StringBuilder,System.String,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по созданию данного элемента. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="parentItemName">Имя родительского элемента (может быть null)</param>
            <param name="offset"> </param>
            <param name="usedTemplates"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.AppendChildren(System.Text.StringBuilder,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по созданию дочерних элементов. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="offset">Текущий сдвиг кода в табах</param>
            <param name="usedTemplates"></param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.Parent">
            <summary>
            Родительский элемент поискового дерева
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.Children">
            <summary>
            Дочерние элементы поискового дерева
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.TemplateFilter">
            <summary>
            Возвращает ближайший фильтр шаблона либо null если не нашлось ни одного
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.IdentityName">
            <summary>
            Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.FriendlyIdentityName">
            <summary>
            Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.ProgramSoyuz#DataModel#IStrictlyNamedObject#ObjectIdentifier">
            <summary>
            Возвращает полный идентификатор объекта (тип сущности, id)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.AllChildren">
            <summary>
            Перечисляет рекурсивно всех детей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.AllSearchItems">
            <summary>
            Перечисляет рекурсивно всех прямых и косвенных детей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.State">
            <summary>
            Состояние предобработки очередного элемента дерева поискового запроса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.HasCriterionChild">
            <summary>
            Возвращает true если у элемента есть ребенок, определяющий поисковый критерий
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.IsCriterionItem">
            <summary>
            Возвращает true если этот элемент определяет поисковый критерий
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.ChildrentList">
            <summary>
            Класс-оболочка для списка детей.
            Автоматически отслеживает корректность ссылки на родителя у своих дочерних элементов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.ChildrentList.m_Owner">
            <summary>
            Владелец списка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.ChildrentList.m_List">
            <summary>
            Реальный список дочерних объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.ChildrentList.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор
            </summary>
            <param name="owner">Владелец списка</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.ProcessingState">
            <summary>
            Состояния предобработки очередного элемента дерева поискового запроса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.ProcessingState.Initial">
            <summary>
            Начальное неопределенное состояние
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.ProcessingState.RangeAsSubquery">
            <summary>
            Диапазон поиска определен как подзапрос
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.ProcessingState.RangeAsIds">
            <summary>
            Диапазон поиска определен как список идентификаторов
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.CriterionEqualityComparer">
            <summary>
            Сравнивающий класс
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchExpressionItem.AliasEnum">
            <summary>
            Набор идентификаторов псевдонимов для имен таблиц и их колонок, используемых в поисковых запросах
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme">
            <summary>
            Схема раскладки рабочей среды пользователя
            Используется для формирования развернутого представления инфорамации в рабочей среде пользователя
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.m_RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreateWrapper(ProgramSoyuz.DataModel.WorkSpaceSchemeBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="workSpaceScheme">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.#ctor(ProgramSoyuz.DataModel.WorkSpaceSchemeBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="workSpaceScheme">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.#ctor(System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="nameKey">Программное название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.#ctor(ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.GetNameUILocalized(System.String)">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.NameUILocalized">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.Notes">
            <summary>
            Пользовательские заметки об иконке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.Kind">
            <summary>
            Тип применимости схемы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.ProgramSoyuz#PLM#Scripting#IObjectWithCustomizationCode#CustomizationCode">
            <summary>
            Код скрипта кастомизации объектов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CustomizationCode">
            <summary>
            Код скрипта кастомизации объектов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.Icon">
            <summary>
            Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.DisplayIcon">
            <summary>
            Иконка, показываемая в UI
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData.CustomizationCode">
            <summary>
            Код скрипта кастомизации схемы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData.Kind">
            <summary>
            Тип применимости схемы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData.m_Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData.WriteTo(ProgramSoyuz.DataModel.WorkSpaceSchemeBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData.Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkSpaceScheme.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FileLocalCopy">
            <summary>
            Локальная копия файла. Запись об учете, где находится тот или иной файл
            на локальном компьютере
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileLocalCopy.m_Data">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileLocalCopy.m_RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileLocalCopy.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CreateWrapper(ProgramSoyuz.DataModel.FileLocalCopyBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="realObject">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileLocalCopy.#ctor(ProgramSoyuz.DataModel.FileLocalCopyBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="fileLocalCopy">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileLocalCopy.#ctor(ProgramSoyuz.PLM.Scripting.Attribute,System.String)">
            <summary>
            Конструктор новой записи о локальной копии файла
            </summary>
            <param name="attribute">Объект-владелец данной ревизии</param>
            <param name="path">Путь к файлу</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileLocalCopy.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileLocalCopy.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileLocalCopy.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileLocalCopy.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileLocalCopy.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.TargetInfoObjectId">
            <summary>
            Доступ к ИО-владельцу файлового атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.TargetInfoObject">
            <summary>
            Доступ к ИО-владельцу файлового атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.TargetFileAttributeId">
            <summary>
            Доступ к файловому атрибуту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.TargetFileAttribute">
            <summary>
            Доступ к файловому атрибуту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.TargetFileId">
            <summary>
            Доступ к идентификатору файла, для которого была создана эта запись
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.TargetFile">
            <summary>
            Доступ к описателю файла, для которого была создана эта запись
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.User">
            <summary>
            Пользователь, создавший эту запись о локальной копии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.StationName">
            <summary>
            Сетевое имя рабочей станции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.StationId">
            <summary>
            GUID рабочей станции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.IsLocal">
            <summary>
            true если запись относится к данной рабочей станции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.Path">
            <summary>
            Путь к файлу
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.IsCheckOutPath">
            <summary>
            Возвращает true если по этому пути был сделан CheckOut файла
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CreationData.m_TargetFileAttribute">
            <summary>
            Файловый атрибут
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CreationData.m_TargetFile">
            <summary>
            Файл
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CreationData.m_User">
            <summary>
            Пользователь-владелец
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CreationData.StationName">
            <summary>
            Сетевое имя рабочей станции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CreationData.Path">
            <summary>
            Путь к файлу локальной копии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CreationData.TargetFileAttribute">
            <summary>
            Целевой атрибут
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CreationData.TargetFile">
            <summary>
            Целевой файл
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CreationData.User">
            <summary>
            Родительское именованное значение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileLocalCopy.CreationData.IsIdentityDataModified">
            <summary>
            Возвращает true, если были изменены существенные данные записи о локальной копии, такие как путь, файловый атрибут и т.п.
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.InvalidRequestException">
            <summary>
            Эксепшион, возникающий при попытке неправильного использования скриптовых объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvalidRequestException.#ctor(System.String,System.String)">
            <summary>
            Конструктор исключения
            </summary>
            <param name="csOperation">Название операции</param>
            <param name="csDetails">Подробности</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvalidRequestException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String,System.String)">
            <summary>
            Конструктор исключения по объекту, для которого запрошена недопустимая операция
            </summary>
            <param name="pObject">Объект-оболочка для скриптинга</param>
            <param name="csOperation">Название операции</param>
            <param name="csDetails">Подробности</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvalidRequestException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String,System.String,System.Exception)">
            <summary>
            Конструктор исключения по объекту, для которого запрошена недопустимая операция
            </summary>
            <param name="pObject">Объект-оболочка для скриптинга</param>
            <param name="csOperation">Название операции</param>
            <param name="csDetails">Подробности</param>
            <param name="innerException">Вложенное исключение</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvalidRequestException.#ctor(ProgramSoyuz.PLM.Scripting.Attribute,System.String,System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvalidRequestException.#ctor(ProgramSoyuz.DataModel.DataObjectIdentifier,System.String,System.String)">
            <summary>
            Конструктор исключения по объекту, для которого запрошена недопустимая операция
            </summary>
            <param name="id">Объект-оболочка для скриптинга</param>
            <param name="csOperation">Название операции</param>
            <param name="csDetails">Подробности</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvalidRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор десериализации
            </summary>
            <param name="info">контейнер для сериализованных данных</param>
            <param name="context">контекст сериализации</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvalidRequestException.AppendTo(ProgramSoyuz.DataModel.IRtfFormatter,System.Boolean)">
            <summary>
            Добавляет свое форматированное сообщение к указанному RTF конструктору
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InvalidRequestException.IsProgrammerAttentionRequired">
            <summary>
            Возвращает true, если возникновение исключения свидетельствует о программной ошибке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InvalidRequestException.IsConfiguratorAttentionRequired">
            <summary>
            Возвращает true, если возникновение исключения свидетельствует о программной ошибке в коде конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InvalidRequestException.SeverityIcon">
            <summary>
            Идентификатор иконки для отображения в сообщении пользователю
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InvalidRequestException.Message">
            <summary>
            Формирует составное сообщение о том, какой атрибут нарушил уникальность
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InvalidRequestException.ShortMessage">
            <summary>
            Короткое сообщение пользователю для случая когда целевой объект и так понятен пользователю
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.OperationCancelledException">
            <summary>
            Эксепшион, возникающий при отмене скриптом пользовательской операции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.OperationCancelledException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String,System.String)">
            <summary>
            Конструктор исключения по объекту, операция с которым отменена
            </summary>
            <param name="pObject">Объект-оболочка для скриптинга</param>
            <param name="csOperation">Название операции</param>
            <param name="csDetails">Подробности</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.OperationCancelledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор десериализации
            </summary>
            <param name="info">контейнер для сериализованных данных</param>
            <param name="context">контекст сериализации</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.OperationCancelledException.IsProgrammerAttentionRequired">
            <summary>
            Возвращает true, если возникновение исключения свидетельствует о программной ошибке
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UniquenessViolationException">
            <summary>
            Эксепшион для проблем с нарушением пространств уникальности
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessViolationException.#ctor(ProgramSoyuz.PLM.Scripting.UniquenessSpace,ProgramSoyuz.PLM.Scripting.Attribute,System.Exception)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessViolationException.#ctor(ProgramSoyuz.PLM.Scripting.UniquenessSpace,ProgramSoyuz.PLM.Scripting.Attribute,System.Exception,ProgramSoyuz.DataModel.IStrictlyNamedObject,ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Конструктор с указанием конфликтующего объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessViolationException.AppendTo(ProgramSoyuz.DataModel.IRtfFormatter,System.Boolean)">
            <summary>
            Добавляет свое форматированное сообщение к указанному RTF конструктору
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessViolationException.SeverityIcon">
            <summary>
            Идентификатор иконки для отображения в сообщении пользователю
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessViolationException.Message">
            <summary>
            Формирует составное сообщение о том, какой атрибут нарушил уникальность
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessViolationException.ShortMessage">
            <summary>
            Короткое сообщение пользователю для случая когда целевой объект и так понятен пользователю
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessViolationException.IsProgrammerAttentionRequired">
            <summary>
            Возвращает true, если возникновение исключения свидетельствует о программной ошибке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessViolationException.IsConfiguratorAttentionRequired">
            <summary>
            Возвращает true, если возникновение исключения свидетельствует о программной ошибке в коде конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessViolationException.FriendlyMessage">
            <summary>
            Возвращает дружественное пользователю сообщение
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ValidationFailureException">
            <summary>
            Эксепшион, возникающий при нарушении сохраняемым значением атрибута правил валидации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ValidationFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ValidationFailureException.#ctor(System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ValidationFailureException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ValidationFailureException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,ProgramSoyuz.PLM.Scripting.AttributeDef,System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ValidationFailureException.#ctor(ProgramSoyuz.PLM.Scripting.CollectionElement,System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ValidationFailureException.#ctor(ProgramSoyuz.DataModel.AttributeBase,System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ValidationFailureException.#ctor(ProgramSoyuz.PLM.Scripting.Attribute,System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ValidationFailureException.AppendTo(ProgramSoyuz.DataModel.IRtfFormatter,System.Boolean)">
            <summary>
            Добавляет свое форматированное сообщение к указанному RTF конструктору
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ValidationFailureException.SeverityIcon">
            <summary>
            Идентификатор иконки для отображения в сообщении пользователю
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ValidationFailureException.Message">
            <summary>
            Формирует составное сообщение о том, какой атрибут нарушил уникальность
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ValidationFailureException.ShortMessage">
            <summary>
            Короткое сообщение пользователю для случая когда целевой объект и так понятен пользователю
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.DataModelViolationException">
            <summary>
            Эксепшион, возникающий при нарушении логической корректности сохраняемых данных
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataModelViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataModelViolationException.#ctor(System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataModelViolationException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,ProgramSoyuz.DataModel.DataModelProblemKind)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataModelViolationException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataModelViolationException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,ProgramSoyuz.DataModel.DataModelProblemKind,System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataModelViolationException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,ProgramSoyuz.DataModel.DataModelProblemKind,ProgramSoyuz.DataModel.IStrictlyNamedObject)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataModelViolationException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataModelViolationException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,ProgramSoyuz.DataModel.DataModelProblemKind,ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataModelViolationException.AppendTo(ProgramSoyuz.DataModel.IRtfFormatter,System.Boolean)">
            <summary>
            Добавляет свое форматированное сообщение к указанному RTF конструктору
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataModelViolationException.SeverityIcon">
            <summary>
            Идентификатор иконки для отображения в сообщении пользователю
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataModelViolationException.Message">
            <summary>
            Формирует составное сообщение о логическом нарушении модели данных
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataModelViolationException.ShortMessage">
            <summary>
            Короткое сообщение пользователю для случая когда целевой объект и так понятен пользователю
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.HumanFaultException">
            <summary>
            Исключение для оповещения пользователя о различных его трудностях
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.HumanFaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.HumanFaultException.#ctor(System.String)">
            <summary>
            Основной конструктор
            </summary>
            <param name="comments">Текстовое сообщение (простой текст или RTF)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.HumanFaultException.#ctor(System.String,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Основной конструктор
            </summary>
            <param name="comments">Текстовое сообщение (простой текст или RTF)</param>
            <param name="icon">Иконка для окна сообщения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.HumanFaultException.#ctor(ProgramSoyuz.PLM.Scripting.Attribute,System.String,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Основной конструктор
            </summary>
            <param name="attr">Объект, по которому формируется исключение. Он будет видет пользователю в подробном сообщении в виде гиперссылки</param>
            <param name="comments">Текстовое сообщение (простой текст или RTF)</param>
            <param name="icon">Иконка для окна сообщения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.HumanFaultException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Основной конструктор
            </summary>
            <param name="obj">Объект, по которому формируется исключение. Он будет видет пользователю в подробном сообщении в виде гиперссылки</param>
            <param name="comments">Текстовое сообщение (простой текст или RTF)</param>
            <param name="icon">Иконка для окна сообщения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.HumanFaultException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,ProgramSoyuz.PLM.Scripting.AttributeDef,System.String,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Основной конструктор
            </summary>
            <param name="obj">Объект, по которому формируется исключение. Он будет видет пользователю в подробном сообщении в виде гиперссылки</param>
            <param name="attributeDef">Определение проблемного атрибута</param>
            <param name="comments">Текстовое сообщение (простой текст или RTF)</param>
            <param name="icon">Иконка для окна сообщения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.HumanFaultException.#ctor(ProgramSoyuz.PLM.Scripting.CollectionElement,System.String,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Основной конструктор
            </summary>
            <param name="element">Объект, по которому формируется исключение. Он будет видет пользователю в подробном сообщении в виде гиперссылки</param>
            <param name="comments">Текстовое сообщение (простой текст или RTF)</param>
            <param name="icon">Иконка для окна сообщения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.HumanFaultException.SetComments(System.String)">
            <summary>
            Устанавливает текст сообщения пользователю для этого исключения
            </summary>
            <param name="comments">Текстовое сообщение (простой текст или RTF)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.HumanFaultException.AppendTo(ProgramSoyuz.DataModel.IRtfFormatter,System.Boolean)">
            <summary>
            Добавляет свое форматированное сообщение к указанному RTF конструктору
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.HumanFaultException.Message">
            <summary>
            Формирует подробное сообщение об ошибке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.HumanFaultException.ShortMessage">
            <summary>
            Короткое сообщение пользователю для случая когда целевой объект и так понятен пользователю
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.HumanFaultException.FriendlyMessage">
            <summary>
            Возвращает дружественное пользователю сообщение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.HumanFaultException.IsProgrammerAttentionRequired">
            <summary>
            Возвращает true, если возникновение исключения свидетельствует о программной ошибке
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CustomizationScriptFailedException">
            <summary>
            Оболочка для исключений, произошедших внутри кода кастомизации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationScriptFailedException.m_CustomizationSource">
            <summary>
              Ключ для указания фрагмента кода, где произошло исключение
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationScriptFailedException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,System.Object,System.String,System.Exception)">
            <summary>
            Конструктор по коду ошибки
            </summary>
            <param name="customizedObject">Объект, чей скрипт кастомизации вызвал исключение</param>
            <param name="customizator">Кастомизатор в коде которого произошло исключение</param>
            <param name="csOperation">Название операции</param>
            <param name="innerException">Вложенное исключение</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationScriptFailedException.#ctor(ProgramSoyuz.DataModel.DataObjectIdentifier,System.String,System.Object,System.String,System.Exception)">
            <summary>
            Конструктор по коду ошибки
            </summary>
            <param name="customizedObject">Объект, чей скрипт кастомизации вызвал исключение</param>
            <param name="objectName">Имя объекта</param>
            <param name="customizator">Кастомизатор в коде которого произошло исключение</param>
            <param name="csOperation">Название операции</param>
            <param name="innerException">Вложенное исключение</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationScriptFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationScriptFailedException.AppendTo(ProgramSoyuz.DataModel.IRtfFormatter,System.Boolean)">
            <summary>
            Добавляет свое форматированное сообщение к указанному RTF конструктору
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationScriptFailedException._customizationCache">
            <summary>
            Кеш фрагментов кастомизации, в которых происходят исключения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomizationScriptFailedException.Message">
            <summary>
            Формирует составное сообщение о том, какую операцию код кастомизации не смог выполнить,
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomizationScriptFailedException.IsProgrammerAttentionRequired">
            <summary>
            Возвращает true, если возникновение исключения свидетельствует о программной ошибке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomizationScriptFailedException.IsConfiguratorAttentionRequired">
            <summary>
            Возвращает true, если возникновение исключения свидетельствует о программной ошибке уровня конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomizationScriptFailedException.CustomizationSource">
            <summary>
              Фрагмент кода кастомизации, где произошло исключение
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ObjectIsLockedException">
            <summary>
            Эксепшион, возникающий при попытке выполнить операцию над заблокированным объектом
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ObjectIsLockedException.m_SessionKey">
            <summary>
            Ключ для указания сессии, владеющей блокировкой
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ObjectIsLockedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ObjectIsLockedException.#ctor(ProgramSoyuz.DataModel.IStrictlyNamedObject,ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ObjectIsLockedException.#ctor(ProgramSoyuz.DataModel.DataObjectIdentifier,ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String)">
            <summary>
            Основной конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ObjectIsLockedException.AppendTo(ProgramSoyuz.DataModel.IRtfFormatter,System.Boolean)">
            <summary>
            Добавляет свое форматированное сообщение к указанному RTF конструктору
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ObjectIsLockedException.IsProgrammerAttentionRequired">
            <summary>
            Возвращает true, если возникновение исключения свидетельствует о программной ошибке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ObjectIsLockedException.Message">
            <summary>
            Формирует составное сообщение о том, какой атрибут нарушил уникальность
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ObjectIsLockedException.ShortMessage">
            <summary>
            Короткое сообщение пользователю для случая когда целевой объект и так понятен пользователю
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExceptionHelper.BuildFriendlyMessageRTF(System.Exception,System.Boolean,ProgramSoyuz.PLM.Scripting.RtfFormatter)">
            <summary>
            Формирует сообщение об эксепшионе для показа пользователю (в RTF формате с гиперссылками)
            </summary>
            <param name="e">Эксепшион</param>
            <param name="withDetails">true если следует сформировать подробное сообщение </param>
            <param name="rtf">RTF билдер (если передан null, то используется собственный экземпляр)</param>
            <returns>Текстовое описание исключения</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Properties.Resources">
            <summary>
              Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ResourceManager">
            <summary>
              Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Culture">
            <summary>
              Перезаписывает свойство CurrentUICulture текущего потока для всех
              обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
            </summary>
        </member>
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AccessRule_Check" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AccessRule_CheckCustomOperation" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributableObjectEvent_CheckState" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributableObjectEvent_Invoke" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributableObjectEvent_IsApplicable" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_BuildUniquenessValue" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_Calculate" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_CanConvertInput" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_Compare" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_ConvertInput" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_GetSearchableRange" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_GetSelectIconRange" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_GetSelectIOList" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_GetSelectIORange" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_GetSelectNamedValueRange" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_GetSelectTemplateRange" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_GetUIData" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_GetValue" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_IsAttributeEditableInUI" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_IsAttributeVisibleInUI" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_OnAttributeChanged" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_OnHyperlink" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_OnHyperlinkTooltip" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_PrepareDisplayParams" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_PrepareEditor" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_ResolveAttribute" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_ResolveAttributeSearchItem" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_SetValue" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_Validate" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.AttributeDef_ValidateInput" проигнорирован -->
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Error">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.IndexDef_Initialize" проигнорирован -->
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Info">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ProgramSoyuz">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Question">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_CalcDropEffects" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_GetPrefferedConnectionPoints" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_GetPrefferedFileVaultsForDownload" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_GetPrefferedFileVaultsForUpload" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_HandleWebRequest" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_InsertDropData" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_Invoke" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_InvokeFor" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_InvokeMethod" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_InvokeRemote" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_InvokeRemoteSession" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_IsEnabledFor" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_IsValid" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_IsValidFor" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_OnAfterInvoke" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_OnAfterInvokeSession" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_OnBeforeInvoke" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.ScriptingTask_OnBeforeInvokeSession" проигнорирован -->
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.Resources.SearchIcon">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.Resources.SeriousWarning">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_BuildDiagramNodeContentFields" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_CalcWorkFlowWarnings" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_CanCreate" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_OnBeforeWorkItemCompleted" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_OnChildTaskCompleted" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_OnCreate" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_OnDiagramDeadlock" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_OnDiagramNodeActivated" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_OnDiagramNodePassed" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_OnTimeout" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_OnWorkItemCompleted" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_PrepareDiagramNodeVisualizationStyle" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_ResolveOutcomingLinks" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.TaskTemplate_UpdateNodeTransitionState" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_BuildPrintingPageContents" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_CalcDropEffects" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_Calculate" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_CanConvertInput" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_CheckCustomOperation" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_CheckIntegrity" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_CheckOperation" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_ConvertInput" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_Draw" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_FileSavedToVault" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_FileUploadConfirmed" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_GetUIData" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_GetVirtualAttributeDefs" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_HitTest" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_InsertDropData" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_Invoke" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_IsAttributeEditableInUI" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_IsAttributeVisibleInUI" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_IsCreatableFromUI" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_IsPageVisibleInUI" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnAfterCommit" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnAttributeChanged" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnAttributeControlCreated" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnBeforeCommit" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnBeforeDisplayInUI" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnBeforeErase" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnBeforeSave" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnBeforeSendChangesToServer" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnBeforeSendEraseToServer" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnChildrenUpdated" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnInitialize" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnInitializeFrom" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_OnUpdated" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_PreCheckCustomOperation" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_PreCheckOperation" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_PrepareDisplayParams" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_PrepareEditor" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_ResolveAttribute" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_ResolveAttributeSearchItem" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_ResolveClassAttributeOwner" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_ResolveClassAttributeSearchItem" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Template_Validate" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UIAttributeCommand_Invoke" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UIAttributeCommand_IsValid" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UIAttributeCommand_UpdateState" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UIListAttributeCommand_Invoke" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UIListAttributeCommand_UpdateState" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UIMultipleObjectCommand_Invoke" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UIMultipleObjectCommand_IsValid" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UIMultipleObjectCommand_UpdateState" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UISetAttributeCommand_Invoke" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UISetAttributeCommand_UpdateState" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UISingleObjectCommand_Invoke" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UISingleObjectCommand_IsValid" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UISingleObjectCommand_UpdateState" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UserTemplate_BeforeSessionConnected" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UserTemplate_InitSession" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UserTemplate_SessionConnected" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.UserTemplate_SessionDisconnected" проигнорирован -->
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.Resources.Warning">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.WorkItemTemplate_ManageMailShortcuts" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.WorkSpaceScheme_CalcSelf" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.WorkSpaceScheme_IsValid" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Properties.Resources.WorkSpaceScheme_OnEditSchemeParams" проигнорирован -->
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchCollectionAttributeCriterionItem">
            <summary>
            Класс для элемента-условия в дереве поискового запроса на списковый атрибут
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase">
            <summary>
            Класс для элемента-условия на атрибут
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchConditionItem">
            <summary>
            Базовый класс объектов для поиска по системным атрибутам
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchFilterItem">
            <summary>
            Класс для уточнения шаблона для дочерних элементов поискового запроса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchFilterItem.IsValidForContext(System.Int32)">
            <summary>
            Проверяет подходит ли данный объект для запрошенного контекста
            </summary>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>true если подходит</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchFilterItem.GetQueryExpression(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует поисковое SQL выражение для себя и своих детей
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>SQL строку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchFilterItem.ToString">
            <summary>
            Строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionItem.AppendIntegerCondition(ProgramSoyuz.Common.SQLStringBuilder,System.String,ProgramSoyuz.DataModel.RelationalOperator)">
            <summary>
            Добавляет SQL условие на целое число
            </summary>
            <param name="sql">Объект для добавления в него условия</param>
            <param name="columnName"> </param>
            <param name="operatorId">Используемое значение оператора</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionItem.AppendFullTextCondition(ProgramSoyuz.Common.SQLStringBuilder,System.String,System.Collections.Generic.List{Wintellect.PowerCollections.Pair{System.String,System.Object}},System.String,ProgramSoyuz.DataModel.RelationalOperator,System.String)">
            <summary>
            Добавляет SQL условие на текст
            </summary>
            <param name="sql">Объект для добавления в него условия</param>
            <param name="columnName"> </param>
            <param name="parameters">Коллекция параметров запроса</param>
            <param name="paramName">Имя параметра для текстового значения</param>
            <param name="operatorId">Используемое значение оператора</param>
            <param name="arg1">Аргумент поискового выражения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionItem.AppendTextCondition(ProgramSoyuz.Common.SQLStringBuilder,System.String,System.Collections.Generic.List{Wintellect.PowerCollections.Pair{System.String,System.Object}},System.String,ProgramSoyuz.DataModel.RelationalOperator)">
            <summary>
            Добавляет SQL условие на текст
            </summary>
            <param name="sql">Объект для добавления в него условия</param>
            <param name="columnName"> </param>
            <param name="parameters">Коллекция параметров запроса</param>
            <param name="paramName">Имя параметра для текстового значения</param>
            <param name="operatorId">Используемое значение оператора</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchConditionItem._wildcards">
            <summary>
            Регэксп для подготовки поиска с подстановочными знаками
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionItem.AppendTextCondition(ProgramSoyuz.Common.SQLStringBuilder,System.String,System.Collections.Generic.List{Wintellect.PowerCollections.Pair{System.String,System.Object}},System.String,ProgramSoyuz.DataModel.RelationalOperator,System.Object)">
            <summary>
            Добавляет SQL условие на текст
            </summary>
            <param name="sql">Объект для добавления в него условия</param>
            <param name="columnName"> </param>
            <param name="parameters">Коллекция параметров запроса</param>
            <param name="paramName">Имя параметра для текстового значения</param>
            <param name="operatorId">Используемое значение оператора</param>
            <param name="arg1">Аргумент поискового выражения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionItem.AppendDateTimeCondition(ProgramSoyuz.Common.SQLStringBuilder,System.String,System.Collections.Generic.List{Wintellect.PowerCollections.Pair{System.String,System.Object}},System.Int32,System.String)">
            <summary>
            Добавляет SQL условие на дату-время
            </summary>
            <param name="sql">Объект для добавления в него условия</param>
            <param name="columnName"> </param>
            <param name="parameters"></param>
            <param name="paramId"></param>
            <param name="paramName"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionItem.AppendUserCondition(ProgramSoyuz.Common.SQLStringBuilder,System.String,ProgramSoyuz.PLM.Scripting.SearchQueryBuilder)">
            <summary>
            Добавляет SQL условие на системный атрибут типа "Пользователь"
            </summary>
            <param name="sql">Объект для добавления в него условия</param>
            <param name="columnName">Имя колонки, к которой применяется условие</param>
            <param name="searchQueryBuilder">Текущий построить поискового запроса</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionItem.AppendTemplateCondition(ProgramSoyuz.Common.SQLStringBuilder,System.String,ProgramSoyuz.DataModel.RelationalOperator)">
            <summary>
            Добавляет SQL условие на системный атрибут типа "Шаблон"
            </summary>
            <param name="sql">Объект для добавления в него условия</param>
            <param name="columnName">Имя колонки, к которой применяется условие</param>
            <param name="operatorId">Выполняемая операция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionItem.GenerateConditionCode(System.Text.StringBuilder,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по параметрам этого класса. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="offset">Текущий сдвиг кода в табах</param>
            <param name="usedTemplates"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionItem.GenerateValueCode(System.Object)">
            <summary>
            Формирует c# представление указанного значения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchConditionItem.OperatorId">
            <summary>
            Идентификатор оператора, применяемого к системному свойству
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchConditionItem.Argument1">
            <summary>
            Аргумент операции 1
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchConditionItem.Argument2">
            <summary>
            Аргумент операции 2
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchConditionItem.PropertyName">
            <summary>
            Название системного атрибута, по которому задано условие
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchConditionItem.IsCaseSensitive">
            <summary>
            Задает способ сравнения строк. null - использует настройку базы по умолчанию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchConditionItem.IsTextOperation">
            <summary>
            Возвращает true, если операция определяет текстовое условие
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchConditionItem.AllSearchItems">
            <summary>
            Перечисляет рекурсивно всех прямых и косвенных детей
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.IsValidForContext(System.Int32)">
            <summary>
            Проверяет подходит ли данный объект для запрошенного контекста
            </summary>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>true если подходит</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase._attributeDef">
            <summary>
            Определение атрибута, по которому производим поиск
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase._dataType">
            <summary>
            Тип данных искомого атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase._nameKey">
            <summary>
            Ключ искомого атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase._useWildCardsForNameKey">
            <summary>
            Если true, то <see cref="F:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase._nameKey"/> содержит подстановочные знаки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase._indexed">
            <summary>
            Признак наличия индексирования у искомого атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase._safeLink">
            <summary>
            Если true, то поиск производится по мягким ссылкам, а не по жестким
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase._isPersistentLinkToClass">
            <summary>
            Если true, то ссылка на доп шаблон - класс ищется как обычная ссылка на шаблон. Флаг должен быть установлен при 
            поиске по вычисляемым хранимым ссылкам на доп. класс
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase._SearchAllIterations">
            <summary>
            Если true то поиск захватывает и прошлые ревизии (только для строго индексированных типов атрибутов: жёсткие ссылки, блобы, файлы)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32,System.String@)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel"></param>
            <param name="searchColumn">На выходе получает имя столбца, по которому осуществляется запрос</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.DoPrepare(ProgramSoyuz.PLM.Scripting.SearchOperation)">
            <summary>
            Выполняет предварительную подготовку элементов поискового запроса к выполнению операции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.ToString">
            <summary>
            Строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.OnDeserialization(System.Object)">
            <summary>
            Runs when the entire object graph has been deserialized.
            </summary>
            <param name="sender">The object that initiated the callback. The functionality for this parameter is not currently implemented. </param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.Attribute">
            <summary>
            Определение атрибута, по которому производим поиск.
            Использется лишь для быстрой инициализации прочих полей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.DataType">
            <summary>
            Тип данных искомого атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.NameKey">
            <summary>
            Ключ искомого атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.UseWildCardsForNameKey">
            <summary>
            Если true, то <see cref="F:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase._nameKey"/> содержит подстановочные знаки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.PropertyName">
            <summary>
            Название атрибута, по которому задано условие
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.IsIndexed">
            <summary>
            Признак наличия индексирования у искомого атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.IsSafeLink">
            <summary>
            Если true, то поиск производится по мягким ссылкам, а не по жестким
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.IsPersistentLinkToClass">
            <summary>
            Если true, то ссылка на доп шаблон - класс ищется как обычная ссылка на шаблон. Флаг должен быть установлен при 
            поиске по вычисляемым хранимым ссылкам на доп. класс
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItemBase.SearchAllIterations">
            <summary>
            Если true то поиск захватывает и прошлые ревизии (только для строго индексированных типов атрибутов: жёсткие ссылки, блобы, файлы)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCollectionAttributeCriterionItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCollectionAttributeCriterionItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCollectionAttributeCriterionItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32,System.String@)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel"></param>
            <param name="searchColumn">На выходе получает имя столбца, по которому осуществляется запрос</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCollectionAttributeCriterionItem.GetQueryExpression(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует поисковое SQL выражение для себя и своих детей
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>SQL строку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCollectionAttributeCriterionItem.GenerateCode(System.Text.StringBuilder,System.String,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по созданию данного элемента. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="parentItemName">Имя родительского элемента (может быть null)</param>
            <param name="offset">Текущий сдвиг кода в табах</param>
            <param name="usedTemplates"></param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.EditorShapeStyler">
            <summary>
            Базовая реализация стилей этапа для редактора
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.EditorShapeStyler.GetBorderColor(ProgramSoyuz.DataModel.DiagramStateEnum)">
            <summary>
            Цвет границы этапа
            </summary>
            <param name="state">Текущее состояние этапа на диаграмме</param>
            <returns>Цвет границы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.EditorShapeStyler.IsBorderDashed(ProgramSoyuz.DataModel.DiagramStateEnum)">
            <summary>
            Тип границы этапа
            </summary>
            <param name="state">Текущее состояние этапа на диаграмме</param>
            <returns>Сплошной или прерывистый</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.EditorShapeStyler.GetBackgroundColor(ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Shape,ProgramSoyuz.DataModel.DiagramStateEnum)">
            <summary>
            Цвет фона этапа
            </summary>
            <returns>Цвет фона</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.EditorShapeStyler.GetHeaderColor(ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Shape,ProgramSoyuz.DataModel.DiagramStateEnum)">
            <summary>
            Цвет заголовка этапа
            </summary>
            <returns>Цвет заголовка</returns>
        </member>
        <member name="T:Scripting.Commands.CmdScriptingSaveOperationBase">
            <summary>
            Базовый класс для команды сохранения/создания скриптового объекта
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdScriptingSaveOperationBase.m_NewlyAddedObjects">
            <summary>
            Список вновь созданных объектов
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdScriptingSaveOperationBase.m_ChangedObjects">
            <summary>
            Список измененных и удаленных скриптовых объектов
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdScriptingSaveOperationBase.m_FileDescs">
            <summary>
            Список файловых дескрипторов, участвующих в операции
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdScriptingSaveOperationBase.m_Flags">
            <summary>
            Набор флагов для параметризации операции сохранения
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdScriptingSaveOperationBase._fixedOperationTime">
            <summary>
            Время фиксации операции в UTC, затребованное клиентской стороной для проведения слегка "размазанных"
            во времени операций так, чтобы они шли с одной временной меткой.
            Это время может отставать от текущего не более чем на 10 минут
            </summary>
        </member>
        <member name="M:Scripting.Commands.CmdScriptingSaveOperationBase.ToString">
            <summary>
            Строковое представление
            </summary>
        </member>
        <member name="M:Scripting.Commands.CmdScriptingSaveOperationBase.GetShortFriendlyName">
            <summary>
            Возвращает пользовательское название выполняемого действия для
            отображения в строке статуса клиентского приложения
            </summary>
            <returns></returns>
        </member>
        <member name="P:Scripting.Commands.CmdScriptingSaveOperationBase.UseCompression">
            <summary>
            Возвращает true, если пакет следует сжать
            </summary>
        </member>
        <member name="P:Scripting.Commands.CmdScriptingSaveOperationBase.IsSimpleContents">
            <summary>
            Возвращает true, если пакет не содержит сложные объекты, требующие читающей блокировки
            при десериализации
            </summary>
        </member>
        <member name="P:Scripting.Commands.CmdScriptingSaveOperationBase.NewlyAddedObjects">
            <summary>
            Список вновь созданных объектов
            </summary>
        </member>
        <member name="P:Scripting.Commands.CmdScriptingSaveOperationBase.ChangedObjects">
            <summary>
            Список измененных скриптовых объектов
            </summary>
        </member>
        <member name="P:Scripting.Commands.CmdScriptingSaveOperationBase.FileDescs">
            <summary>
            Список файловых дескрипторов, участвующих в операции
            </summary>
        </member>
        <member name="P:Scripting.Commands.CmdScriptingSaveOperationBase.Flags">
            <summary>
            Набор флагов для параметризации операции сохранения
            </summary>
        </member>
        <member name="P:Scripting.Commands.CmdScriptingSaveOperationBase.FixedOperationTime">
            <summary>
            Время фиксации операции в UTC, затребованное клиентской стороной для проведения слегка "размазанных"
            во времени операций так, чтобы они шли с одной временной меткой.
            Это время может отставать от текущего не более чем на 10 минут
            </summary>
        </member>
        <member name="T:Scripting.Commands.CmdInvokeObjectMethodBase">
            <summary>
            Команда для вызова серверного метода
            В ответ приходит PackServerMethodResult
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdInvokeObjectMethodBase._Object">
            <summary>
            Объект, чей метод вызывается
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdInvokeObjectMethodBase._Template">
            <summary>
            Шаблон, чей метод вызывается
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdInvokeObjectMethodBase._thisTemplateOnly">
            <summary>
            Если true, то вызывается лишь метод определенный в кастомизаторе данного шаблона (и его модификаторах)
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdInvokeObjectMethodBase._MethodName">
            <summary>
            Имя метода
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdInvokeObjectMethodBase._InputParams">
            <summary>
            Набор входных данных для метода
            </summary>
        </member>
        <member name="P:Scripting.Commands.CmdInvokeObjectMethodBase.IsSimpleContents">
            <summary>
            Возвращает true, если пакет не содержит сложные объекты, требующие читающей блокировки
            при десериализации
            </summary>
        </member>
        <member name="T:Scripting.Commands.CmdCheckValueUniquenessBase">
            <summary>
            Команда предварительной проверки уникальности значения атрибута
            В ответ приходит <see cref="T:ProgramSoyuz.DataModel.Protocol.CheckValueUniquenessResult"/>
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdCheckValueUniquenessBase.UniquenessSpaceId">
            <summary>
            Пространство уникальности
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdCheckValueUniquenessBase.Attributes">
            <summary>
            Список владельцев для проверяемых значений
            </summary>
        </member>
        <member name="F:Scripting.Commands.CmdCheckValueUniquenessBase.Values">
            <summary>
            Список проверяемых значений
            </summary>
        </member>
        <member name="M:Scripting.Commands.CmdCheckValueUniquenessBase.GetShortFriendlyName">
            <summary>
            Возвращает пользовательское название выполняемого действия для
            отображения в строке статуса клиентского приложения
            </summary>
            <returns></returns>
        </member>
        <member name="P:Scripting.Commands.CmdCheckValueUniquenessBase.IsSimpleContents">
            <summary>
            Возвращает true, если пакет не содержит сложные объекты, требующие читающей блокировки
            при десериализации
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IPropertyPanel">
            <summary>
            Базовый класс панели св-в
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.IUIObjectOwner">
            <summary>
            Интерфейс для доступа к текущему владельцу скриптового объекта в UI
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service">
            <summary>
            Набор методов для манипуляций с данными.
            Класс является прослойкой между провайдером данных для скриптинга и клиентским кодом
            </summary>
            <summary>
            Набор методов для манипуляций с данными.
            Класс является прослойкой между провайдером данных для скриптинга и клиентским кодом
            </summary>
            <summary>
            Набор методов для манипуляций с данными.
            Класс является прослойкой между провайдером данных для скриптинга и клиентским кодом
            </summary>
            <summary>
            Набор методов для манипуляций с данными.
            Класс является прослойкой между провайдером данных для скриптинга и клиентским кодом
            </summary>
            <summary>
            Набор методов для манипуляций с данными.
            Класс является прослойкой между провайдером данных для скриптинга и клиентским кодом
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.m_MTHost">
            <summary>
            Серверный класс для предоставления скриптам специфичной для сервера функциональности
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.m_UIHost">
            <summary>
            Клиентский класс для предоставления скриптингу клиентских UI методов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.m_ScriptExecutionEnvironment">
            <summary>
            Стек контекстов исполнения скрипта, по потокам
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.m_pHost">
            <summary>
            Указатель на провайдер данных
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SafeGetId(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Возвращает идентификатор объекта. В случае null возвращает 0
            </summary>
            <returns>Идентификатор объекта или 0 если объект null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SafeGetId(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Возвращает идентификатор объекта. В случае null возвращает 0
            </summary>
            <returns>Идентификатор объекта или 0 если объект null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SafeGetIdentifier(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Возвращает идентификатор объекта. В случае null возвращает DataObjectIdentifier.Zero
            </summary>
            <returns>Идентификатор объекта или DataObjectIdentifier.Zero если объект null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SafeGetIdentifier(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Возвращает идентификатор объекта. В случае null возвращает DataObjectIdentifier.Zero
            </summary>
            <returns>Идентификатор объекта или DataObjectIdentifier.Zero если объект null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SafeGetEntity(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Возвращает тип сущности объекта. В случае null возвращает EntityIdentifier.Unknown
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SafeGetEntity(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Возвращает тип сущности объекта. В случае null возвращает EntityIdentifier.Unknown
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateNew(ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Создает объект-оболочку указанного типа сущности
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.DataObject,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.AttributableDataObject)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.AttributableDataObject,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.CollectionElementBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.CollectionElementBase,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.CollectionElementBase,ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.AttributeBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.AttributeBase,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.AttributeValueBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.AttributeValueBase,ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.AttributeValueBase,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateInaccessibleObject(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32)">
            <summary>
            Создаёт скриптовую оболочку для недоступного по правам доступа атрибутируемого объекта
            </summary>
            <param name="entity">Тип сущности</param>
            <param name="id">Идентификатор</param>
            <returns>Скриптовая оболочка для объекта с запрошеннм ID</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetObject(ProgramSoyuz.DataModel.EntityIdentifier,System.Guid)">
            <summary>
            Доступ к скриптовому объекту по идентификатору сущности и идентификатору объекта
            </summary>
            <param name="entity">Тип объекта</param>
            <param name="id">Идентификатор</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetObject(ProgramSoyuz.DataModel.EntityIdentifier,System.Guid,System.Boolean)">
            <summary>
            Доступ к скриптовому объекту по идентификатору сущности и идентификатору объекта
            </summary>
            <param name="entity">Тип объекта</param>
            <param name="id">Идентификатор</param>
            <param name="original">true если нужен оригинальный объект</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetObject(ProgramSoyuz.DataModel.IDataObjectIdentifier)">
            <summary>
            Доступ к скриптовому объекту по идентификатору сущности и идентификатору объекта
            </summary>
            <param name="id">Идентификатор</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetObject(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32)">
            <summary>
            Доступ к скриптовому объекту по идентификатору сущности и идентификатору объекта
            </summary>
            <param name="entity">Тип объекта</param>
            <param name="id">Идентификатор</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetObject(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32,System.Boolean)">
            <summary>
            Доступ к скриптовому объекту по идентификатору сущности и идентификатору объекта
            </summary>
            <param name="entity">Тип объекта</param>
            <param name="id">Идентификатор</param>
            <param name="original">true если нужен оригинальный объект</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetObject(ProgramSoyuz.DataModel.EntityIdentifier,System.String)">
            <summary>
            Доступ к скриптовому объекту по идентификатору сущности и идентификатору объекта
            </summary>
            <param name="entity">Тип объекта</param>
            <param name="path">Путь к объекту NameKey\..\NameKey</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.WithLock``1(System.Func{``0})">
            <summary>
            Вызов метода внутри читающей блокировки
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.WithLock``2(``0,System.Func{``0,``1})">
            <summary>
            Вызов метода внутри читающей блокировки
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.WithLock``3(``0,``1,System.Func{``0,``1,``2})">
            <summary>
            Вызов метода внутри читающей блокировки
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.NotifyOperationProgress(System.String,System.Single)">
            <summary>
            РАссылка уведомления о ходе выполнения операции
            </summary>
            <param name="operation">Операция</param>
            <param name="progress">Процент завершения (от 0 до 1, -1 - означает, что процент неизвестен)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SaveChanges">
            <summary>
            Сохранение текущего набора изменений в скриптовом слое
            </summary>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
            <returns>true если сохранение было произведено (было что сохранять)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SaveChanges(ProgramSoyuz.PLM.Scripting.IAsyncFileOperation@)">
            <summary>
            Сохранение текущего набора изменений в скриптовом слое с асинхронной файловой операцией
            </summary>
            <param name="fileOperation">Если на выходе не null, значит файловая операция отправки на сервер выполняется в асинхронном режиме.
            Завершение операции можно ожидать с использованием полученного объекта.</param>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
            <returns>true если сохранение было произведено (было что сохранять)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SaveChangesAsync(System.Action{ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet,System.Exception,ProgramSoyuz.PLM.Scripting.IAsyncFileOperation,System.Object},System.Boolean,System.Object)">
            <summary>
            Сохранение текущего набора изменений в скриптовом слое в асинхронном режиме
            </summary>
            <param name="callback">Опциональный обработчик, вызываемый при завершении операции сохранения</param>
            <param name="lazyProcessing">true если отправляемый пакет может обрабатываться в "ленивом" режиме</param>
            <param name="callbackData">Данные для передачи в функцию обратного вызова</param>
            <returns>true если команда отправлена на сервер, false если для сохранения ничего нет - в этом случае <paramref name="callback"/>вызван не будет.</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SaveChangesAsync(System.Action{ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet,System.Exception,ProgramSoyuz.PLM.Scripting.IAsyncFileOperation,System.Object},System.Boolean,System.Boolean,System.Object)">
            <summary>
            Сохранение текущего набора изменений в скриптовом слое в асинхронном режиме
            </summary>
            <param name="callback">Опциональный обработчик, вызываемый при завершении операции сохранения</param>
            <param name="lazyProcessing">true если отправляемый пакет может обрабатываться в "ленивом" режиме</param>
            <param name="asyncFileMode">Если true, то файловая операция выполняется асинхронно, а опциональный обработчик завершения будет вызван не дожидаясь завершения
            файловой операции. В этом случае в обработчик будет передан объект IAsyncFileOperation.</param>
            <param name="callbackData">Данные для передачи в функцию обратного вызова</param>
            <returns>true если команда отправлена на сервер, false если для сохранения ничего нет - в этом случае <paramref name="callback"/>вызван не будет.</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SaveChanges(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject})">
            <summary>
            Сохранение указанных объектов
            </summary>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
            <returns>true если сохранение было произведено (было что сохранять)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SaveChanges(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject},ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Сохранение указанных объектов
            </summary>
            <param name="objects">Сохраняемые объекты</param>
            <param name="saveRelatedRange">диапазон "затягивания в сохранение"
            измененных связанных объектов</param>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
            <returns>true если сохранение было произведено (было что сохранять)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SaveChanges(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject},ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange,System.Nullable{System.DateTime})">
            <summary>
            Сохранение указанных объектов
            </summary>
            <param name="objects">Сохраняемые объекты</param>
            <param name="saveRelatedRange">диапазон "затягивания в сохранение"
            измененных связанных объектов</param>
            <param name="utcFixedOperationTime">Время фиксации операции в UTC, затребованное клиентской стороной для проведения слегка "размазанных"
            во времени операций так, чтобы они шли с одной временной меткой. См. <see cref="P:ProgramSoyuz.PLM.Scripting.Service.FixedGroupOperationTime"/>&gt;</param>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
            <returns>true если сохранение было произведено (было что сохранять)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetEditable``1(``0)">
            <summary>
            Возвращает редактируемую скриптовую оболочку объекта
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">Имеющийся объект</param>
            <returns>Существующую или новую редактируемую оболочку того же объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetOriginal``1(``0)">
            <summary>
            Возвращает нередактируемую оригинальную скриптовую оболочку объекта
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">Имеющийся объект</param>
            <returns>Данную или новую нередактируемую оболочку того же объекта или null для еще не сохраненных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetOriginalIfAny``1(``0)">
            <summary>
            Возвращает нередактируемую оригинальную скриптовую оболочку объекта, либо данную, если она измененная/несохраненная
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">Имеющийся объект</param>
            <returns>Данную или новую нередактируемую оболочку того же объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetOriginalIfAny``1(``0,System.Boolean)">
            <summary>
            Возвращает нередактируемую оригинальную скриптовую оболочку объекта, либо данную, если она измененная/несохраненная
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">Имеющийся объект</param>
            <param name="force">Если true, то для измененного объекта возвращается оригинальная оболочка. 
            Если false, то для измененного объекта возвращается сам объект</param>
            <returns>Данную или новую нередактируемую оболочку того же объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetWrapper``1(``0,System.Boolean)">
            <summary>
            Возвращает редактируемую или нередактируемую оригинальную скриптовую оболочку объекта в зависимоти от флага <paramref name="original"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">Имеющийся объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Данную или новую нередактируемую оболочку того же объекта или null для еще не сохраненных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.WriteToLog(System.String,ProgramSoyuz.PLM.Scripting.ScriptingObject[])">
            <summary>
            Запись сообщения в системный лог (на сервере), либо в отладочное окно (на клиенте)
            </summary>
            <param name="message">Сообщение</param>
            <param name="referredObjects">Объекты, упомянутые в сообщении</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.WriteToLog(System.String,System.Diagnostics.EventLogEntryType,ProgramSoyuz.PLM.Scripting.ScriptingObject[])">
            <summary>
            Запись сообщения в системный лог (на сервере), либо в отладочное окно (на клиенте)
            </summary>
            <param name="message">Сообщение</param>
            <param name="type">Тип сообщения</param>
            <param name="referredObjects">Объекты, упомянутые в сообщении</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.InvokeServerMethod(System.String,System.String,System.Object)">
            <summary>
            Вызов серверной функции, реализованной серверным модулем конфигурации
            </summary>
            <param name="moduleId">Ключ (идентификатор) модуля. Если указан пустая строка, метод ищется среди всех имеющихся модулей</param>
            <param name="methodName">Имя метода</param>
            <param name="inputParam">Сериализуемый набор входных данных для метода</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.InvokeModuleMethod(System.String,System.String,System.Object)">
            <summary>
            Вызов функции модуля, реализованной клиентским (при вызове на клиенте)
            или серверным (при вызове на сервере) модулем конфигурации
            </summary>
            <param name="moduleId">Ключ (идентификатор) модуля. Если указан пустая строка, метод ищется среди всех имеющихся модулей</param>
            <param name="methodName">Имя метода</param>
            <param name="inputParam">Сериализуемый набор входных данных для метода</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.HandleException(System.Exception)">
            <summary>
            Обработчик исключений. Отчеты о неожидаемых исключениях сохраняются в файле на сервере.
            Пользователю показывается окошко с соответствующим сообщением.
            </summary>
            <param name="e">Эксепшион</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.HandleException(System.Exception,System.Boolean)">
            <summary>
            Обработчик исключений. Отчеты о неожидаемых исключениях сохраняются в файле на сервере.
            Пользователю показывается окошко с соответствующим сообщением.
            </summary>
            <param name="e">Эксепшион</param>
            <param name="advancedMode">Если false, то сообщение об ошибке не содержит кнопку доступа к техническим подробностям
            (кроме возникновения неожидаемых исключений)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.HandleException(System.Exception,System.String,System.Object[])">
            <summary>
            Обработчик исключений. Отчеты о неожидаемых исключениях сохраняются в файле на сервере.
            Пользователю показывается окошко с соответствующим сообщением.
            </summary>
            <param name="e">Эксепшион</param>
            <param name="userFriendlyMessage">Начало сообщения об ошибке для пользователя</param>
            <param name="args">Дополнительные аргументы для String.Format( description, ... )</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.HandleException(System.Exception,System.Boolean,System.String,System.Object[])">
            <summary>
            Обработчик исключений. Отчеты о неожидаемых исключениях сохраняются в файле на сервере.
            Пользователю показывается окошко с соответствующим сообщением.
            </summary>
            <param name="e">Эксепшион</param>
            <param name="advancedMode">Если false, то сообщение об ошибке не содержит кнопку доступа к техническим подробностям
            (кроме возникновения неожидаемых исключений)</param>
            <param name="userFriendlyMessage">Начало сообщения об ошибке для пользователя</param>
            <param name="args">Дополнительные аргументы для String.Format( description, ... )</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ReportException(System.Exception)">
            <summary>
            Сохраняет отчет об исключении в файле на сервере.
            </summary>
            <param name="e">Эксепшион</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ReportException(System.Exception,System.String,System.Object[])">
            <summary>
            Сохраняет отчет об исключении в файле на сервере.
            </summary>
            <param name="e">Эксепшион</param>
            <param name="description">Описание проблемы</param>
            <param name="args">Дополнительные аргументы для String.Format( description, ... )</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ReportError(System.String,System.Object[])">
            <summary>
            Сохраняет отчет об ошибке на сервере.
            </summary>
            <param name="description">Описание проблемы</param>
            <param name="args">Дополнительные аргументы для String.Format( description, ... )</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.RequestLoginToken">
            <summary>
            Запрашивает у сервера билетик на автоматический логин от текущей учётной записи
            </summary>
            <returns>Билетик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.IsObjectAutoLocked(ProgramSoyuz.DataModel.DataObjectIdentifier,ProgramSoyuz.PLM.Scripting.UserSession)">
            <summary>
            Возвращает true если на объект установлена автоматическая блокировка
            со стороны указанной сессии либо текущей (на клиенте), либо любой (на сервере) сессии.
            </summary>
            <param name="id">Проверяемый объект</param>
            <param name="session">Проверяемая сессия. 
            Null означает текущая клиентская, либо любая при запросе на сервере</param>
            <returns>true если установлена</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.LockInfoObjects(System.Boolean,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.InfoObject},ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Групповая операции для установки/снятия долговременной блокировки ИО
            </summary>
            <param name="setLock">true - установка блокировки, false - снятие</param>
            <param name="objects">Идентификаторы объектов</param>
            <param name="user">Пользователь, на которого ставится блокировка. На клиенте null означает текущего пользователя</param>
            <remarks>Операция установки блокировки завершается успешно только если удалось заблокировать все объекты</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.LockScriptingObjects(ProgramSoyuz.DataModel.Protocol.CmdLockOperationBase.LockOperationEnum,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject},ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Групповая операции блокировки объектов
            </summary>
            <param name="op">Операция блокировки</param>
            <param name="objects">Идентификаторы объектов</param>
            <param name="user">Идентификатор пользователя</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CheckIntegrity(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},System.Boolean)">
            <summary>
            Проверяет логическую целостность объектов и исправляет, если возможно
            </summary>
            <param name="objects">Набор объектов для исправления</param>
            <param name="fixIfPossible">true если следует попытаться исправить проблему</param>
            <remarks>Операция выполняется синхронно</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CheckIntegrity(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},System.Boolean,System.Boolean)">
            <summary>
            Проверяет логическую целостность объектов и исправляет, если возможно
            </summary>
            <param name="objects">Набор объектов для исправления</param>
            <param name="fixIfPossible">true если следует попытаться исправить проблему</param>
            <param name="wait">true, если следует выполнить проверку синхронно, false если проверка ставится в 
            очередь на фоновую обработку</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.DropCachedData(ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Сбрасывает кешированные данные относящиеся к указанной сущности
            </summary>
            <param name="entity">Тип сущности для сброса кеша. Если Unknown, то сбрасывается все</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.m_PropertyBag">
            <summary>
            Словарь для хранения глобальных свойств на время работы сессии скриптинга
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service._saveResult">
            <summary>
            Результат операции сохранения, передаваемый обратно к месту вызова, если установлен в триггерах операции сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetIcon(System.UInt32)">
            <summary>
            Доступ к иконке по идентификатору
            </summary>
            <returns>Найденную иконку или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetIcon(System.Guid)">
            <summary>
            Доступ к иконке по идентификатору
            </summary>
            <returns>Найденную иконку или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetIcon(System.String)">
            <summary>
            Доступ к иконке по ключу
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.CustomIconBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetFileVault(System.UInt32)">
            <summary>
            Доступ к файловому хранилищу по идентификатору
            </summary>
            <returns>Найденное файловое хранилище или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetFileVault(System.String)">
            <summary>
            Доступ к файловому хранилищу по ключу
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.FileVaultBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.WaitForBackgroundFileOperations">
            <summary>
            Блокирует текущий поток до того как будут завершены файловые операции, находящиеся в очереди.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.WaitForBackgroundFileOperations(System.Int32)">
            <summary>
            Блокирует текущий поток до того как будут завершены файловые операции, находящиеся в очереди.
            </summary>
            <param name="milliseconds">Время ожидания в миллисекундах или Infinite. (-1), если ожидание должно быть бесконечным.</param>
            <returns>true, если все операции завершены, false, если произошло завершение по времени</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetProxyServer(System.UInt32)">
            <summary>
            Доступ к прокси серверу по идентификатору
            </summary>
            <returns>Найденный сервер или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetProxyServer(System.UInt32,System.Boolean)">
            <summary>
            Доступ к прокси серверу по идентификатору
            </summary>
            <returns>Найденный сервер или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetProxyServer(System.String)">
            <summary>
            Доступ к прокси серверу по ключу
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.ProxyServerBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.ProxyServerBase,System.Boolean)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetExternalServer(System.UInt32)">
            <summary>
            Доступ к внешнему серверу по идентификатору
            </summary>
            <returns>Найденное файловое хранилище или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetExternalServer(System.UInt32,System.Boolean)">
            <summary>
            Доступ к внешнему серверу по идентификатору
            </summary>
            <returns>Найденное файловое хранилище или null</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service._externalServersByKey">
            <summary>
            Кеш найденных внешних серверов по пути
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetExternalServer(System.String)">
            <summary>
            Доступ к внешнему серверу по ключу
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.ExternalServerBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.ExternalServerBase,System.Boolean)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUniquenessSpace(System.UInt32)">
            <summary>
            Доступ к пространтсву уникальности по идентификатору
            </summary>
            <returns>Найденное пространтсво уникальности или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUniquenessSpace(System.String)">
            <summary>
            Доступ к пространтсву уникальности по ключу
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.UniquenessSpaceBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetIndexDef(System.UInt32)">
            <summary>
            Доступ к индексу по идентификатору
            </summary>
            <returns>Найденный индекс или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetIndexDef(System.String)">
            <summary>
            Доступ к индексу по ключу
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.IndexDefBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetNamedValues(System.Boolean,System.Boolean)">
            <summary>
            Возвращает массив корневых или всех именованных значений, существующих в системе
            </summary>
            <param name="onlyRoot">true если требуется только корневые объекты</param>
            <param name="original">true если требуется оригинальные оболочки</param>
            <returns>Массив именованных значений, обернутых для скриптинга</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetNamedValue(System.UInt32)">
            <summary>
            Доступ к именованному значению по идентификатору
            </summary>
            <param name="id">Идентификатор</param>
            <returns>Найденный объект или null</returns>
            <remarks>Возвращает оригинальную скриптовую оболочку</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetNamedValue(System.UInt32,System.Boolean)">
            <summary>
            Доступ к именованному значению по идентификатору
            </summary>
            <param name="id">Идентификатор</param>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service._namedValuesByPath">
            <summary>
            Кеш найденных ИЗ по пути
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetNamedValue(System.String)">
            <summary>
            Доступ к именованному значению по пути rootNameKey\NameKey1\*\NameKeyN
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"Test\*\Test3" - Находит Test, потом среди всех детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3"</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetNamedValue(ProgramSoyuz.PLM.Scripting.NamedValue,System.String)">
            <summary>
            Доступ к именованному значению по пути ..\NameKey1\*\NameKeyN
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3"</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.NamedValueBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="namedValue">Объект кеша</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.NamedValueBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="namedValue">Объект кеша</param>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRegistryItems(System.Boolean,System.Boolean)">
            <summary>
            Возвращает массив корневых или всех элементов реестра, существующих в системе
            </summary>
            <param name="onlyRoot">true если требуется только корневые объекты</param>
            <param name="original">true если требуется оригинальные оболочки</param>
            <returns>Массив именованных значений, обернутых для скриптинга</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRegistryItem(System.UInt32)">
            <summary>
            Доступ к элементу реестра по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRegistryItem(ProgramSoyuz.PLM.Scripting.RegistryItem,System.String,ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.DataModel.RegistryItemBase.DataTypeEnum,System.Boolean,System.Boolean)">
            <summary>
            Возвращает элемент реестра указанного типа по заданному пути для заданного пользователя
            </summary>
            <param name="registryItem">Элемент, с которого начинаем поиск</param>
            <param name="path">Путь к элементу от корня</param>
            <param name="user">Пользователь, для которого ищем настройку; null означает поиск глобальной настройки</param>
            <param name="eType">Тип значения требуемого элемента реестра</param>
            <param name="clientSide">true если интересует клиентская настройка</param>
            <param name="createIfMissing">true, если требуется создать элемент при его отсутствии (элемент в несохраненном состоянии)</param>
            <returns>Найденное значение, либо значение по умолчанию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.DoFindRegistryItem(ProgramSoyuz.PLM.Scripting.RegistryItem,System.String[],System.Int32,System.Collections.Generic.List{System.UInt32},ProgramSoyuz.DataModel.RegistryItemBase.DataTypeEnum,System.Boolean,System.Boolean)">
            <summary>
            Возвращает элемента реестра указанного типа по заданному пути для заданного пользователя
            </summary>
            <param name="registryItem">Элемент, с которого начинаем поиск</param>
            <param name="pathItems">Список ключей от корня</param>
            <param name="pathItemIndex">Индекс очередного элемента в списке ключей</param>
            <param name="userIds">Список подходящих пользователей/групп в порядке убывания "подходимости"; null означает поиск глобальной настройки</param>
            <param name="eType">Тип значения требуемого элемента реестра</param>
            <param name="clientSide">true если интересует клиентская настройка</param>
            <param name="createIfMissing">true, если требуется создать элемент при его отсутствии (элемент в несохраненном состоянии)</param>
            <returns>Найденное значение, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRegistryValue``1(System.String,ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Возвращает значение элемента реестра указанного типа по заданному пути
            </summary>
            <typeparam name="T">Тип искомого элемента реестра</typeparam>
            <param name="path">Путь к элементу от корня</param>
            <param name="user">Пользователь, для которого ищем настройку; null означает поиск глобальной настройки</param>
            <returns>Найденное значение, либо значение по умолчанию</returns>
            <remarks>На клиенте ищет клиентскую настройку. На сервер - серверную. Если указан пользователь,
            то среди настроек ищем его личные настройки, либо настройки для групп, в которые он входит, либо глобальные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRegistryValue``1(System.String,ProgramSoyuz.PLM.Scripting.User,``0)">
            <summary>
            Возвращает значение элемента реестра указанного типа по заданному пути
            </summary>
            <typeparam name="T">Тип искомого элемента реестра</typeparam>
            <param name="path">Путь к элементу от корня</param>
            <param name="user">Пользователь, для которого ищем настройку; null означает поиск глобальной настройки</param>
            <param name="defaultValue">Значение по умолчанию</param>
            <returns>Найденное значение, либо значение по умолчанию</returns>
            <remarks>На клиенте ищет клиентскую настройку. На сервере - серверную. Если указан пользователь,
            то среди настроек ищем его личные настройки, либо настройки для групп, в которые он входит, либо глобальные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetCommonRegistryValue``1(System.String)">
            <summary>
            Возвращает общее для всех значение элемента реестра указанного типа по заданному пути
            </summary>
            <typeparam name="T">Тип искомого элемента реестра</typeparam>
            <param name="path">Путь к элементу от корня</param>
            <returns>Найденное значение, либо значение по умолчанию</returns>
            <remarks>На клиенте ищет клиентскую настройку. На сервере - серверную.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetCommonRegistryValue``1(System.String,``0)">
            <summary>
            Возвращает общее для всех значение элемента реестра указанного типа по заданному пути
            </summary>
            <typeparam name="T">Тип искомого элемента реестра</typeparam>
            <param name="path">Путь к элементу от корня</param>
            <param name="defaultValue">Значение по умолчанию</param>
            <returns>Найденное значение, либо значение по умолчанию</returns>
            <remarks>На клиенте ищет клиентскую настройку. На сервере - серверную.</remarks>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service._registryValuesByPath">
            <summary>
            Кеш значений настроек из PLM реестра
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserRegistryValue``1(System.String)">
            <summary>
            Возвращает значение элемента реестра указанного типа для текущего пользователя по заданному пути
            </summary>
            <typeparam name="T">Тип искомого элемента реестра</typeparam>
            <param name="path">Путь к элементу от корня</param>
            <returns>Найденное значение, либо значение по умолчанию</returns>
            <remarks>На клиенте ищет клиентскую настройку. На сервере - серверную.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserRegistryValue``1(System.String,``0)">
            <summary>
            Возвращает значение элемента реестра указанного типа для текущего пользователя по заданному пути
            </summary>
            <typeparam name="T">Тип искомого элемента реестра</typeparam>
            <param name="path">Путь к элементу от корня</param>
            <param name="defaultValue">Значение по умолчанию</param>
            <returns>Найденное значение, либо значение по умолчанию</returns>
            <remarks>На клиенте ищет клиентскую настройку. На сервере - серверную.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRegistryValue``1(ProgramSoyuz.PLM.Scripting.RegistryItem,System.String,ProgramSoyuz.PLM.Scripting.User,``0)">
            <summary>
            Возвращает значение элемента реестра указанного типа по заданному пути
            </summary>
            <typeparam name="T">Тип искомого элемента реестра</typeparam>
            <param name="rootItem">Элемент, с которого начинаем поиск</param>
            <param name="path">Путь к элементу от корня</param>
            <param name="user">Пользователь, для которого ищем настройку; null означает поиск глобальной настройки</param>
            <param name="defaultValue">Значение по умолчанию</param>
            <returns>Найденное значение, либо значение по умолчанию</returns>
            <remarks>На клиенте ищет клиентскую настройку. На сервере - серверную. Если указан пользователь,
            то среди настроек ищем его личные настройки, либо настройки для групп, в которые он входит, либо глобальные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SetRegistryValue``1(ProgramSoyuz.PLM.Scripting.RegistryItem,System.String,ProgramSoyuz.PLM.Scripting.User,``0,System.Boolean)">
            <summary>
            Устанавливает значение элемента реестра указанного типа по заданному пути
            </summary>
            <typeparam name="T">Тип значения элемента реестра</typeparam>
            <param name="registryItem">Элемент, с которого начинаем поиск</param>
            <param name="path">Путь к элементу от корня</param>
            <param name="user">Пользователь, для которого запоминаем настройку; null означает оохранение глобальной (общей) настройки</param>
            <param name="value">Значение для сохранения в реестре</param>
            <param name="saveImmediately">Сохранить вновь изменения сразу же</param>
            <returns>Возвращает существующий или вновь созданный элемент реестра, 
            подготовленный для сохранения, или уже сохраненный в соответствии с <paramref name="saveImmediately"/></returns>
            <remarks>Фактическое сохранение откладывается до фиксации транзакции, если
            операция выполняется внутри серверного обработчика группового сохранения</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SetCommonRegistryValue``1(System.String,``0)">
            <summary>
            Устанавливает общее для всех значение элемента реестра указанного типа по заданному пути
            </summary>
            <typeparam name="T">Тип значения элемента реестра</typeparam>
            <param name="path">Путь к элементу от корня</param>
            <param name="value">Значение для сохранения в реестре</param>
            <returns>Возвращает существующий или вновь созданный только что сохраненный элемент реестра</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SetCommonRegistryValueAsync``1(System.String,``0)">
            <summary>
            Устанавливает общее для всех значение элемента реестра указанного типа по заданному пути.
            Сохранение происходит в асинхронном режиме без ожидания завершения операции
            </summary>
            <typeparam name="T">Тип значения элемента реестра</typeparam>
            <param name="path">Путь к элементу от корня</param>
            <param name="value">Значение для сохранения в реестре</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SetCommonRegistryValue``1(System.String,``0,System.Boolean)">
            <summary>
            Устанавливает общее для всех значение элемента реестра указанного типа по заданному пути
            </summary>
            <typeparam name="T">Тип значения элемента реестра</typeparam>
            <param name="path">Путь к элементу от корня</param>
            <param name="value">Значение для сохранения в реестре</param>
            <param name="saveImmediately">Сохранить вновь изменения сразу же</param>
            <returns>Возвращает существующий или вновь созданный только что сохраненный элемент реестра</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SetUserRegistryValue``1(System.String,``0)">
            <summary>
            Устанавливает значение элемента реестра указанного типа для текущего пользователя по заданному пути
            </summary>
            <typeparam name="T">Тип значения элемента реестра</typeparam>
            <param name="path">Путь к элементу от корня</param>
            <param name="value">Значение для сохранения в реестре</param>
            <returns>Возвращает существующий или вновь созданный только что сохраненный элемент реестра</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SetUserRegistryValueAsync``1(System.String,``0)">
            <summary>
            Устанавливает значение элемента реестра указанного типа для текущего пользователя по заданному пути.
            Сохранение происходит в асинхронном режиме без ожидания завершения операции
            </summary>
            <typeparam name="T">Тип значения элемента реестра</typeparam>
            <param name="path">Путь к элементу от корня</param>
            <param name="value">Значение для сохранения в реестре</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.SetUserRegistryValue``1(System.String,``0,System.Boolean)">
            <summary>
            Устанавливает значение элемента реестра указанного типа для текущего пользователя по заданному пути
            </summary>
            <typeparam name="T">Тип значения элемента реестра</typeparam>
            <param name="path">Путь к элементу от корня</param>
            <param name="value">Значение для сохранения в реестре</param>
            <param name="saveImmediately">Сохранить вновь изменения сразу же</param>
            <returns>Возвращает существующий или вновь созданный только что сохраненный элемент реестра</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.RegistryItemBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRootTemplates(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Доступ к корневым шаблонам указанного типа, существующим в PLM системе
            </summary>
            <param name="templateKind">Тип сущности интересующих шаблонов</param>
            <returns>Список запрошенных шаблонов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRootTemplates(ProgramSoyuz.DataModel.AttributableEntityIdentifier,System.Boolean)">
            <summary>
            Доступ к корневым шаблонам указанного типа, существующим в PLM системе
            </summary>
            <param name="templateKind">Тип сущности интересующих шаблонов</param>
            <param name="original">true если требуются оригинальные оболочки по кешу</param>
            <returns>Список запрошенных шаблонов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetAllTemplates(System.Boolean)">
            <summary>
            Возвращает массив всех шаблонов, существующих в системе
            </summary>
            <param name="original">true если требуются оригинальные оболочки по кешу</param>
            <returns>Массив всех шаблонов, обернутых для скриптинга</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetTemplates(System.Boolean,System.Boolean)">
            <summary>
            Возвращает массив всех шаблонов, существующих в системе
            </summary>
            <param name="rootOnly">true если требуются только корневые объекты</param>
            <param name="original">true если требуются оригинальные оболочки по кешу</param>
            <returns>Массив всех шаблонов, обернутых для скриптинга</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetTemplate(System.UInt32)">
            <summary>
            Доступ к шаблону по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetTemplate(System.UInt32,System.Boolean)">
            <summary>
            Доступ к шаблону по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service._templatesByPath">
            <summary>
            Кеш найденных шаблонов по пути
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetTemplate(System.String)">
            <summary>
            Доступ к шаблону по прямому пути наследования rootNameKey\NameKey1\..\NameKeyN
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetTemplate(ProgramSoyuz.PLM.Scripting.Template,System.String)">
            <summary>
            Доступ к шаблону по прямому пути наследования ..\NameKey1\*\NameKeyN
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех его детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3" - Ищет Test3 среди всех</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetTemplate(ProgramSoyuz.DataModel.AttributableEntityIdentifier,System.String)">
            <summary>
            Доступ к шаблону по прямому пути наследования ..\NameKey1\*\NameKeyN
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех его детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3" - Ищет Test3 среди всех</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetCreatableTemplates(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Возвращает список шаблонов указанного типа, объекты по которым можно создавать корневыми
            </summary>
            <param name="kind">Тип шаблонируемой сущности</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetCreatableTemplates(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Возвращает перечислитель шаблонов производных от указанного, объекты по которым можно создавать 
            корневыми
            </summary>
            <param name="targetTemplate">Шаблон, производные от которого интересуют</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.TemplateBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name = "template">Реальный объект</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.AttributeDefBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name = "attributeDef">Реальный объект</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.TemplateConstraintBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name = "constraint">Реальный объект</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.TemplateParentLinkBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name = "constraint">Реальный объект</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.PageDefBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name = "pageDef">Реальный объект</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.UICommandBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name = "uiCommand">Реальный объект</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.TemplateBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name = "template">Реальный объект</param>
            <param name="original">false, если предполагается возможность редактирования объекта</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.AttributeDefBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name = "attributeDef">Реальный объект</param>
            <param name="original">false, если предполагается возможность редактирования объекта</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.TemplateConstraintBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name = "constraint">Реальный объект</param>
            <param name="original">false, если предполагается возможность редактирования объекта</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.TemplateParentLinkBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name = "link">Реальный объект</param>
            <param name="original">false, если предполагается возможность редактирования объекта</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.PageDefBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name = "pageDef">Реальный объект</param>
            <param name="original">false, если предполагается возможность редактирования объекта</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.UICommandBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name = "uiCommand">Реальный объект</param>
            <param name="original">false, если предполагается возможность редактирования объекта</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetAllUsers(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Возвращает массив всех учетных записей, существующих в системе
            </summary>
            <returns>Массив всех учетных записей, обернутых для скриптинга</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUser(System.UInt32)">
            <summary>
            Доступ к учетной записи по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUser(System.UInt32,System.Boolean)">
            <summary>
            Доступ к учетной записи по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUser(System.Guid)">
            <summary>
            Доступ к юзеру по глобальному идентификатору
            </summary>
            <param name="id">Идентификатор (глобальный) объекта</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUser(System.Guid,System.Boolean)">
            <summary>
            Доступ к юзеру по глобальному идентификатору
            </summary>
            <param name="id">Идентификатор (глобальный) объекта</param>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUser(System.String,System.String)">
            <summary>
            Доступ к учетной записи по логину и паролю
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUser(System.String)">
            <summary>
            Доступ к учетной записи по пути rootNameKey\NameKey1\..\NameKeyN
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUser(ProgramSoyuz.PLM.Scripting.User,System.String)">
            <summary>
            Доступ к учетной записи по пути через группы ..\NameKey1\*\NameKeyN
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3"</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.LoadUserAuditRecords(ProgramSoyuz.PLM.Scripting.User,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Выполняет чтение из базы записей аудита пользователя
            </summary>
            <param name="user">Интересующий пользователь, либо null если интересуют записи с неопознанным пользователем</param>
            <param name="dateFrom">Время в UTC, начиная с которого ищем записи</param>
            <param name="dateTo">Время в UTC, заканчивая которым ищем записи</param>
            <param name="maxRecords">Максимальное количество возвращаемых записей, либо 0, если без ограничения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.LoadUserAuditRecords(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Выполняет чтение из базы записей аудита всех пользователей
            </summary>
            <param name="dateFrom">Время в UTC, начиная с которого ищем записи</param>
            <param name="dateTo">Время в UTC, заканчивая которым ищем записи</param>
            <param name="maxRecords">Максимальное количество возвращаемых записей, либо 0, если без ограничения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.UserBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="obj">Raw объект из кеша</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.UserBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="obj">Raw объект из кеша</param>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.UserBindingBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.UserBindingBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRootRoles(ProgramSoyuz.DataModel.RoleBase.RoleKindEnum)">
            <summary>
            Доступ к корневым ролям указанного типа, существующим в PLM системе
            </summary>
            <param name="roleKind">Тип роли (не используется)</param>
            <returns>Список запрошенных ролей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRootRoles(ProgramSoyuz.DataModel.RoleBase.RoleKindEnum,System.Boolean)">
            <summary>
            Доступ к корневым ролям указанного типа, существующим в PLM системе
            </summary>
            <param name="roleKind">Тип роли (не используется)</param>
            <param name="original">true если требуются оригинальные оболочки по кешу</param>
            <returns>Список запрошенных ролей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetAllRoles(System.Boolean)">
            <summary>
            Возвращает массив ролей, существующих в системе
            </summary>
            <param name="original">true если требуются оригинальные оболочки по кешу</param>
            <returns>Массив ролей, обернутых для скриптинга</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRoles(System.Boolean,System.Boolean)">
            <summary>
            Возвращает массив ролей, существующих в системе
            </summary>
            <param name="rootOnly">true если требуются только корневые объекты</param>
            <param name="original">true если требуются оригинальные оболочки по кешу</param>
            <returns>Массив ролей, обернутых для скриптинга</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRole(System.UInt32)">
            <summary>
            Доступ к роли по идентификатору
            </summary>
            <returns>Найденную роль или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRole(System.UInt32,System.Boolean)">
            <summary>
            Доступ к роли по идентификатору
            </summary>
            <returns>Найденную роль или null</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service._rolesByPath">
            <summary>
            Кеш найденных ролей по пути
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRole(System.String)">
            <summary>
            Доступ к роли по прямому пути наследования rootNameKey\NameKey1\..\NameKeyN
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRole(ProgramSoyuz.PLM.Scripting.Role,System.String)">
            <summary>
            Доступ к роли по прямому пути наследования ..\NameKey1\*\NameKeyN
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех его детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3" - Ищет Test3 среди всех</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRole(ProgramSoyuz.DataModel.RoleBase.RoleKindEnum,System.String)">
            <summary>
            Доступ к роли по прямому пути наследования ..\NameKey1\*\NameKeyN
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех его детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3" - Ищет Test3 среди всех</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.RoleBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.AccessRuleBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.RoleBase,System.Boolean)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.AccessRuleBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserBindingsByTarget(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает массив привязок к указанному объекту. Для поиска используется индекс
            </summary>
            <param name="obj">Объект, привязки к которому интересуют</param>
            <returns>Массив привязок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserBindingsByTarget(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает массив привязок указанного пользователя к указанному объекту. Для поиска используется индекс
            </summary>
            <param name="user">Пользователь чьи привязки интересуют</param>
            <param name="obj">Объект, привязки к которому интересуют</param>
            <returns>Массив привязок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserBindingsByOwner(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Возвращает массив привязок указанного пользователя. Для поиска используется индекс
            </summary>
            <param name="user">Пользователь чьи привязки интересуют</param>
            <returns>Массив привязок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetConfiguratorBindingsByTarget(ProgramSoyuz.PLM.Scripting.Configuration)">
            <summary>
            Возвращает массив привязок к указанному объекту. Для поиска используется индекс
            </summary>
            <param name="obj">Объект, привязки к которому интересуют</param>
            <returns>Массив привязок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetConfiguratorBindingsByTarget(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.Configuration)">
            <summary>
            Возвращает массив привязок указанного пользователя к указанному объекту. Для поиска используется индекс
            </summary>
            <param name="user">Пользователь чьи привязки интересуют</param>
            <param name="obj">Объект, привязки к которому интересуют</param>
            <returns>Массив привязок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetConfiguratorBindingsByOwner(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Возвращает массив привязок указанного пользователя. Для поиска используется индекс
            </summary>
            <param name="user">Пользователь чьи привязки интересуют</param>
            <returns>Массив привязок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.ConfiguratorBindingBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.ConfiguratorBindingBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetDataContainer(System.UInt32)">
            <summary>
            Доступ к контейнеру по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetDataContainer(System.UInt32,System.Boolean)">
            <summary>
            Доступ к контейнеру по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetDataContainer(System.Guid)">
            <summary>
            Доступ к контейнеру по глобальному идентификатору
            </summary>
            <param name="id">Идентификатор (глобальный) объекта</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetDataContainer(System.Guid,System.Boolean)">
            <summary>
            Доступ к контейнеру по глобальному идентификатору
            </summary>
            <param name="id">Идентификатор (глобальный) объекта</param>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetDataContainer(System.String)">
            <summary>
            Доступ к контейнеру по прямому пути наследования rootNameKey\NameKey1\..\NameKeyN
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetDataContainer(ProgramSoyuz.PLM.Scripting.DataContainer,System.String)">
            <summary>
            Доступ к именованному значению по пути ..\NameKey1\*\NameKeyN
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3"</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.DataContainerBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.DataContainerBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetInfoObjects(ProgramSoyuz.PLM.Scripting.DataContainer,System.Boolean,System.Boolean)">
            <summary>
            Доступ к информационным объектам указанного контейнера, существующим в PLM системе
            </summary>
            <param name="container">Контейнер</param>
            <param name="bRootOnly">Если true, то возвращаются только корневые объекты.
            Если false, то возвращаются все значения</param>
            <param name="loadIfNeeded">Если true то при необходимости содержимое контейнера предварительно будет загружено в кеш</param>
            <returns>Массив запрошенных объектов, обернутых для скриптинга</returns>
            <exception cref="T:ProgramSoyuz.DataModel.OperationFailedException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetInfoObject(System.UInt32)">
            <summary>
            Доступ к информационному объекту по идентификатору
            </summary>
            <param name="id">Идентификатор объекта</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetInfoObject(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Доступ к информационному объекту по идентификатору
            </summary>
            <param name="id">Идентификатор объекта</param>
            <param name="loadIfNotCached">Если true, то производит загрузку объекта с сервера/из базы</param>
            <param name="resolveLightweight">Если true, то для легковесных объектов производится полная загрузка (игнорируется на сервере)</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetInfoObject(System.UInt32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Доступ к информационному объекту по идентификатору
            </summary>
            <param name="id">Идентификатор объекта</param>
            <param name="loadIfNotCached">Если true, то производит загрузку объекта с сервера/из базы</param>
            <param name="resolveLightweight">Если true, то для легковесных объектов производится полная загрузка (игнорируется на сервере)</param>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetInfoObject(System.Guid)">
            <summary>
            Доступ к информационному объекту по глобальному идентификатору
            </summary>
            <param name="id">Идентификатор (глобальный) объекта</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetInfoObject(System.Guid,System.Boolean)">
            <summary>
            Доступ к информационному объекту по глобальному идентификатору
            </summary>
            <param name="id">Идентификатор (глобальный) объекта</param>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.PreloadInfoObjects(System.Collections.Generic.IEnumerable{System.UInt32},ProgramSoyuz.DataModel.PreloadModeEnum)">
            <summary>
            Предварительная загрузка группы указанных ИО в указанном режиме загрузки
            </summary>
            <param name="ids">Идентификатор запрошенного объекта</param>
            <param name="mode">Набор флагов <see cref="T:ProgramSoyuz.DataModel.PreloadModeEnum"/>, определяющих режим предварительной загрузки ИО</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.PreloadInfoObjects(System.Collections.Generic.IEnumerable{System.UInt32},ProgramSoyuz.DataModel.PreloadModeEnum,System.Boolean)">
            <summary>
            Предварительная загрузка группы указанных ИО в указанном режиме загрузки
            </summary>
            <param name="ids">Идентификатор запрошенного объекта</param>
            <param name="mode">Набор флагов <see cref="T:ProgramSoyuz.DataModel.PreloadModeEnum"/>, определяющих режим предварительной загрузки ИО</param>
            <param name="wait">true - блокирующий вызов, false - (только на клиенте, на сервере игнорируется) метод завершается сразу же после отправки запроса к серверу без ожидания результата</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetInfoObjectOrContainer(ProgramSoyuz.PLM.Scripting.DataContainer,System.String)">
            <summary>
            Доступ к ИО/контейнеру по пути ..\NameKey1\*\NameKeyN начиная от какого-то из родительских контейнеров.
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3"</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetInfoObject(ProgramSoyuz.PLM.Scripting.DataContainer,System.String)">
            <summary>
            Доступ к ИО по пути ..\NameKey1\*\NameKeyN начиная от его родного контейнера. Поиск не выходит за рамки контейнера
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3"</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetInfoObject(ProgramSoyuz.PLM.Scripting.InfoObject,System.String)">
            <summary>
            Доступ к ИО по пути ..\NameKey1\*\NameKeyN начиная от другого ИО. Поиск не выходит за рамки контейнера
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3"</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ReserveInfoObjectIds(ProgramSoyuz.PLM.Scripting.DataContainer,ProgramSoyuz.PLM.Scripting.Template,System.Int32)">
            <summary>
            Резервирование идентификаторов ИО в базе в указанном количестве
            </summary>
            <param name="container">Контейнер, в котором создаются резервированные объекты</param>
            <param name="template">Шаблон ИО для которых резервируются ID</param>
            <param name="count">Требуемое количество идентификаторов</param>
            <returns>Набор зарезервированных идентификаторов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.InfoObjectBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="obj">Raw объект из кеша</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.InfoObjectBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="obj">Raw объект из кеша</param>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.RevisionBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetRootUserItems(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Доступ к элементам рабочего стола, существующим в PLM системе для указанного пользователя
            </summary>
            <param name="user">Пользователь, чьи ЭРС интересуют</param>
            <returns>Список запрошенных ЭРС</returns>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserItem(System.UInt32)">
            <summary>
            Доступ к элементу рабочего стола по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserItem(System.String)">
            <summary>
            Доступ к элементу рабочего стола (ЭРС) по пути rootNameKey\NameKey1\*\NameKeyN
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"Test\*\Test3" - Находит Test, потом среди всех детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3"</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserItem(ProgramSoyuz.PLM.Scripting.User,System.String)">
            <summary>
            Доступ к элементу рабочего стола (ЭРС) ..\NameKey1\*\NameKeyN
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3"</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserItem(ProgramSoyuz.PLM.Scripting.UserItem,System.String)">
            <summary>
            Доступ к элементу рабочего стола (ЭРС) ..\NameKey1\*\NameKeyN
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3"</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.UserItemBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserItemLink(System.UInt32)">
            <summary>
            Доступ к шорткату по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserItemLinks(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserItem,ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean)">
            <summary>
            Доступ к шорткатам по идентификатору элемента ПРС и целевому объекту
            </summary>
            <param name="user">Пользователь, чьи шорткаты интересуют</param>
            <param name="item">Элемент ПРС</param>
            <param name="target">Целевой объект, ссылки на который интересуют. Если null, то возвращаются все</param>
            <param name="preload">Если true, то на клиенте происходит предварительная загрузка целевых объектов ссылок</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.UserItemLinkBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetWorkItems(System.UInt32,System.Boolean)">
            <summary>
            Возвращает массив запрошенных нагрузок
            </summary>
            <param name="bActive">Если true, то возвращаются активные нагрузки, false - остальные</param>
            <param name="userId">Идентификатор пользователя, чьи нагрузки интересуют. Если 0, то возвращаются все видимые сессией нагрузки</param>
            <returns>Массив всех учетных записей, обернутых для скриптинга</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetWorkItem(System.UInt32)">
            <summary>
            Доступ к нагрузке по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetWorkItem(System.UInt32,System.Boolean)">
            <summary>
            Доступ к нагрузке по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.WorkItemBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="obj">Raw объект из кеша</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.WorkItemBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="obj">Raw объект из кеша</param>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetTasks(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean)">
            <summary>
            Возвращает массив запрошенных задач
            </summary>
            <param name="bActive">Если true, то возвращаются только активные задачи, false - все</param>
            <param name="obj">Объект, чьи задачи интересуют.</param>
            <returns>Массив объектов, обернутых для скриптинга</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetSupervisedTasks(ProgramSoyuz.PLM.Scripting.User,System.Boolean)">
            <summary>
            Возвращает список процессов, для которых указанный пользователь является супервизором.
            На клиенте user - игнорируется - используется текущий пользователь.
            </summary>
            <param name="user">Пользователь, для которого запрашиваются подконтрольные (на клиенте это всегда текущий пользователь)</param>
            <param name="original">true если требуются оригинальные оболочки только для чтения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetActiveProcesses(System.Boolean)">
            <summary>
            Список активных процессов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetTasksByContext(System.UInt32,System.Boolean)">
            <summary>
            Возвращает список задач по запрошенным контекстным контейнерам
            </summary>
            <returns>Массив найденных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetTask(System.UInt32)">
            <summary>
            Доступ к задаче по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetTask(System.UInt32,System.Boolean)">
            <summary>
            Доступ к задаче по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.TaskBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="obj">Raw объект из кеша</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.TaskBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="obj">Raw объект из кеша</param>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.TaskDiagramBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.TaskDiagramNodeBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.TaskDiagramLinkBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserSessions">
            <summary>
            Доступ к сессиям, подключенным к PLM системе
            </summary>
            <returns>Список подключенных сессий</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserSessions(System.UInt32)">
            <summary>
            Доступ к сессиям, подключенным к PLM системе
            </summary>
            <param name="userId">Идентификатор пользователя, чьи сессии интересуют. Если 0, то
            возвращаются все сессии</param>
            <returns>Список подключенных сессий</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetCurrentUserSession">
            <summary>
            Доступ к текущей сессии, которой клиент связан с сервером
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetCurrentUser">
            <summary>
            Доступ к пользователю текущей сессии, которой клиент связан с сервером
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetCurrentUser(System.Boolean)">
            <summary>
            Доступ к пользователю текущей сессии, которой клиент связан с сервером
            </summary>
            <param name="original">false если требуется редактируемая оболочка</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.Connectivity.SessionBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Созданный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.LoadLanguageData(System.String)">
            <summary>
            Загрузка в кеш пакета локализации для указанного языка.
            Используются строки по <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/>: "ru", "en", "fi", и пр.
            </summary>
            <remarks>Загрузка происходит только если указанный язык еще не был загружен</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetLocalizedString(System.String,ProgramSoyuz.PLM.Scripting.ScriptingBaseObject,ProgramSoyuz.DataModel.LocalizedStringBase.PropertyIdEnum,System.String)">
            <summary>
            Возвращает локализованную строку по объекту, свйству и ключу для данного языка
            </summary>
            <param name="languageCode">Код языка по <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/></param>
            <param name="obj">Объекта, чью локализованную строку запрашиваем</param>
            <param name="propertyId">Идентификатор локализованного свойства</param>
            <param name="nameKey">Ключ для вложенной в основное значение свойства локализованной строки</param>
            <returns>Найденная строка или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetLocalizedStrings(System.String,ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Возвращает набор локализованных строк по объекту для данного языка
            </summary>
            <param name="languageCode">Код языка по <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/></param>
            <param name="obj">Объекта, чьи локализованныу строки запрашиваем</param>
            <returns>Набор найденных строк</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetLocalizedStrings(System.String)">
            <summary>
            Возвращает набор всех локализованных строк для данного языка
            </summary>
            <param name="languageCode">Код языка по <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/></param>
            <returns>Набор найденных строк</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.LocalizedStringBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <param name="obj">Raw объект из кеша</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetLocalizedString(System.UInt32)">
            <summary>
            Доступ к локализованной строке по идентификатору
            </summary>
            <returns>Найденную строку или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetConfigurationModule(System.UInt32)">
            <summary>
            Доступ к объекту по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.ConfigurationModuleBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetAutoIncrementedCounter(System.UInt32)">
            <summary>
            Доступ к счетчику по идентификатору
            </summary>
            <returns>Найденный счетчик или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetAutoIncrementedCounter(System.String)">
            <summary>
            Доступ к счетчику по ключу
            </summary>
            <returns>Найденный счетчик или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.AutoIncrementedCounterBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetFileContext(System.UInt32)">
            <summary>
            Доступ к объекту по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.FileContextBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetFileLocalCopies(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Доступ ко всем записям о локальных копиях (для всех рабочих станций), относящихся к указанонму файловому атрибуту
            </summary>
            <returns>Список записей</returns>
            <remarks>Метод выполняет серверный поисковый запрос по поиску всех ФЛК для данного атрибута</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetFileLocalCopies(ProgramSoyuz.PLM.Scripting.Attribute,System.Boolean)">
            <summary>
            Доступ ко всем записям о локальных копиях (для данной или для всех рабочих станций), относящихся к указанонму файловому атрибуту
            </summary>
            <returns>Список записей</returns>
            <remarks>Если запрошены все ФЛК, то метод выполняет серверный поисковый запрос по поиску всех ФЛК для данного атрибута</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetFileLocalCopy(System.UInt32)">
            <summary>
            Доступ к объекту по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetFileLocalCopy(System.String)">
            <summary>
            Доступ к записи о локальной копии файла по пути к файлу
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.FileLocalCopyBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetWorkSpaceScheme(System.UInt32)">
            <summary>
            Доступ к схеме раскладки объектов по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetWorkSpaceScheme(System.String)">
            <summary>
            Доступ к схеме раскладки объектов по ключу
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.WorkSpaceSchemeBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetAllScriptingTasks(System.Boolean)">
            <summary>
            Возвращает массив автоматических скриптовых задач, существующих в системе
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <returns>Массив объектов, обернутых для скриптинга</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetScriptingTask(System.UInt32)">
            <summary>
            Доступ к автоматической скриптовой задаче по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetScriptingTask(System.UInt32,System.Boolean)">
            <summary>
            Доступ к автоматической скриптовой задаче по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service._scriptingTasksByKey">
            <summary>
            Кеш найденных скриптовых задач по пути
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetScriptingTask(System.String)">
            <summary>
            Доступ к автоматической скриптовой задаче по ключу
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.ScriptingTaskBase)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.ScriptingTaskBase,System.Boolean)">
            <summary>
            Создает объект-оболочку по реальному объекту
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetConfiguration(System.UInt32)">
            <summary>
            Доступ к конфигурации по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetConfiguration(System.String)">
            <summary>
            Доступ к шаблону по прямому пути наследования rootNameKey\NameKey1\..\NameKeyN
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetConfiguration(ProgramSoyuz.PLM.Scripting.Configuration,System.String)">
            <summary>
            Доступ к шаблону по прямому пути наследования ..\NameKey1\*\NameKeyN
            </summary>
            <example>@"Test\Test2\Test3" - прямой путь к объекту
            @"*\Test\*\Test3" - Находит Test, потом среди всех его детей ищет Test3
            @"*\Test3" - Ищет Test3 среди всех
            @"..\..\*\*\Test3" - Дважды поднимается уровнем выше и оттуда ищет Test3 среди всех детей
            @"\*\Test3" - Ищет Test3 среди всех</example>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.ConfigurationBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUsageReport(ProgramSoyuz.DataModel.DataObjectIdentifier,System.Int32)">
            <summary>
            Запрос у сервера отчета об использовании указанного объекта
            </summary>
            <param name="objectId">Интересующий объект</param>
            <param name="recordsToReturn">Максимальное количество объектов в результате запроса.
            0 означает - без ограничения</param>
            <returns>Список идентификаторов найденных объектов</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service._applicationInfo">
            <summary>
            Сведения о продукте
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserSubscription(System.UInt32)">
            <summary>
            Доступ к подписке по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserSubscriptions(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Доступ к подпискам, существующим в PLM системе
            </summary>
            <param name="user">Пользователь</param>
            <param name="target">Целевой объект</param>
            <returns>Список запрошенных подписок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.UserSubscriptionBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.UserSubscriptionBase,System.Boolean)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserNotification(System.UInt32)">
            <summary>
            Доступ к уведомлению по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetUserNotifications(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Доступ к уведомлениям, существующим в PLM системе
            </summary>
            <param name="user">Пользователь</param>
            <returns>Список запрошенных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CreateWrapper(ProgramSoyuz.DataModel.UserNotificationBase)">
            <summary>
            Создает объект-оболочку
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CheckMasterServerGUID(System.Windows.Forms.IDataObject)">
            <summary>
            Возвращает true если данные в <paramref name="dataObject"/> относятся к текущей базе (Guid совпадает)
            </summary>
            <param name="dataObject">Проверяемый DataObject</param>
            <returns>true если объект содержит данные из текущей базы данных</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.m_SaveSets">
            <summary>
            Стек сейвсетов, свой для каждого потока
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.NullSaveSet">
            <summary>
            Пустой SaveSet.
            Используется как заглушка на случай отсутствия текущего контекста сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.CancelAllChanges">
            <summary>
            Сбрасывает все объекты из сохраняемого набора
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.EnterNewGroupOperation">
            <summary>
            Создание нового контекста групповой операции сохранения на вершине стека контекстов
            </summary>
            <returns>Объект для автоматического отката стека</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.EnterNewGroupOperation(ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.OperationFlags)">
            <summary>
            Создание нового контекста групповой операции сохранения на вершине стека контекстов
            </summary>
            <param name="flags">Настройки операции сохранения</param>
            <returns>Объект для автоматического отката стека</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.EnterNewGroupOperation(ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet)">
            <summary>
            Создание нового контекста серверной групповой операции сохранения на вершине стека контекстов для
            собственно выполнения операции сохранения
            </summary>
            <returns>Объект для автоматического отката стека</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service._ObjectCache">
            <summary>
            Кеш скриптовых оболочек для текущего потока
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service._ObjectCacheEnabled">
            <summary>
            Флаг, управляющий кешированием созданных скриптовых оболочек для текущего потока
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.EnableObjectCaching(System.Boolean)">
            <summary>
            Разрешает или запрещает (инекремент/декремент счетчика)
            кеширование скриптовых оболочек для текущего потока
            </summary>
            <param name="enable"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ResetObjectCache(System.Boolean,System.Boolean)">
            <summary>
            Включение/выключение кеширования скриптовых оболочек для текущего потока
            с оптициональным сбросом текущего содержимого
            </summary>
            <param name="dropAlreadyCached"></param>
            <param name="enable"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetCachedObject(ProgramSoyuz.DataModel.DataObjectIdentifier)">
            <summary>
            Возвращает кешированную скриптовую оболочку, если она есть в текущем сейвсете или в кеше оболочек 
            ( если включено кеширование )
            </summary>
            <param name="id">Идентификатор запрошенного объекта</param>
            <returns>Найденный в кеше объект, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.AddCachedObject(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Добавляет скриптовую оболочку в кеш используемых оболочек для текущего потока (если включено кеширование)
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.GetCachedWrapper``1(``0)">
            <summary>
            Возвращает кешированную скриптовую оболочку, если она есть в текущем сейвсете или в кеше оболочек 
            ( если включено кеширование ). Если нет ни там, ни там, то добавляем оболочку в кеш
            </summary>
            <param name="scriptingBaseObject">Идентификатор запрошенного объекта</param>
            <returns>Найденный в кеше объект, либо <paramref name="scriptingBaseObject"/>, добавленный в кеш (если он существующий)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.EnterAutoCaching">
            <summary>
            Включает режим кеширования скриптовых оболочек. В этом режиме все выдаваемые скриптовые оболочки кешируются 
            и последующие запросы к ним, используют оболочки из кеша.
            По завершении блока using кеш сбрасывается.
            </summary>
            <returns>Объект для использования  в блоке using</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.EnterAutoCaching(System.Boolean)">
            <summary>
            Включает режим кеширования скриптовых оболочек. В этом режиме все выдаваемые скриптовые оболочки кешируются 
            и последующие запросы к ним, используют оболочки из кеша.
            </summary>
            <param name="clearOnExit">true если следует сбросить кеш по выходу из блока using</param>
            <returns>Объект для использования  в блоке using</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MTHost">
            <summary>
            Серверный класс для предоставления скриптам специфичной для сервера функциональности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.UIHost">
            <summary>
            Клиентский класс для предоставления модулям основной клиентской функциональности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ExecutionEnvironment">
            <summary>
            Стек контекстов исполнения скрипта, по потокам
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ExecutionContext">
            <summary>
            Доступ к текущему контексту выполнения скрипта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.Host">
            <summary>
            Начальная инициализация сервиса для скриптинга
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.Service.OperationProgressEvent">
            <summary>
            Событие о ходе выполнения сервером длинных синхронных операций (операции сохранения)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.HasChanges">
            <summary>
            Возвращает true если открыта групповая операция и есть накопленные изменения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.NewObjectsInSaveSet">
            <summary>
            Перечислитель создаваемых объектов в текущем наборе для сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ModifiedObjectsInSaveSet">
            <summary>
            Перечислитель изменяемых объектов в текущем наборе для сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ErasedObjectsInSaveSet">
            <summary>
            Перечислитель удаляемых объектов в текущем наборе для сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.SaveSetPropertyBag">
            <summary>
            Словарь для хранения свойств на время выполнения операции сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ServerHostName">
            <summary>
            Имя сервера, к которому подключены в данный момент
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ServerPortNumber">
            <summary>
            Порт сервера, к которому подключены в данный момент
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.HttpServerHostName">
            <summary>
            Имя http-сервера, связанного с этим сервером PLM
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ServerTime">
            <summary>
            Серверное время, приведённое к местному локальному
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.LocalEndPoint">
            <summary>
            IP адрес и порт локальной стороны соединения. Результат следует преобразовать к IPEndPoint
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.FrameWorkVersion">
            <summary>
            Версия фреймворка (по месту вызова)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ServerFrameWorkVersion">
            <summary>
            Версия фреймворка, работающего на сервере
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ServerComputerKey">
            <summary>
            Хеш серверного компьютера (номер материнской платы, процессора и системы)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.PropertyBag">
            <summary>
            Словарь для хранения глобальных свойств на время работы сессии скриптинга
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.SaveResult">
            <summary>
            Результат операции сохранения, передаваемый обратно к месту вызова, если установлен в триггерах операции сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllIcons">
            <summary>
            Возвращает массив иконок, существующих в системе
            </summary>
            <returns>Массив иконок, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllFileVaults">
            <summary>
            Возвращает массив файловых хранилищ, существующих в системе
            </summary>
            <returns>Массив объектов, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllProxyServers">
            <summary>
            Возвращает массив вспомогательных серверов, существующих в системе
            </summary>
            <returns>Массив объектов, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllExternalServers">
            <summary>
            Возвращает массив внешних серверов, существующих в системе
            </summary>
            <returns>Массив объектов, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllUniquenessSpaces">
            <summary>
            Возвращает массив пространтсв уникальности, существующих в системе
            </summary>
            <returns>Массив объектов, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllIndexDefs">
            <summary>
            Возвращает массив индексов, существующих в системе
            </summary>
            <returns>Массив объектов, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.RootNamedValues">
            <summary>
            Возвращает массив корневых именованных значений, существующих в системе
            </summary>
            <returns>Массив корневых именованных значений, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllNamedValues">
            <summary>
            Возвращает массив всех именованных значений, существующих в системе
            </summary>
            <returns>Массив всех именованных значений, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.RootRegistryItems">
            <summary>
            Возвращает массив корневых элементов реестра, существующих в системе
            </summary>
            <returns>Массив корневых элементов реестра, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllRegistryItems">
            <summary>
            Возвращает массив всех элементов реестра, существующих в системе
            </summary>
            <returns>Массив всех элементов реестра, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.RootTemplates">
            <summary>
            Возвращает массив корневых шаблонов, существующих в системе
            </summary>
            <returns>Массив корневых шаблонов, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllTemplates">
            <summary>
            Возвращает массив всех шаблонов, существующих в системе
            </summary>
            <returns>Массив всех шаблонов, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.RootUsers">
            <summary>
            Возвращает массив корневых учетных записей, существующих в системе
            </summary>
            <returns>Массив корневых учетных записей, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllUsers">
            <summary>
            Возвращает массив всех учетных записей, существующих в системе
            </summary>
            <returns>Массив всех учетных записей, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.RootRoles">
            <summary>
            Возвращает массив корневых ролей, существующих в системе
            </summary>
            <returns>Массив корневых ролей, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllRoles">
            <summary>
            Возвращает массив ролей, существующих в системе
            </summary>
            <returns>Массив ролей, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllUserBindings">
            <summary>
            Возвращает массив привязок, существующих в системе
            </summary>
            <returns>Массив привязок</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllConfiguratorBindings">
            <summary>
            Возвращает массив привязок, существующих в системе
            </summary>
            <returns>Массив привязок</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.RootDataContainers">
            <summary>
            Возвращает массив корневых контейнеров, существующих в системе
            </summary>
            <returns>Массив корневых контейнеров, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllDataContainers">
            <summary>
            Возвращает массив всех контейнеров, существующих в системе
            </summary>
            <returns>Массив всех контейнеров, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.RootUserItems">
            <summary>
            Возвращает массив корневых элементов рабочего стола, существующих в системе
            </summary>
            <returns>Массив корневых элементов рабочего стола, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllUserItems">
            <summary>
            Возвращает массив всех элементов рабочего стола, существующих в системе
            </summary>
            <returns>Массив всех элементов рабочего стола, обернутых для скриптинга</returns>
        </member>
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Service.CurrentLanguage" проигнорирован -->
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AvailableLocalizationLanguages">
            <summary>
            Доступ к имеющимся языкам пакетов локализации.
            Используются строки по <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/>: "ru", "en", "fi", и пр.
            </summary>
            <value>Массив кодов языков</value>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ActiveLocalizationPacks">
            <summary>
            Доступ к включенным языкам пакетов локализации (из включенных пакетов локализации)
            Используются строки по <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/>: "ru", "en", "fi", и пр.
            </summary>
            <value>Массив кодов языков</value>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllConfigurationModules">
            <summary>
            Возвращает массив объектов, существующих в системе
            </summary>
            <returns>Массив иконок, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllAutoIncrementedCounters">
            <summary>
            Возвращает массив счетчиков, существующих в системе
            </summary>
            <returns>Массив объектов, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllFileLocalCopies">
            <summary>
            Возвращает массив записей о локальных копиях, относящихся к данной рабочей станции
            </summary>
            <returns>Массив объектов, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllWorkSpaceSchemes">
            <summary>
            Возвращает массив схем раскладки объектов, существующих в системе
            </summary>
            <returns>Массив объектов, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllScriptingTasks">
            <summary>
            Возвращает массив автоматических скриптовых задач, существующих в системе
            </summary>
            <returns>Массив объектов, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.RootConfigurations">
            <summary>
            Возвращает массив конфигураций, существующих в системе
            </summary>
            <returns>Массив корневых конфигураций, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.AllConfigurations">
            <summary>
            Возвращает массив всех конфигураций, существующих в системе
            </summary>
            <returns>Массив всех конфигураций, обернутых для скриптинга</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.KernelState">
            <summary>
            Текущий режим работы ядра ядра
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.RunningOnServer">
            <summary>
            Возвращает true при работе на сервере
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.RunningOnProxyServer">
            <summary>
            Возвращает true при работе на вспомогательном сервере
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.RunningOnClient">
            <summary>
            Возвращает true при работе текущего кода на клиенте
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ModuleEnvironment">
            <summary>
            Возвращает строку с ключами окружения на клиенте (пустая строка на сервере) 
            </summary>
            <remarks>Настройка ModuleEnvironment из клиентского конфиг файла</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MasterServerGuid">
            <summary>
            GUID центрального хранилища
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ProxyServer">
            <summary>
            Возвращает учетную запись текущего прокси сервера, на котором выполняется данный вызов 
            (либо null если текущий процесс не является вспомогательным сервером)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.Product">
            <summary>
            Сведения о продукте
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ProductIcon">
            <summary>
            Возвращает основную иконку приложения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.SaveSet">
            <summary>
            Контекст исполнения скрипта, свой для каждого потока
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.IsInGroupOperation">
            <summary>
            Возвращает true если в данный момент определен хотя бы один контекст группового сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.IsImportOperation">
            <summary>
            Возвращает true при выполнении операции импорта конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.SkipUserRightsCheckForCurrentSaveSet">
            <summary>
            Если true, то текущая операция сохранения выполняется без проверки прав доступа пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.IsInSaveProcessing">
            <summary>
            Возвращает true если имеется текущий объект группового сохранения (SaveSet)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.GroupOperationTime">
            <summary>
            Возвращает время (UTC) групповой операции сохранения (если оно уже установлено)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.FixedGroupOperationTime">
            <summary>
            Время фиксации операции в UTC, затребованное клиентской стороной для проведения слегка "размазанных"
            во времени операций так, чтобы они шли с одной временной меткой.
            Это время может отставать от текущего не более чем на 10 минут.
            Использовать можно на клиенте, взяв за основу серверное время первого сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.IsObjectCacheEnabled">
            <summary>
            Флаг, управляющий кешированием созданных скриптовых оболочек для текущего потока
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ObjectCache">
            <summary>
            Кеш скриптовых оболочек для текущего потока
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.MT">
            <summary>
            Набор методов специфичных для серверного скриптинга
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.InvalidatePersistentObjectName(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Добавляет объект в очередь на обновление хранимого в базе названия ИО и всех вычисляемых атрибутов
            </summary>
            <param name="obj">Объект, который следует обновить</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.MirrorFileBodyTo(ProgramSoyuz.PLM.Scripting.FileDesc,ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Выполняет копирование теля файла на указанное файловое хранилище
            </summary>
            <param name="fileDesc">Описатель файла</param>
            <param name="fileVault">Файловое хранилище</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.InvalidatePersistedName(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Добавляет объект в очередь на обновление хранимого в базе названия объекта
            </summary>
            <param name="obj">Объект, хранимое в базе название которого следует обновить</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.InvalidatePersistedAttributes(ProgramSoyuz.PLM.Scripting.AttributableObject,System.String[])">
            <summary>
            Ставит объект в очередь на обновление хранимых вычисленных атрибутов
            </summary>
            <param name="obj">Объект, чьи атрибуты обновляем</param>
            <param name="nameKeys">Набор ключей вычисляемых хранимых атрибутов, подлежащих обновлению</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.GetPerformanceData">
            <summary>
            Заполняет словарь данными счетчиков производительности сервера
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.GetMetricsReport">
            <summary>
            Заполняет словарь данными счетчиков производительности сервера
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.GetThreadsState">
            <summary>
            Возвращает текущие задачи, выполняемые серврными потоками
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.GetLicensedStations">
            <summary>
            Возвращает множество лицензированных в данный момент рабочих станций
            </summary>
            <returns>Множество ключей рабочих станций</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.GetDatabaseCollation(System.Nullable{System.Boolean})">
            <summary>
            Возвращает способ сопоставления строк в базе данных
            </summary>
            <param name="caseSensitive">null - значение, используемое СУБД по умолчанию, true - чувствительный к регистру вариант,
            false - не чувствительный</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.GetNameKeyId(System.String)">
            <summary>
            Возвращает числовой идентификатор строкового ключа
            </summary>
            <param name="nameKey">Строковый ключ атрибута, для которого нужен идентификатор</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.GetLastIdentity(System.Data.Common.DbTransaction)">
            <summary>
            Возвращает id последней добавленной  текущим коннекшионом записи
            </summary>
            <remarks>Если вызов происходит внутри обработки операции сохранения, то следует передать текущую транзакцию
            к базе, доступную через <see cref="P:ProgramSoyuz.PLM.Scripting.Service.MT.DatabaseTransaction"/></remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.ExecuteReader(System.Data.Common.DbTransaction,ProgramSoyuz.Common.SQLStringBuilder)">
            <summary>
            Выполняет параметризованный запрос к базе
            </summary>
            <param name="transaction">Транзакция в рамках которой будет исполняться команда</param>
            <param name="sql">SQL текст команды и набор параметров</param>
            <returns>Читающий базу объект</returns>
            <remarks>Если вызов происходит внутри обработки операции сохранения, то следует передать текущую транзакцию
            к базе, доступную через <see cref="P:ProgramSoyuz.PLM.Scripting.Service.MT.DatabaseTransaction"/></remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.ExecuteReader(System.Data.Common.DbTransaction,System.String,System.Collections.Generic.IEnumerable{Wintellect.PowerCollections.Pair{System.String,System.Object}})">
            <summary>
            Выполненяет параметризованный запрос к базе
            </summary>
            <param name="transaction">Транзакция в рамках которой будет исполняться команда</param>
            <param name="sql">SQL текст команды</param>
            <param name="parameters">Набор параметров для запроса</param>
            <returns>Читающий базу объект</returns>
            <remarks>Если вызов происходит внутри обработки операции сохранения, то следует передать текущую транзакцию
            к базе, доступную через <see cref="P:ProgramSoyuz.PLM.Scripting.Service.MT.DatabaseTransaction"/></remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.ExecuteUpdateQuery(System.Data.Common.DbTransaction,ProgramSoyuz.Common.SQLStringBuilder)">
            <summary>
            Выполняет параметризованный запрос к базе на обновление
            </summary>
            <param name="transaction">Транзакция в рамках которой будет исполняться команда</param>
            <param name="sql">SQL текст команды и набор параметров</param>
            <returns>Возвращает число измененных записей</returns>
            <remarks>Если вызов происходит внутри обработки операции сохранения, то следует передать текущую транзакцию
            к базе, доступную через <see cref="P:ProgramSoyuz.PLM.Scripting.Service.MT.DatabaseTransaction"/></remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.GetDataSet(System.String,System.String,System.Data.Common.DbDataAdapter@,System.Data.Common.DbTransaction)">
            <summary>
            Возвращает DataSet для добавления или обновления записей
            </summary>
            <param name="name">Имя таблицы в DataSet</param>
            <param name="sql">SQL используемый для формирования DataSet</param>
            <param name="adapter">На выходе адаптер к данным датасета</param>
            <param name="transaction">Транзакция, в рамках которой исполняется команда</param>
            <remarks>Для датасета формируются команды на обновление только если указана непустая транзакция.
            В противном случае датасет предполагается к использованию только для чтения</remarks>
            <returns>DataSet c таблицей: [csName]</returns>
            <remarks>Если вызов происходит внутри обработки операции сохранения, то следует передать текущую транзакцию
            к базе, доступную через <see cref="P:ProgramSoyuz.PLM.Scripting.Service.MT.DatabaseTransaction"/></remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.MT.CreateCommand(System.Data.Common.DbTransaction,System.String)">
            <summary>
            Создает команду для выполнения запроса к базе
            </summary>
            <param name="transaction">Транзакция в рамках которой будет исполняться команда</param>
            <param name="sql">SQL текст команды</param>
            <returns>Вновь созданную команду к базе</returns>
            <remarks>Если вызов происходит внутри обработки операции сохранения, то следует передать текущую транзакцию
            к базе, доступную через <see cref="P:ProgramSoyuz.PLM.Scripting.Service.MT.DatabaseTransaction"/></remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MT.ServiceName">
            <summary>
            Имя Windows сервиса, в котором работает сервер
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MT.DatabaseConnection">
            <summary>
            Возвращает соединение с базой, используемое текущим потоком
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MT.DatabaseTransaction">
            <summary>
            Ссылка на текущую транзакцию, используемую текущим потоком
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MT.DataFactory">
            <summary>
            Возвращает фабрику классов для работы с базой
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MT.BatchModeSupported">
            <summary>
            Возвращает true, если СУБД поддерживает режим группового обновления (BatchMode) 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MT.QueryHintsSupported">
            <summary>
            Возвращает true, если СУБД поддерживает подсказки SQL запроса ( WITH(INDEX(...), NOLOCK) )
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MT.StringCollationSupportedInQuery">
            <summary>
            Возвращает true, если СУБД поддерживает конструкцию COLLATE при сравнении строк
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MT.AliasSupportedInUpdate">
            <summary>
            Возвращает true, если СУБД поддерживает конструкцию UPDATE alias SET... FROM SomeTable AS alias
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MT.IsFullTextSearchSupported">
            <summary>
            Возвращает true если сервис полнотекстового поиска установлен и 
            база поддерживает конструкцию FREETEXT( column, condition )
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MT.IsMARSEnabled">
            <summary>
            Флаг указывает поддерживается ли MARS данным соединением к базе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.MT.AllowUsingExternalStorage">
            <summary>
            Флаг включающий использование внешнего хранения блобов
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.Web">
            <summary>
            Набор методов специфичных для серверного скриптинга
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.Web.DropActiveWebTemplate(System.UInt32)">
            <summary>
            Сбрасывает кеш кода кастомизации указанного активного веб шаблона (по идентификатору ИО-исходника)
            </summary>
            <param name="id">Идентификатор ИО-исходника активного шаблона</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.Web.GetActiveWebTemplate(ProgramSoyuz.PLM.Scripting.InfoObject,System.Object,System.Object[])">
            <summary>
            Возвращает вновь созданный экземпляр активного веб шаблона по ИО-исходнику и параметрам конкретного экземпляра
            </summary>
            <param name="templateIO">ИО-исходник веб шаблона</param>
            <param name="item">Объект по которому формируется содержимое</param>
            <param name="args">Параметры вставки</param>
            <returns>Вновь созданный экземпляр активного веб шаблона</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.Web.GetActiveWebTemplate(ProgramSoyuz.PLM.Scripting.InfoObject,System.Int32,System.Object[],System.Object[])">
            <summary>
            Возвращает вновь созданный экземпляр активного веб шаблона по ИО-исходнику и параметрам конкретного экземпляра
            </summary>
            <param name="templateIO">ИО-исходник веб шаблона</param>
            <param name="index">Индекс объекта в серии</param>
            <param name="items">Набор объектов серии</param>
            <param name="args">Параметры вставки</param>
            <returns>Вновь созданный экземпляр активного веб шаблона</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.Web.CheckActiveWebTemplateCustomization(ProgramSoyuz.PLM.Scripting.InfoObject,System.CodeDom.Compiler.CompilerError[]@,System.Int32@)">
            <summary>
            Проверка компилируемости кода кастомизации активного веб-шаблона
            </summary>
            <param name="templateIO">Исходник веб шаблона</param>
            <param name="errors">на выходе список ошибок и предупреждений</param>
            <param name="lineOffset">На выходе число для коррекции номера строки в CompilerError.Line. Указанное число 
            коррекции следует вычесть из номера строки с ошибкой, чтобы получить номер ошибочной строки в пользовательском коде.</param>
            <returns>true если код компилируется успешно</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.UI">
            <summary>
            Набор методов для вызовов клиентских объектов пользовательского интерфейса.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.AddFileProgressListener(ProgramSoyuz.PLM.Scripting.Service.UI.FileProgressDelegate)">
            <summary>
            Добавляет подписчика на события о ходе файловых операций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.RemoveFileProgressListener(ProgramSoyuz.PLM.Scripting.Service.UI.FileProgressDelegate)">
            <summary>
            Удаляет подписчика на события о ходе файловых операций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.FormatHttpLink(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32)">
            <summary>
            Формирует текст ссылки на указанный атрибут указанного объекта. Тескт ссылки можно использовать в качестве
            значения параметра href в HTML тэге A
            </summary>
            <param name="entity">Тип сущности</param>
            <param name="id">Идентификатор объекта</param>
            <param name="attributeKey">Ключ атрибута объекта</param>
            <returns>Текст ссылки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.FormatLink(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32)">
            <summary>
            Формирует текст ссылки на указанный объект. Тескт ссылки можно использовать в качестве
            значения параметра href в HTML тэге A
            </summary>
            <param name="entity">Тип сущности</param>
            <param name="id">Идентификатор объекта</param>
            <returns>Текст ссылки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.FormatLink(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32,System.Boolean)">
            <summary>
            Формирует текст ссылки на указанный объект. Текст ссылки можно использовать в качестве
            значения параметра href в HTML тэге A
            </summary>
            <param name="entity">Тип сущности</param>
            <param name="id">Идентификатор объекта</param>
            <param name="shortForm">Если true, то ссылка формируется в короткой форме без гуидов</param>
            <returns>Текст ссылки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.FormatLink(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32,System.String)">
            <summary>
            Формирует текст ссылки на указанный атрибут указанного объекта. Тескт ссылки можно использовать в качестве
            значения параметра href в HTML тэге A
            </summary>
            <param name="entity">Тип сущности</param>
            <param name="id">Идентификатор объекта</param>
            <param name="attributeKey">Ключ атрибута объекта</param>
            <returns>Текст ссылки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.FormatLink(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Формирует текст ссылки на указанный объект. Тескт ссылки можно использовать в качестве
            значения параметра href в HTML тэге A
            </summary>
            <param name="obj">Целевой объект</param>
            <returns>Текст ссылки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.FormatLink(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Формирует текст ссылки на указанный объект. Тескт ссылки можно использовать в качестве
            значения параметра href в HTML тэге A
            </summary>
            <param name="obj">Целевой объект</param>
            <param name="shortForm">Если true, то ссылка формируется в короткой форме без гуидов</param>
            <returns>Текст ссылки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.FormatLink(ProgramSoyuz.PLM.Scripting.AttributableObject,System.String)">
            <summary>
            Формирует текст ссылки на указанный атрибут объекта. Тескт ссылки можно использовать в качестве
            значения параметра href в HTML тэге A
            </summary>
            <param name="obj">Целевой объект</param>
            <param name="nameKey">Атрибут целевого объекта</param>
            <returns>Текст ссылки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.GetObjectFromWebLinkEx(System.String)">
            <summary>
            Возвращает объект по внешней ссылке вида: pmsz-plm:server.ru[f80e1583]:port/DataContainer.1234
            </summary>
            <param name="linkText">Текст ссылки для разбора</param>
            <returns>Объект, если таковой существует, либо null</returns>
            <exception cref="T:ProgramSoyuz.PLM.Scripting.HumanFaultException">Выдается если запрошенный сервер отличается от подключенного</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.GetObjectFromLink(System.String)">
            <summary>
            Возвращает объект по внешней ссылке вида: pmsz-plm:server.ru[f80e1583]:port/DataContainer.1234
            </summary>
            <param name="linkText">Текст ссылки для разбора</param>
            <returns>Объект, если таковой существует, либо null</returns>
            <remarks>Возможные исключения гасятся</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.GetObjectFromLinkEx(System.String)">
            <summary>
            Возвращает объект по внешней ссылке вида: pmsz-plm:server.ru[f80e1583]:port/DataContainer.1234
            </summary>
            <param name="linkText">Текст ссылки для разбора</param>
            <returns>Объект, если таковой существует, либо null</returns>
            <exception cref="T:ProgramSoyuz.PLM.Scripting.HumanFaultException">Выдается если запрошенный сервер отличается от подключенного</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.GetObjectFromLink(System.String,System.String@)">
            <summary>
            Возвращает объект по внешней ссылке вида: pmsz-plm:server.ru[f80e1583]:port/DataContainer.1234
            </summary>
            <param name="linkText">Текст ссылки для разбора</param>
            <param name="attribute">На выходе ключ атрибута, извлечённый из текста ссылки</param>
            <returns>Объект, если таковой существует, либо null</returns>
            <remarks>Возможные исключения гасятся</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.IsThisServerLink(System.String)">
            <summary>
            Возвращает true, если ссылка на объект на этом сервере
            </summary>
            <param name="linkText">Текст ссылки</param>
            <returns>True, если ссылка на этот сервер</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.GetObjectFromLinkEx(System.String,System.String@)">
            <summary>
            Возвращает объект по внешней ссылке вида: pmsz-plm:server.ru[f80e1583]:port/DataContainer.1234
            </summary>
            <param name="linkText">Текст ссылки для разбора</param>
            <param name="attribute">На выходе ключ атрибута, извлечённый из текста ссылки</param>
            <returns>Объект, если таковой существует, либо null</returns>
            <exception cref="T:ProgramSoyuz.PLM.Scripting.HumanFaultException">Выдается если запрошенный сервер отличается от подключенного</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ParsePdmLink(System.String,System.String@,System.String@,System.Int32@,System.String@,System.Int32@,System.String@)">
            <summary>
            Разбор ссылки в формате SWRPDM
            </summary>
            <param name="linkText">Текст ссылки</param>
            <param name="userName">На выходе логин пользователя</param>
            <param name="server">Имя сервера</param>
            <param name="port">Порт сервера</param>
            <param name="nameSpace">Пространство имён СУБД</param>
            <param name="objectId">Идентификатор типа объекта</param>
            <param name="id">Идентификатор объекта</param>
            <returns>true если разбор произведён успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ParseLink(System.String,System.String@,System.Int32@,ProgramSoyuz.DataModel.EntityIdentifier@,System.UInt32@,System.String@,System.Nullable{System.Int32}@,System.Guid@)">
            <summary>
            Разбор ссылки в формане PMSZ-PLM
            </summary>
            <param name="linkText">Текст разбираемой ссылки</param>
            <param name="server">На выходе имя PLM сервера</param>
            <param name="port">Номер порта</param>
            <param name="entity">Тип сущности</param>
            <param name="id">Идентификатор объекта</param>
            <param name="attribute">Ключ атрибута</param>
            <param name="serverGuidHash">Хеш глобального идентификатора базы (если есть)</param>
            <param name="objectGuid">Глобальный идентификатор объекта (если есть)</param>
            <returns>true если разбор произведен успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ParseLink(System.String,System.String@,System.Int32@,ProgramSoyuz.DataModel.EntityIdentifier@,System.UInt32@,System.Int32@,System.String@,System.Nullable{System.Int32}@,System.Guid@)">
            <summary>
            Разбор ссылки в формате PMSZ-PLM
            </summary>
            <param name="linkText">Текст разбираемой ссылки</param>
            <param name="server">На выходе имя PLM сервера</param>
            <param name="port">Номер порта</param>
            <param name="entity">Тип сущности</param>
            <param name="id">Идентификатор объекта</param>
            <param name="revisionNumber">Номер ревизии</param>
            <param name="attribute">Ключ атрибута</param>
            <param name="serverGuidHash">Хеш глобального идентификатора базы (если есть)</param>
            <param name="objectGuid">Глобальный идентификатор объекта (если есть)</param>
            <returns>true если разбор произведен успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.OpenInNewTabPage(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Открывает объект в отдельной вкладке
            </summary>
            <param name="obj">Объект PLM</param>
            <param name="startFromRoot">Выбирать объект в новой вкладке в дереве начиная с корня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.OpenPropertiesPane(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Открывает панель св-в объекта в отдельной вкладке
            </summary>
            <param name="obj">Объект PLM</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.GetBrowserSelectedObject">
            <summary>
            Возвращает объект PLM, выбранный в активном дереве проектов
            </summary>
            <returns>Выбранный объект</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectObjectInBrowser(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Выбирает объект в главном дереве клиентского приложения
            </summary>
            <param name="obj">объект, который нужно выделить в дереве/списках</param>
            <returns>Возвращает true, если выбор состоялся</returns>
            <remarks>В случае неоднозначного выбора пути, пользователя спрашивают, в каком контейнере выделить ИО</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectObjectInBrowser(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Выбирает объект по указанному пути в главном дереве клиентского приложения
            </summary>
            <remarks>Путь может быть частичным. Например, контейнер и ссылка на ИО в нем. В этом случае 
            контейнер будет найден по основному пути, и в нем будет выделена ссылка на ИО.
            Дополнительных вопросов пользователю метод не задает. В случае неоднозначности выбирается основной родитель, либо
            первый из видимых по правам доступа.</remarks>
            <param name="path">путь к объекту, который нужно выделить в дереве/списках</param>
            <returns>Возвращает true, если выбор состоялся</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowObjectProperties(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Открывает окно редактора объекта, показывает указанный объект в текущем его состоянии,
            включая измененные атрибуты
            </summary>
            <param name="obj">объект, чьи свойства нужно отобразить</param>
            <param name="readOnly">true - показ в режиме чтения</param>
            <returns>Возвращает true, если произошло сохранение изменений</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowObjectPropertiesModeless(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Открывает окно редактора объекта, показывает указанный объект в текущем его состоянии,
            включая измененные атрибуты
            </summary>
            <param name="obj">объект, чьи свойства нужно отобразить</param>
            <param name="readOnly">true - показ в режиме чтения</param>
            <returns>Возвращает true, если произошло сохранение изменений</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.RenderDiagramImage(ProgramSoyuz.PLM.Scripting.TaskDiagram)">
            <summary>
            Рендеринг диаграммы процесса WF в картинку
            </summary>
            <param name="diagram">Диаграмма для рендеринга</param>
            <returns>Картинка или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowInteractiveDocumentForm(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Создает окно интерактивного печатного документа
            </summary>
            <param name="document">объект, чьи свойства нужно отобразить</param>
            <returns>Созданное окно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowInteractiveDocumentForm(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean)">
            <summary>
            Создает окно интерактивного печатного документа
            </summary>
            <param name="document">объект, чьи свойства нужно отобразить</param>
            <param name="readOnly">true - показ в режиме чтения</param>
            <returns>Созданное окно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowInteractiveDocumentForm(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.DocumentPageDesc[],System.Int32)">
            <summary>
            Создает окно интерактивного печатного документа
            </summary>
            <param name="document">объект документа</param>
            <param name="pages">страницы документа</param>
            <param name="initialPage">Индекс текущей отображаемой страницы (0 - Count-1)</param>
            <returns>Созданное окно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowInteractiveDocumentForm(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.DocumentPageDesc[],System.Int32,System.Boolean)">
            <summary>
            Создает окно интерактивного печатного документа
            </summary>
            <param name="document">объект документа</param>
            <param name="pages">страницы документа</param>
            <param name="initialPage">Индекс текущей отображаемой страницы (0 - Count-1)</param>
            <param name="readOnly">true - показ в режиме чтения</param>
            <returns>Созданное окно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowInteractiveDocumentForm(ProgramSoyuz.PLM.Scripting.ShowInteractiveDocumentParams)">
            <summary>
            Создает окно интерактивного печатного документа
            </summary>
            <param name="showParams">параметры показа</param>
            <returns>Возвращает интерфейс формы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowVirtualTreeEditorFormModeless(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Показывает немодальное окно виртуального дерева информационных объектов. По нажатию кнопки Ok происходит вызов invokeметода "Save"
            у объекта <paramref name="root"/>
            </summary>
            <param name="root">корневой объект дерева</param>
            <returns>Возвращает интерфейс формы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowVirtualTreeEditorFormModeless(ProgramSoyuz.PLM.Scripting.InfoObject,System.Boolean)">
            <summary>
            Показывает немодальное окно виртуального дерева информационных объектов. По нажатию кнопки Ok происходит вызов invokeметода "Save"
            у объекта <paramref name="root"/>
            </summary>
            <param name="root">корневой объект дерева</param>
            <param name="readOnly">Режим показа "только для чтения"</param>
            <returns>Возвращает интерфейс формы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowVirtualTreeEditorFormModeless(ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.PLM.Scripting.InfoObject,System.Boolean)">
            <summary>
            Показывает немодальное окно виртуального дерева информационных объектов. По нажатию кнопки Ok происходит вызов invokeметода "Save"
            у объекта <paramref name="root"/>
            </summary>
            <param name="root">корневой объект дерева</param>
            <param name="selectedItem">Выделенный элемент</param>
            <param name="readOnly">Режим показа "только для чтения"</param>
            <returns>Возвращает интерфейс формы.</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowVirtualTreeEditorForm(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Показывает модальное окно виртуального дерева информационных объектов. По нажатию кнопки Ok происходит вызов invokeметода "Save"
            у объекта <paramref name="root"/>
            </summary>
            <param name="root">корневой объект дерева</param>
            <returns>Возвращает true если пользователь нажал Ok/Сохранить</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowVirtualTreeEditorForm(ProgramSoyuz.PLM.Scripting.InfoObject,System.Boolean)">
            <summary>
            Показывает модальное окно виртуального дерева информационных объектов. По нажатию кнопки Ok происходит вызов invokeметода "Save"
            у объекта <paramref name="root"/>
            </summary>
            <param name="root">корневой объект дерева</param>
            <param name="readOnly">Режим показа "только для чтения"</param>
            <returns>Возвращает true если пользователь нажал Ok/Сохранить</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowVirtualTreeEditorForm(ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.PLM.Scripting.InfoObject,System.Boolean)">
            <summary>
            Показывает модальное окно виртуального дерева информационных объектов. По нажатию кнопки Ok происходит вызов invokeметода "Save"
            у объекта <paramref name="root"/>
            </summary>
            <param name="root">корневой объект дерева</param>
            <param name="selectedItem">Выделенный элемент</param>
            <param name="readOnly">Режим показа "только для чтения"</param>
            <returns>Возвращает true если пользователь нажал Ok/Сохранить</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowVirtualTreeEditorForm(ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.PLM.Scripting.InfoObject,System.Boolean,System.Boolean)">
            <summary>
            Показывает окно виртуального дерева информационных объектов. По нажатию кнопки Ok происходит вызов invokeметода "Save"
            у объекта <paramref name="root"/>
            </summary>
            <param name="root">корневой объект дерева</param>
            <param name="selectedItem">Выделенный элемент</param>
            <param name="readOnly">Режим показа "только для чтения"</param>
            <param name="modal">true если окно должно быть модальным</param>
            <returns>Возвращает интерфейс формы. Для модального режима возвращается форма только если пользователь нажал Ok</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowVirtualTreeEditorForm(ProgramSoyuz.PLM.Scripting.ShowVirtualTreeEditorParams)">
            <summary>
            Показывает окно виртуального дерева информационных объектов. По нажатию кнопки Ok происходит вызов invokeметода "Save"
            у объекта <paramref name="root"/>
            </summary>
            <param name="showParams">параметры показа</param>
            <returns>Возвращает интерфейс формы. Для модального режима возвращается форма только если пользователь нажал Ok</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectUserItem(ProgramSoyuz.PLM.Scripting.SelectUserItemParams)">
            <summary>
            Открывает окно выбора одиночного элемента рабочей среды
            </summary>
            <param name="selectionParams">параметры выбора</param>
            <returns>Возвращает выбранный пользователем элемент рабочей среды или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectTemplate(ProgramSoyuz.PLM.Scripting.SelectTemplateParams)">
            <summary>
            Открывает окно выбора одиночного шаблона
            </summary>
            <param name="selectionParams">параметры выбора</param>
            <returns>Возвращает выбранный пользователем шаблон или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectTemplate(ProgramSoyuz.PLM.Scripting.Template[],ProgramSoyuz.PLM.Scripting.Template,System.Predicate{ProgramSoyuz.PLM.Scripting.Template},System.Predicate{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Открывает окно выбора одиночного шаблона
            </summary>
            <param name="rootTemplates">шаблоны, начиная с которых строить дерево шаблонов</param>
            <param name="selectedTemplate">шаблон, выбранный в дереве по умолчанию</param>
            <param name="filter">фильтр шаблонов</param>
            <param name="validator">Функция, проверяющая пригодность выбранного шаблона</param>
            <returns>Возвращает выбранный пользователем шаблон или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectTemplate(ProgramSoyuz.DataModel.AttributableEntityIdentifier[],ProgramSoyuz.PLM.Scripting.Template,System.Predicate{ProgramSoyuz.PLM.Scripting.Template},System.Predicate{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Открывает окно выбора одиночного шаблона
            </summary>
            <param name="kinds">типы шаблонов, которые включать в дерево шаблонов для выбора</param>
            <param name="selectedTemplate">шаблон, выбранный в дереве по умолчанию</param>
            <param name="filter">фильтр шаблонов</param>
            <param name="validator">Функция, проверяющая пригодность выбранного шаблона</param>
            <returns>Возвращает выбранный пользователем шаблон или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectDataContainer(ProgramSoyuz.PLM.Scripting.SelectDataContainerParams)">
            <summary>
            Открывает окно выбора одиночного контейнера
            </summary>
            <param name="selectionParams">параметры выбора контейнера</param>
            <returns>Возвращает выбранный пользователем контейнер или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectDataContainer(ProgramSoyuz.PLM.Scripting.DataContainer,System.Predicate{ProgramSoyuz.PLM.Scripting.DataContainer})">
            <summary>
            Открывает окно выбора одиночного контейнера
            </summary>
            <param name="defaultContainer">контейнер, выбранный по умолчанию</param>
            <param name="validator">валидатор выбора</param>
            <returns>Возвращает выбранный пользователем контейнер или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectDataContainer(ProgramSoyuz.PLM.Scripting.SelectDataContainerFromListParams)">
            <summary>
            Открывает окно выбора одиночного контейнера из предопреденного списка
            </summary>
            <param name="selectionParams">параметры выбора контейнера</param>
            <returns>Возвращает выбранный пользователем контейнер или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectDataContainer(ProgramSoyuz.PLM.Scripting.DataContainer[])">
            <summary>
            Открывает окно выбора одиночного контейнера из предопреденного списка
            </summary>
            <param name="containerList">список контейнеров из которых выбирать</param>
            <returns>Возвращает выбранный пользователем контейнер или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectDataContainers(ProgramSoyuz.PLM.Scripting.SelectDataContainerFromListParams)">
            <summary>
            Открывает окно выбора одного или нескольких контейнеров из предопреденного списка
            </summary>
            <param name="selectionParams">параметры выбора контейнеров</param>
            <returns>Возвращает выбранные пользователем контейнеры или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectDataContainers(ProgramSoyuz.PLM.Scripting.DataContainer[])">
            <summary>
            Открывает окно выбора одного или нескольких контейнеров из предопреденного списка
            </summary>
            <param name="containerList">список контейнеров из которых выбирать</param>
            <returns>Возвращает выбранные пользователем контейнеры или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectCollaborator(System.Boolean,System.Predicate{ProgramSoyuz.PLM.Scripting.User})">
            <summary>
            Открывает окно выбора одиночного сотрудника или группы сотрудников
            </summary>
            <param name="showEmptyGroups">указывает, показывать ли пустые группы</param>
            <param name="validator">валидатор выбора</param>
            <returns>Возвращает выбранный пользователем сотрудника или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectCollaborators(System.Boolean,System.Predicate{System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.User}})">
            <summary>
            Открывает окно выбора одного или нескольких сотрудников или групп сотрудников
            </summary>
            <param name="showEmptyGroups">указывает, показывать ли пустые группы</param>
            <param name="validator">валидатор выбора</param>
            <returns>Возвращает выбранных пользователем сотрудников или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectUser(ProgramSoyuz.PLM.Scripting.User[])">
            <summary>
            Открывает окно выбора одиночного пользователя или группы из предопреденного списка
            </summary>
            <param name="userList">список пользователей и групп из которых выбирать</param>
            <returns>Возвращает выбранного пользователем пользователя или группу или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectUser(ProgramSoyuz.PLM.Scripting.User[],System.Boolean)">
            <summary>
            Открывает окно выбора одиночного пользователя или группы из предопреденного списка
            </summary>
            <param name="userList">список пользователей и групп из которых выбирать</param>
            <param name="showSearchButton">Если true, то отображает кнопку поиска в диалоге выбора пользователя</param>
            <returns>Возвращает выбранного пользователем пользователя или группу или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectUsers(ProgramSoyuz.PLM.Scripting.User[])">
            <summary>
            Открывает окно выбора одного или нескольких пользователей и/или групп из предопреденного списка
            </summary>
            <param name="userList">список пользователей и групп из которых выбирать</param>
            <returns>Возвращает выбранных пользователем пользователей и/или группы или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectUsers(ProgramSoyuz.PLM.Scripting.User[],System.Boolean)">
            <summary>
            Открывает окно выбора одного или нескольких пользователей и/или групп из предопреденного списка
            </summary>
            <param name="userList">список пользователей и групп из которых выбирать</param>
            <param name="showSearchButton">Если true, то отображает кнопку поиска в диалоге выбора пользователя</param>
            <returns>Возвращает выбранных пользователем пользователей и/или группы или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectInfoObject(ProgramSoyuz.PLM.Scripting.SelectInfoObjectParams)">
            <summary>
            Открывает окно выбора одиночного ИО (клиентский поиск)
            </summary>
            <param name="selectionParams">Настройки поиска ИО</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectInfoObject(ProgramSoyuz.PLM.Scripting.Template,System.Boolean,ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Открывает окно выбора ИО (клиентский поиск)
            </summary>
            <param name="template">шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="defaultContainer">контейнер, в котором осуществлять поиск ИО</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectInfoObject(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора ИО (клиентский поиск)
            </summary>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога поиска ИО.
            Может быть null, что означает поиск во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров, в которых поиск осуществляется 
            сразу при открытии диалога. Может быть null.</param>
            <param name="template">Шаблон искомых ИО</param>
            <param name="includeInheritedTemplates">true, если ИО производных шаблонов тоже подходят</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectInfoObject(System.Boolean,ProgramSoyuz.PLM.Scripting.Template,System.Boolean,ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Открывает окно выбора ИО с указанием использовать ли клиентский или серверный поиск
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="template">шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="defaultContainer">контейнер, в котором осуществлять поиск ИО</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectInfoObject(System.Boolean,ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора ИО с указанием использовать ли клиентский или серверный поиск
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога поиска ИО.
            Может быть null, что означает поиск во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров, в которых поиск осуществляется 
            сразу при открытии диалога. Может быть null.</param>
            <param name="template">Шаблон искомых ИО</param>
            <param name="includeInheritedTemplates">true, если ИО производных шаблонов тоже подходят</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectInfoObject(ProgramSoyuz.PLM.Scripting.InfoObject[])">
            <summary>
            Открывает окно выбора одиночного ИО из предопределенного списка
            </summary>
            <param name="infoObjectList">Список ИО из которого можно выбирать</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.BrowseForInfoObject(ProgramSoyuz.PLM.Scripting.BrowseForInfoObjectParams)">
            <summary>
            Открывает окно выбора одиночного ИО путем выбора из имеющихся в контейнерах с опциональной возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="browseParams">Настройки выбора ИО</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.BrowseForInfoObject(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора одиночного ИО путем выбора из имеющихся в контейнерах с опциональной возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="rootContainers">Список корневых контейнеров, отображаемых в дереве для выбора ИО.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.BrowseForInfoObject(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean,System.Boolean)">
            <summary>
            Открывает окно выбора одиночного ИО путем выбора из имеющихся в контейнерах с опциональной возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="rootContainers">Список корневых контейнеров, отображаемых в дереве для выбора ИО.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="useServerSearch">true если следует использовать серверный поиск (при выходе из браузера в поиск)</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.BrowseForInfoObject(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.InfoObject})">
            <summary>
            Открывает окно выбора одиночного ИО путем выбора из имеющихся в контейнерах с опциональной возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="rootContainers">Список корневых контейнеров, отображаемых в дереве для выбора ИО.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="useServerSearch">true если следует использовать серверный поиск (при выходе из браузера в поиск)</param>
            <param name="converter">Функция для преобразования выбранного в дереве объекта в объект требуемого шаблона.
            Если возвращает null, то объект считается неподходящим для выбора</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectInfoObjects(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора ИО с возможностью выбора нескольких объектов (клиентский поиск)
            </summary>
            <param name="сontainerRange">Список корней веток контейнеров, отображаемых в дереве контейнеров диалога поиска ИО</param>
            <param name="defaultContainersToSearchIn">Список идентификаторов контейнеров, в которых поиск осуществляется сразу при открытии диалога</param>
            <param name="template">Шаблон искомых ИО</param>
            <param name="includeInheritedTemplates">true, если ИО производных шаблонов тоже подходят</param>
            <returns>Возвращает выбранные пользователем объекты ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectInfoObjects(System.Boolean,ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора ИО с возможностью выбора нескольких объектов и 
            с указанием использовать ли клиентский или серверный поиск
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="сontainerRange">Список корней веток контейнеров, отображаемых в дереве контейнеров диалога поиска ИО</param>
            <param name="defaultContainersToSearchIn">Список идентификаторов контейнеров, в которых поиск осуществляется сразу при открытии диалога</param>
            <param name="template">Шаблон искомых ИО</param>
            <param name="includeInheritedTemplates">true, если ИО производных шаблонов тоже подходят</param>
            <returns>Возвращает выбранные пользователем объекты ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectInfoObjects(ProgramSoyuz.PLM.Scripting.InfoObject[])">
            <summary>
            Открывает окно выбора нескольких ИО из предопределенного списка
            </summary>
            <param name="infoObjectList">Список ИО из которого можно выбирать</param>
            <returns>Возвращает выбранные пользователем объекты ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.BrowseForInfoObjects(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора одиночного ИО путем выбора из имеющихся в контейнерах с опциональной возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="rootContainers">Список корневых контейнеров, отображаемых в дереве для выбора ИО.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.BrowseForInfoObjects(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean,System.Boolean)">
            <summary>
            Открывает окно выбора одиночного ИО путем выбора из имеющихся в контейнерах с опциональной возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="rootContainers">Список корневых контейнеров, отображаемых в дереве для выбора ИО.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="useServerSearch">true если следует использовать серверный поиск (при выходе из браузера в поиск)</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.BrowseForInfoObjects(System.String,ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean,System.Boolean)">
            <summary>
            Открывает окно выбора одиночного ИО путем выбора из имеющихся в контейнерах с опциональной возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="title">Заголовок окна для выбора объектов</param>
            <param name="rootContainers">Список корневых контейнеров, отображаемых в дереве для выбора ИО.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="useServerSearch">true если следует использовать серверный поиск (при выходе из браузера в поиск)</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.BrowseForInfoObjects(System.String,ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.InfoObject})">
            <summary>
            Открывает окно выбора одиночного ИО путем выбора из имеющихся в контейнерах с опциональной возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="title">Заголовок окна для выбора объектов</param>
            <param name="rootContainers">Список корневых контейнеров, отображаемых в дереве для выбора ИО.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="useServerSearch">true если следует использовать серверный поиск (при выходе из браузера в поиск)</param>
            <param name="preselectedObjects">Набор объектов для начального формирования списка выбранных</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.BrowseForInfoObjects(System.String,ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.InfoObject},System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.InfoObject})">
            <summary>
            Открывает окно выбора одиночного ИО путем выбора из имеющихся в контейнерах с опциональной возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="title">Заголовок окна для выбора объектов</param>
            <param name="rootContainers">Список корневых контейнеров, отображаемых в дереве для выбора ИО.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="useServerSearch">true если следует использовать серверный поиск (при выходе из браузера в поиск)</param>
            <param name="preselectedObjects">Набор объектов для начального формирования списка выбранных</param>
            <param name="converter">Функция для преобразования выбранного в дереве объекта в объект требуемого шаблона.
            Если возвращает null, то объект считается неподходящим для выбора</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectTask(ProgramSoyuz.PLM.Scripting.Template,System.Boolean,ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Открывает окно выбора одиночного рабочего процесса (клиентский поиск)
            </summary>
            <param name="template">шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <param name="defaultContainer">контейнер, в котором осуществлять поиск</param>
            <returns>Возвращает выбранный пользователем рабочий процесс или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectTask(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора одиночного рабочего процесса (клиентский поиск)
            </summary>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров,
            поиск в которых должен быть включен по умолчанию. Может быть null.</param>
            <param name="template">Шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <returns>Возвращает выбранный пользователем рабочий процесс или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectTask(System.Boolean,ProgramSoyuz.PLM.Scripting.Template,System.Boolean,ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Открывает окно выбора одиночного рабочего процесса с указанием использования клиентского или серверного поиска
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="template">шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <param name="defaultContainer">контейнер, в котором осуществлять поиск</param>
            <returns>Возвращает выбранный пользователем рабочий процесс или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectTask(System.Boolean,ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора одиночного рабочего процесса с возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров,
            поиск в которых должен быть включен по умолчанию. Может быть null.</param>
            <param name="template">Шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <returns>Возвращает выбранный пользователем рабочий процесс или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectTask(ProgramSoyuz.PLM.Scripting.Task[])">
            <summary>
            Открывает окно выбора одиночного рабочего процесса из предопределенного списка
            </summary>
            <param name="taskList">Список рабочих процессов из которого можно выбирать</param>
            <returns>Возвращает выбранный пользователем рабочий процесс или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectTasks(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора рабочего процесса с возможностью выбора нескольких объектов (клиентский поиск)
            </summary>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров,
            поиск в которых должен быть включен по умолчанию. Может быть null.</param>
            <param name="template">Шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <returns>Возвращает выбранные пользователем рабочие процессы или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectTasks(System.Boolean,ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора рабочего процесса с возможностью выбора нескольких объектов и с указанием 
            использования клиентского или серверного поиска
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров,
            поиск в которых должен быть включен по умолчанию. Может быть null.</param>
            <param name="template">Шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <returns>Возвращает выбранные пользователем рабочие процессы или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SelectTasks(ProgramSoyuz.PLM.Scripting.Task[])">
            <summary>
            Открывает окно выбора нескольких рабочих процессов из предопределенного списка
            </summary>
            <param name="taskList">Список ИО из которого можно выбирать</param>
            <returns>Возвращает выбранные пользователем рабочие процессы или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.RefreshObject(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Обновляет представление объекта в клиентском UI
            </summary>
            <param name="obj">Объект, представление в UI которого следует обновить</param>
            <remarks>Серверная версия ставит объект в очередь на обновление хранимого названия и всех хранимых вычисляемых атрибутов</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.RefreshObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Обновляет представление объекта в клиентском UI
            </summary>
            <param name="obj">Объект, представление в UI которого следует обновить</param>
            <param name="sortChildren">Если true, то осуществляется пересортировка дочерних элементов (в дереве клиентского приложения)</param>
            <remarks>Серверная версия ставит объект в очередь на обновление хранимого названия и всех хранимых вычисляемых атрибутов</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.IsEditing(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Проверяет, редактируется ли указанный объект в данный момент в UI. 
            По сути проверяется наличие установленной в данный момент автоматической блокировки
            </summary>
            <param name="obj">Проверяемый объект</param>
            <returns>true если объект в данный момент редактируется пользователем в UI</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowMessage(System.String)">
            <summary>
            Отображение окошка с сообщением (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowMessage(System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            Отображение окошка с сообщением (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <param name="buttons">Набор кнопок</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowMessage(System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Отображение окошка с сообщением (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <param name="buttons">Набор кнопок</param>
            <param name="icon">Иконка</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowMessage(System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)">
            <summary>
            Отображение окошка с сообщением (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <param name="buttons">Набор кнопок</param>
            <param name="icon">Иконка</param>
            <param name="defaultButton">Кнопка по умолчанию</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowMessage(System.String,System.String)">
            <summary>
            Отображение окошка с сообщением и кнопкой "Подробнее" (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <param name="details">Текст доступный по кнопке Подробнее</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowMessage(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Отображение окошка с сообщением и кнопкой "Подробнее" (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <param name="details">Текст доступный по кнопке Подробнее</param>
            <param name="buttons">Набор кнопок</param>
            <param name="icon">Иконка</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowMessage(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)">
            <summary>
            Отображение окошка с сообщением и кнопкой "Подробнее" (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <param name="details">Текст доступный по кнопке Подробнее</param>
            <param name="buttons">Набор кнопок</param>
            <param name="icon">Иконка</param>
            <param name="defaultButton">Кнопка по умолчанию</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowMessage(System.String,System.Exception)">
            <summary>
            Отображение окошка с сообщением и кнопкой "Подробнее" (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <param name="exception">Исключение, описание которого доступно по кнопке Подробнее</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowMessage(System.String,System.Exception,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Отображение окошка с сообщением и кнопкой "Подробнее" (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <param name="exception">Исключение, описание которого доступно по кнопке Подробнее</param>
            <param name="buttons">Набор кнопок</param>
            <param name="icon">Иконка</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ShowMessage(System.String,System.Exception,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)">
            <summary>
            Отображение окошка с сообщением и кнопкой "Подробнее" (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <param name="exception">Исключение, описание которого доступно по кнопке Подробнее</param>
            <param name="buttons">Набор кнопок</param>
            <param name="icon">Иконка</param>
            <param name="defaultButton">Кнопка по умолчанию</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.UI._imageListManager">
            <summary>
            Менеджеру иконок приложения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.SetMainWindowStatus(System.String)">
            <summary>
            Установка текста в строку статуса основного окна приложения.
            </summary>
            <remarks>Текст может быть перекрыт через секунду по Idle событию, либо отправкой сетевого пакета, либо файловой операцией</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.Search(ProgramSoyuz.DataModel.EntityIdentifier,System.String,System.Boolean)">
            <summary>
            Открывает закладку с поисковым запросом
            </summary>
            <param name="entity">тип сущности искомого объекта</param>
            <param name="query">сериализованный в XML запрос</param>
            <param name="autoRun">запускать ли сразу после открытия запрос на выполнение?</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.Search(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Открывает закладку с поисковым запросом
            </summary>
            <param name="queryObject">ИО типа "поисковый запрос" (InfoObjects\BASIC\StoredQuery)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.ChangePassword">
            <summary>
            Показ окна смены своего пароля
            </summary>
            <returns>true, если пользователь выполнил операцию смены пароля; false, если закрыл окно, отменив операцию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.IsOptionalAppInstalled(System.String,System.Boolean,System.Boolean@)">
            <summary>
            Проверяет есть ли указанная папка внутри инсталляция\Configuration\Optional
            </summary>
            <param name="folderName">Имя проверяемой папки</param>
            <param name="checkIntegrity">True если требуется проверить идентичность инсталляции по сравнению с серверной версией</param>
            <param name="availableToDownload">На выходе true, если указанная папка есть на сервере доступная к скачиванию</param>
            <returns>true если есть</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.UI.InstallOptionalApp(System.String,ProgramSoyuz.PLM.Scripting.Service.UI.InstallOptionalAppProgressDelegate)">
            <summary>
            Скачивает с сервера указанную папку внутри инсталляция\Configuration\Optional
            </summary>
            <param name="folderName">Имя запрошенной папки опционального приложения</param>
            <param name="progressCallback">Функция для уведомления о прогрессе операции</param>
            <returns>true если успешно, false, если нет приложения на сервере, или не запущен сервис автообновления</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.UI.PlmLinkProtocol">
            <summary>
            Имя протокола используемого для внешних ссылок на объекты PLM
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.UI.PdmLinkProtocol">
            <summary>
            Имя протокола, используемого в SWRPDM
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.UI.CustomCommandPrefix">
            <summary>
            Префикс для гиперссылок, использующих обработчики в скриптах кастомизации (для атрибутов "форматированный текст")
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.UI.MainWindow">
            <summary>
            Доступ к основному окну приложения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.UI.ImageListManager">
            <summary>
            Доступ к менеджеру иконок приложения
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.UI.FileProgressDelegate">
            <summary>
            Делегат события о прогрессе в файловой операции
            </summary>
            <param name="file">Описатель обрабатываемого в данный момент файла</param>
            <param name="operation">Тип файловой операции</param>
            <param name="bytesProceeded">Суммарное количество обработанных байтов</param>
            <param name="totalSize">Суммарный размер обрабатываемых файлов</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.UI.InstallOptionalAppProgressDelegate">
            <summary>
            Делегат для функции прогресса операции по установке опционального приложения
            </summary>
            <param name="file">Описатель обрабатываемого в данный момент файла</param>
            <param name="bytesProceeded">Суммарное количество обработанных байтов</param>
            <param name="totalSize">Суммарный размер обрабатываемых файлов</param>
            <returns>false если требует остановить установку, true - можно продолжать дальше</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionEnvironment">
            <summary>
            Окружение, в котором работает скрипт в текущем потоке
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionEnvironment.Root">
            <summary>
            Пустой контекст по умолчанию для случаев когда он не определен явно
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionEnvironment._current">
            <summary>
            Стек контекстов исполнения скрипта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionEnvironment.ObjectsInsideTemplatesGetter">
            <summary>
            Множество объектов, для которых в данный момент исполняется геттер OtherTemplates.
            Используется для предотвращения переполнения стека
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionEnvironment._userRightsCache">
            <summary>
            Кеш вычисленных прав доступа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionEnvironment._userRightsCacheVersionCounter">
            <summary>
            Счетчик версии кеша вычисленных прав доступа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionEnvironment._userRightsCacheEnabled">
            <summary>
            Флаг, разрешающий использовать кеш прав доступа
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionEnvironment.DropUserRightsCache(System.Int32,System.Boolean)">
            <summary>
            Сбрасывает кеш вычисленных прав доступа
            </summary>
            <param name="userRightsCacheVersionCounter">Текущая версия состояния прав доступа для отслеживания устаревания кеша вычисленных прав доступа</param>
            <param name="force">Если true, то сброс кеша происходит в любом случае</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionEnvironment.Current">
            <summary>
            Стек контекстов исполнения скрипта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionEnvironment.UserRightsCache">
            <summary>
            Кеш вычисленных прав доступа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionEnvironment.UserRightsCacheEnabled">
            <summary>
            Флаг, разрешающий использовать кеш прав доступа
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext">
            <summary>
            Контекст выполнения скрипта. Применяется в серверном скриптинге для определения возможных рамок скриптовых операций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.Enter(ProgramSoyuz.PLM.Scripting.User,System.String,System.Boolean)">
            <summary>
            Создает автоматический объект входа в скриптовой контекст (серверное скриптовое использование).
            Попутно если указано создает контекст локализации для указанного языка
            </summary>
            <param name="user">Текущая пользователь, от имени которого выполняется скрипт (может быть null)</param>
            <param name="language">Текущая локализация, применяемая внутри контекста, либо null для использования серверного умолчания</param>
            <param name="readonlyMode">Если true, то внутри контекста не разрешены операции изменения (используются оригинальные скриптовые оболочки объектов)</param>
            <remarks>Метод предполагается к использованию внутри конструкции using()</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.Enter(ProgramSoyuz.Connectivity.SessionBase,ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.OperationKindFlags)">
            <summary>
            Создает автоматический объект входа в скриптовой контекст (серверное внутреннее использование).
            Попутно автоматически создает контекст локализации по текущуему языку клиентской сессии
            </summary>
            <param name="currentSession">Текущая сессия, в рамках операций которой, выполняется скрипт (может быть null)</param>
            <param name="optionsMask">Набор опций установленных для этого контекста</param>
            <remarks>Метод предполагается к использованию внутри конструкции using()</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.Enter(ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext)">
            <summary>
            Делает указанный контекст текущим, складывая его в стек (клиентский вариант)
            </summary>
            <param name="context">Контекст, который следует положить на вершину стека</param>
            <remarks>Метод предполагается к использованию внутри конструкции using()</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.Enter(ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.OperationKindFlags)">
            <summary>
            Создает автоматический объект входа в скриптовой контекст (клиентское внутреннее использование)
            </summary>
            <param name="optionsMask">Набор опций установленных для этого контекста</param>
            <remarks>Метод предполагается к использованию внутри конструкции using()</remarks>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext._baseContext">
            <summary>
            Предыдущий контекст в стеке
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.m_CurrentSession">
            <summary>
            Текущая сессия, в рамках операций которой выполняется скрипт (может быть null)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.m_CurrentUser">
            <summary>
            Текущий пользователь, от имени которого выполняется серверный скрипт (может быть null) (на клиенте не используется)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.m_OptionsMask">
            <summary>
            Набор битов установленных для этого контекста
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext._CurrentUIObjectOwner">
            <summary>
            Ссылка на объект UI, соответствующий данному контексту
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.#ctor(ProgramSoyuz.PLM.Scripting.Service.IUIObjectOwner)">
            <summary>
            Конструктор для клиентского контекста
            </summary>
            <param name="currentUiObjectOwner">Ссылка на объект UI, соответствующий данному контексту</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.#ctor(ProgramSoyuz.Connectivity.SessionBase,ProgramSoyuz.DataModel.UserBase,ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.OperationKindFlags)">
            <summary>
            Конструктор для серверного контекста
            </summary>
            <param name="currentSession">Текущая сессия, в рамках операций которой, выполняется скрипт (может быть null)</param>
            <param name="user">Текущий пользователь, от лица которого выполняются операции</param>
            <param name="optionsMask">Набор опций установленных для этого контекста</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.IsOption(ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.OperationKindFlags)">
            <summary>
            Возвращает true, если все указанные биты установлены в опциях
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.BaseContext">
            <summary>
            Предыдущий контекст в стеке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.CurrentUiObjectOwner">
            <summary>
            Ссылка на объект UI, соответствующий данному контексту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.Session">
            <summary>
            Текущая сессия, в рамках операций которой выполняется скрипт (может быть null)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.User">
            <summary>
            Текущий пользователь, от лица которого выполняются операции (может быть null)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.CurrentSession">
            <summary>
            Текущая сессия, в рамках операций которой выполняется скрипт (может быть null)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.CurrentUser">
            <summary>
            Текущий пользователь, от лица которого выполняется скрипт (может быть null) (на клиенте, не используется)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.OptionsMask">
            <summary>
            Набор битов установленных для этого контекста, включая флаги унаследованные от перекрытых контекстов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.AllChain">
            <summary>
            Перечисляет всю цепочку контекстов от себя к предшественникам
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.OperationKindFlags">
            <summary>
            Набор флагов контекста исполнения скрипта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.OperationKindFlags.ExclusiveLock">
            <summary>
            Скрипт исполняется внутри эксклюзивной блокировки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.OperationKindFlags.InsideTransaction">
            <summary>
            Скрипт исполняется внутри транзакции базы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.OperationKindFlags.ReadonlyMode">
            <summary>
            Скрипт исполняется в режиме "только чтение". Никакие изменения данных не разрешены.
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.AutoContext">
            <summary>
            Вспомогательный объект для автоматической установки-снятия контекста выполнения скрипта.
            Объект следует использовать с командой <code>using</code>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.AutoContext._context">
            <summary>
            В целях отладки запоминаем установленный контекст. При снятии на вершине стека должен быть именно этот объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.AutoContext._baseContext">
            <summary>
            Запоминаем текущий контекст.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.AutoContext._boundLocalizationContext">
            <summary>
            Контекст локализации, автоматически создаваемый для серверных контекстов исполнения скрипта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.AutoContext.#ctor(ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext,ProgramSoyuz.DataModel.LocalizationContext.AutoContext)">
            <summary>
            Конструктор
            </summary>
            <param name="context">Вновь устанавливаемый контекст</param>
            <param name="boundLocalizationContext">Контекст локализации, автоматически создаваемый для серверных контекстов исполнения скрипта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.AutoContext.Dispose">
            <summary>
            Освобождение запомненных блокировок
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.AutoContext.ReleaseContext">
            <summary>
            Освобождение запомненных блокировок
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptExecutionContext.AutoContext.Finalize">
            <summary>
            Попадание в финализатор означает некорректное использование этого объекта.
            В финализаторе уже ничего сделать нельзя, так как список блокировок уже вероятно разрушен,
            и финализатор работает в другом потоке
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.IUIObjectOwner">
            <summary>
            Интерфейс для доступа к текущему владельцу скриптового объекта в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.IUIObjectOwner.ScriptingObject">
            <summary>
            Скриптовой объект, отображаемый или редактируемый данным UI компонентом
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet">
            <summary>
            Окружение, в котором работает скрипт в текущем потоке
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.m_Flags">
            <summary>
            Флаги для параметризации операции сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.Clear">
            <summary>
            Сбрасывает содержимое набора для сохранения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.m_utcOperationTime">
            <summary>
            Время фиксации операции в UTC
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet._fixedOperationTime">
            <summary>
            Время фиксации операции в UTC, затребованное клиентской стороной для проведения слегка "размазанных"
            во времени операций так, чтобы они шли с одной временной меткой.
            Это время может отставать от текущего не более чем на 10 минут
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet._fixedTimeValidnessTimeout">
            <summary>
            Промежуток времени в котором можно сдвигать время серверных операций. 
            Иными словами максимальная длительность "размазанных" во времени клиентских операций, 
            помечаемых единой временной меткой
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.SetOperationTime">
            <summary>
            Устанавливает текущее время в качестве времени выполнения операции сохранения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.NewlyAddedObjects">
            <summary>
            Список вновь созданных в рамках транзакции объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.EditedObjects">
            <summary>
            Список измененных и удаленных в рамках транзакции скриптовых объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.FileDescs">
            <summary>
            Список файловых дескрипторов, участвующих в операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet._childrenCacheForNewObjects">
            <summary>
            Список добавляемых ИО по их родительскому объекту
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.GetChildrenAmongNew(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Перечисляет новые объекты, имеющиеся в сейвсете дочерние к данному объекту
            </summary>
            <param name="parent">Целевой объект, дочерние к которому интересуют</param>
            <returns>Перечисление дочерних объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.DropFromCacheForNewObjects(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Удаление объекта из кеша родителей для вновь создаваемых объектов в сейвсете
            </summary>
            <param name="changedObject">Новый объект, удаляемый из сейвсета</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.UpdateCacheForNewObjects(ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Обновление кеша родителей для вновь создаваемых объектов в сейвсете
            </summary>
            <param name="changedObject">Новый объект, у которого меняется родитель</param>
            <param name="oldParent">Старое родительский объект</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet._userBindingsCacheForNewObjects">
            <summary>
            Список добавляемых привязок прав доступа по их родительскому объекту
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.GetBindingsAmongNew(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Перечисляет новые привязки, имеющиеся в сейвсете по данному объекту
            </summary>
            <param name="target">Целевой объект, привязки к которому интересуют</param>
            <returns>Перечисление привязок, либо Empty</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.UpdateCacheForNewObjects(ProgramSoyuz.PLM.Scripting.UserBinding,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Обновление кеша родителей для вновь создаваемых объектов в сейвсете
            </summary>
            <param name="changedObject">Новый объект, у которого меняется родитель</param>
            <param name="oldParent">Старое родительский объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.DropFromCacheForNewObjects(ProgramSoyuz.PLM.Scripting.UserBinding)">
            <summary>
            Удаление объекта из кеша родителей для вновь создаваемых объектов в сейвсете
            </summary>
            <param name="changedObject">Новый объект, удаляемый из сейвсета</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.m_Errors">
            <summary>
            Список объектов, сохранить которые не удалось, и соответствующих исключений
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.OnObjectFailed(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject,System.Exception)">
            <summary>
            Добавляет объект в список тех, кто не прошел ту или иную проверку
            </summary>
            <param name="o">Объект, сохранение которого в данной операции не получилось</param>
            <param name="e">Исключение с подробностями проблемы</param>
            <returns>true, если эксепшион следует пропустить дальше</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.PurgeUnchangedObjects">
            <summary>
            Сбрасывает из набора объекты, не требующие сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.PrepareToSave">
            <summary>
            Подготавливает объекты к сохранению
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ValidationQueue">
            <summary>
            Очередь объектов на валидацию
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.TriggerQueue">
            <summary>
            Очередь объектов на вызов триггера OnBeforeSave
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.CommitQueue">
            <summary>
            Очередь объектов на вызов триггера OnBeforeCommit
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.EraseQueue">
            <summary>
            Очередь объектов на вызов триггеров
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsToRecompile">
            <summary>
            Список объектов, у которых изменился код кастомизации.
            Их нужно перекомпилировать
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsToRecheckCustomization">
            <summary>
            Список объектов, у которых мог косвенно измениться код кастомизации.
            Например, при появлении модификаторов, некоторые обработчики шаблонов могут оказаться перекрытыми.
            В этом списке накапливаются такие объекты
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ConfigurationModulesChanged">
            <summary>
            Список модулей, состояние которых могло измениться в ходе сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.#ctor">
            <summary>
            Просто конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.#ctor(ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.OperationFlags)">
            <summary>
            Конструктор с указанием настроек операции сохранения
            </summary>
            <param name="flags">Настройки операции сохранения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.#ctor(Scripting.Commands.CmdScriptingSaveOperationBase)">
            <summary>
            Инициализирует набор по команде пришедшей с клиента
            </summary>
            <param name="cmd">Команда группового сохранения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.AddObject(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Добавляет объект к сохраняемому набору
            </summary>
            <param name="obj">объект, добавляемый к набору</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.RemoveObject(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Удаляет объект из набора для сохранения
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.Add(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Добавляет объект к сохраняемому набору
            </summary>
            <param name="obj">объект, добавляемый к набору</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.Add(ProgramSoyuz.PLM.Scripting.FileDesc)">
            <summary>
            Добавляет объект к сохраняемому набору
            </summary>
            <param name="obj">объект, добавляемый к набору</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.AddErasedObject(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Добавляет удаленный объект к набору сохранения
            </summary>
            <param name="obj">удаляемый объект, добавляемый к набору</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.Clone">
            <summary>
            Создает полную независимую копию набора для сохранения через сериализацию/десериализацию
            </summary>
            <returns>Копию сохраняемого набора</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.InitForClientSavePreProcessing">
            <summary>
            Подготовка объекта к клиентской валидации объектов перед отправкой на сервер
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.InitForSaveProcessing">
            <summary>
            Подготовка обекта к серверному групповому сохранению
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet._propertyBag">
            <summary>
            Словарь для хранения свойств на время выполнения операции сохранения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet._saveResult">
            <summary>
            Результат операции сохранения, передаваемый обратно к месту вызова, если установлен в триггерах операции сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.Flags">
            <summary>
            Флаги для параметризации операции сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.IsImportOperation">
            <summary>
            Возвращает true при выполнении операции импорта конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.IsIgnoreErrors">
            <summary>
            Возвращает true если сохранение пытается сохранить все, что возможно
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.IsSkipTriggers">
            <summary>
            Возвращает true если сохранение выполняется в служебном режиме без вызова пользовательских триггеров
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.IsSkipUserRightsCheck">
            <summary>
            Если true, то сохранение выполняется без проверки прав доступа пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.FixedOperationTime">
            <summary>
            Время фиксации операции в UTC, затребованное клиентской стороной для проведения слегка "размазанных"
            во времени операций так, чтобы они шли с одной временной меткой.
            Это время может отставать от текущего не более чем на 10 минут
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.OperationTime">
            <summary>
            Время фиксации операции в UTC
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.IsInSaveProcessing">
            <summary>
            Возвращает true, если в данный момент происходит обработка операции Save.
            Используется для блокировки повторного входа в обработчик сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ChangedObjects">
            <summary>
            Перечислитель измененных объектов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ErasedObjects">
            <summary>
            Перечислитель удаленных объектов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ChildrenCacheForNewObjects">
            <summary>
            Список объектов, сохранить которые не удалось, и соответствующих исключений
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.UserBindingsCacheForNewObjects">
            <summary>
            Список объектов, сохранить которые не удалось, и соответствующих исключений
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.HasChanges">
            <summary>
            Возвращает true если в наборе для сохранения что-нибудь есть
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.Errors">
            <summary>
            Список объектов, сохранить которые не удалось, и соответствующих исключений
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.HasErrors">
            <summary>
            Возвращает true если в наборе для сохранения есть объекты, сохранить которые не удалось
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.PropertyBag">
            <summary>
            Словарь для хранения свойств на время выполнения операции сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.SaveResult">
            <summary>
            Результат операции сохранения, передаваемый обратно к месту вызова, если установлен в триггерах операции сохранения
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.OperationFlags">
            <summary>
            Набор флагов для параметризации операции сохранения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.OperationFlags.ImportOperation">
            <summary>
            Флаг ставится при выполнении операции импорта конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.OperationFlags.IgnoreErrors">
            <summary>
            Если true, то сохранение пытается сохранить все, что возможно (не реализовано)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.OperationFlags.SkipTriggers">
            <summary>
            Если true, то сохранение выполняется в служебном режиме без вызова пользовательских триггеров
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.OperationFlags.SkipUserRightsCheck">
            <summary>
            Если true, то сохранение выполняется без проверки прав доступа пользователя
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection">
            <summary>
            Коллекция (только что созданных) объектов сгруппированная по сущности.
            Объекты хранятся во множествах со сравнением по хешу
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.m_NewlyAddedObjects">
            <summary>
            Набор множеств вновь созданных в рамках транзакции объектов кучками по типу сущности
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.ToArray">
            <summary>
            Преобразование коллекции в массив
            </summary>
            <returns>Возвращает вновь созданный массив с объектами</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.CountEntity(ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Возвращает число объектов указанного типа
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.System#Collections#Generic#ICollection{ProgramSoyuz#PLM#Scripting#ScriptingBaseObject}#Add(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
             Добавление объекта в коллекцию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.Clear">
            <summary>
            Сброс всего содержимого коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.Contains(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Возвращает true, если указанный объект уже есть в коллекциb
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.CopyTo(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject[],System.Int32)">
            <summary>
            Копирует содержимое коллекции в указанный массив по указанному смещению
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.Add(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Добавление элемента в коллекцию
            </summary>
            <returns>true если объект уже и так был в коллекции</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.Remove(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Удаление элемента из коллекции
            </summary>
            <returns>true если объект был в коллекции</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.Item(ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Возвращает перечислитель объектов указанной сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.Entities">
            <summary>
            Возвращает перечислитель всех типов сущности объектов в коллекции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.Values">
            <summary>
            Возвращает перечислитель всех объектов коллекции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.Count">
            <summary>
            Возвращает число объектов в коллекции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet.ObjectsByEntityCollection.IsReadOnly">
            <summary>
            Возвращает true если коллекция доступна только для чтения
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.AutoGroupOperation">
            <summary>
            Вспомогательный объект для автоматической установки-снятия контекста группового сохранения.
            Объект следует использовать с командой <code>using</code>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.AutoGroupOperation.m_SaveSet">
            <summary>
            В целях отладки запоминаем установленный контекст. При снятии на вершине стека должен быть именно этот объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.AutoGroupOperation.#ctor(ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet)">
            <summary>
            Конструктор блокировки с указанием сравнивающего объекта
            для установки блокировок в однозначно определенном порядке
            </summary>
            <param name="saveSet">Вновь устанавливаемый контекст</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.AutoGroupOperation.Dispose">
            <summary>
            Освобождение контекста сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.AutoGroupOperation.ReleaseContext">
            <summary>
            Освобождение запомненных блокировок
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Service.AutoCaching">
            <summary>
            Вспомогательный объект для автоматического включения-выключения кеширования скриптовых оболочек.
            Объект следует использовать с командой <code>using</code>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Service.AutoCaching._clearOnExit">
            <summary>
            Флаг, указывающий, что следует сбросить кеш по выходу из блока using
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.AutoCaching.#ctor(System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="clearOnExit">true если следует сбросить кеш по выходу из блока using</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Service.AutoCaching.Dispose">
            <summary>
            Освобождение контекста сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertyPanel.Item(System.String)">
            <summary>
            Доступ к контролам-редакторам атрибутов по их ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <returns>Контрол-редактор запрошенного атрибута</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertyPanel.PageDef">
            <summary>
            Определение закладки, по которой создана эта страница карточки объекта.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertyPanel.PropertySheet">
            <summary>
            Ссылка на форму
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IPropertyEditor">
            <summary>
            Вспомогательный класс редактора св-ва
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertyEditor.AttributeDef">
            <summary>
            Определение атрибута, по которому создан этот контрол.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertyEditor.PropertyPanel">
            <summary>
            Ссылка на панель св-в
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IStartupTestTask">
            <summary>
            Интерфейс для запуска тестовых скриптовых автоматических задач
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IStartupTestTask.Invoke">
            <summary>
            Запуск задачи на выполнение
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IScriptingTaskBase">
            <summary>
            Базовый интерфейс автоматической скриптовой задачи 
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingTaskBase.IsValid">
            <summary>
            Возвращает true, если данная задача может работать в текущем окружении
            </summary>
            <returns>true если задача может работать</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingTaskBase.Invoke">
            <summary>
            Запуск задачи на выполнение
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingTaskBase.Invoke(ProgramSoyuz.PLM.Scripting.UserSession,System.Object)">
            <summary>
            Вызов метода, реализованного скриптовой функцией
            </summary>
            <param name="session">Пользовательская сессия, инициировавшая вызов 
            (может быть null, если вызов инициировал серверный скрипт без указания сессии)</param>
            <param name="inputParams">Сериализуемые входные данные для метода</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IScriptingTask">
            <summary>
            Интерфейс автоматической скриптовой задачи, реализуемой модулем 
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingTask.GetImageKey(ProgramSoyuz.PLM.Scripting.IImageListManager)">
            <summary>
            Иконка задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingTask.NameKey">
            <summary>
            Ключ, идентифицирующий задачу
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingTask.NameUI">
            <summary>
            Название задачи для пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingTask.Notes">
            <summary>
            Описание скриптовой задачи
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IObjectWithParentContainer">
            <summary>
            Интерфейс для объектов, "находящихся" в контейнере (ИО, Рабочие процессы)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IObjectWithParentContainer.Container">
            <summary>
            Возвращает ссылку на основной родительский контейнер, которому принадлежит этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IObjectWithParentContainer.Containers">
            <summary>
            Перечисляет основной (идет в перечислении первым) и дополнительные родительские контейнеры
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IObjectWithStatistics">
            <summary>
            Интерфейс используется для получения информации об изменениях объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectWithStatistics.GetUser(ProgramSoyuz.DataModel.StatisticsActionInfoEnum)">
            <summary>
            Возвращает пользователя, выполнившего указанное действие
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectWithStatistics.GetDate(ProgramSoyuz.DataModel.StatisticsActionInfoEnum)">
            <summary>
            Возвращает дату выполнения указанного действия
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IObjectWithStatistics.DateCreated">
            <summary>
            Дата/время создания объекта в UTC
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IObjectWithStatistics.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IObjectWithStatistics.DateModified">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
            <remarks>Внутри происходит преобразование в UTC и обратно </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IObjectWithStatistics.ModifiedByUser">
            <summary>
            Пользователь, изменивший этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IObjectWithStatistics.SupportedActions">
            <summary>
            Возвращает маску поддерживаемых элементов статистики вида [дата]/[кем выполнено]
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingSubObject">
            <summary>
            Базовый класс для сущностей PLM системы, используемых в скриптинге
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingSubObject.#ctor">
            <summary>
            Конструктор по умолчанию для создания новых объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingSubObject.#ctor(System.UInt32)">
            <summary>
            Конструктор для объектов-оболочек над объектами из базы
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IStubbableConfigurationObject">
            <summary>
            Интерфейс для объектов конфигурации, обладающих глобальным идентификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IStubbableConfigurationObject.IsStub">
            <summary>
            Возвращает true если объект является заглушкой для обновления при последующем импорте.
            </summary>
            <remarks>
            В пользовательском интерфейсе такой объект показывается только при необходимости.
            Фактически он не используется.
            Объект "оживает" при импорте пакета, содержащем полную версию объекта
            </remarks>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IObjectWithOtherTemplates">
            <summary>
            Интерфейс для объектов с доп классами
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ValidReferencesEnum">
            <summary>
            Перечисление ссылочных полей 
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.BindingsCache">
            <summary>
            Класс для временного кеширования информации о привязках.
            Кеширование производится на время вычисления прав доступа на группу объектов
            </summary>
            <remarks>Кеш используется для хранения наследуемых привязок</remarks>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.BindingsCache._userData">
            <summary>
            Набор данных по разным пользователяv
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BindingsCache.GetFamilyTree(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Возвращает семейное дерево родительских групп пользователя
            </summary>
            <param name="user">Пользователь, информация о котором кеширована в этом объекте</param>
            <returns>Семейное дерево родительских групп по поколеybzv</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BindingsCache.GetOwnedBindingsByTargetUser(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Формирует индекс собственных и унаследованных привязок пользователя по целевой учетке
            </summary>
            <param name="user">Пользователь, информация о котором кеширована в этом объекте</param>
            <returns>Кешированный или сформированный индекс</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.BindingsCache.UserData">
            <summary>
            Набор кешированных данных для данной учетки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.BindingsCache.UserData._user">
            <summary>
            Пользователь, чьи данные собраны в этом классе
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.BindingsCache.UserData.FamilyTree">
            <summary>
            семейное дерево родительских групп пользователя
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BindingsCache.UserData.#ctor(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BindingsCache.UserData.GetBindingsByTargetUser(ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Индекс собственных и унаследованных привязок пользователя по целевой учетке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BindingsCache.UserData.User">
            <summary>
            Пользователь, чьи данные собраны в этом классе
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ExternalLink">
            <summary>
            Запись о ссылке на внешний относительно пакета объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalLink.IdentityName">
            <summary>
            Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalLink.FriendlyIdentityName">
            <summary>
            Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalLink.ObjectIdentifier">
            <summary>
            Возвращает полный идентификатор объекта (тип сущности, id)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalLink.ProgramSoyuz#DataModel#IConfigurationObjectBase#GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalLink.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ConfigurationPackData">
            <summary>
            Сохраняемые данные пакета конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationPackData.additionalObjectData">
            <summary>
            Расширение формата пакета. Сюда попадают вновь добавленные типы объектов, которые отсутствуют в предыдущих версиях.
            В пакет они попадают в виде массива байтов. Читающий код их просто пропустит
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationPackData.EffectiveImportFlags">
            <summary>
            Возвращает действительные флаги импорта данных, с учетом версии прочитанных данных
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationPackData.VersionEnum.ImportFlags">
            <summary>
            Поддержка опций импорта-экспорта <see cref="F:ProgramSoyuz.PLM.Scripting.ConfigurationPackData.VersionEnum.ImportFlags"/>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationPackData.VersionEnum.SyncSupportForIOs">
            <summary>
            Поддержка синхронизации по детям для пакетов с атрибутируемыми объектами (ИО и контейнеры)/>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationPackData.VersionEnum.TemplateParentLinks">
            <summary>
            Добавлен тип объектов "ссылка на доп. родительский шаблон"
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ConfigurationPackData.Binder">
            <summary>
            Класс заменяет имена клиентских классов модели данных в скриптовые.
            Необходим для десериализации пакетов созданных в более ранних версиях
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache">
            <summary>
            Вспомогательный класс для процесса импорта пакета конфигурации.
            Осуществляет поиск объекта при распознавании ссылки.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache.FindObject(ProgramSoyuz.DataModel.EntityIdentifier,System.Guid,ProgramSoyuz.PLM.Scripting.ScriptingObject@)">
            <summary>
            Ищет объект по идентификатору. Сначала в обновленных объектах, потом в существующих.
            При его отсутствии добавляет запись в список пропущенных ссылок
            </summary>
            <param name="entity">Тип сущности</param>
            <param name="id">Глобальный идентификатор</param>
            <param name="foundObject">На выходе искомый объект</param>
            <returns>true если значение найдено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache.FindObject(ProgramSoyuz.DataModel.EntityIdentifier,System.Guid)">
            <summary>
            Ищет объект по идентификатору. Сначала в обновленных объектах, потом в существующих.
            При его отсутствии добавляет запись в список пропущенных ссылок
            </summary>
            <param name="entity">Тип сущности</param>
            <param name="id">Глобальный идентификатор</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache.FindObject(ProgramSoyuz.DataModel.AttributableObjectLink,ProgramSoyuz.PLM.Scripting.ScriptingObject@)">
            <summary>
            Ищет объект по идентификатору. Сначала в обновленных объектах, потом в существующих.
            При его отсутствии добавляет запись в список пропущенных ссылок
            </summary>
            <param name="link">Ссылка на объект</param>
            <param name="foundObject">На выходе искомый объект</param>
            <returns>true если значение найдено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache.FindObject(ProgramSoyuz.DataModel.ConfigurationObjectLink,ProgramSoyuz.PLM.Scripting.ScriptingObject@)">
            <summary>
            Ищет объект по идентификатору. Сначала в обновленных объектах, потом в существующих.
            При его отсутствии добавляет запись в список пропущенных ссылок
            </summary>
            <param name="link">Ссылка на объект</param>
            <param name="foundObject">На выходе искомый объект</param>
            <returns>true если значение найдено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache.GetLinkData(ProgramSoyuz.DataModel.EntityIdentifier,System.Guid)">
            <summary>
            Ищет указанный объект в списке внешних ссылок
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UniquenessSpace">
            <summary>
            Пространтсво уникальности.
            Используется для определения пространства, в котором поддерживается уникальность значений.
            В определении атрибута может быть указано, что его значения должны быть уникальны в данном пространстве
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UniquenessSpace.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UniquenessSpace.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreateWrapper(ProgramSoyuz.DataModel.UniquenessSpaceBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="uniquenessSpace">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.#ctor(ProgramSoyuz.DataModel.UniquenessSpaceBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="uniquenessSpace">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.#ctor(ProgramSoyuz.DataModel.UniquenessSpaceBase.UniquenessSpaceKindEnum,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="spaceKind">Тело пространства уникальности</param>
            <param name="nameKey">Программное название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.#ctor(ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.#ctor(ProgramSoyuz.PLM.Scripting.ExternalLink)">
            <summary>
            Конструктор новой заглушки объекта для сохранения в PLM
            </summary>
            <param name="data">Набор данных для создания объекта заглушки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.GetNameUILocalized(System.String)">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CheckValue``1(``0,System.String,System.Object,``0@)">
            <summary>
            Проверяет значение атрибута на возможность внести его в пространство уникальности
            </summary>
            <typeparam name="T">Атрибутируемый объект</typeparam>
            <param name="obj">Объект, чье значение проверяем</param>
            <param name="nameKey">Ключ проверяемого атрибута</param>
            <param name="value">Проверяемое значение</param>
            <param name="conflictingObject">В случае конфликта уникальности объект, использующий то же уникальное значение. Может быть null</param>
            <returns>true если значение может быть добавлено в пространство уникальности; false, если произойдет конфликт</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CheckValue(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.PLM.Scripting.AttributableObject@)">
            <summary>
            Проверяет значение атрибута на возможность внести его в пространство уникальности
            </summary>
            <param name="attribute">Атрибут, чье текущее значение проверяем</param>
            <param name="conflictingObject">В случае конфликта уникальности объект, использующий то же уникальное значение. Может быть null</param>
            <returns>true если значение может быть добавлено в пространство уникальности; false, если произойдет конфликт</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.ProgramSoyuz#DataModel#IObjectWithEndSystemSettings#HasChangesInConfigurations">
            <summary>
            Возвращает true, если изменения затрагивают конфигурацию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.NameKey">
            <summary>
            Программное название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.NameUILocalized">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.NameUI">
            <summary>
            Пользовательское название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.Notes">
            <summary>
            Пользовательские заметки об иконке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.IsStub">
            <summary>
            Возвращает true если объект является заглушкой для обновления при последующем импорте.
            </summary>
            <remarks>
            В пользовательском интерфейсе такой объект показывается только при необходимости.
            Фактически он не используется.
            Объект "оживает" при импорте пакета, содержащем полную версию объекта
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.TargetSystemPropsMask">
            <summary>
            Битовые флаги, определяющие свойства объекта, относящиеся к конечной системе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.SpaceKind">
            <summary>
            Тип пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.IsAddWithAttributeKey">
            <summary>
            Возвращает true если при формировании ключа уникальности используется ключ атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.IsDenySaveOnUniquenessViolation">
            <summary>
            Возвращает true если установлен запрет сохранения при нарушении уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.IsAllowDuplicatedEmptyValues">
            <summary>
            Возвращает true если установлен запрет сохранения при нарушении уникальности
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreationData.SpaceKind">
            <summary>
            размерность пространства уникальности 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreationData.TargetSystemPropsMask">
            <summary>
            Битовые флаги определяющие свойства объекта, относящиеся к конечной системе
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreationData.WriteTo(ProgramSoyuz.DataModel.UniquenessSpaceBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UniquenessSpace.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter">
            <summary>
            Автоматический счетчик.
            Используется для генерации последовательных номеров-идентификаторов.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreateWrapper(ProgramSoyuz.DataModel.AutoIncrementedCounterBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="counter">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.#ctor(ProgramSoyuz.DataModel.AutoIncrementedCounterBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="AutoIncrementedCounter">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.#ctor(System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="nameKey">Программное название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.#ctor(System.String,System.Boolean)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="nameKey">Программное название объекта</param>
            <param name="bRollbackMode">true если нужен счетчик с поддержкой режима "отката"</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.#ctor(ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.GetNextValue(System.String)">
            <summary>
            Возвращает очередное значение счетчика по заданному ключу
            </summary>
            <param name="selectorKey">Ключ конкретного экземпляра счетчика среди подчиненных данному мастер-счетчику</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.GetCurrentValue(System.String)">
            <summary>
            Возвращает очередное значение счетчика по заданному ключу
            </summary>
            <param name="selectorKey">Ключ конкретного экземпляра счетчика среди подчиненных данному мастер-счетчику</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.ResetValue(System.String)">
            <summary>
            Переустанавливает значение счетчика
            </summary>
            <param name="selectorKey">Ключ конкретного экземпляра счетчика среди подчиненных данному мастер-счетчику</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.ResetValue(System.String,System.Int32)">
            <summary>
            Переустанавливает значение счетчика
            </summary>
            <param name="selectorKey">Ключ конкретного экземпляра счетчика среди подчиненных данному мастер-счетчику</param>
            <param name="newValue">Новое значение счетчика</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter._MasterWrapper">
            <summary>
            Кешированная оболочка для мастер-счетчика
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.GetSubCounter(System.String)">
            <summary>
            Возвращает подчиненный счетчик по заданному ключу (если есть)
            </summary>
            <param name="selectorKey">Ключ конкретного экземпляра счетчика среди подчиненных данному мастер-счетчику</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.NextValue">
            <summary>
            Возвращает очередное значение счетчика
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CurrentValue">
            <summary>
            Возвращает текущее значение счетчика
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.NameKey">
            <summary>
            Программное название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.NameUI">
            <summary>
            Пользовательское название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.Notes">
            <summary>
            Пользовательские заметки об иконке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.ResetInterval">
            <summary>
            Интервал автоматического сброса счетчика
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.IsRollbackMode">
            <summary>
            Возвращает true для счетчиков в режиме отката инкремента вместе с откатом транзакции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.DateModified">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.ModifiedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.DateFixed">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.FixedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.IsSubCounter">
            <summary>
            Возвращает true для вложенных счетчиков
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.MasterCounter">
            <summary>
            Идентификатор мастера для этого счетчика
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.SelectorKey">
            <summary>
            Ключ подчиненного счетчика
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.SubCounters">
            <summary>
              Возвращает перечислитель дочерних (по прямой ветке наследования) конфигураций.
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData.ResetInterval">
            <summary>
            Интервал автоматического сброса счетчика
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData.m_Master">
            <summary>
            Мастер счетчик
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData.SelectorKey">
            <summary>
            Ключ подчиненного счетчика
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData.WriteTo(ProgramSoyuz.DataModel.AutoIncrementedCounterBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AutoIncrementedCounter.CreationData.Master">
            <summary>
            Мастер счетчик
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper">
            <summary>
            Набор вспомогательных функции для работы с атрибутаvb
            </summary>
            <summary>
            Набор вспомогательных функций для обслуживания DataObjects
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetString(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде строки. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или пустая строка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetInteger(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде целого числа. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или 0</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetBoolean(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде целого числа. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или false</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetDouble(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде вещественного числа. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или 0.0</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetFloat(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде вещественного числа. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или 0.0</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetDate(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде даты/времени. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или DateTime.MinValue</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetDateOrNull(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде даты/времени. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или DateTime.MinValue</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetTimeSpan(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде объекта TimeSpan. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или TimeSpan.Zero</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetTimeSpanOrNull(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде объекта TimeSpan. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или DateTime.MinValue</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetFile(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде файла. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetNamedValue(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде именованного значения. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetUserSignature(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде подписи пользователя. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetCollectionElements(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде перебора элементов коллекции. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetAttributableItems(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде массива атрибутируемых элементов. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetCompositeElement(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде элемента коллекции (значение составного атрибута)
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetCollectionElement(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде элемента коллекции. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetInfoObject(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде ИО. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetInfoObjects(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде массива ИО. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetDataContainer(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде контейнера. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetDataContainers(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде массива контейнеров. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetUser(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде учетки. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetUsers(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде массива учёток. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetTask(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде обекта Task. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetTasks(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде массива объектов Task. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetWorkItem(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде объекта WorkItem. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetWorkItems(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде массива объектов WorkItem. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetObjects(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде массива. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetStrings(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String)">
            <summary>
            Возвращает значение атрибута в виде массива строк. 
            </summary>
            <param name="obj">Объект, чей атрибут запрашивается</param>
            <param name="nameKey">Ключ атрибута или псевдо xPath выражение</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.SortBy``2(System.Collections.Generic.IEnumerable{``0},``1,System.String[])">
            <summary>
            Упорядочивание последовательности атрибутируемых объектов по лямбда выражению в строком виде, которое возвращает строковый ключ сортировки
            </summary>
            <typeparam name="T">Тип элемента последовательность</typeparam>
            <typeparam name="TKey">Тип ключа сортировки. Строковые выражения должны возвращать значения именно этого типа</typeparam>
            <param name="source">Исходная последовательность</param>
            <param name="keySample">Пример значения ключа сортировки, используется только его тип: "", 0, 0.0</param>
            <param name="expressions">Выражения вида "o=>o["NameKey"]" либо xPath выражения для получения атрибута объекта</param>
            <returns>Упорядоченная последовательность</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.SortByDescending``2(System.Collections.Generic.IEnumerable{``0},``1,System.String[])">
            <summary>
            Упорядочивание последовательности атрибутируемых объектов по лямбда выражению в строком виде, которое возвращает строковый ключ сортировки
            </summary>
            <typeparam name="T">Тип элемента последовательность</typeparam>
            <typeparam name="TKey">Тип ключа сортировки. Строковые выражения должны возвращать значения именно этого типа</typeparam>
            <param name="source">Исходная последовательность</param>
            <param name="keySample">Пример значения ключа сортировки, используется только его тип: "", 0, 0.0</param>
            <param name="expressions">Выражения вида "o=>o["NameKey"]" либо xPath выражения для получения атрибута объекта</param>
            <returns>Упорядоченная последовательность</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.SumBy(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.IAttributableObject},System.String)">
            <summary>
            Вычисляет сумму по указанному выражению для каждого элемента последовательности
            </summary>
            <param name="source">Исходная последовательность</param>
            <param name="expression">Выражения вида "o=>o["NameKey"]" либо xPath выражения для получения атрибута объекта.
            Выражение должно возвращать значение типа double</param>
            <returns>Упорядоченная последовательность</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.ResolveAttribute``1(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum@,ProgramSoyuz.PLM.Scripting.AttributeDef@)">
            <summary>
            Парсит последовательность ключей и системных атрибутов. 
            На выходе либо атрибут, либо значение системного атрибута, либо null.
            В случае найденного атрибута выходные параметры содержат его тип и определение, если есть
            </summary>
            <typeparam name="T">Тип запрошенного значения</typeparam>
            <param name="obj">Объект, дл которого вычисляем атрибут</param>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3</param>
            <param name="type">На выходе тип атрибута (если пришли к атрибуту)</param>
            <param name="def">На выходе определение атриубута, если найдено</param>
            <returns>Если найден атрибут, его и возвращает, если найден системный атрибут - его значени, иначе null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.DoGetAttributeType``1(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.String,ProgramSoyuz.PLM.Scripting.AttributeDef@)">
            <summary>
            Вычисляет тип атрибута для доступа к его значению. В первую очередь ищет определение атрибута
            с указанным ключом, если не находит то пытается угадать тип из запрошенного типа значения
            </summary>
            <typeparam name="T">Запрошенный тип значения</typeparam>
            <param name="obj"></param>
            <param name="nameKey">Ключ атрибута</param>
            <param name="def"></param>
            <returns>Тип запрошенного атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.SplitXPathExpression(System.String)">
            <summary>
            Разбивает XPath выражение на элементы по точкам с контролем кавычек и парных скобок () и []
            </summary>
            <param name="text">Исходное выражение</param>
            <returns>Массив элементов выражения</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper._interpreter">
            <summary>
            Интерпретатор внедрённых выражений
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.Parse(System.String,DynamicExpresso.Parameter[])">
            <summary>
            Parse a text expression and returns a Lambda class that can be used to invoke it.
            </summary>
            <param name="expressionText">Expression statement</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.Parse(System.String,System.Type,DynamicExpresso.Parameter[])">
            <summary>
            Parse a text expression and returns a Lambda class that can be used to invoke it.
            If the expression cannot be converted to the type specified in the expressionType parameter
            an exception is throw.
            </summary>
            <param name="expressionText">Expression statement</param>
            <param name="expressionType">The expected return type. Use void or object type if there isn't an expected return type.</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.Parse``1(System.String,System.String[])">
            <summary>
            Parse a text expression and convert it into a delegate.
            </summary>
            <typeparam name="TDelegate">Delegate to use</typeparam>
            <param name="expressionText">Expression statement</param>
            <param name="parametersNames">Names of the parameters. If not specified the parameters names defined inside the delegate are used.</param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.Eval(System.String,DynamicExpresso.Parameter[])">
            <summary>
            Parse and invoke the specified expression.
            </summary>
            <param name="expressionText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.Eval``1(System.String,DynamicExpresso.Parameter[])">
            <summary>
            Parse and invoke the specified expression.
            </summary>
            <param name="expressionText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.Eval(System.String,System.Type,DynamicExpresso.Parameter[])">
            <summary>
            Parse and invoke the specified expression.
            </summary>
            <param name="expressionText"></param>
            <param name="expressionType">The return type of the expression. Use void or object if you don't know the expected return type.</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.Ids``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Преобразует последовательность объектов в последовательность идентификаторов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.SkipInacessible``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Пропускает недоступные заглушки (объекты, не доступные по правам доступа)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.ToEditable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Преобразует последовательность объектов в последовательность редактируемых объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.BuildLocationInfo(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Char,System.Boolean)">
            <summary>
            Формирует путь к объекту, в котором размещен <paramref name="obj"/>
            </summary>
            <param name="obj">Объект, размещение которого интересует</param>
            <param name="ch">Разделитель</param>
            <param name="showAsNonModified">true если следует использовать немодифицированные названия</param>
            <returns>Строка пути</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetReplacementItem(ProgramSoyuz.PLM.Scripting.RegistryItem)">
            <summary>
            Возвращает заместителя, если есть, либо себя
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.GetReplacementItem``1(``0)">
            <summary>
            Возвращает заместителя, если есть, либо себя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingObjectHelper.Interpreter">
            <summary>
            Интерпретатор внедрённых выражений
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagramNode">
            <summary>
            Этап на диаграмме шаблона задачи
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributableObject">
            <summary>
            Базовый класс для атрибутируемых сущностей, происходящих из базы данных
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IAttributableObject">
            <summary>
            Интерфейс для атрибутируемых по шаблону объектов и элементов коллекции
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.INotifyPropertyBeforeChange">
            <summary>
            Интерфейс для подписки на событие о готовящемся изменении атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObject.GetAttribute(System.String)">
            <summary>
            Возвращает существующий, вычисленный или новый атрибут по указанному ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObject.GetAttribute(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObject.GetAttribute(ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="attributeDef">Определение атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObject.GetValue``1(System.String)">
            <summary>
            Возвращает значение атрибута указанного типа. 
            При отсутствии такового возвращается значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3.</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObject.GetValue``1(System.String,``0)">
            <summary>
            Возвращает значение атрибута указанного типа. 
            При отсутствии такового возвращается указанное значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3.</param>
            <param name="defaultValue">Значение, возвращаемое в случае отсутствия атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObject.TryGetValue``1(System.String,``0@)">
            <summary>
            Извлекает значение атрибута указанного типа. 
            Возвращает true если все получилось
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3.</param>
            <param name="result">Значение атрибута</param>
            <returns>true, если есть непустое значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObject.ValidateAttributes">
            <summary>
            Проверяет все шаблонные атрибуты объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObject.GetAttributeDef(System.String)">
            <summary>
            Возвращает определение атрибута по ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObject.IsEmpty(System.String)">
            <summary>
            Возвращает true если указанный атрибут пустой
            </summary>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3.</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObject.GetFriendlyName(System.Boolean)">
            <summary>
            Возвращает строковое представление объекта для пользователя
            </summary>
            <param name="doNotUseUIData">true означает, что метод должен вернуть что-нибудь без обращения к UIData
            Флаг используется при вызове изнутри GetUIData</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAttributableObject.Attributes">
            <summary>
            Возвращает перечислитель собственных атрибутов, существующих в базе.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAttributableObject.Item(System.String)">
            <summary>
            Возвращает значение атрибута по указанному ключу.
            Сеттер позволяет задавать значения атрибутам
            </summary>
            <param name="nameKey">Для геттера путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3.
            Для сеттера непосредственный ключ изменяемого атрибута данного объекта</param>
            <returns>Конечное значение атрибута</returns>
            <remarks>
            Если определение атрибута имеется, то возвращаемое значение для значимых типов и строк будет значением по умолчанию этого типа.
            В том числе и для пустых атрибутов.
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAttributableObject.Item(System.String,System.Object)">
            <summary>
            Возвращает значение атрибута по указанному ключу.
            </summary>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3.</param>
            <param name="defaultValue">Значение по умолчанию, возвращаемое, если найденный атрибут или значение пустое</param>
            <returns>Конечное значение атрибута</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAttributableObject.Template">
            <summary>
            Доступ к шаблону объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAttributableObject.Templates">
            <summary>
            Перечисляет все шаблоны объекта, начиная с основного.
            Шаблоны перечисляются те, что реально сохранены у объекта (без учета текущих изменений)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAttributableObject.ChangedAttributes">
            <summary>
            Возвращает перечислитель измененных атрибутов для данной скриптовой оболочки
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.WhereUsed">
            <summary>
            Возвращает массив объектов, у которых есть ссылки на данный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.WhereUsed(ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Возвращает массив объектов, у которых есть ссылки на данный объект
            </summary>
            <param name="entityToSearch">Если указано, то поиск осуществляется среди объектов этой сущности</param>
            <returns>Массив найденных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Сериализация объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.#ctor">
            <summary>
            КОнструктор по умолчанию для создания новых объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.#ctor(System.UInt32)">
            <summary>
            Конструктор для объектов-оболочек над объектами из базы
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributableObject._changesCounter">
            <summary>
            Счетчик изменений объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributableObject.m_aAttributeWrappers">
            <summary>
            Список оболочек-атрибутов, созданных этим объектом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.DropHistory">
            <summary>
            Сбрасывает ссылки на устаревшие значения атрибутов и элементы коллекций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.DropDelayedLoadAttributes">
            <summary>
            Сбрасывает оболочки списковых атрибутов, подлежащих отложенной загрузке
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAttributeById(System.UInt32)">
            <summary>
            Возвращает существующий атрибут по идентификатору
            </summary>
            <param name="id">Идентификатор атрибута</param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetWrapperFor(ProgramSoyuz.DataModel.AttributeBase,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Находит ранее выданную или создает новую оболочку для существующего атрибута
            </summary>
            <param name="pAttribute">Реальный атрибут</param>
            <param name="attributeDef">Определение атрибута (если известно на момент создания объекта)</param>
            <returns>Найденную или вновь созданную оболочку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetWrapperFor(ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Находит ранее выданную или создает новую оболочку для атрибута с запрошенным ключом и типом
            </summary>
            <param name="attributeDef">Определение атрибута</param>
            <returns>Найденную или вновь созданную оболочку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetWrapperFor(ProgramSoyuz.PLM.Scripting.AttributeDef,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Находит ранее выданную или создает новую оболочку для атрибута с запрошенным ключом и типом
            </summary>
            <param name="attributeDef">Определение атрибута (если известно на момент создания объекта)</param>
            <param name="nameKey">Ключ атрибута</param>
            <param name="eType">Тип данных атрибута</param>
            <returns>Найденную или вновь созданную оболочку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.FindWrapperFor(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Находит ранее выданную оболочку для атрибута с запрошенным ключом и типом
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <param name="eType">Тип данных атрибута</param>
            <returns>Найденную оболочку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.FindOrCreateAttributeWrapper(ProgramSoyuz.PLM.Scripting.AttributeDef,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Находит или создает оболочку для указанноого атрибута
            </summary>
            <param name="def">Определение атрибута если есть</param>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
            <returns>Найденную оболочку</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributableObject.m_aChangedAttributes">
            <summary>
            Текущий список добавленных, измененных или удаленных атрибутов объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetChangedAttributes">
            <summary>
            Текущий список добавленных, измененных или удаленных атрибутов объекта (автоматически вычисленные атрибуты в результат не попадают)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.CloneChangedAttributesFrom(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Копирует измененные значения из <paramref name="source"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.ApplyChangedAttributesFrom(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Применяет измененные значения из <paramref name="source"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetDifferencesReport(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.RtfFormatter)">
            <summary>
            Формирует подробный отчет о различии между двумя объектами одного типа
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.IncludeInDifferencesReport(System.String)">
            <summary>
            Возвращает true если свойство следует включить в отчет об изменениях
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.RefreshCalculatedAttributesOnChange">
            <summary>
            Ставит флаг перевычисления при очередном запросе значения атрибута для
            вычисляемых атрибутов с соответствующими правилами перевычисления
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.OnChildModified(ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Boolean,System.Boolean)">
            <summary>
            Вызывается ребенком в случае изменения кого-либо из его дочерних сущностей
            </summary>
            <param name="attribute">Дочерний атрибут</param>
            <param name="sendNotifications">Если true, то производится рассылка уведомление NotifyPropertyChanged с обновлением UI</param>
            <param name="isAuxilaryChange">Изменение порождено вспомогательным атрибутом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.OnChildCancelled(ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Boolean)">
            <summary>
            Вызывается ребенком в случае отмены его изменения или создания
            </summary>
            <param name="attribute">Дочерний атрибут</param>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.EraseAttribute(ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Добавляет запись об удалении существующего атрибута
            </summary>
            <param name="attribute">Удаляемый существующий атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.OnModified">
            <summary>
            Вызывается при изменении этого объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.CheckIntegrity">
            <summary>
            Проверяет логическую целостность этого объекта и исправляет что возможно
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.CheckIntegrity(System.Boolean,System.Boolean)">
            <summary>
            Проверяет логическую целостность этого объекта и исправляет что возможно
            </summary>
            <param name="fixIfPossible">true если следует попытаться исправить проблему</param>
            <param name="wait">true, если следует выполнить проверку синхронно, false если проверка ставится в 
            очередь на фоновую обработку</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.BuildPrintingPageContents(ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor,ProgramSoyuz.PLM.Scripting.DisplayElementsList)">
            <summary>
            Формирование содержимого страницы интерактивного печатного документа
            </summary>
            <param name="editor">Интерфейс доступа к редактору документа</param>
            <param name="elements">Формируемый набор элементов содержимого страницы печатного документа</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.Draw(System.Drawing.Graphics,ProgramSoyuz.PLM.Scripting.IDrawingContext)">
            <summary>
            Отрисовка объекта на поле интерактивного печатного документа
            </summary>
            <param name="g">Контекст устройства вывода</param>
            <param name="context">Контекст отображения объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.HitTest(ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor,System.Drawing.PointF)">
            <summary>
            Отрисовка объекта на поле интерактивного печатного документа
            </summary>
            <param name="editor">Интерфейс доступа к редактору документа</param>
            <param name="point">Точка в системе координат страницы (мм, вправо-вниз)</param>
            <returns>true если точка попала в объект, false - не попала</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.CalcOtherTemplates(ProgramSoyuz.PLM.Scripting.Template,Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Перечисляет доп шаблоны по текущему состоянию скриптовых оболочек
            </summary>
            <param name="mainTemplate">Шаблон объекта</param>
            <param name="templatesReturned">Множество уже найденных шаблонов</param>
            <returns>Перечислитель</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.TranslateChangesInOtherTemplates(System.Collections.Generic.SortedList{ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.Template}@,Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.Template}@)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для преобразования изменений
            в атрибутах ссылках на шаблоны-классы в подходящие списки
            </summary>
            <param name="otherTemplatesToAdd">Дополнительные шаблоны для добавления. Пары [class, template]</param>
            <param name="otherTemplatesToRemove">Дополнительные шаблоны-классы для удаления</param>
            <returns>true если есть изменения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAttributeDef(System.String)">
            <summary>
            Возвращает определение атрибута по ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetUICommand(System.String)">
            <summary>
            Возвращает определение UI команды по ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetObjectEvent(System.String)">
            <summary>
            Возвращает определение объектоного события по ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAttributeDefsForUI(ProgramSoyuz.PLM.Scripting.PageDef,System.Boolean,System.String[])">
            <summary>
            Возвращает массив действующих для данного объекта определений атрибутов с учетом дополнительных шаблонов-классов
            и примененных модификаторов
            </summary>
            <remarks>На основе именно этого набора определений атрибутов формируется карточка объекта</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetPageDefsForUI(System.Boolean,System.String[])">
            <summary>
            Возвращает массив действующих для данного объекта определений закладок с учетом дополнительных шаблонов-классов
            и примененных модификаторов
            </summary>
            <remarks>На основе именно этого набора определений закладок формируется карточка объекта</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.InvokeUICommand(System.String)">
            <summary>
            Вызов UI команды, определенной в шаблоне этого объекта
            </summary>
            <param name="nameKey">Ключ UI команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.HasChangedFileDescs(System.Boolean)">
            <summary>
            Рекусрсивное извлечение всех сохраняемых файловых дескрипторов среди атрибутов указанного типа
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAttribute(System.String)">
            <summary>
            Возвращает существующий, вычисленный или новый атрибут по указанному ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAttribute(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAttribute(ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="def">Определение атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAttribute(ProgramSoyuz.PLM.Scripting.AttributeDef,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="def">Определение атрибута (если оно уже известно)</param>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributableObject._ProxyCalculationDepth">
            <summary>
            Счетчик вложенных вычислений прокси атрибутов на случай потенциального зацикливания
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAttribute(ProgramSoyuz.PLM.Scripting.AttributeDef,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum,System.Boolean)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="def">Определение атрибута (если оно уже известно)</param>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
            <param name="doNotResolve">Если true, то линкованный атрибут трактуется как обычный</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.IsValueEqual(System.String,System.Object)">
            <summary>
            Возвращает true, если переданное значение совпадает с текущим значением атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.ProgramSoyuz#PLM#Scripting#IAttributableObject#GetAttribute(System.String)">
            <summary>
            Возвращает существующий, вычисленный или новый атрибут по указанному ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.ProgramSoyuz#PLM#Scripting#IAttributableObject#GetAttribute(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.ProgramSoyuz#PLM#Scripting#IAttributableObject#GetAttribute(ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="attributeDef">Определение атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.IsEmpty(System.String)">
            <summary>
            Возвращает true если указанный атрибут пустой
            </summary>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetValue``1(System.String)">
            <summary>
            Возвращает значение атрибута указанного типа. 
            При отсутствии такового возвращается значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3</param>
            <returns>Значение атрибута. Если атрибут пустой, а T - обнуляемый тип, то возвращается null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetValue``1(System.String,``0)">
            <summary>
            Возвращает значение атрибута указанного типа. 
            При отсутствии такового возвращается указанное значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3</param>
            <param name="defaultValue">Значение, возвращаемое в случае отсутствия атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.TryGetValue``1(System.String,``0@)">
            <summary>
            Извлекает значение атрибута указанного типа. 
            Возвращает true если все получилось
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3</param>
            <param name="result">Значение атрибута</param>
            <returns>true, если есть непустое значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetValueAt``1(System.String,System.Int32)">
            <summary>
            Возвращает значение атрибута указанного типа в указанной ревизии. 
            При отсутствии такового возвращается значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Ключ атрибута</param>
            <param name="revision">Номер ревизии, для которой возвращается значение атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetValueAt``1(System.String,System.Int32,``0)">
            <summary>
            Возвращает значение атрибута указанного типа в указанной ревизии. 
            При отсутствии такового возвращается указанное значение требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Ключ атрибута</param>
            <param name="revision">Номер ревизии, для которой возвращается значение атрибута</param>
            <param name="defaultValue">Значение, возвращаемое в случае отсутствия атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.TryGetValueAt``1(System.String,System.Int32,``0@)">
            <summary>
            Извлекает значение атрибута указанного типа. 
            Возвращает true если все получилось
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Ключ атрибута</param>
            <param name="revision">Номер ревизии, для которой возвращается значение атрибута</param>
            <param name="result">Значение атрибута</param>
            <returns>true, если есть непустое значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAttributeType(System.Type)">
            <summary>
            Возвращает тип данных значения объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.ValidateTemplateKind(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Проверяет соответствие объекту типа шаблона
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.ValidateAttributes">
            <summary>
            Проверяет все шаблонные атрибуты объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.IsEqualByAttributes(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Сравнивает атрибуты двух объектов на предмет равенства
            </summary>
            <param name="other"></param>
            <returns>true если значения и состав атрибутов совпадает</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.MarkForReValidation">
            <summary>
            Вызывается при изменениях в атрибутах. Устанавливает бит о необходимости запуска перепроверки 
            атрибутов на предмет наличия ошибок
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.PrepareNewAttributesForSave(System.Collections.Generic.IDictionary{System.Int32,ProgramSoyuz.PLM.Scripting.ScriptingSubObject},System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Attribute},System.Int32@)">
            <summary>
            Присваивает идентификационные номера передаваемым на сервер объектам
            </summary>
            <param name="dict"></param>
            <param name="attributes"></param>
            <param name="identificationCounter"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.Save(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Сохранение этого объекта вне зависимости от наличия текущего контекста группового сохранения
            </summary>
            <param name="saveRelatedRange">диапазон "затягивания в сохранение"
            измененных связанных объектов</param>
            <remarks>Это переопределение базового метода используется ради механизма идентификации
            создаваемых атрибутов с целью показа пользователю атрибута в случае возникновения
            ошибки валидации</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.DoGetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.InitObjectAttributes(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Инициализирует атрибуты объекта (значение по умолчанию, вычисление, вызов OnInitialize и пр)
            </summary>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.InitObjectAttributes(System.Collections.Generic.Dictionary{System.String,System.Object},ProgramSoyuz.PLM.Scripting.PrototypeObject)">
            <summary>
            Инициализирует атрибуты объекта (значение по умолчанию, вычисление, вызов OnInitialize и пр)
            </summary>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
            <param name="additionalPrototype">Дополнительный прототип объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.InitObjectAttributes(System.Collections.Generic.Dictionary{System.String,System.Object},ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Инициализирует атрибуты объекта (значение по умолчанию, вычисление, вызов OnInitialize и пр)
            </summary>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
            <param name="additionalPrototype">Дополнительный прототип объекта</param>
            <param name="otherTemplate">Дополнительный шаблон, чьи атрибуты следует проинициализировать</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.InitObjectAttributesFrom(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Инициализирует атрибуты объекта по оригинальному объекту
            </summary>
            <param name="source">Оригинальный объект, по которому делаем копию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.InitObjectAttributesFrom(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Инициализирует атрибуты объекта по оригинальному объекту
            </summary>
            <param name="source">Оригинальный объект, по которому делаем копию</param>
            <param name="otherTemplate">Дополнительный шаблон, чьи атрибуты следует проинициализировать</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.MarkChangedAttributesAsPreinitialized">
            <summary>
            Ставит флаги для измененных атрибутов, говорящие о том, что значения атрибутов
            являются значениями, присвоенными при инициализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.MarkAttributesAsUnchanged">
            <summary>
            Ставит флаги для измененных атрибутов, говорящие о том, что значения атрибутов
            являются значениями, присвоенными при инициализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.CopyAttributesFrom(ProgramSoyuz.PLM.Scripting.IAttributableObject)">
            <summary>
            Копирование значений атрибутов с другого объекта.
            Копируются только атрибуты, определенные в шаблонах этого объекта
            </summary>
            <param name="src">Объект, чьи атрибуты копируем в этот объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.CopyAttributesFrom(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Копирование значений атрибутов с другого объекта.
            Копируются только атрибуты, определенные в шаблонах этого объекта
            </summary>
            <param name="src">Объект, чьи атрибуты копируем в этот объект</param>
            <param name="template">Если указан, то копируются лишь атрибуты этого шаблона</param>
            <param name="incremental">Если true, то списковые атрибуты не очищаются перед копированием, 
            то есть копируемые элементы добавляются к текущим; а так же пустые атрибуты не перетирают уже заполненные </param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.CopyAttributesFrom(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.Template,System.Boolean,ProgramSoyuz.PLM.Scripting.CopyAttributeDelegate,System.Object)">
            <summary>
            Копирование значений атрибутов с другого объекта.
            Копируются только атрибуты, определенные в шаблонах этого объекта
            </summary>
            <param name="src">Объект, чьи атрибуты копируем в этот объект</param>
            <param name="template">Если указан, то копируются лишь атрибуты этого шаблона</param>
            <param name="incremental">Если true, то списковые атрибуты не очищаются перед копированием, 
            то есть копируемые элементы добавляются к текущим; а так же пустые атрибуты не перетирают уже заполненные </param>
            <param name="copyHandler">Обработчик, вызываемый для каждого копируемого атрибута, возвращает true, если атрибут обработан этой функцией</param>
            <param name="data">Параметр, передаваемый в функцию копирования</param>
            <remarks>Если указан <paramref name="copyHandler"/>, то он вызывается и для копирования вложенных атрибутов копируемых элементов коллекций</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.InitAttributesFromExportedData(ProgramSoyuz.DataModel.AttributeData[],ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache)">
            <summary>
            Инициализирует атрибуты объекта по данным, сохраненным в пакете конфигурации
            </summary>
            <param name="attributes">набор данных об атрибутах</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.RemapInternalLinks(System.Collections.Generic.Dictionary{ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Для всех объектов <paramref name="branchMap"/>.Values обновляет все их ссылки (и множества) на
            объекты <paramref name="branchMap"/>.Keys, заменяя их на соответствующие <paramref name="branchMap"/>.Values
            </summary>
            <remarks>В словаре могут быть лишь ИО и контейнеры. Прочие объекты не поддерживаются</remarks>
            <param name="branchMap">Ассоциативный список (словарь) исходный объект в целевой объект </param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributableObject.m_CalculationLocks">
            <summary>
            Множество объектов для которых в данный момент вычисляется GetFriendlyName()
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetFriendlyName">
            <summary>
            Возвращает строковое представление объекта для пользователя
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetFriendlyName(System.Boolean)">
            <summary>
            Возвращает строковое представление объекта для пользователя
            </summary>
            <param name="doNotUseUIData">true означает, что метод должен вернуть что-нибудь без обращения к UIData
            Флаг используется при вызове изнутри GetUIData</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.CancelAsyncCalculation">
            <summary>
            Вызывает методы кастомизации для отмены начатого асинхронного вычисления атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributableObject.m_CalculationDepth">
            <summary>
            Счетчик вложенных вычислений атрибутов на случай потенциального зацикливания
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.DoCalculateAttribute(ProgramSoyuz.PLM.Scripting.EntityAttribute,ProgramSoyuz.PLM.Scripting.AttributeDef,System.Boolean)">
            <summary>
            Вызывает код кастомизации для вычисления атрибута
            </summary>
            <param name="attr">Атрибует чье значение вычисляем</param>
            <param name="def">Определение вычисляемого атрибута</param>
            <param name="async"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.Invoke(System.String,System.Object)">
            <summary>
            Вызов пользовательского метода объекта
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.InvokeOnServer(System.String,System.Object)">
            <summary>
            Вызов пользовательского метода объекта на сервере
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.Invoke(System.String,System.Boolean,System.Object[])">
            <summary>
            Вызов пользовательского метода объекта
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="invokeOnServer">true если метод следует вызвать на сервере</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.CheckWrappedObject(System.Boolean)">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
            <param name="needAttributes">Если true, то производится полная загрузка объекта при необходимости</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetUsersByCustomOperation(ProgramSoyuz.PLM.Scripting.NamedValue)">
            <summary>
            Возвращает пользователей, которым предоставлена запрошенная пользовательская операция
            </summary>
            <param name="op">Запрошенная пользовательская операция</param>
            <returns>Массив пользователей</returns>
            <remarks>Клиентская версия возвращает только видимых пользователей</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetUsersByCustomOperation(ProgramSoyuz.PLM.Scripting.NamedValue,Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},System.Boolean)">
            <summary>
            Возвращает пользователей, которым предоставлена запрошенная пользовательская операция
            </summary>
            <param name="op">Запрошенная пользовательская операция</param>
            <param name="positiveSet">Уже вычисленные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="negativeSet">Уже отклоненные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="ignoreTemplateCustomization">Если true, то при поиске не вызывается кастомизация прав CheckCustomOperation уровня шаблонов</param>
            <returns>Массив пользователей</returns>
            <remarks>Клиентская версия возвращает только видимых пользователей</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.DoGetUsersByCustomOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.NamedValue,Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},System.Boolean)">
            <summary>
            Возвращает пользователей, которым предоставлена запрошенная пользовательская операция
            </summary>
            <param name="obj">Объект, по операции над которым ищутся пользователи</param>
            <param name="op">Запрошенная пользовательская операция</param>
            <param name="positiveSet">Уже вычисленные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="negativeSet">Уже отклоненные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="ignoreTemplateCustomization">Если true, то при поиске не вызывается кастомизация прав CheckCustomOperation уровня шаблонов</param>
            <returns>Массив пользователей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetUsersByOperation(ProgramSoyuz.DataModel.OperationIdentifier)">
            <summary>
            Возвращает пользователей, которым предоставлена запрошенная операция
            </summary>
            <param name="op">Запрошенная операция</param>
            <returns>Массив пользователей</returns>
            <remarks>Клиентская версия возвращает только видимых пользователей</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetUsersByOperation(ProgramSoyuz.DataModel.OperationIdentifier,Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},System.Boolean)">
            <summary>
            Возвращает пользователей, которым предоставлена запрошенная операция
            </summary>
            <param name="op">Запрошенная операция</param>
            <param name="positiveSet">Уже вычисленные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="negativeSet">Уже отклоненные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="ignoreTemplateCustomization">Если true, то при поиске не вызывается кастомизация прав CheckOperation уровня шаблонов</param>
            <returns>Массив пользователей</returns>
            <remarks>Клиентская версия возвращает только видимых пользователей</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.DoGetUsersByOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},System.Boolean)">
            <summary>
            Возвращает пользователей, которым предоставлена запрошенная  операция
            </summary>
            <param name="obj">Объект, по операции над которым ищутся пользователи</param>
            <param name="op">Запрошенная операция</param>
            <param name="positiveSet">Уже вычисленные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="negativeSet">Уже отклоненные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="ignoreTemplateCustomization">Если true, то при поиске не вызывается кастомизация прав CheckOperation уровня шаблонов</param>
            <returns>Массив пользователей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetUserSubscriptions">
            <summary>
            Доступ к подпискам на конкретнй объект
            </summary>
            <returns>Список запрошенных подписок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetUserSubscriptions(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.DataModel.DataObjectIdentifier)">
            <summary>
            Доступ к подпискам пользователя или его групп на конкретный объект
            </summary>
            <param name="user">Пользователь, чьи подписки интересуют</param>
            <param name="targetId">Идентификатор целевого объекта</param>
            <returns>Список запрошенных подписок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.EnumAllParents(System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean})">
            <summary>
            Перечисляет все родительские объекты
            </summary>
            <param name="recursive">True если требуется перечислить родителей на все уровни</param>
            <param name="includeOtherParents">Если true то доп родители попадают в перечисление. False - только прямые родители</param>
            <param name="continueHandler">Обработчик возвращает true, если дальнейшее продвижение по родителям указанного объекта уже не требуется</param>
            <returns>Перечислитель родительских объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.EnumAllChildren(System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean})">
            <summary>
            Перечисляет все дочерние объекты
            </summary>
            <param name="recursive">True если требуется перечислить детей на все уровни</param>
            <param name="includeOtherChildren">Если true то доп дочерние попадают в перечисление. False - только прямые дочерние</param>
            <param name="continueHandler">Обработчик возвращает true, если дальнейшее продвижение по дочернием указанного объекта уже не требуется</param>
            <returns>Перечислитель дочерних объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.EnumAllNestedObjects(System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean})">
            <summary>
            Перечисляет все объекты, содержащиеся в данном (для контейнеров это ИО)
            </summary>
            <param name="recursive">True если требуется перечислить детей на все уровни</param>
            <param name="includeOtherChildren">Если true то доп дочерние попадают в перечисление. False - только прямые дочерние</param>
            <param name="continueHandler">Обработчик возвращает true, если дальнейшее продвижение по дочернием указанного объекта уже не требуется</param>
            <returns>Перечислитель дочерних объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.CalcEffectiveBindings">
            <summary>
            Возвращает перечислитель действующих на объект привязок, в порядке от объекта к родителям
            </summary>
            <returns>Перечислитель привязок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetUIData(ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает запрошенное представление объекта в UI.
            </summary>
            <param name="dataKind">Запрашиваемый вид данных (название, иконки, превью)</param>
            <returns>null если следует использовать вариант по умолчанию,
            String для названий объекта (форматированный HTML тэгами для всего кроме просто названия),
            Icon (или CustomIcon) и Icon[](или CustomIcon[]) для иконок,
            Image (или BlobDesc) для превью</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetNameForSearchInDb">
            <summary>
            Возвращает нормализованное имя объекта для хранения в базе в целях полнотекстового поиска
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.PrepareNameForFullTextSearch(System.String)">
            <summary>
            Возвращает нормализацию хранимого имени объекта, которое используется для серверного поиска по имени
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetUIText(ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает запрошенный текст для представления объекта в UI
            </summary>
            <param name="dataKind">Тип запрошенных данных</param>
            <returns>Текстовое представление объекта указанного типа</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetPreview">
            <summary>
            Возвращает картинку предварительного просмотра объекта
            </summary>
            <remarks>На клиенте объект берется из кеша. Кеш остается владельцем объекта.
            На сервере кеширования не происходит. Полученный объект следует освободить.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetMainIcon(ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает основную иконку объекта (ее ключ в основном ImageListе)
            <param name="kind">Типа иконки</param>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetMainIcon">
            <summary>
            Возвращает основную иконку объекта (ее ключ в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetMainIconForHyperLink">
            <summary>
            Возвращает основную иконку объекта (ее ключ в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetMainOverlayIcon(ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает основную оверлейную иконку объекта (ее ключ в основном ImageListе)
            <param name="kind">Типа иконки</param>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetMainOverlayIcon">
            <summary>
            Возвращает основную оверлейную иконку объекта (ее ключ в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetMainOverlayIconForHyperLink">
            <summary>
            Возвращает основную оверлейную иконку объекта (ее ключ в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetMainOverlayIconForHyperLinkInGrid">
            <summary>
            Возвращает основную оверлейную иконку объекта (ее ключ в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAdditionalIcons(ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает дополнительные иконки объекта (в виде массива строковых ключей в основном ImageListе)
            <param name="kind">Тип доп. иконок</param>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAdditionalIcons">
            <summary>
            Возвращает дополнительные иконки объекта (в виде массива строковых ключей в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAdditionalIconsForListView">
            <summary>
            Возвращает дополнительные иконки объекта (в виде массива строковых ключей в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAdditionalIconsForHyperLink">
            <summary>
            Возвращает дополнительные иконки объекта (в виде массива строковых ключей в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAdditionalIconsForHyperLinkInGrid">
            <summary>
            Возвращает дополнительные иконки объекта (в виде массива строковых ключей в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAdditionalIcon(System.Int32)">
            <summary>
            Возвращает дополнительную иконку объекта (ее ключ в основном ImageListе) по индексу (0-based)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetAdditionalIconForListView(System.Int32)">
            <summary>
            Возвращает дополнительную иконку объекта (ее ключ в основном ImageListе) по индексу (0-based)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetSystemName">
            <summary>
            Возвращает формальное системное строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.GetFormalName">
            <summary>
            Возвращает формальное строковое представление объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributableObject._events">
            <summary>
            Контейнер для событий объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributableObject.m_NotificationLocker">
            <summary>
            Список атрибутов, для которых вызвана нотификация.
            Используется для предотвращения зацикливания
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.NotifyBoundObjectsChanged">
            <summary>
            Оповещает подписчиков об изменении в связанных объектах
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.NotifyPropertyChanged(ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Рассылка нотификации об изменении атрибута
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.NotifyPropertyChanged(ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Boolean)">
            <summary>
            Рассылка нотификации об изменении атрибута
            </summary>
            <param name="attribute">Изменившийся атрибут</param>
            <param name="fullNotification">Если true, то происходит вызов метода кастомизации</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.RefreshAttributeUI(System.String)">
            <summary>
            Рассылка уведомления о необходимости обновить элемент пользовательского интерфейса, отображающий данный атрибут
            </summary>
            <param name="nameKey">Ключ атрибута, который требует обновления, либо null, если надо обновить все</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributableObject.m_ChangeNotificationsSuspended">
            <summary>
            Если счетчик больше нуля, то клиентский UI код не оповещается об изменениях в объекте
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.EnterSuspendChangeNotifications">
            <summary>
            Приостанавливает оповещение клиентского UI кода об изменениях в объектах
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.EnterSuspendChangeNotifications(System.Boolean)">
            <summary>
            Приостанавливает оповещение клиентского UI кода об изменениях в объектах
            </summary>
            <param name="notifyOnResume">true если следует разослать уведомления по выходу из блока using</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.SuspendChangeNotifications">
            <summary>
            Приостанавливает оповещение клиентского UI кода об изменениях в объектах
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.ResumeChangeNotifications(System.Boolean)">
            <summary>
            Возобновляет оповещение клиентского UI кода об изменениях в объектах
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.PreloadDelayedLoadAttributes(System.Boolean)">
            <summary>
            Проверяет и при необходимости загружает атрибуты отложенной загрузки
            </summary>
            <param name="wait">true если вызов блокируется для получения ответа</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributableObject._propertyBag">
            <summary>
            Словарь для хранения чего-либо на время жизни данной скриптовой оболочки объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.RealObject">
            <summary>
            Доступ к атрибутируемому "реальному" объекту. 
            Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.ChangesCounter">
            <summary>
            Счетчик изменений объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.AttributeWrappers">
            <summary>
            СОздает список для хранения выданных скриптовых оболочек атрибутов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.SyncRoot">
            <summary>
            Доступ к синхронизирующему объекту для внутреннего кеша оболочек атрибутов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.ChangedAttributes">
            <summary>
            Текущий список добавленных, измененных или удаленных атрибутов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.ProgramSoyuz#PLM#Scripting#IAttributableObject#ChangedAttributes">
            <summary>
            Возвращает перечислитель измененных атрибутов для данной скриптовой оболочки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.HasChangedContentAttributes">
            <summary>
            Возвращает true если среди измененных атрибутов объекта есть содержательные (не реквизитные) атрибуты
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.HasChangedRequisiteAttributes">
            <summary>
            Возвращает true если среди измененных атрибутов объекта есть реквизитные атрибуты
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.HasUserChangedAttributes">
            <summary>
            Возвращает true, если у объекта есть невычисляемые атрибуты, измененные после инициализации их в значения по умолчанию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.HasDirtyAttributes">
            <summary>
            Возвращает true, если у объекта есть атрибуты, подлежащие сохранению
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.IsInaccessible">
            <summary>
            Возвращает true, если объект не доступен по правам доступа.
            Такой объект от реального объекта содержит только идентификатор
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.IsErasedStub">
            <summary>
            Возвращает true если этот объект является заглушкой удалённого объекта.
            У такого объекта есть Id, GlobalIdentifier и имя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.Template">
            <summary>
            Доступ к шаблону объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.IsObjectVirtual">
            <summary>
            Возвращет true, если объект виртуальный
            Никакие обновления роу объекта внутри не происходят
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.Templates">
            <summary>
            Перечисляет все шаблоны объекта, начиная с основного.
            Шаблоны перечисляются те, что реально сохранены у объекта (без учета текущих изменений)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject._OtherClassTemplates">
            <summary>
            Доступ к дополнительным шаблонам объекта (класса).
            Возвращаются шаблоны для последнего сохраненного состояния объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.EffectiveAttributeDefs">
            <summary>
            Возвращает массив действующих для данного объекта определений атрибутов с учетом дополнительных шаблонов-классов
            и примененных модификаторов
            </summary>
            <remarks>На основе именно этого набора определений атрибутов формируется карточка объекта</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.EffectivePageDefs">
            <summary>
            Возвращает массив действующих для данного объекта определений закладок с учетом дополнительных шаблонов-классов
            и примененных модификаторов
            </summary>
            <remarks>На основе именно этого набора определений закладок формируется карточка объекта</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.EffectiveUICommands">
            <summary>
            Возвращает массив действующих для данного объекта UI команд с учетом дополнительных шаблонов-классов
            и примененных модификаторов
            </summary>
            <remarks>На основе именно этого набора определений атрибутов формируется набор команд объекта</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.EffectiveObjectEvents">
            <summary>
            Возвращает массив действующих для данного объекта объектных событий с учетом дополнительных шаблонов-классов
            и примененных модификаторов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.ProgramSoyuz#PLM#Scripting#IAttributableObject#Attributes">
            <summary>
            Возвращает перечислитель собственных атрибутов, существующих в базе, а также вновь созданных
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.Attributes">
            <summary>
            Возвращает перечислитель собственных атрибутов, существующих в базе, а также вновь созданных.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.AllAttributes">
            <summary>
            Рекурсивно перечисляет все атрибуты этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.AllChangedAttributes">
            <summary>
            Перебирает все измененные атрибуты на все уровни
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.AllChangedElements">
            <summary>
            Перебирает все измененные элементы коллеций на все уровни
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.AllChangedFileDescs">
            <summary>
            Рекусрсивное извлечение всех сохраняемых файловых дескрипторов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.AllChangedBlobDescs">
            <summary>
            Рекурсивное извлечение всех сохраняемых дескрипторов бинарных данных
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.Item(System.String)">
            <summary>
            Возвращает значение атрибута по указанному ключу.
            Сеттер позволяет задавать значения атрибутам
            </summary>
            <param name="nameKey">Для геттера путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3.
            Для сеттера непосредственный ключ изменяемого атрибута данного объекта</param>
            <returns>Конечное значение атрибута</returns>
            <remarks>
            Если определение атрибута имеется, то возвращаемое значение для значимых типов и строк будет значением по умолчанию этого типа.
            В том числе и для пустых атрибутов.
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.Item(System.String,System.Object)">
            <summary>
            Возвращает значение атрибута по указанному ключу.
            </summary>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3.</param>
            <param name="defaultValue">Значение по умолчанию, возвращаемое, если найденный атрибут или значение пустое</param>
            <returns>Конечное значение атрибута</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.HasIntegrityWarnings">
            <summary>
            Возвращает true если у объекта или его дочерних есть логические проблемы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.HasOwnIntegrityWarnings">
            <summary>
            Факт наличия собственных проблем у объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.IntegrityWarnings">
            <summary>
            Список сообщений о проблемах объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.WarningFlags">
            <summary>
            Набор проблемных флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.WarningLevel">
            <summary>
            Уровень проблемности объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.HasErrors">
            <summary>
            Возвращает true если какой-либо из вложенных атрибутов не прошел валидацию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.GenerativeObjects">
            <summary>
            Перечислитель объектов, образующих для данного
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.CalculationLocks">
            <summary>
            Множество объектов для которых в данный момент вычисляется GetFriendlyName()
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.IsLightWeight">
            <summary>
            Возвращает true если этот объект "легковесный". То есть атрибуты для него не загружены
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.Revision">
            <summary>
            Ревизия
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.RevisionNumber">
            <summary>
            Номер ревизии объекта если объект является прокси объектом ревизии. В прочих случаях UndefinedRevisionNumber
            </summary>
            <remarks>Для получения номера последней ревизии объекта следует использовать <see cref="P:ProgramSoyuz.PLM.Scripting.InfoObject.CurrentRevisionNumber"/></remarks>&gt;
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.IsRevisionProxy">
            <summary>
            Возвращает true, если этот объект представляет собой прокси для доступа к значениям некоторой ревизии объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.BranchRoot">
            <summary>
            Возвращает корень ветви объектов своего типа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.ParentBindings">
            <summary>
            Возвращает перечислитель унаследованных от родителей привязок к этому объекту/с использованием этой роли
            </summary>
            <returns>Перечислитель унаследованных от родителей привязок к этому объекту/с использованием этой роли</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.UserRightsInheritanceParent">
            <summary>
            Возвращает родительский объект по цепочке наследования прав доступа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.Events">
            <summary>
            Контейнер для событий объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.IsChangeNotificationsSuspended">
            <summary>
            Если флаг установлен в true, то клиентский UI код не оповещается об изменениях в объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.IsCardRebuildRequired">
            <summary>
            Флаг проверяется при отображении карточки объекта в OnIdle, если он установлен, то
            происходит перестроение карточки объекта и флаг автоматически сбрасывается
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.PersistedName">
            <summary>
            Доступ к хранимому имени объекта. Используется при мягком удалении объекта для финальной записи имени удаленной заглушки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.PropertyBag">
            <summary>
            Словарь для хранения чего-либо на время жизни данной скриптовой оболочки объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributableObject.NameKey">
            <summary>
            Ключ объекта (элемент древообразного пути к объекту)
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributableObject.AutoSuspendChangeNotifications">
            <summary>
            Вспомогательный объект для автоматического включения-выключения кеширования скриптовых оболочек.
            Объект следует использовать с командой <code>using</code>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.AutoSuspendChangeNotifications.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="target">Целевой объект</param>
            <param name="notifyOnResume">true если следует разослать уведомления по выходу из блока using</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.AutoSuspendChangeNotifications.Dispose">
            <summary>
            Освобождение контекста сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObject.AutoSuspendChangeNotifications.Finalize">
            <summary>
            Попадание в финализатор означает некорректное использование этого объекта.
            В финализаторе уже ничего сделать нельзя, так как список блокировок уже вероятно разрушен,
            и финализатор работает в другом потоке
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IPrototypeContainer">
            <summary>
            Интерфейс для объектов. которые могут в себе хранить прототип атрибутируемого объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPrototypeContainer.OnPrototypeModified(ProgramSoyuz.PLM.Scripting.PrototypeObject)">
            <summary>
            Нотификация об изменении свойств прототипа
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPrototypeContainer.Template">
            <summary>
            Шаблон прототипирумеого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.m_Data">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.m_RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.PrepareModification">
            <summary>
              Подготовка объекта к внесению изменений
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Сериализация объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreateWrapper(ProgramSoyuz.PLM.Scripting.TaskDiagram,ProgramSoyuz.DataModel.TaskDiagramNodeBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="owner">Владелец (диаграмма)</param>
            <param name="node">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.#ctor(ProgramSoyuz.PLM.Scripting.TaskDiagram,ProgramSoyuz.DataModel.TaskDiagramNodeBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="owner">Диграмма-владелец данного объекта</param>
            <param name="node">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.#ctor(ProgramSoyuz.PLM.Scripting.TaskDiagram)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="owner">Диаграмма-владелец данного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.#ctor(ProgramSoyuz.PLM.Scripting.TaskDiagram,ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="owner">Диаграмма-владелец данного объекта</param>
            <param name="targetTaskTemplate">Шаблон задачи, которую представляет данный этап на диаграмме</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.#ctor(ProgramSoyuz.PLM.Scripting.TaskDiagram,ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.DataModel.TaskDiagramNodeBase.KindEnum)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="owner">Диаграмма-владелец данного объекта</param>
            <param name="targetTaskTemplate">Шаблон задачи, которую представляет данный этап на диаграмме</param>
            <param name="kind">Тип этапа диаграммы</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Erase">
            <summary>
            Удаление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.DoEraseChildrenOrRelated">
            <summary>
            Каскадное удаление дочерних объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CheckWrappedObject(System.Boolean)">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.OnModified">
            <summary>
            Вызывается при изменениях внутри объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.m_Params">
            <summary>
            Кешированный набор десериализованных параметров объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.GetParams``1">
            <summary>
            Доступ к десериализованному набору параметров объекта
            </summary>
            <returns>Кешированный объект с набором параметров</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.SetParams``1(``0)">
            <summary>
            Сохранение сериализованных параметров объекта в соответствующем атрибуте
            </summary>
            <typeparam name="TParams"></typeparam>
            <param name="data"></param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.m_DisplayParams">
            <summary>
            Кешированный набор десериализованных параметров отображения объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.GetDisplayParams``1">
            <summary>
            Доступ к десериализованному набору параметров отображения объекта
            </summary>
            <returns>Кешированный объект с набором параметров</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.SetDisplayParams``1(``0)">
            <summary>
            Сохранение сериализованных параметров отображения объекта в соответствующем атрибуте
            </summary>
            <typeparam name="TDisplayParams"></typeparam>
            <param name="data"></param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.m_PrototypeWrapper">
            <summary>
              Прототип объекта (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreatePrototype">
            <summary>
              Создаёт новый объект-прототип (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта
              и присваивает его этому шаблону
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.DropPrototype">
            <summary>
              Сбрасывает объект-прототип (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта
              у этого шаблона
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.GetOrCreatePrototype">
            <summary>
              Прототип объекта (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта.
              Если прототип еще не задан, он тут же и создается.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.ResolveOutcomingLinks(ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Вызывает обработчик кастомизации ResolveOutcomingLinks
            </summary>
            <param name="subTask">Подзадача этапа, по состоянию которой определяются исходящие связи для срабатывания</param>
            <returns>Список исходящих связей, по которым должна пойти диаграмма процесса при завершении этапа</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.ToString">
            <summary>
            Возвращает основное название объекта по умолчанию
            </summary>
            <returns>Возвращает основное название объекта по умолчанию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.ProgramSoyuz#PLM#Scripting#IPrototypeContainer#OnPrototypeModified(ProgramSoyuz.PLM.Scripting.PrototypeObject)">
            <summary>
            Нотификация об изменении свойств прототипа
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.GetAttribute(ProgramSoyuz.PLM.Scripting.AttributeDef,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="def">Определение атрибута (если оно уже известно)</param>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode._state">
            <summary>
            Текущее состояние этапа в ран-тайме. Актуально только для еще не сохраненных диаграмм
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Owner">
            <summary>
            Диаграмма-владелец данного этапа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.GenerativeObjects">
            <summary>
              Перечислитель объектов, образующих для данного
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode._GenerativeObjects">
            <summary>
              Перечислитель объектов, образующих для данного
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.NameKey">
            <summary>
              Программное название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.NameUI">
            <summary>
              Пользовательское название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Notes">
            <summary>
             Пояснения к этапу для разработчика
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Description">
            <summary>
             Пояснения к этапу отображаемые для этапа в ран тайме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Kind">
            <summary>
              Тип этапа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Params">
            <summary>
            Дополнительное поле для параметров этого этапа на диаграмме задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.DisplayParams">
            <summary>
            Дополнительное поле для визуальных параметров этого этапа на диаграмме задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.IsStartNode">
            <summary>
            Возвращаеn true если этот этап является стартовым этапом
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.TargetTaskTemplate">
            <summary>
            Ссылка на шаблон задачи, которую представляет этот этап на диаграмме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Icon">
            <summary>
              Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.DisplayIcon">
            <summary>
              Иконка, показываемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.PrototypeRaw">
            <summary>
              Прототип объекта (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта.
              Возвращается прототип кешированный в клиентском или серверном кеше
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Prototype">
            <summary>
              Прототип объекта (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.State">
            <summary>
            Статус этапа после предварительного анализа диаграммы (по версии в кеше)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.RevisionNumber">
            <summary>
            Номер ревизии (итерации, среза значений) диаграммы, в которой элемент был создан
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.IsErased">
            <summary>
            Флаг, обозначающий, что в этой ревизии объект отсутствует
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.IncomingLinks">
            <summary>
            Перечислитель входящих связей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.OutcomingLinks">
            <summary>
            Перечислитель исходящих связей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.SubTasks">
            <summary>
            Возвращает массив подзадач, порожденных на этом этапе
            Список сортирован по времени создания подзадачи.
            </summary>
            <remarks>В случае обычного цикла, предыдущие подзадачи будут либо закрыты, либо отменены. Лишь последняя задача может быть активна.
            Однако этап в общем случае может порождать несколько активных подзадач единовременно</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CurrentTask">
            <summary>
            Возвращает последний из экземпляров подзадач этапа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.ProgramSoyuz#PLM#Scripting#IPrototypeContainer#Template">
            <summary>
            Шаблон прототипирумеого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Template">
            <summary>
            Доступ к шаблону объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Templates">
            <summary>
            Перечисляет все шаблоны объекта, начиная с основного.
            Из дополнительных перечисляются только те, что расширяют поведение и атрибуты экземпляра объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.OtherClassTemplates">
            <summary>
            Доступ к дополнительным шаблонам-классам объекта (те шаблоны, что расширяют поведение и атрибута экземпляра объекта).
            Возвращаются шаблоны для последнего сохраненного состояния объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode._OtherClassTemplates">
            <summary>
            Доступ к дополнительным шаблонам-классам объекта (те шаблоны, что расширяют поведение и атрибуты экземпляра объекта).
            Возвращаются шаблоны для последнего сохраненного состояния объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.Attributes">
            <summary>
            Возвращает перечислитель собственных атрибутов, существующих в базе, а также вновь созданных.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.ChangedAttributes">
            <summary>
            Возвращает перечислитель измененных атрибутов для данной скриптовой оболочки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.ProgramSoyuz#DataModel#ITaskDiagramObject#State">
            <summary>
            Текущее состояние этапа в ран-тайме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.StateFixedAt">
            <summary>
            Дата-время фиксации данного статуса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.ProgramSoyuz#DataModel#ITaskDiagramNode{ProgramSoyuz#PLM#Scripting#TaskDiagramLink}#IncomingLinks">
            <summary>
            Перечислитель входящих связей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.ProgramSoyuz#DataModel#ITaskDiagramNode{ProgramSoyuz#PLM#Scripting#TaskDiagramLink}#OutcomingLinks">
            <summary>
            Перечислитель исходящих связей
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.NameKey">
            <summary>
            Программное название этапа (ключ)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.NameUI">
            <summary>
            Пользовательское (отображаемое) название этапа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.Description">
            <summary>
            Пояснения к этапу отображаемые для в ран тайме
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.Notes">
            <summary>
            Пояснения к этапу для разработчика
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.m_Icon">
            <summary>
              Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.Kind">
            <summary>
            Тип этапа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.m_TargetTaskTemplate">
            <summary>
            Родительский объект, к которому относится связка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.Params">
            <summary>
            Дополнительное поле для параметров этого этапа на диаграмме задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.DisplayParams">
            <summary>
            Дополнительное поле для визуальных параметров этого этапа на диаграмме задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.RevisionNumber">
            <summary>
            Номер ревизии создания объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.IsErased">
            <summary>
            Флаг обозначающий создание "удаленного" объекта в указанной ревизии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.m_Prototype">
            <summary>
              Прототип объекта (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.WriteTo(ProgramSoyuz.DataModel.TaskDiagramNodeBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="body">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.Icon">
            <summary>
              Иконка для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.TargetTaskTemplate">
            <summary>
            Родительская учетная запись
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.Prototype">
            <summary>
              Прототип объекта (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNode.CreationData.PrototypeData">
            <summary>
              Сериализованные данные прототипа объекта (значения атрибутов по умолчанию)
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserItemLink">
            <summary>
             Пользовательский шоркат на объект в его рабочем столе.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItemLink.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItemLink.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.CreateWrapper(ProgramSoyuz.DataModel.UserItemLinkBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="linkItem">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.#ctor(ProgramSoyuz.DataModel.UserItemLinkBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="UserItemLink">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.#ctor(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserItem,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="user">Пользователь, чья привязка</param>
            <param name="userItem">Элемент ПРС</param>
            <param name="target">Целевой объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.#ctor(ProgramSoyuz.PLM.Scripting.UserItem,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="userItem">Элемент ПРС</param>
            <param name="target">Целевой объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.#ctor(ProgramSoyuz.DataModel.SystemItemEnum,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="rootItem">Корневой элемент ПРС</param>
            <param name="target">Целевой объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.#ctor(ProgramSoyuz.PLM.Scripting.UserItemLink.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItemLink.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.Target">
            <summary>
            Целевой объект данной связки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.Parent">
            <summary>
            Доступ к родительскому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.User">
            <summary>
            Доступ к пользователю-владельцу этого объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserItemLink.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItemLink.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItemLink.CreationData._user">
            <summary>
            Пользователь-владелец шортката
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItemLink.CreationData.m_Parent">
            <summary>
            Родительский объект, к которому относится шорткат
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItemLink.CreationData.m_Target">
            <summary>
            Ссылка на целевой объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.CreationData.User">
            <summary>
            Родительская учетная запись
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.CreationData.Parent">
            <summary>
            Родительский объект, к которому относится шорткат
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItemLink.CreationData.Target">
            <summary>
            Ссылка на целевой объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingTask">
            <summary>
            Скриптовая задача для выполнения автоматических действий на клиенте или сервере. Запускается по расписанию
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.m_RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreateWrapper(ProgramSoyuz.DataModel.ScriptingTaskBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="scriptingTask">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.#ctor(ProgramSoyuz.DataModel.ScriptingTaskBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="scriptingTask">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.#ctor(System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="nameKey">Программное название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.#ctor(ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.Invoke">
            <summary>
            Вызов скриптовой задачи
            </summary>
            <returns>Результат работы задачи (если есть)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.Invoke(System.Object)">
            <summary>
            Вызов скриптовой задачи
            </summary>
            <param name="inputParams">Параметры вызова задачи (если требуются)</param>
            <returns>Результат работы задачи (если есть)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.Invoke(System.Object,System.Boolean)">
            <summary>
            Вызов скриптовой задачи
            </summary>
            <param name="inputParams">Параметры вызова задачи (если требуются)</param>
            <param name="asynk">Если true, то для серверной фоновой задачи запуск производится в фоновом потоке, 
            для остальных параметр игнорируются и задачи выполняются синхронно</param>
            <returns>Результат работы задачи (если есть)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.GetNameUILocalized(System.String)">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.NameUILocalized">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.Notes">
            <summary>
            Пользовательские заметки об иконке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.IsEnabled">
            <summary>
            Возвращает true если задача активна и будет запущена при возникновении подходящих условий
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.IsMainMenuCommand">
            <summary>
            Возвращает true если команда актуальна для показа в основном меню клиента
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.IsToolbarButton">
            <summary>
            Возвращает true если команда актуальна для показа в тулбаре клиента
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.Kind">
            <summary>
            Тип задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.RepeatKind">
            <summary>
            Тип повтора запуска задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.ScheduleFlags">
            <summary>
            Различные битовые флаги, управляющие режимом назначения задачи на выполнение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.NextRunDate">
            <summary>
            Дата/время ближайшего запуска задачи в локальном времени
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.ExpectedTimeToRun">
            <summary>
            Возвращает вычисленное предполагаемое локальное время следующего запуска серверной или клиентской фоновой задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.DeactivationDate">
            <summary>
            Дата/время деактивации задачи в локальном времени
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.RepeatTimeoutEffective">
            <summary>
            Действующий интервал автоматического повтора задачи (с учетом типа повтора)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.RepeatTimeout">
            <summary>
            Интервал автоматического повтора задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.RepeatCount">
            <summary>
            Число автоматических повторов задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.GroupKey">
            <summary>
            Ключ сортировки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.ProgramSoyuz#PLM#Scripting#IObjectWithCustomizationCode#CustomizationCode">
            <summary>
            Код скрипта кастомизации объектов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.CustomizationCode">
            <summary>
            Код скрипта кастомизации объектов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.ShortcutKey">
            <summary>
            Клавиатурный шорткат на операцию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.ButtonDisplayStyle">
            <summary>
            Стиль кнопки на тулбаре
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.Tooltip">
            <summary>
            Всплывающая подсказка для кнопки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.DateModified">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.ModifiedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.LastRunDate">
            <summary>
            Локальное дата/время последнего запуска задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.LastRunDuration">
            <summary>
            Длительность работы задачи при последнем запуске
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.LastRunErrorInfo">
            <summary>
            Сообщение о ошибке при последнем запуске команды
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.RunStatus">
            <summary>
            Статус задачи в ходе ее выполнения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.LastRunStatus">
            <summary>
            Статус последнего запуска задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.Icon">
            <summary>
            Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.DisplayIcon">
            <summary>
            Иконка, показываемая в UI
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.CustomizationCode">
            <summary>
            Код скрипта кастомизации схемы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.Kind">
            <summary>
            Тип задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.RepeatKind">
            <summary>
            Тип повтора запуска задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.NextRunDate">
            <summary>
            Дата/время ближайшего запуска задачи в UTC
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.DeactivationDate">
            <summary>
            Дата/время деактивации задачи в UTC
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.RepeatTimeout">
            <summary>
            Интервал автоматического повтора задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.RepeatCount">
            <summary>
            Число автоматических повторов задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.ScheduleFlags">
            <summary>
            Различные битовые флаги, управляющие режимом назначения задачи на выполнение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.ShortcutKey">
            <summary>
            Клавиатурный шорткат на операцию
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.ButtonDisplayStyle">
            <summary>
            Стиль кнопки на тулбаре
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.Tooltip">
            <summary>
            Всплывающая подсказка для кнопки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.GroupKey">
            <summary>
            Ключ сортировки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.m_Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.WriteTo(ProgramSoyuz.DataModel.ScriptingTaskBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ScriptingTask.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.RegistryItem">
            <summary>
            Элемент реестра.
            Используется для формирования дерева всевозможных настроек общих и пользовательских
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.CreateWrapper(ProgramSoyuz.DataModel.RegistryItemBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="item">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.#ctor(ProgramSoyuz.DataModel.RegistryItemBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="registryItem">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.#ctor(ProgramSoyuz.PLM.Scripting.RegistryItem,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский элемент реестра</param>
            <param name="nameKey">Программное название элемента реестра</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.#ctor(ProgramSoyuz.PLM.Scripting.RegistryItem,System.String,ProgramSoyuz.DataModel.RegistryItemBase.DataTypeEnum)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский элемент реестра</param>
            <param name="nameKey">Программное название элемента реестра</param>
            <param name="valueType">Тип значения элемента реестра</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.#ctor(ProgramSoyuz.PLM.Scripting.RegistryItem,System.String,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский элемент реестра</param>
            <param name="nameKey">Программное название элемента реестра</param>
            <param name="value">Собственно значение элемента реестра</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.#ctor(ProgramSoyuz.PLM.Scripting.RegistryItem,System.String,System.String[])">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский элемент реестра</param>
            <param name="nameKey">Программное название элемента реестра</param>
            <param name="value">Собственно значение элемента реестра</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.#ctor(ProgramSoyuz.PLM.Scripting.RegistryItem,System.String,System.Drawing.Color)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский элемент реестра</param>
            <param name="nameKey">Программное название элемента реестра</param>
            <param name="value">Собственно значение элемента реестра</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.#ctor(ProgramSoyuz.PLM.Scripting.RegistryItem,System.String,System.Byte[])">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский элемент реестра</param>
            <param name="nameKey">Программное название элемента реестра</param>
            <param name="value">Собственно значение элемента реестра</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.#ctor(ProgramSoyuz.PLM.Scripting.RegistryItem,System.String,System.Double)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский элемент реестра</param>
            <param name="nameKey">Программное название элемента реестра</param>
            <param name="value">Собственно значение элемента реестра</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.#ctor(ProgramSoyuz.PLM.Scripting.RegistryItem,System.String,System.Int32)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский элемент реестра</param>
            <param name="nameKey">Программное название элемента реестра</param>
            <param name="value">Собственно значение элемента реестра</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.#ctor(ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.#ctor">
            <summary>
            Конструктор для десериализации из XML
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.MakeUnsavedCopy">
            <summary>
            Создает новый объект - несохраненную копию данного
            </summary>
            <returns>Копию объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.MoveTo(ProgramSoyuz.PLM.Scripting.RegistryItem)">
            <summary>
            Перенос объекта к другому родителю.
            </summary>
            <param name="parent">Новый родительский объект для элемента реестра</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.DoEraseChildrenOrRelated">
            <summary>
            Каскадное удаление дочерних объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.GetNameUILocalized(System.String)">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.GetNotesLocalized(System.String)">
            <summary>
              Пользовательские заметки об объекте (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.GetScriptingFriendlyValue(System.Object)">
            <summary>
            Преобразует ссылки в реальные объекты
            </summary>
            <param name="val">"сырое" значение</param>
            <returns>преобразованное значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.GetScriptingRawValue(System.Object)">
            <summary>
            Преобразует реальные объекты в идентификаторы
            </summary>
            <param name="val">"скриптовое" значение</param>
            <returns>преобразованное значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.GetValueAsString(System.Int32,System.Boolean)">
            <summary>
            Возвращает строковое представление значения ограниченное по длине
            </summary>
            <param name="maxChars">Максимальное число символов</param>
            <param name="replaceLineBreaksToSpace">Производит поиск замену разрывов строки на пробелы</param>
            <returns>Значение в виде строки ограниченное по длине и подготовленное для показа в одной строке</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.GetValue``1">
            <summary>
            Возвращает значение указанного типа. 
            При отсутствии такового возвращается значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <returns>Значение приведенное к указанному типу</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.IsValueEquals(System.Object)">
            <summary>
            Возвращает true, если переданное значение совпадает с текущим значением элемента реестра
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.GetChild(System.String,ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.DataModel.RegistryItemBase.DataTypeEnum,System.Boolean,System.Boolean)">
            <summary>
            Возвращает дочерний элемент реестра указанного типа по заданному относительному пути для заданного пользователя
            </summary>
            <param name="path">Путь к элементу от корня</param>
            <param name="user">Пользователь, для которого ищем настройку; null означает поиск глобальной настройки</param>
            <param name="eType">Тип значения требуемого элемента реестра</param>
            <param name="clientSide">true если интересует клиентская настройка</param>
            <param name="createIfMissing">true, если требуется создать элемент при его отсутствии (элемент в несохраненном состоянии)</param>
            <returns>Найденное значение, либо значение по умолчанию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.IsChildOf(ProgramSoyuz.PLM.Scripting.RegistryItem)">
            <summary>
            Возвращает true, если ИЗ является унаследованным от указанного
            </summary>
            <remarks>Считается что ИЗ наследует самого себя</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.GetAllParents">
            <summary>
            Формирует список всех родительских объектов и себя в порядке от старших к младшим
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.DoGetAllParents(System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.RegistryItem})">
            <summary>
            Формирует список всех родительских объектов и себя в порядке от старших к младшим
            </summary>
            <param name="parents">Список родительских объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.MergeWith(ProgramSoyuz.PLM.Scripting.RegistryItem)">
            <summary>
            Склеивает текущий создаваемый элемент реестра с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.ReplaceWith(ProgramSoyuz.PLM.Scripting.RegistryItem)">
            <summary>
            Склеивает текущий создаваемый элемент реестра с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.GetDataType(System.Type,System.Object)">
            <summary>
            Определяет тип переданного значения в терминах типа данных элемента PLM реестра
            </summary>
            <param name="t">Тип значения на случай когда само значение null</param>
            <param name="val">Проверяемое значение</param>
            <returns>Тип значение в виде типа данных элемента реестра</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.DebuggerDisplayString">
            <summary>
            Формирует представление объекта для дебаггера
            </summary>
            <returns>Строка, которую отображает дебаггер для этого объекта</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.ExternalLinkAdditionalData">
            <summary>
              Дополнительные данные при создании линка в пакете конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.IsDirtySelf">
            <summary>
            Возвращает true, если объект (или рекурсивно объекты, от которых этот объект зависит) 
            был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.IsConfigurationObject">
            <summary>
            Возвращает true если данный объект может быть отнесен к конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.NameKey">
            <summary>
            Программное название элемента реестра
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.NameUILocalized">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.NotesLocalized">
            <summary>
              Пользовательские заметки об объекте (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.Notes">
            <summary>
            Пользовательские заметки об именованном значении
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.Value">
            <summary>
            Собственно значение объекта 'элемент реестра'
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.RawValue">
            <summary>
            Возвращает собственно значение как есть: существующее в базе или измененное
            Для ссылочных типов возвращается DataObjectIdentifier
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.ValueAsString">
            <summary>
            Возвращает собственно значение: существующее в базе или измененное
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.DataType">
            <summary>
            Тип данных элемента реестра
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.IsServerSide">
            <summary>
            Возвращает true, если настройка актуальна на сервере
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.IsClientSide">
            <summary>
            Возвращает true, если настройка актуальна на клиенте
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.IsHiddenInUI">
            <summary>
            Возвращает true, если настройку не следует отображать в пользовательском интерфейсе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.IsServerSideEffective">
            <summary>
            Возвращает true, если настройка (и все родители) актуальна на сервере
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.IsClientSideEffective">
            <summary>
            Возвращает true, если настройка (и все родители) актуальна на клиенте
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.IsHiddenInUIEffective">
            <summary>
            Возвращает true, если настройка (и все родители) должна быть скрыта в клиентском интерфейсе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.IsKeepExistingOnImport">
            <summary>
            При импорте пакета существующая настройка не подлежит обновлению
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.IsKeepExistingOnImportEffective">
            <summary>
            Возвращает true, если действующее значение с учетом наследования:
            При импорте пакета существующая настройка не подлежит обновлению
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.DateModified">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.ModifiedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.ApplyToUser">
            <summary>
            Пользователь-владелец объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.ApplyToUserEffective">
            <summary>
            Ссылка на пользователя, которому принадлежит этот элемент
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.Icon">
            <summary>
            Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.DisplayIcon">
            <summary>
            Иконка, показываемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.Parent">
            <summary>
            Доступ к родительскому именованному значению
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.Root">
            <summary>
            Возвращает корневой объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem._Children">
            <summary>
            Возвращает перечислитель дочерних именованных значений.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem._AllChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.Children">
            <summary>
            Возвращает перечислитель дочерних именованных значений.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.AllChildren">
            <summary>
            Возвращает перечислитель дочерних именованных значений.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#RegistryItem}#DirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#RegistryItem}#AllDirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.DataType">
            <summary>
            Тип данных элемента реестра
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.m_Value">
            <summary>
            Собственно значение объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.m_Parent">
            <summary>
            Родительский элемент реестра
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.m_ApplyToUser">
            <summary>
            Пользователь, к которому применяется настройка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.m_Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.ReplacedByItem">
            <summary>
            В ходе сохранения, если создается второй такой же айтем, то ему прописывается ссылка
            на реально создаваемый объект, а операция сбрасывается
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.WriteTo(ProgramSoyuz.DataModel.RegistryItemBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.MakeCopy(ProgramSoyuz.DataModel.RegistryItemBase.Body)">
            <summary>
            Создает копию этого класса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.Value">
            <summary>
            Собственно значение объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.Parent">
            <summary>
            Родительский элемент реестра
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.ApplyToUser">
            <summary>
            Пользователь, к которому применяется настройка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RegistryItem.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.m_bendPoints">
            <summary>
            Точки, по которым рассчитываются начало, конец и точки излома
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.RelocateAutoBendPoints">
            <summary>
            Выстраивает автоматические точки связи
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.CalculateStartOrientation">
            <summary>
            Вычисляет в каком направлении следует нарисовать начальный сегмент связи
            </summary>
            <returns>Направление</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.CalculateEndOrientation">
            <summary>
            Вычисляет в каком направлении следует нарисовать конечный сегмент связи
            </summary>
            <returns>Направление</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.RerouteAsBrokenLine">
            <summary>
            Построение ломаной линии связи по точкам
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.ReroutAsStraightLine">
            <summary>
            Построение линий связи по точкам по прямой
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.StartConnectionPointId">
            <summary>
            Идентификатор выхода фигуры, к которому подлкючается первая точка.
            0 - id не указано, происходит автоопределение начальной точки.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.EndConnectionPointId">
            <summary>
            Идентификатор выхода фигуры, к которому подлкючается последняя точка.
            0 - id не указано, происходит автоопределение конечной точки.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.FirstBendPoint">
            <summary>
            Первая точка связи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.LastBendPoint">
            <summary>
            Последняя точка связи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.IsTreatAsDirect">
            <summary>
            Флаг, обозначающий, что эта связь вручную выставлена прямой
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.IsLoopLink">
            <summary>
            True - если связь является возвратной автоматически или принудительно
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection.StateFixedAt">
            <summary>
            Дата-время фиксации данного статуса
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeScriptingTask">
            <summary>
            Вспомогательный класс для кеширования обработчиков реализованных в скриптовых задачах
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeScriptingTask._cachedHandlers">
            <summary>
            Кешированные наборы обработчиков по их типу
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeScriptingTask.DropCache">
            <summary>
            Сбрасывает кешированные наборы обработчиков
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeScriptingTask.GetHandlers``1(ProgramSoyuz.DataModel.ScriptingTaskBase.KindEnum,System.Boolean)">
            <summary>
            Возвращает сортированный набор обработчиков указанного типа с кодов кастомизации
            </summary>
            <param name="kind">Требуемый тип обработчиков</param>
            <param name="onlyEnabled">True если требуется проверка IsEnabled</param>
            <returns>Массив обработчиков</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeFileVault.GetPrefferedConnectionPoints(ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Возвращает точки соединения ФС в порядке убывания предпочтительности
            </summary>
            <param name="fileVault">Файловый сервер, чьи точки соединения интересуют</param>
            <returns>Массив точек, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeFileVault.GetPrefferedFileVaultsForDownload(ProgramSoyuz.PLM.Scripting.FileDesc)">
            <summary>
            Возвращает файловые сервера для скачивания тела файла в порядке убывания предпочтительности
            </summary>
            <param name="file">Описатель файла</param>
            <returns>Массив файловых серверов или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeFileVault.GetPrefferedFileVaultsForUpload(ProgramSoyuz.PLM.Scripting.FileDesc)">
            <summary>
            Возвращает файловые сервера для загрузки тела файла на ФС в порядке убывания предпочтительности
            </summary>
            <param name="file">Описатель файла</param>
            <returns>Массив файловых серверов или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeHttpHandler.HandleWebRequest(System.Net.HttpListenerContext,ProgramSoyuz.PLM.Scripting.WebUserSession)">
            <summary>
            Вызывает имеющиеся обработчики http запросов
            </summary>
            <param name="context">Контекст веб запроса</param>
            <param name="session">Сессия Web пользователя</param>
            <returns>true если обработчик нашелся и выполнил, что хотел</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ExternalServer">
            <summary>
            внешний сервер.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.CreateWrapper(ProgramSoyuz.DataModel.ExternalServerBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="ExternalServer">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.#ctor(ProgramSoyuz.DataModel.ExternalServerBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="ExternalServer">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.#ctor">
            <summary>
            Конструктор для новых объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.Invoke(System.String,System.Object)">
            <summary>
            Вызов метода, реализованного внешним сервером
            </summary>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.Invoke(System.String,System.Object,System.Int32)">
            <summary>
            Вызов метода, реализованного внешним сервером
            </summary>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <param name="maxTimeout">Максимальное время ожидания ответа от внешнего сервера</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.InvokeOneWay(System.String,System.Object)">
            <summary>
            Вызов метода, реализованного внешним сервером, без ожидания результата выполнения
            </summary>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer._connectionPoints">
            <summary>
            Список вычисленных точек соединения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.GetConnectionPoints">
            <summary>
            Разбор строки вида "1.2.3.4:1234, 5.6.7.8:1111" в список хостов с портами
            </summary>
            <returns>Список IP адресов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.GetConnectionPoints(System.String)">
            <summary>
            Разбор строки вида "1.2.3.4:1234, 5.6.7.8:1111" в список хостов с портами
            </summary>
            <returns>Список IP адресов</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.NameKey">
            <summary>
            Программное название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.NameUI">
            <summary>
            Пользовательское название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.Notes">
            <summary>
            Пользовательские заметки об иконке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.Params">
            <summary>
            Пользовательские дополнительные параметры закладки, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoints">
            <summary>
            Параметры подключения к внешнему серверу
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.GroupKey">
            <summary>
            Строка, определяющая очередность файловых серверов при выборе их для файловой операции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.IsRunning">
            <summary>
            Возвращает true если внешний сервер работает
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.IsOperational">
            <summary>
            True если удалённая сторона работоспособна и может выполнять запросы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionState">
            <summary>
            Статус состояния соединения с внешним сервером
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.ErrorInfo">
            <summary>
            Состояние взаимодействия с сервером
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.IsConnectionEnabled">
            <summary>
            Флаг установлен, если разрешено соединение с данным внешним сервером
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.IsClientConnection">
            <summary>
            Флаг установлен, если этот внешний сервер инициирует подключение к текущему
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.GUID">
            <summary>
            Глобально-уникальный идентификатор хранилища
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.Icon">
            <summary>
            Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.DisplayIcon">
            <summary>
            Иконка, показываемая в UI
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ExternalServer.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.CreationData.Params">
            <summary>
            Пользовательские дополнительные параметры объекта, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.CreationData.ConnectionPoints">
            <summary>
            Параметры подключения к внешнему серверу
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.CreationData.GroupKey">
            <summary>
            Строка, определяющая очередность файловых серверов при выборе их для файловой операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.CreationData.m_Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.CreationData.WriteTo(ProgramSoyuz.DataModel.ExternalServerBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.CreationData.Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint">
            <summary>
            Точка соединения с файловым сервером
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint._server">
            <summary>
            Владелец точки соединения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint._host">
            <summary>
            Имя или адрес хоста
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint._port">
            <summary>
            Номер порта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint._customData">
            <summary>
            Дополнительные данные из файла конфигурации ФС
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint._ipAddress">
            <summary>
            IP адрес
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint.#ctor(ProgramSoyuz.PLM.Scripting.ExternalServer,System.String,System.Int32,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="server">Внешний сервер</param>
            <param name="host">Имя или адрес порта</param>
            <param name="port">Номер порта</param>
            <param name="customData">Дополнительные данные из файла конфиуграции ФС</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint._resolveFromDns">
            <summary>
            Список точек соединения по DNS запросу
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint.ResolveFromDNS(System.Boolean)">
            <summary>
            Возвращает список IP адресов по результатам DNS запроса по <see cref="P:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint.Host"/>
            </summary>
            <param name="requery">true если требуется перезапросить DNS, иначе возвращется кешированное значение, если есть</param>
            <returns>Список IP адресов, как их вернул DNS запрос</returns>
            <remarks>Если ТС определяет конкретный IP адрес, то никаких запросов к DNS не происходит, и 
            возвращается массив из одного блока IP:порт</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint.Server">
            <summary>
            ФС владелец точки соединения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint.Host">
            <summary>
            Имя или адрес хоста
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint.Port">
            <summary>
            Номер порта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint.IpAddress">
            <summary>
            IP адрес, если он явно определён этой точкой.
            Если задано имя хоста, то null. В этом случае следует использовать метод <see cref="M:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint.ResolveFromDNS(System.Boolean)"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint.IsIPDefined">
            <summary>
             Возвращает true если точка соединения определяет конкретный IP адрес
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ExternalServer.ConnectionPoint.CustomData">
            <summary>
            Дополнительные данные из файла конфигурации ФС
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase">
            <summary>
            Базовый класс для кастомизации активных веб шаблонов.
            Для каждого случая генерации содержимого создается собственный экземпляр класса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase._source">
            <summary>
            Ссылка на ИО - исходник активного шаблона
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase._parent">
            <summary>
            Ссылка на родительский активный шаблон при формировании которого произошло включение данного
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase._obj">
            <summary>
            Объект, по которому генерируется содержимое
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase._index">
            <summary>
            Индекс экземпляра при выполнении групповой вставки <see cref="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.InsertMany(System.String,System.Collections.IEnumerable,System.Object[])"/>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase._items">
            <summary>
            Обший список объектов, по которым выполняется групповая вставка <see cref="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.InsertMany(System.String,System.Collections.IEnumerable,System.Object[])"/>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase._args">
            <summary>
            Набор параметров, переданный для генерирования содержимого
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase._sourceHtml">
            <summary>
            Исходный текст веб шаблона (HTML со вставками &lt;%...%&gt;)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase._resultHtml">
            <summary>
            Конечный текст веб шаблона (HTML с вычисленными выражениями)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase._context">
            <summary>
            Веб контекст обработки запроса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase._session">
            <summary>
            Веб сессия
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase._interpreter">
            <summary>
            Интерпретатор внедрённых выражений
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase._expressionFinderRegEx">
            <summary>
            Рег. эксп. для поиска выражений внутри HTML
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.PrepareInterpreter">
            <summary>
            Подготовка интерпретатора внедрённых выражений
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.#ctor(ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase,System.Int32,System.Object[],System.Object[])">
            <summary>
            Конструктор
            </summary>
            <param name="parent">Ссылка на родительский активный шаблон при формировании которого произошло включение данного</param>
            <param name="index">Индекс объекта в массиве <paramref name="objects"/>, по которому генерируется данный экземпляр</param>
            <param name="objects">Набор объектов для групповой вставки</param>
            <param name="args">Набор параметров, переданный для генерирования содержимого</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.InitForNextItem">
            <summary>
            Подготавливает экземпляр для обработки следующего объекта в серии
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.OnBeforeEvaluate">
            <summary>
            Вызывается перед началом обработки внедренных выражений
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.OnAfterEvaluate">
            <summary>
            Вызывается после обработки внедренных выражений
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.ResolveTemplate(System.String)">
            <summary>
            Вызывается в ходе обработки внедренных выражений для поиска запрошенного активного шаблона
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.ResolveTemplate(System.String,System.Object[],System.Object[])">
            <summary>
            Вызывается в ходе обработки внедренных выражений для поиска запрошенного активного шаблона
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.Insert(System.String,System.Object,System.Object[])">
            <summary>
            Одиночная вставка содержимого указанного шаблона с указанным набором параметров
            </summary>
            <param name="name">Имя шаблона</param>
            <param name="obj">Объект, для которого вычисляется текст</param>
            <param name="args">Дополнительные параметры шаблона</param>
            <returns>Вычисленную строку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.InsertMany(System.String,System.Collections.IEnumerable,System.Object[])">
            <summary>
            Множественная вставка содержимого указанного шаблона с указанным набором параметров
            </summary>
            <param name="name">Имя шаблона</param>
            <param name="objects">Набор объектов, для каждого из которых будет выполнена операция вставки</param>
            <param name="args">Дополнительные параметры шаблона</param>
            <returns>Вычисленную строку</returns>
        </member>
        <!-- Некорректный XML-комментарий для члена "M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.Evaluate" проигнорирован -->
        <member name="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.CheckExpressions(System.Int32@,System.String[]@)">
            <summary>
            Проверка выражений на компилируемость
            </summary>
            <param name="found">На выходе число найденных выражений</param>
            <param name="errors">На выходе список ошибок компиляции выражений</param>
            <returns>true если проблем не обнаружено</returns>
        </member>
        <!-- Некорректный XML-комментарий для члена "M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.Evaluate(System.Net.HttpListenerContext,ProgramSoyuz.PLM.Scripting.WebUserSession)" проигнорирован -->
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.Source">
            <summary>
            Ссылка на ИО - исходник активного шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.Parent">
            <summary>
            Ссылка родительский активный шаблон при формировании которого произошло включение данного
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.Obj">
            <summary>
            Объект, по которому генерируется содержимое
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.Index">
            <summary>
            Индекс экземпляра при выполнении групповой вставки <see cref="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.InsertMany(System.String,System.Collections.IEnumerable,System.Object[])"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.Items">
            <summary>
            Обший список объектов, по которым выполняется групповая вставка <see cref="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.InsertMany(System.String,System.Collections.IEnumerable,System.Object[])"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.IsFirst">
            <summary>
            Возвращает true если этот экземпляр первый в серии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.IsLast">
            <summary>
            Возвращает true если этот экземпляр последний в серии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.IsSingle">
            <summary>
            Возвращает true если этот экземпляр единственный в серии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.Args">
            <summary>
            Набор параметров, переданный для генерации содержимого
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.SourceHtml">
            <summary>
            Исходный текст веб шаблона (HTML со вставками &lt;%...%&gt;)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.ResultHtml">
            <summary>
            Конечный текст веб шаблона (HTML с вычисленными выражениями)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.Context">
            <summary>
            Веб контекст обработки запроса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase.Session">
            <summary>
            Веб сессия
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase`1">
            <summary>
            Базовый класс для кастомизации активных веб шаблонов.
            Для каждого случая генерации содержимого создается собственный экземпляр класса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase`1._expressionsCache">
            <summary>
            Кеш скомпилированных внедрённых выражений
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase`1.#ctor(ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase,System.Int32,System.Object[],System.Object[])">
            <summary>
            Конструктор
            </summary>
            <param name="parent">Ссылка на родительский активный шаблон при формировании которого произошло включение данного</param>
            <param name="index">Индекс объекта в массиве <paramref name="objects"/>, по которому генерируется данный экземпляр</param>
            <param name="objects">Набор объектов для групповой вставки</param>
            <param name="args">Набор параметров, переданный для генерирования содержимого</param>
        </member>
        <!-- Некорректный XML-комментарий для члена "M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase`1.Evaluate" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase`1.CheckExpressions(System.Int32@,System.String[]@)" проигнорирован -->
        <member name="T:ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase`1.EmbeddedExpression">
            <summary>
            Делегат для вызова внедренных выражений
            </summary>
            <param name="o">Экземпляр этого объекта с контекстом вызова</param>
            <returns>Вычисленная строка</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ActiveWebTemplate">
            <summary>
            Класс-кастомизатор активного шаблона по умолчанию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ActiveWebTemplate.#ctor(ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase,System.Int32,System.Object[],System.Object[])">
            <summary>
            Конструктор
            </summary>
            <param name="parent">Ссылка на родительский активный шаблон при формировании которого произошло включение данного</param>
            <param name="index">Индекс объекта в массиве <paramref name="objects"/>, по которому генерируется данный экземпляр</param>
            <param name="objects">Набор объектов для групповой вставки</param>
            <param name="args">Набор параметров, переданный для генерирования содержимого</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CustomizationMethod">
            <summary>
            Функции вызываемые в скриптах кастомизации шаблонов и атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_Validate">
            <summary>
            Функция валидации значения атрибута 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_Calculate">
            <summary>
            Функция вычисления значения атрибута 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_ResolveAttribute">
            <summary>
            Функция вычисления ссылки на атрибут другого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_ResolveAttributeSearchItem">
            <summary>
            Функция корректировки поискового запроса по атрибуту другого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_CanConvertInput">
            <summary>
            Функция проверки пригодности значения для присваивания атрибуту
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_ConvertInput">
            <summary>
            Функция конвертации значения атрибута в пригодное для присваивания атрибуту
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_ValidateInput">
            <summary>
            Функция валидации значения атрибута во время ввода
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_GetSelectIORange">
            <summary>
            Функция формирующая списки контейнеров, определяющих диапазон поиска ИО, а так же
            список идентификаторов контейнеров, поиск в которых должен быть включен по умолчанию
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_GetSelectIOList">
            <summary>
            Функция формирующая список объектов, из которых можно выбрать значение ссылки/элемента множества
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_GetSelectNamedValueRange">
            <summary>
            Функция формирующая корень ветки именованных значений, отображаемых
            в выпадающем списке атрибута "перечисление"
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_GetSelectTemplateRange">
            <summary>
            Функция формирующая корень ветки шаблонов, или список значений, отображаемых
            в выпадающем списке атрибута "ссылка на шаблон/доп.класс"
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_GetSelectIconRange">
            <summary>
            Функция формирующая список значений, отображаемых
            в выпадающем списке атрибута "ссылка на иконку"
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_GetSearchableRange">
            <summary>
            Функция формирующая список значений, отображаемых
            в выпадающем списке атрибута в конструкторе поисковых запросов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_IsAttributeEditableInUI">
            <summary>
            Определяет является ли атрибут доступным только для чтения 
            в пользовательском интерфейсе стандартной карточки.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_IsAttributeVisibleInUI">
            <summary>
            Определяет является ли атрибут скрытым
            в пользовательском интерфейсе стандартной карточки.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_OnAttributeChanged">
            <summary>
            Функция вызывается как нотификация об изменении атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_PrepareDisplayParams">
            <summary>
            Подготовка параметров отображения атрибута при формировании карточки указанного объекта.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_PrepareEditor">
            <summary>
            Подготовка редактора атрибута при формировании карточки указанного объекта.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_OnHyperlink">
            <summary>
            Обработчик нажатия на гиперссылку для HTML/RTF атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_OnHyperlinkTooltip">
            <summary>
            Обработчик нажатия на гиперссылку для HTML/RTF атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_BuildUniquenessValue">
            <summary>
            Функция вычисления значения атрибута для помещения в пространство уникальности
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_GetValue">
            <summary>
            Функция вычисления значения простого вспомогательного атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_SetValue">
            <summary>
            Функция установки значения простого вспомогательного атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_GetUIData">
            <summary>
            Функция вычисления представления объекта в UI
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributeDef_Compare">
            <summary>
            Функция сравнения двух объектов по атрибуту
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnInitialize">
            <summary>
            Функция подготовки объекта данного шаблона 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnInitializeFrom">
            <summary>
            Функция подготовки объекта данного шаблона по другому объекту (копирование)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_Validate">
            <summary>
            Функция валидации объекта данного шаблона 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_Calculate">
            <summary>
            Функция вычисления значения атрибута 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_ResolveAttribute">
            <summary>
            Функция вычисления ссылки на атрибут другого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_ResolveAttributeSearchItem">
            <summary>
            Функция корректировки поискового запроса по атрибуту другого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_CanConvertInput">
            <summary>
            Функция проверки пригодности значения для присваивания атрибуту
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_ConvertInput">
            <summary>
            Функция конвертации значения атрибута в пригодное для присваивания атрибуту
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnAttributeChanged">
            <summary>
            Функция вызывается как нотификация об изменении какого-либо атрибута объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnBeforeErase">
            <summary>
            Функция подготовки к сохранению объекта данного шаблона 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnBeforeSave">
            <summary>
            Функция подготовки к сохранению объекта данного шаблона 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnBeforeCommit">
            <summary>
            Вызывается после сохранением в базу перед коммитом транзакции базы
            В этот момент уже известен ID нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnAfterCommit">
            <summary>
            Вызывается на сервере после фиксации транзакции в базе и после обновления серверного кеша
            Операция сохранения в этот момент считается завершенной. Действия внутри этого обработчика
            похожи на серверный процесс, выполняющийся однако тем же потоком и в той же эксклюзивной блокировке,
            что и основная операция сохранения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_PreCheckOperation">
            <summary>
            Проверка возможности выполнения указанной операции с данным объектом.
            Вызывается до проверок ролевой системы доступа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_CheckOperation">
            <summary>
            Проверка возможности выполнения указанной операции с данным объектом.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_PreCheckCustomOperation">
            <summary>
            Проверка возможности выполнения указанной операции с данным объектом.
            Вызывается до проверок ролевой системы доступа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_CheckCustomOperation">
            <summary>
            Проверка возможности выполнения указанной операции с данным объектом.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_IsCreatableFromUI">
            <summary>
            Проверка возможности создания дочернего объекта через пользовательский интерфейс
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_GetUIData">
            <summary>
            Функция вычисления представления объекта в UI
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnUpdated">
            <summary>
            Вызывается на клиенте непосредственно после встраивания обновлённого объекта
            в клиентский кеш
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnChildrenUpdated">
            <summary>
            Вызывается на клиенте непосредственно после встраивания изменений среди дочерних объектов
            в клиентский кеш
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_IsAttributeEditableInUI">
            <summary>
            Определяет является ли атрибут доступным только для чтения 
            в пользовательском интерфейсе стандартной карточки.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_IsAttributeVisibleInUI">
            <summary>
            Определяет является ли атрибут скрытым
            в пользовательском интерфейсе стандартной карточки.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_PrepareDisplayParams">
            <summary>
            Подготовка параметров отображения атрибута при формировании карточки указанного объекта.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_PrepareEditor">
            <summary>
            Подготовка редактора атрибута при формировании карточки указанного объекта.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_IsPageVisibleInUI">
            <summary>
            Определяет является ли атрибут скрытым
            в пользовательском интерфейсе стандартной карточки.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnBeforeDisplayInUI">
            <summary>
            Вызывается клиентским кодом UI перед показом карточки объекта.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnAttributeControlCreated">
            <summary>
            Вызывается клиентским кодом UI перед показом редактора атрибута на карточке объекта.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnBeforeSendChangesToServer">
            <summary>
            Вызывается внутри скриптового (клиентского и серверного) кода перед передачей 
            серверу команды на изменение объектов.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_OnBeforeSendEraseToServer">
            <summary>
            Вызывается внутри скриптового (клиентского и серверного) кода перед передачей 
            серверу команды на удаление объектов.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_Invoke">
            <summary>
            Пользовательская функция объекта.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_CheckIntegrity">
            <summary>
            Проверяет объект на предмет наличия логических проблем
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_ResolveClassAttributeOwner">
            <summary>
            Функция определения места хранения для атрибута доп класса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_ResolveClassAttributeSearchItem">
            <summary>
            Функция корректировки поискового запроса по атрибуту доп класса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_CalcDropEffects">
            <summary>
            Получение доступных DND операций
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_InsertDropData">
            <summary>
            Получение доступных DND операций
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_FileSavedToVault">
            <summary>
            Подтверждение о получении файла файловым хранилищем
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_FileUploadConfirmed">
            <summary>
            Подтверждение о получении файла файловым хранилищем
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_GetVirtualAttributeDefs">
            <summary>
            Формирование виртуальных определений атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_BuildPrintingPageContents">
            <summary>
            Отрисовка объекта на поле интерактивного документа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_Draw">
            <summary>
            Отрисовка объекта на поле интерактивного документа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.Template_HitTest">
            <summary>
            Отрисовка объекта на поле интерактивного документа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UserTemplate_InitSession">
            <summary>
            Вызывается на клиенте при запуске клиента в нормальном режиме
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UserTemplate_BeforeSessionConnected">
            <summary>
            Вызывается на сервере при создании пользовательской сессии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UserTemplate_SessionConnected">
            <summary>
            Вызывается на сервере при создании пользовательской сессии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UserTemplate_SessionDisconnected">
            <summary>
            Вызывается на сервере при завершении пользовательской сессии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_CanCreate">
            <summary>
            Вызывается на клиенте для определения возможности запуска задачи для указанных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_OnCreate">
            <summary>
            Вызывается на клиенте при создании задачи по указанным объектам
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_OnTimeout">
            <summary>
            Периодически вызывается на сервере для каждой активной задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_OnChildTaskCompleted">
            <summary>
            Вызывается на сервере при завершении дочерней задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_OnWorkItemCompleted">
            <summary>
            Вызывается на сервере при завершении нагрузки порожденной этой задачей
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_UpdateNodeTransitionState">
            <summary>
            Вызывается на клиенте при настройке меню переходов с этапа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_OnBeforeWorkItemCompleted">
            <summary>
            Вызывается на сервере перед завершением нагрузки, порожденной этой задачей
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_OnDiagramNodeActivated">
            <summary>
            Нотификация об активации очередного этапа диаграммы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_OnDiagramNodePassed">
            <summary>
            Нотификация о завершении очередного этапа диаграммы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_ResolveOutcomingLinks">
            <summary>
            Перечисляет исходящие связи, по которым диаграмме следует продвинуться дальше.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_OnDiagramDeadlock">
            <summary>
            Вызывается на сервере при невозможности дальнейшего продвижения диаграммы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_BuildDiagramNodeContentFields">
            <summary>
            Вызывается на клиенте при отрисовке этапа диаграммы процесса для формирования списка дополнительных полей, 
            которые следует отобразить внутри прямоугольника этапа диаграммы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_PrepareDiagramNodeVisualizationStyle">
            <summary>
            Вызывается на клиенте при отрисовке этапа диаграммы процесса для формирования списка дополнительных полей, 
            которые следует отобразить внутри прямоугольника этапа диаграммы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.TaskTemplate_CalcWorkFlowWarnings">
            <summary>
            Вызывается на сервере для определения проблем диаграммы, о которых следует оповестить супервизоров
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.WorkItemTemplate_ManageMailShortcuts">
            <summary>
            Вызывается на сервере для определения проблем диаграммы, о которых следует оповестить супервизоров
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AccessRule_Check">
            <summary>
            Функция проверки возможности выполнения операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AccessRule_CheckCustomOperation">
            <summary>
            Функция проверки возможности выполнения пользовательской операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UISingleObjectCommand_IsValid">
            <summary>
            Функция определения видимости команды для указанного объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UISingleObjectCommand_UpdateState">
            <summary>
            Функция определения состояния UI команды для выделенных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UISingleObjectCommand_Invoke">
            <summary>
            Функция вызова UI команды для выделенных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UIMultipleObjectCommand_IsValid">
            <summary>
            Функция определения видимости команды для указанных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UIMultipleObjectCommand_UpdateState">
            <summary>
            Функция определения состояния UI команды для выделенных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UIMultipleObjectCommand_Invoke">
            <summary>
            Функция вызова UI команды для выделенных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributableObjectEvent_IsApplicable">
            <summary>
            Функция определения применимости данного события к объекту
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributableObjectEvent_CheckState">
            <summary>
            Функция определения факта возникновения события объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.AttributableObjectEvent_Invoke">
            <summary>
            Функция вызова обработчика события объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UIAttributeCommand_IsValid">
            <summary>
            Функция определения видимости команды для указанного объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UIAttributeCommand_UpdateState">
            <summary>
            Функция определения состояния UI команды для выделенных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UIAttributeCommand_Invoke">
            <summary>
            Функция вызова UI команды для выделенных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UIListAttributeCommand_UpdateState">
            <summary>
            Функция определения состояния UI команды для выделенных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UIListAttributeCommand_Invoke">
            <summary>
            Функция вызова UI команды для выделенных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UISetAttributeCommand_UpdateState">
            <summary>
            Функция определения состояния UI команды для выделенных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.UISetAttributeCommand_Invoke">
            <summary>
            Функция вызова UI команды для выделенных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.WorkSpaceScheme_IsValid">
            <summary>
            Функция определения доступности схемы для данного объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.WorkSpaceScheme_CalcSelf">
            <summary>
            Функция вычисления виртуального корня схемы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.WorkSpaceScheme_OnEditSchemeParams">
            <summary>
            Функция редактирования параметров схемы для данного элемента пользовательской среды
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_IsValid">
            <summary>
            Функция определения доступности автоматической задачи в текущем окружении
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_Invoke">
            <summary>
            Функция вызова автоматической задачи на исполнение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_InvokeMethod">
            <summary>
            Функция вызова скриптового метода
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_CalcDropEffects">
            <summary>
            Получение доступных DND операций
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_InsertDropData">
            <summary>
            Получение доступных DND операций
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_GetPrefferedConnectionPoints">
            <summary>
            Возвращает точки соединения ФС в порядке убывания предпочтительности
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_GetPrefferedFileVaultsForDownload">
            <summary>
            Возвращает файловые сервера для скачивания тела файла в порядке убывания предпочтительности
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_GetPrefferedFileVaultsForUpload">
            <summary>
            Возвращает файловые сервера для загрузки тела файла на ФС в порядке убывания предпочтительности
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_HandleWebRequest">
            <summary>
            Обработчик HTTP запросов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_IsValidFor">
            <summary>
            Контекстное меню проводника: показывать для для указанных файлов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_IsEnabledFor">
            <summary>
            Контекстное меню проводника: разрешить ли для для указанных файлов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_InvokeFor">
            <summary>
            Контекстное меню проводника: выполнить для указанных файлов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_InvokeRemote">
            <summary>
            Функция вызова запроса к удаленному серверу
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_OnBeforeInvoke">
            <summary>
            Функция предварительной проверки запроса к удаленному серверу
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_OnAfterInvoke">
            <summary>
            Функция предварительной проверки ответа на запрос к удаленному серверу
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_InvokeRemoteSession">
            <summary>
            Функция вызова запроса к пользовательской сессии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_OnBeforeInvokeSession">
            <summary>
            Функция предварительной проверки запроса к пользовательской сессии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.ScriptingTask_OnAfterInvokeSession">
            <summary>
            Функция предварительной проверки ответа на запрос к пользовательской сессии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationMethod.IndexDef_Initialize">
            <summary>
            Функция построения индекса
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ReplaceMasterAttribute">
            <summary>
            Атрибут для кода кастомизации. Помечает обработчик модификатора шаблона как заменяющий соответствующий обработчик мастера.
            При наличии такого атрибута у метода кастомизации обработчик мастер-шаблона не вызывается
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ConfigurationManager">
            <summary>
            Класс, управляющий модулями конфигурации и скриптами кастомизации шаблонов
            </summary>
            <summary>
            Класс, управляющий модулями конфигурации и скриптами кастомизации шаблонов
            </summary>
            <summary>
            Класс, управляющий модулями конфигурации и скриптами кастомизации шаблонов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ServerModuleTarget">
            <summary>
            Ключ центрального сервера, определяющий модули, подходящие для загрузки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ConfigurationBaseFolderName">
            <summary>
            Имя подкаталога с файлами конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_CLRVersion">
            <summary>
            Версия текущего вреймворка. Используется для компиляции кода кастомизации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager._customizationReferences">
            <summary>
            Набор ссылок на другие сборки, необходимые для компиляции кода кастомизации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager._customizationCustomReferences">
            <summary>
            Набор ссылок на дополнительно подключенные через реестр сборки, необходимые для компиляции кода кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetCustomizationReferences">
            <summary>
            Набор ссылок на другие сборки, необходимые для компиляции кода кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetDefaultReferences">
            <summary>
            Набор ссылок на другие сборки, необходимые для компиляции кода кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetCustomReferences">
            <summary>
            Набор ссылок на другие сборки, необходимые для компиляции кода кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.#cctor">
            <summary>
            Статический конструктор. Здесь ставим общий обработчик для модификации поиска ненайденных сборок
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ReferenceAssemblyResolve(System.Object,System.ResolveEventArgs)">
            <summary>
            Обработчик разбирается со сборками подключенными к скриптам кастомизации через реестр
            Загружаем их явно по тому пути что прописан в реестре
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager._customizationHeader">
            <summary>
            Блок кода, предваряющий классы кастомизаторов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetDefaultImplementation(ProgramSoyuz.PLM.Scripting.CustomizationMethod[])">
            <summary>
            Формирует реализацию по умолчанию для запрошенных методов кастомизации
            </summary>
            <param name="handlers">массив идентификаторов интересующих методов кастомизации</param>
            <returns>Строку с кодом</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_TestCompilationDomain">
            <summary>
            Домен, в котором производится проверка компилируемости кода
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_pTestCompilationHelper">
            <summary>
            Ссылка на вспомогательный экземпляр этого класса в служебном домене
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_pCodeProvider">
            <summary>
            Компилятор кода
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_pCompilationLock">
            <summary>
            Объект для блокировки попытки одновременной компиляции несколькими потоками сразу
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.CheckCustomizationCode(System.String,System.CodeDom.Compiler.CompilerError[]@)">
            <summary>
            Компиляция получившегося класса
            </summary>
            <param name="csCode">Текст программы</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.CheckCustomizationCode(System.String,ProgramSoyuz.PLM.Scripting.CustomizationMethod[],ProgramSoyuz.PLM.Scripting.CustomizationMethod[]@,System.CodeDom.Compiler.CompilerError[]@)">
            <summary>
            Компиляция и проверка получившегося класса на наличие указанных функций
            </summary>
            <param name="csCode">Текст программы</param>
            <param name="checkHandlers">Список методов, наличие которых предполагается в скомпилированном классе</param>
            <param name="missingHandlers">На выходе получается список методов из <paramref name="checkHandlers"/>, 
            которые не нашлись в скомпилированном классе</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_TestCompilationDomainUsageCounter">
            <summary>
            Счетчик компиляций для периодического освобождения накопленных сборок, сборок, тестировавшихся на компилируемость
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.PrepareTestCompilationDomain">
            <summary>
            Подготовка домена для проверочной компиляции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.DoCheckCustomizationCode(System.String,ProgramSoyuz.PLM.Scripting.CustomizationMethod[],ProgramSoyuz.PLM.Scripting.CustomizationMethod[]@,System.CodeDom.Compiler.CompilerError[]@)">
            <summary>
            Компиляция и проверка получившегося класса на наличие указанных функций
            </summary>
            <param name="csCode">Текст программы</param>
            <param name="checkHandlers">Список методов, наличие которых предполагается в скомпилированном классе</param>
            <param name="missingHandlers">На выходе получается список методов из <paramref name="checkHandlers"/>, 
            которые не нашлись в скомпилированном классе</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.InitializeLifetimeService">
            <summary>
            Подготавливает механизм отслеживания времени жизни плагина
            </summary>
            <returns></returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_Customizators">
            <summary>
            Индекс для скомпилированных объектов кода кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetScriptingTaskCustomizator(System.UInt32)">
            <summary>
            Возвращает скомпилированный экземпляр скриптовой задачи по Id
            </summary>
            <param name="id">Идентификатор объекта</param>
            <returns>Экземпляр скомпилированнго объекта кастомизации</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetDragDropHandler(System.UInt32)">
            <summary>
            Возвращает скомпилированный экземпляр скриптовой задачи обработчика DND по Id
            </summary>
            <param name="id">Идентификатор объекта скриптовой задачи, реализующей обработчик DND</param>
            <returns>Экземпляр скомпилированнго объекта кастомизации</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetFileVaultManager(System.UInt32)">
            <summary>
            Возвращает скомпилированный экземпляр скриптовой задачи кастомизатора выбора файловых хранилищ по Id
            </summary>
            <param name="id">Идентификатор объекта скриптовой задачи, реализующей обработчик выбора файловых хранилищ</param>
            <returns>Экземпляр скомпилированного объекта кастомизации</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetHttpHandler(System.UInt32)">
            <summary>
            Возвращает скомпилированный экземпляр скриптовой задачи обработчика http запроса
            </summary>
            <param name="id">Идентификатор объекта скриптовой задачи, реализующей обработчик веб запросов</param>
            <returns>Экземпляр скомпилированного объекта кастомизации</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetExternalServerHandler(System.UInt32)">
            <summary>
            Возвращает скомпилированный экземпляр скриптовой задачи обработчика запроса к внешнему серверу
            </summary>
            <param name="id">Идентификатор объекта скриптовой задачи, реализующей обработчик запроса к внешнему серверу</param>
            <returns>Экземпляр скомпилированного объекта кастомизации</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetUserSessionHandler(System.UInt32)">
            <summary>
            Возвращает скомпилированный экземпляр скриптовой задачи обработчика запроса к пользовательской сессии
            </summary>
            <param name="id">Идентификатор объекта скриптовой задачи, реализующей обработчик запроса к пользовательской сессии</param>
            <returns>Экземпляр скомпилированного объекта кастомизации</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetShellContextMenuHandler(System.UInt32)">
            <summary>
            Возвращает скомпилированный экземпляр скриптовой задачи обработчика контекстного меню проводника
            </summary>
            <param name="id">Идентификатор объекта скриптовой задачи, реализующей обработчик</param>
            <returns>Экземпляр скомпилированного объекта кастомизации</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetIndexDefCustomizator(System.UInt32)">
            <summary>
            Возвращает скомпилированный экземпляр индекса по Id
            </summary>
            <param name="id">Идентификатор объекта</param>
            <returns>Экземпляр скомпилированного объекта кастомизации</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetWorkSpaceSchemeCustomizator(System.UInt32)">
            <summary>
            Возвращает скомпилированный экземпляр схемы рабочего пространства по Id
            </summary>
            <param name="id">Идентификатор схемы</param>
            <returns>Экземпляр схемы рабочего пространства</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetUICommandCustomizator(System.UInt32)">
            <summary>
            Возвращает скомпилированный экземпляр UI команды по Id
            </summary>
            <param name="id">Идентификатор схемы</param>
            <returns>Экземпляр кастомизатора</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetAccessRuleCustomizator(System.UInt32)">
            <summary>
            Возвращает скомпилированный экземпляр кастомизатора правила доступа по Id
            </summary>
            <param name="id">Идентификатор правила доступа</param>
            <returns>Экземпляр кастомизатора</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_CustomizationCounter">
            <summary>
            Порядковый номер изменения кастомизации в текущей сессии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_CustomizatorsLocker">
            <summary>
            Объект для блокировки доступа к спискам кастомизаторов и прочего.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.CompileCustomizationCode(System.String,System.CodeDom.Compiler.CompilerError[]@,System.Collections.Generic.IEnumerable{ProgramSoyuz.DataModel.DataObject})">
            <summary>
            Компиляция кода кастомизации
            </summary>
            <param name="csCode">Текст программы</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <param name="objectsToRemoveCustomization">Список объектов, кастомизация которых была удалена</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.LoadExternalCustomization(System.String,System.Boolean)">
            <summary>
            Переключается на использование указанного файла в качестве кода кастомизации
            </summary>
            <param name="path">Путь к файлу кастомизации</param>
            <param name="useShadowCopy">Если true, файл копируется во временный каталог и загружает его оттуда</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ImportCustomizationAssembly(System.Reflection.Assembly,System.Boolean)">
            <summary>
            Читает сборку катомизации, раскладывая объекты кастомизации по индексу
            </summary>
            <param name="assy">Сборка кастомизации</param>
            <param name="dropExistingCustomizators">true если имевшиеся ранее кастомизаторы надо сброить</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.CheckModificatorReplacedMethods(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Выполняет проверку обработчиков переопределенных модификаторами шаблонов, подготавливая кешированные списки
            таких методов.
            </summary>
            <param name="templateMastersToCheck">Список проверяемых мастер-шаблонов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.CheckModificatorReplacedMethods(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributeDef})">
            <summary>
            Выполняет проверку обработчиков переопределенных модификаторами шаблонов, подготавливая кешированные списки
            таких методов.
            </summary>
            <param name="attributeMastersToCheck">Список проверяемых мастер-шаблонов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetReplacingHandlers(ProgramSoyuz.PLM.Scripting.CustomizationBase,System.Collections.Generic.Dictionary{System.String,ProgramSoyuz.PLM.Scripting.CustomizationMethod})">
            <summary>
            Просматривает запрошенные методы у кастомизатора на предмет наличия атрибута <see cref="T:ProgramSoyuz.PLM.Scripting.ReplaceMasterAttribute"/>.
            Возвращает сортированный массив идентификаторов таких методов
            </summary>
            <param name="customizator">Проверяемый кастомизатор</param>
            <param name="checkHandlers">Список имён подлежащих проверке методов (словарь пар, имя-идентификатор)</param>
            <returns>Сортированный массив с найденными методами</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetCustomizatorBaseTypeFor(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32,ProgramSoyuz.PLM.Scripting.ScriptingObject@)">
            <summary>
            Возвращает ожидаемый базовый тип для кастомизатора указанного объекта
            </summary>
            <param name="entity">Тип сущности объекта</param>
            <param name="id">Идентификатор объекта</param>
            <param name="obj">На выходе объект, чья кастомизация</param>
            <returns>Базовый тип для кастомизатора объекта</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager._activeWebTemplateTypesCache">
            <summary>
            Кеш кастомизаторов активных веб шаблонов по идентификатору образующего ИО
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.DropActiveWebTemplate(System.UInt32)">
            <summary>
            Сбрасывает кеш кода кастомизации указанного активного веб шаблона (по идентификатору ИО-исходника)
            </summary>
            <param name="id">Идентификатор ИО-исходника активного шаблона</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GetActiveWebTemplate(ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.PLM.Scripting.ActiveWebTemplateBase,System.Int32,System.Object[],System.Object[])">
            <summary>
            Возвращает вновь созданный экземпляр активного веб шаблона по ИО-исходнику и параметрам конкретного экземпляра
            </summary>
            <param name="templateIO">ИО-исходник веб шаблона</param>
            <param name="parent">Родительский экземпляр</param>
            <param name="index">Индекс объекта в серии</param>
            <param name="items">Набор объектов серии</param>
            <param name="args">Параметры вставки</param>
            <returns>Вновь созданный экземпляр активного веб шаблона</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.BuildActiveWebTemplateCode(ProgramSoyuz.PLM.Scripting.InfoObject,System.String@,System.Int32@)">
            <summary>
            Формирует фактический код класса активного шаблона
            </summary>
            <param name="templateIO">Объект-исходник веб шаблона</param>
            <param name="className">На выходе имя сформированного класса</param>
            <param name="headerLines">На выходе число строк перед кодом кастомизации</param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.CheckActiveWebTemplate(ProgramSoyuz.PLM.Scripting.InfoObject,System.CodeDom.Compiler.CompilerError[]@,System.Int32@)">
            <summary>
            Проверка компилируемости кода кастомизации активного веб-шаблона
            </summary>
            <param name="templateIO">Исходник веб шаблона</param>
            <param name="errors">на выходе список ошибок и предупреждений</param>
            <param name="headerLines">На выходе число технических строк перед пользовательским кодом</param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.CompileActiveWebTemplate(System.String,System.CodeDom.Compiler.CompilerError[]@)">
            <summary>
            Компиляция кода кастомизации активного веб шаблона
            </summary>
            <param name="csCode">Текст класса</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <returns>СОбранную сборку, либо null если не получилось</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_CustomizationDebuggingBasePath">
            <summary>
            Путь каталога, в подкаталоги которого производится дебаговый билд конфигурации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.GenerateTempSubFolder(System.String,System.String)">
            <summary>
            Создает очередной каталог для отладочной сборки кода кастомизации
            </summary>
            <param name="baseRootFolder">Базовый каталог, в котором создается временный. Если указан null, используется системный Temp</param>
            <param name="baseSubFolder">Подкаталог внутри базового</param>
            <returns>Вновь созданный каталог</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.PurgeDebugSubFolders">
            <summary>
            Удаляет прошлые каталоги компиляции кода кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.PurgeTempSubFolders(System.String,System.String)">
            <summary>
            Удаляет прошлые каталоги компиляции кода кастомизации
            </summary>
            <param name="baseRootFolder">Базовый каталог, в котором создается временный. Если указан null, используется системный Temp</param>
            <param name="baseSubFolder">Подкаталог внутри базового</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.#ctor(System.String[])">
            <summary>
            Используется для создания экземпляра менеджера в домене проверочной компиляции скриптов кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.Init(System.String)">
            <summary>
            Серверная инициализация
            </summary>
            <param name="subFolder">Подкаталог, относительно этой сборки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.InitAsClient(System.String)">
            <summary>
            Клиентская инициализация
            </summary>
            <param name="subFolder">Подкаталог, относительно папки в ProgramData</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.Shutdown">
            <summary>
            Сообщаем модулям о завершении работы
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ClearAllCustomizators">
            <summary>
            Сбрасывает объекты-кастомизаторы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager._templateModuleCustomizators">
            <summary>
            Индекс для модулей - кастомизаторов шаблонов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager._roleModuleCustomizators">
            <summary>
            Индекс для модулей - кастомизаторов ролей
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.RebuildTemplateCustomizatorsCache">
            <summary>
            Перестраивает индекс кастомизаторов шаблонов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.RebuildRoleCustomizatorsCache">
            <summary>
            Перестраивает индекс кастомизаторов шаблонов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_aModules">
            <summary>
            Список загруженных модулей конфигурации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ReleaseModules(ProgramSoyuz.PLM.Scripting.IModule[])">
            <summary>
            Удаляет указанные объекты из списка загруженных модулей
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_aWorkSpaceSchemes">
            <summary>
            Список загруженных модулей конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_aUICommands">
            <summary>
            Список загруженных UI команд
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_aUIPlugins">
            <summary>
            Список загруженных UI плагинов для пользовательского интерфейса PLM клиента
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_ModulesLoaded">
            <summary>
            Флаг установлен, если был загружен хотя бы один модуль
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.LoadClientModule(ProgramSoyuz.PLM.Scripting.PluginFileDescriptor)">
            <summary>
            Загружает модули из указанного файла в основной либо во вспомогательный домен
            </summary>
            <param name="pFile">Файл для загрузки</param>
            <returns>Возвращает список загруженных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.LoadServerModule(ProgramSoyuz.PLM.Scripting.PluginFileDescriptor)">
            <summary>
            Загружает модули из указанного файла в основной домен
            </summary>
            <param name="pFile">Файл для загрузки</param>
            <returns>Возвращает список загруженных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.DoLoadModule``1(System.String,System.Type)">
            <summary>
            Функция для загрузки модулей из указанной сборки
            </summary>
            <param name="csPath">Путь к dll файлу</param>
            <param name="customAttributeType">Тип атрибута, необходимый для загрузки класса модуля</param>
            <returns>Возвращает список загруженных объектов</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_pManagerHelper_ScanFiles">
            <summary>
            Ссылка на вспомогательный экземпляр этого класса в служебном домене предварительного чтения файлов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_csBaseFolder">
            <summary>
            Каталог, за которым следит этот класс
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_aFileDescriptors">
            <summary>
            Список файловых объектов, найденных менеджером
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.Initialize">
            <summary>
            Чтение содержимого наблюдаемого каталога
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.RescanChanges(ProgramSoyuz.PLM.Scripting.PluginFileDescriptor[]@,ProgramSoyuz.PLM.Scripting.PluginFileDescriptor[]@,ProgramSoyuz.PLM.Scripting.PluginFileDescriptor[]@)">
            <summary>
            Повторно сканирует наблюдаемый каталог на предмет поиска изменений в файлах
            </summary>
            <param name="aAdded">Список добавленных файлов</param>
            <param name="aChanged">Список измененных файлов</param>
            <param name="aErased">Список удаленных файлов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ScanWatchedFolder(ProgramSoyuz.PLM.Scripting.ConfigurationManager.Changes)">
            <summary>
            Чтение содержимого наблюдаемого каталога
            </summary>
            <param name="changes">Список обнаруженных изменений</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.CreateFileDescriptor(System.String)">
            <summary>
            Создает описатель файла-плагина. Используется на клиенте
            </summary>
            <param name="csRelativePath">Относительный путь к файлу</param>
            <returns>Новый описатель или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.CreateFileDescriptor(System.String,System.Byte[])">
            <summary>
            Создает описатель файла-плагина, попутно создавая сам файл в указанном месте
            </summary>
            <param name="csRelativePath">Относительный путь к файлу</param>
            <param name="fileBody">тело файла плагина</param>
            <returns>Новый описатель или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.DoScanWatchedFolder(System.IO.DirectoryInfo,ProgramSoyuz.PLM.Scripting.ConfigurationManager.Changes)">
            <summary>
            Рекурсивная функция для чтения сведений о файлах из указанного каталога и всех дочерних каталого
            </summary>
            <param name="pDirectory">Каталог, в котором читаем файлы</param>
            <param name="changes">Список обнаруженных изменений</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.RetrieveFileMetaInfo(System.String,ProgramSoyuz.PLM.Scripting.PluginFileDescriptor)">
            <summary>
            Читает атрибуты сборки для выяснения того является ли она плагином и вспомогательной 
            мета информации
            </summary>
            <param name="path">Путь к сборке</param>
            <param name="pInfo">Объект с описанием файла</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_aUIComponents">
            <summary>
            Список загруженных UI компонентов для пользовательского интерфейса PLM клиента
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.LoadClientUIComponents(System.String)">
            <summary>
            Чтение содержимого наблюдаемого каталога
            </summary>
            <param name="environment">Текущее окружение клиента</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.DoLoadClientUIComponents(System.IO.DirectoryInfo,System.String)">
            <summary>
            Рекурсивная функция для чтения сведений о файлах из указанного каталога и всех дочерних каталого
            </summary>
            <param name="pDirectory">Каталог, в котором читаем файлы</param>
            <param name="environment">Текущее окружение клиента</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.DoLoadUIComponent``1(System.String,System.Type,System.String)">
            <summary>
            Функция для загрузки UI компонентов из указанной сборки
            </summary>
            <param name="path">Путь к dll файлу</param>
            <param name="customAttributeType">Тип атрибута, необходимый для загрузки класса компонента</param>
            <param name="environment">Текущее окружение клиента</param>
            <returns>Возвращает список загруженных объектов</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_ComponentCustomizators">
            <summary>
            Индекс кастомизаторов объектов, реализованных компонентами конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.m_aConfigurationComponents">
            <summary>
            Список загруженных серверных компонентов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.InvokeComponentMethod(ProgramSoyuz.Connectivity.SessionBase,System.String,System.String,System.Object,System.Object@)">
            <summary>
            Вызов функции компонента
            </summary>
            <param name="pSession">На сервере - сессия, от имени которой вызывается метод</param>
            <param name="moduleId">Ключ (идентификатор) модуля. Если указан пустая строка, метод ищется среди всех имеющихся модулей</param>
            <param name="methodName">Имя метода</param>
            <param name="inputParams">Набор входных данных для метода</param>
            <param name="outputParams">Набор результатов работы метода</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.PrepareComponentCustomizators">
            <summary>
            Формирует индекс кастомизаторов, реализованных компонентами конфигурации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.LoadConfigurationComponents(System.String)">
            <summary>
            Загрузка компонентов конфигурации
            </summary>
            <param name="environment">Текущее окружение клиента либо null для сервера</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.DoLoadConfigurationComponents(System.IO.DirectoryInfo,System.String)">
            <summary>
            Рекурсивная функция для загрузки файлов из указанного каталога и всех дочерних каталогов
            </summary>
            <param name="pDirectory">Каталог, в котором читаем файлы</param>
            <param name="environment">Текущее окружение клиента</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.DoLoadConfigurationComponent``1(System.String,System.Type,System.String)">
            <summary>
            Функция для загрузки компонентов из указанной сборки
            </summary>
            <param name="path">Путь к dll файлу</param>
            <param name="customAttributeType">Тип атрибута, необходимый для загрузки класса компонента</param>
            <param name="environment">Текущее окружение клиента</param>
            <returns>Возвращает список загруженных объектов</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.DefaultUsings">
            <summary>
            Возвращает блок используемых по умолчанию пространств для кастомизирующих скриптов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.CustomizationHeader">
            <summary>
            Возвращает блок кода, предваряющий классы кастомизаторов
            </summary>
            <returns></returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.Customizators">
            <summary>
            Индекс для скомпилированных объектов кода кастомизации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.LastCompilationIsDebuggable">
            <summary>
            Флаг установлен если последняя компиляция кода кастомизации была дебаговой
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ExternalCustomizationMode">
            <summary>
            Флаг установлен если последняя загрузка кода кастомизации была из внешней сборки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.CustomizationDebuggingBasePath">
            <summary>
            Путь каталога, в подкаталоги которого производится дебаговый билд конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.IsDebuggingMode">
            <summary>
            Возвращает true, если определен каталог для дебаговой сборки кода кастомизации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.DebugFolderNamePrefix">
            <summary>
            Префикс к имени временной папки
            </summary>
            <value></value>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.TemplateModuleCustomizators">
            <summary>
            Индекс для модулей - кастомизаторов шаблонов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.RoleModuleCustomizators">
            <summary>
            Индекс для модулей - кастомизаторов ролей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.Modules">
            <summary>
            Список загруженных модулей конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.WorkSpaceSchemes">
            <summary>
            Список загруженных модулей конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.UICommands">
            <summary>
            Список загруженных UI команд
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.UIPlugins">
            <summary>
            Список загруженных UI плагинов для пользовательского интерфейса PLM клиента
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ModulesLoaded">
            <summary>
            Флаг установлен, если был загружен хотя бы один модуль
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.BaseFolder">
            <summary>
            Каталог, за которым следит этот класс
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.FileDescriptors">
            <summary>
            Список файловых объектов, найденных менеджером
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ClientUIComponents">
            <summary>
            Список загруженных UI компонентов для пользовательского интерфейса PLM клиента
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ConfigurationComponents">
            <summary>
            Список загруженных серверных компонентов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ComponentCustomizators">
            <summary>
            Индекс кастомизаторов объектов, реализованных компонентами конфигурации
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ObjectCustomizatorsList">
            <summary>
            Индекс кастомизаторов объектов. Для каждого объекта хранится его кастомизатор (из кода кастомизации)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ObjectCustomizatorsList._dict">
            <summary>
            Массив словарей кастомизаторов для каждого типа сущности
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ObjectCustomizatorsList.Add(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32,ProgramSoyuz.PLM.Scripting.CustomizationBase)">
            <summary>
            Добавляет объект в индекс
            </summary>
            <param name="entity">Тип сущности</param>
            <param name="id">Идентификатор кастомизируемого объекта</param>
            <param name="obj">Объект для добавления в индекс</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ObjectCustomizatorsList.Get(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32)">
            <summary>
            Ищет в индексе объект по идентификатору
            </summary>
            <param name="entity">Тип сущности запрашиваемого объекта</param>
            <param name="id">Идентификатор запрошенного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ObjectCustomizatorsList.Remove(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32)">
            <summary>
            Удаляет из индекса объект по идентификатору
            </summary>
            <param name="entity">Тип сущности запрашиваемого объекта</param>
            <param name="id">Идентификатор запрошенного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ObjectCustomizatorsList.Clear">
            <summary>
            Сбрасывает все кастомизаторы из индекса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationManager.ObjectCustomizatorsList.All">
            <summary>
            Перечисляет все объекты, имеющиеся в индексе
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ConfigurationManager.InitializeDelegate">
            <summary>
            Делегат для асинхронного чтения содержимого каталога
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ConfigurationManager.Changes">
            <summary>
            Класс для списков с измененными файлами
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FileVault">
            <summary>
            Файловое хранилище.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.CreateWrapper(ProgramSoyuz.DataModel.FileVaultBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="fileVault">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.#ctor(ProgramSoyuz.DataModel.FileVaultBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="FileVault">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault._connectionPoints">
            <summary>
            Список вычисленных точек соединения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.GetConnectionPoints">
            <summary>
            Разбор строки вида "1.2.3.4:1234, 5.6.7.8:1111" в список хостов с портами
            </summary>
            <returns>Список IP адресов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.GetAllFileDescs">
            <summary>
            Возвращает массив всех описателей файлов, хранящихся на данном файловом сервере
            </summary>
            <remarks>Метод реализован только на сервере.
            OwnerObject у возвращенных объектов не определен. Следует использовать <see cref="M:ProgramSoyuz.PLM.Scripting.Service.GetUsageReport(ProgramSoyuz.DataModel.DataObjectIdentifier,System.Int32)"/>
            для получения списка объектов, использующих данный файл.
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.GetAllFileDescsNotExistingOn(ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Возвращает массив всех описателей файлов, хранящихся на данном файловом сервере
            </summary>
            <remarks>Метод реализован только на сервере.
            OwnerObject у возвращенных объектов не определен. Следует использовать <see cref="M:ProgramSoyuz.PLM.Scripting.Service.GetUsageReport(ProgramSoyuz.DataModel.DataObjectIdentifier,System.Int32)"/>
            для получения списка объектов, использующих данный файл.
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.NameKey">
            <summary>
            Программное название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.NameUI">
            <summary>
            Пользовательское название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.Notes">
            <summary>
            Пользовательские заметки об иконке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.Params">
            <summary>
            Пользовательские дополнительные параметры закладки, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.GroupKey">
            <summary>
            Строка, определяющая очередность файловых серверов при выборе их для файловой операции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoints">
            <summary>
            Адреса для поключения клиентов "IP:Port, IP:Port"
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.IsRunning">
            <summary>
            Возвращает true если файловый сервер работает
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.GUID">
            <summary>
            Глобально-уникальный идентификатор хранилища
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.Icon">
            <summary>
            Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.DisplayIcon">
            <summary>
            Иконка, показываемая в UI
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FileVault.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.CreationData.Params">
            <summary>
            Пользовательские дополнительные параметры объекта, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.CreationData.GroupKey">
            <summary>
            Строка, определяющая очередность файловых серверов при выборе их для файловой операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.CreationData.m_Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.CreationData.WriteTo(ProgramSoyuz.DataModel.FileVaultBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.CreationData.Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint">
            <summary>
            Точка соединения с файловым сервером
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint._fileVault">
            <summary>
            ФС владелец точки соединения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint._host">
            <summary>
            Имя или адрес хоста
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint._port">
            <summary>
            Номер порта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint._customData">
            <summary>
            Дополнительные данные из файла конфигурации ФС
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint._ipAddress">
            <summary>
            IP адрес
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint.#ctor(ProgramSoyuz.PLM.Scripting.FileVault,System.String,System.Int32,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="fileVault">Файловый сервер</param>
            <param name="host">Имя или адрес порта</param>
            <param name="port">Номер порта</param>
            <param name="customData">Дополнительные данные из файла конфиуграции ФС</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint._resolveFromDns">
            <summary>
            Список точек соединения по DNS запросу
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint.ResolveFromDNS(System.Boolean)">
            <summary>
            Возвращает список IP адресов по результатам DNS запроса по <see cref="P:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint.Host"/>
            </summary>
            <param name="requery">true если требуется перезапросить DNS, иначе возвращется кешированное значение, если есть</param>
            <returns>Список IP адресов, как их вернул DNS запрос</returns>
            <remarks>Если ТС определяет конкретный IP адрес, то никаких запросов к DNS не происходит, и 
            возвращается массив из одного блока IP:порт</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint.FileVault">
            <summary>
            ФС владелец точки соединения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint.Host">
            <summary>
            Имя или адрес хоста
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint.Port">
            <summary>
            Номер порта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint.IpAddress">
            <summary>
            IP адрес, если он явно определён этой точкой.
            Если задано имя хоста, то null. В этом случае следует использовать метод <see cref="M:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint.ResolveFromDNS(System.Boolean)"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint.IsIPDefined">
            <summary>
             Возвращает true если точка соединения определяет конкретный IP адрес
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileVault.ConnectionPoint.CustomData">
            <summary>
            Дополнительные данные из файла конфигурации ФС
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Revision">
            <summary>
            Ревизия (срез значений). Подчиненный объект в контексте ИО <see cref="T:ProgramSoyuz.PLM.Scripting.InfoObject"/>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Revision.m_pOwner">
            <summary>
            Объект-владелец данной ревизии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Revision.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Revision.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Revision.CreateWrapper(ProgramSoyuz.DataModel.RevisionBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="revision">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Revision.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Revision.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.RevisionBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="owner">Объект-владелец данной ревизии</param>
            <param name="revision">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Revision.Erase">
            <summary>
            Удаление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Revision.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Revision.CreateProxy">
            <summary>
            Создает прокси-объект для доступа к атрибутам указанной ревизии
            </summary>
            <returns>Вновь созданный прокси объект или null, если запрошенной ревизии не существует</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Revision.CreateProxy(System.Boolean)">
            <summary>
            Создает прокси-объект для доступа к атрибутам указанной ревизии
            </summary>
            <param name="editable">true если прокси нужна для низкоуровнего редактирования объекта</param>
            <returns>Вновь созданный прокси объект или null, если запрошенной ревизии не существует</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Revision.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Revision.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Revision.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Revision.RealObject">
            <summary>
            Доступ к атрибутируемому "реальному" объекту. 
            Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Revision.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Revision.Owner">
            <summary>
            Ссылка на объект-владелец этой ревизии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Revision.Number">
            <summary>
            Номер ревизии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Revision.DateCreated">
            <summary>
            Локальное дата/время фиксации ревизии объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Revision.CreatedByUser">
            <summary>
            Идентификатор пользователя, создавшего этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy">
            <summary>
            Класс прокси для представления ревизии ИО в виде атрибутируемого объекта, производного от ИО.
            Объекты этого класса используются для вызова УИ команд и прочих методов кастомизации
            в контексте конкретной ревизии ИО
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.InfoObject">
            <summary>
            Информационный объект. Основная информационая единица PLM системы.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor">
            <summary>
            Конструктор с отладочным подсчетом числа объектов в памяти
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.Finalize">
            <summary>
            Деструктор с отладочным подсчетом числа объектов в памяти
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Сериализация объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreateWrapper(ProgramSoyuz.DataModel.InfoObjectBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="infoObject">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная (или кешированная) скриптовая оболочка объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.DataModel.InfoObjectBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="infoObject">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreateAsInacessible(System.UInt32)">
            <summary>
            Возвращает оболочку по реальному объекту, недоступному по правам доступа.
            </summary>
            <param name="id">Идентификатор объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(System.UInt32)">
            <summary>
            Конструктор оболочки по реальному объекту, недоступному по правам доступа.
            </summary>
            <param name="id">Идентификатор объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer,ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="container">Родительский контейнер</param>
            <param name="template">Шаблон объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский информационный объект</param>
            <param name="template">Шаблон объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer,ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="container">Родительский контейнер</param>
            <param name="template">Шаблон объекта</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский информационный объект</param>
            <param name="template">Шаблон объекта</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Конструктор нового нехранимого объекта (<see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsNonPersisted"/> установлен в true)
            </summary>
            <param name="template">Шаблон объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового нехранимого объекта (<see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsNonPersisted"/> установлен в true)
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="initialValues">Опциональный список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="container">Родительский контейнер</param>
            <param name="pathToTemplate">Шаблон объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.InfoObject,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский информационный объект</param>
            <param name="pathToTemplate">Шаблон объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="container">Родительский контейнер</param>
            <param name="pathToTemplate">Шаблон объекта</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.InfoObject,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский информационный объект</param>
            <param name="pathToTemplate">Шаблон объекта</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer,ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="container">Родительский контейнер</param>
            <param name="parent">Родительский информационный объект</param>
            <param name="template">Шаблон объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.InfoObject.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.InfoObject.CreationData,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.InfoObject.CreationData,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
            <param name="initializeObject">Если true, инициализация выполняется</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Конструктор копирования
            </summary>
            <param name="source">Оригинальный объект, по которому делаем копию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer,ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Создает объект для проверки прав доступа на создание объекта.
            Инициализация атрибутов опционально не производится, в сейв сет добавления не происходит
            </summary>
            <param name="container">Родительский контейнер</param>
            <param name="parent">Родительский информационный объект</param>
            <param name="template">Шаблон объекта</param>
            <param name="initializeObject">Если true, инициализация выполняется</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreateCopy">
            <summary>
            Создаёт новый ИО аналогичный данному, заполняет его атрибуты значениями из данного объекта.
            Дочерние объекты тоже копируются, внутренние ссылки на ИО дублируемой ветви обновляются
            </summary>
            <returns>Вновь созданный ИО</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreateCopy(System.Boolean,System.Boolean)">
            <summary>
            Создаёт новый ИО аналогичный данному, заполняет его атрибуты значениями из данного объекта
            </summary>
            <param name="recurseOnChildren">Рекурсия по дочерним ИО</param>
            <param name="keepRelativeLinks">Обновление ссылок внутренних по отношению к дублируемой ветви</param>
            <returns>Вновь созданный ИО</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreateCopy(System.Boolean,System.Boolean,ProgramSoyuz.PLM.Scripting.CopyInfoObjectDelegate,System.Object)">
            <summary>
            Создаёт новый ИО аналогичный данному, заполняет его атрибуты значениями из данного объекта
            </summary>
            <param name="recurseOnChildren">Рекурсия по дочерним ИО</param>
            <param name="keepRelativeLinks">Обновление ссылок внутренних по отношению к дублируемой ветви</param>
            <param name="copyHandler">Обработчик, вызываемый для каждого копируемого объекта, возвращает true, если копирование выполнено внутри обработчика</param>
            <param name="data">Параметр, передаваемый в функцию копирования</param>
            <returns>Вновь созданный ИО</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.DoCreateCopy(System.Boolean,System.Boolean,ProgramSoyuz.PLM.Scripting.CopyInfoObjectDelegate,System.Object,System.Collections.Generic.Dictionary{ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Создаёт новый ИО аналогичный данному, заполняет его атрибуты значениями из данного объекта
            </summary>
            <param name="recurseOnChildren">Рекурсия по дочерним ИО</param>
            <param name="keepRelativeLinks">Обновление ссылок внутренних по отношению к дублируемой ветви</param>
            <param name="copyHandler">Обработчик, вызываемый для каждого копируемого объекта, возвращает true, если копирование выполнено внутри обработчика</param>
            <param name="data">Параметр, передаваемый в функцию копирования</param>
            <param name="originalToCopyMap">Ассоциативный список (словарь) исходный объект в целевой объект </param>
            <returns>Вновь созданный ИО</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CloneWrapperWithChanges">
            <summary>
            Создает копию скриптовой оболочки с текущими значениями атрибутов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.ApplyChangesFromClone(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Применяет измененные значения из <paramref name="source"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.DoEraseChildrenOrRelated">
            <summary>
            Каскадное удаление дочерних объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CheckWrappedObject(System.Boolean)">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
            <param name="needAttributes">Если true, то производится полная загрузка объекта при необходимости</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.Lock">
            <summary>
            Установка долговременной блокировки на объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.Unlock">
            <summary>
            Снятие долговременной блокировки с объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.MarkDirty">
            <summary>
            Помечает ообъект для пересохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.EraseRevisions(System.Int32,System.Int32)">
            <summary>
            Удаление ревизий с указанными номерами
            </summary>
            <param name="startNumber">Начало диапазона удалаяемых ревизий</param>
            <param name="endNumber">Конец диапазона удаляемых ревизий</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.IsRevisionMarkedForErase(System.Int32)">
            <summary>
            Возвращает true если указанная ревизия была помечена к удалению
            </summary>
            <param name="number">Номер ревизий</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.EnumAllParents(System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean})">
            <summary>
            Перечисляет все родительские объекты
            </summary>
            <param name="recursive">True если требуется перечислить родителей на все уровни</param>
            <param name="includeOtherParents">Если true то доп родители попадают в перечисление. False - только прямые родители</param>
            <param name="continueHandler">Обработчик возвращает false, если указанный объект уже был обработан и дальнейшее продвижение по его родителям не требуется</param>
            <returns>Перечислитель родительских объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.EnumAllChildren(System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean})">
            <summary>
            Перечисляет все дочерние объекты
            </summary>
            <param name="recursive">True если требуется перечислить детей на все уровни</param>
            <param name="includeOtherChildren">Если true то доп дочерние попадают в перечисление. False - только прямые дочерние</param>
            <param name="continueHandler">Обработчик возвращает true, если дальнейшее продвижение по дочернием указанного объекта уже не требуется</param>
            <returns>Перечислитель дочерних объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.ParentByTemplate(System.String,System.Boolean)">
            <summary>
            Находит ближайший ИО указанного шаблона в цепочке родителей, начиная с себя
            </summary>
            <param name="template">Путь к шаблону искомого объекта</param>
            <param name="includeInherited">Если true то объекты дочерних шаблонов тоже подходят</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.ParentByTemplate(ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Находит ближайший ИО указанного шаблона в цепочке родителей, начиная с себя
            </summary>
            <param name="template">Шаблон искомого объекта</param>
            <param name="includeInherited">Если true то объекты дочерних шаблонов тоже подходят</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.ContainerByTemplate(System.String,System.Boolean)">
            <summary>
            Находит ближайший контейнер указанного шаблона в цепочке родителей
            </summary>
            <param name="template">Путь к шаблону искомого объекта</param>
            <param name="includeInherited">Если true то объекты дочерних шаблонов тоже подходят</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.ContainerByTemplate(ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Находит ближайший контейнер указанного шаблона в цепочке родителей
            </summary>
            <param name="template">Шаблон искомого объекта</param>
            <param name="includeInherited">Если true то объекты дочерних шаблонов тоже подходят</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.MoveTo(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Перенос объекта к другому информационному объекту.
            </summary>
            <param name="parent">Новый родительский объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.MoveTo(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Перенос объекта к другому контейнеру.
            </summary>
            <param name="container">Новый родительский контейнер</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.EnumAllChildren(System.Func{ProgramSoyuz.PLM.Scripting.InfoObject,System.Boolean})">
            <summary>
            Рекурсивно перебирает всех детей, проверяя каждого указанным критерием.
            Если очередной ребенок не подошел, то его дети из перебора исключаются
            </summary>
            <param name="criterion">Проверяющая функция</param>
            <returns>Перечислитель подходящих детей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.GetChildrenAt(System.Int32)">
            <summary>
            Возвращает коллекцию дочерних информационных объектов. Если таковых нет, возвращается пустая коллекция.
            Возвращаются оригинальные (нередактируемые) скриптовые оболочки
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.GetChildrenIdsAt(System.Int32)">
            <summary>
            Возвращает коллекцию дочерних информационных объектов. Если таковых нет, возвращается пустая коллекция.
            Возвращаются оригинальные (нередактируемые) скриптовые оболочки
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.GetChild(System.String)">
            <summary>
            Доступ к дочернему ИО по пути NameKey\NameKey1\..\NameKeyN
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.IsChildOf(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Возвращает true, если ИО является дочерним от указанного
            </summary>
            <remarks>Считается что ИО является дочерним к самому себе</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.IsChildOf(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Возвращает true, если объект является дочерним от указанного.
            При проверке учитываются и шорткаты на объект в других контейнерах, а также шорткаты самих контейнеров
            </summary>
            <remarks>Считается что объект является дочерним к самому себе</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.IsChildOf(ProgramSoyuz.PLM.Scripting.DataContainer,System.Boolean,System.Boolean)">
            <summary>
            Возвращает true, если объект является дочерним от указанного.
            </summary>
            <param name="obj">Проверяемый потенциально родительский контейнер</param>
            <param name="withContainerShortcuts">Если true то при проверке учитываются и шорткаты контейнеров</param>
            <param name="withInfoObjectShortcuts">Если true то при проверке учитываются и шорткаты на объект в других контейнерах</param>
            <remarks>Считается что объект является дочерним к самому себе</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.PreloadHistory(System.Boolean)">
            <summary>
            Проверяет и при необходимости загружает историю объекта
            </summary>
            <param name="wait">true если вызов блокируется для получения ответа</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.RevertToRevision(System.Int32)">
            <summary>
            Отменяет текущие изменения атрибутов объекта. После чего производит рекурсивное копирование
            значений атрибутов в указанной ревизии в качестве текущих.
            После вызова этого метода, сохранение объекта приведет к появлению новой ревизии со значениями атрибутов,
            идентичными указанной
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreateNewRevisionProxyByNumber(System.Int32)">
            <summary>
            Создает прокси-объект будущей ревизии для использования при сохранении ссылок на еще не созданные ревизии объектов
            </summary>
            <param name="revisionNumber">Порядковый номер ревизии <see cref="P:ProgramSoyuz.PLM.Scripting.Revision.Number"/></param>
            <returns>Вновь созданный прокси объект или null, если запрошенной ревизии не существует</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreateRevisionProxyByNumber(System.Int32)">
            <summary>
            Создает прокси-объект для доступа к атрибутам указанной ревизии
            </summary>
            <param name="revisionNumber">Порядковый номер ревизии <see cref="P:ProgramSoyuz.PLM.Scripting.Revision.Number"/></param>
            <returns>Вновь созданный прокси объект или null, если запрошенной ревизии не существует</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreateRevisionProxyByNumber(System.Int32,System.Boolean)">
            <summary>
            Создает прокси-объект для доступа к атрибутам указанной ревизии
            </summary>
            <param name="revisionNumber">Порядковый номер ревизии <see cref="P:ProgramSoyuz.PLM.Scripting.Revision.Number"/></param>
            <param name="getClosestIfMissing">Если true, то в случае отсутствия ревизии, возвращается болижайшая меньшая</param>
            <returns>Вновь созданный прокси объект или null, если запрошенной ревизии не существует</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreateRevisionProxy(System.Int32)">
            <summary>
            Создает прокси-объект для доступа к атрибутам указанной ревизии
            </summary>
            <param name="revisionIndex">0-based индекс ревизии в списке ревизий объекта</param>
            <returns>Вновь созданный прокси объект или null, если запрошенной ревизии не существует</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.m_pOtherContainerList">
            <summary>
            Оболочка для работы со списком дополнительных родителей
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.GetExistingOtherContainers">
            <summary>
            Возвращает перечислитель существующих дополнительных родительских контейнеров
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.IsContainerNative(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Возвращает true если указанный контейнер является основным родительским контейнером объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.IsContainerLinked(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Возвращает true если указанный контейнер является дополнительным родительским контейнером объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.AddOtherContainer(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Добавление дополнительного родителя к шаблону
            </summary>
            <param name="container">Дополнительный родитель</param>
            <returns>true если такого родителя еще не было</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.RemoveOtherContainer(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Удаление дополнительного родителя шаблона
            </summary>
            <param name="container">Дополнительный родитель</param>
            <returns>true если такого родитель был и исключен из списка дополнительных</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.GetFormalName">
            <summary>
            Возвращает формальное строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.DebuggerDisplayString">
            <summary>
            Формирует представление объекта для дебаггера
            </summary>
            <returns>Строка, которую отображает дебаггер для этого объекта</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.RealObject">
            <summary>
            Доступ к атрибутируемому "реальному" объекту. 
            Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.IsLightWeight">
            <summary>
            Возвращает true если этот объект "легковесный". То есть атрибуты для него не загружены
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.NameKey">
            <summary>
            Программное название контейнера
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.IsErasedStub">
            <summary>
            Возвращает true если этот объект является заглушкой удалённого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.DateModified">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.ModifiedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.DateContentModified">
            <summary>
            Локальная дата/время последнего изменения содержательной части объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.ContentModifiedByUser">
            <summary>
            Ссылка на пользователя, изменившего содержательную часть этого объекта последним.
            Если реального пользователя нет, возвращается экземпляр системного псевдопользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.NewRevisionNumber">
            <summary>
            Номер ревизии объекта, сохраняемого сервера в текущей операции сохранения. Используется внутренней логикой группового сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.NewRevision">
            <summary>
            Ссылка на вновь созданную ревизию. Используется внутренней логикой группового сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.HasReservedId">
            <summary>
            Возвращает true, если для этого объекта установлен зарезервированный идентификатор
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.DontCreateIterations">
            <summary>
            Опция сохранения объекта, отменяющая создание итераций значений атрибутов при сохранении. 
            Если true, то вместо этого происходит обычное обновление сохраняемых значений без создания итераций
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.ReservedId">
            <summary>
            Ранее зарезервированный идентификатор объекта.
            Именно он будет использован при сохранении этого объекта.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.PersistedName">
            <summary>
            Доступ к хранимому имени объекта. Используется при мягком удалении объекта для финальной записи имени удаленной заглушки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.Template">
            <summary>
            Доступ к шаблону объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.Templates">
            <summary>
            Перечисляет все шаблоны объекта, начиная с основного.
            Из дополнительных перечисляются только те, что расширяют поведение и атрибуты экземпляра объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.OtherTemplates">
            <summary>
            Доступ к дополнительным шаблонам объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.OtherClassTemplates">
            <summary>
            Доступ к дополнительным шаблонам-классам объекта (те шаблоны, что расширяют поведение и атрибута экземпляра объекта).
            Возвращаются шаблоны для последнего сохраненного состояния объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject._OtherClassTemplates">
            <summary>
            Доступ к дополнительным шаблонам-классам объекта (те шаблоны, что расширяют поведение и атрибуты экземпляра объекта).
            Возвращаются шаблоны для последнего сохраненного состояния объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.ContainerOriginal">
            <summary>
            Доступ к родительскому контейнеру.
            Возвращает оригинальную оболочку если иная не установлена объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.Container">
            <summary>
            Доступ к родительскому контейнеру
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.ParentOriginal">
            <summary>
            Доступ к родительскому ИО.
            Возвращает оригинальную оболочку если иная не установлена объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.Parent">
            <summary>
            Доступ к родительскому информационному объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.Root">
            <summary>
            Возвращает корневой ИО
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.BranchRoot">
            <summary>
            Возвращает корень ветви объектов своего типа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.AllParents">
            <summary>
            Перечисляет все родительские информационные объекты, начиная c себя (включая)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject._Children">
            <summary>
            Список дочерних информационных объектов.
            В контексте группового сохранения этот геттер проверяют объекты в SaveSetе в поисках возможных вновь 
            добавленных детей. Для нехранимых (<see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsNonPersisted"/>) объектов такой поиск не осуществляется. 
            Для нехранимых объектов список детей формируется на основе списка <see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjects"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject._AllChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.Children">
            <summary>
            Возвращает массив дочерних ИО.
            В контексте группового сохранения этот геттер проверяют объекты в SaveSetе в поисках возможных вновь 
            добавленных детей. Для нехранимых (<see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsNonPersisted"/>) объектов такой поиск не осуществляется. 
            Для нехранимых объектов список детей формируется на основе списка <see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjects"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.AllChildren">
            <summary>
            Возвращает массив дочерних ИО.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#InfoObject}#DirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#InfoObject}#AllDirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.UserLock">
            <summary>
            Доступ к объекту долговременной блокировки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.IsLocked">
            <summary>
            Возвращает true, если на этот объект установлена чья-либо долговременная блокировка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.IsLockedByMe">
            <summary>
            Возвращает true, если на этот объект текущим пользователем установлена долговременная блокировка
            </summary>
        </member>
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.InfoObject._Bindings" проигнорирован -->
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.Bindings">
            <summary>
            Список привязок к этому объекту
            В контексте группового сохранения этот геттер проверяют объекты в SaveSetе в поисках возможных вновь 
            добавленных привязок. Для нехранимых (<see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingObject.IsNonPersisted"/>) объектов такой поиск не осуществляется. 
            Для нехранимых объектов список привязок формируется на основе списка <see cref="P:ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.BoundObjects"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.ParentBindings">
            <summary>
            Возвращает перечислитель унаследованных от родителей привязок к этому объекту/с использованием этой роли
            </summary>
            <returns>Перечислитель унаследованных от родителей привязок к этому объекту/с использованием этой роли</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.UserRightsInheritanceParent">
            <summary>
            Возвращает родительский объект по цепочке наследования прав доступа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.Revisions">
            <summary>
            Список ревизий объекта, сортированный по номеру ревизии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CurrentRevisionNumber">
            <summary>
            Возвращает номер последней ревизии объекта по состоянию объекта в кеше
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CurrentRevision">
            <summary>
            Возвращает последнюю ревизию объекта по состоянию объекта в кеше
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.ExistingOtherContainers">
            <summary>
            Возвращает перечислитель существующих дополнительных родительских контейнеров
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainers">
            <summary>
            Возвращает перечислитель элементов коллекции спискового атрибута, существующих в базе.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.PathName">
            <summary>
            Путь к объекту по ключам
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.ResaveObject">
            <summary>
            Флаг обозначающий необходимость пересохранить объект как есть
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.DontCreateIterations">
            <summary>
            Флаг, отменяющий создание итераций при сохранении. Вместо этого происходит обычное обновление сохраняемых значений
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.ChildrenChanged">
            <summary>
            Флаг обозначающий, что изменяется список дочерних объектов (актуален во время серверного сохранения для кода кастомизации)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.ChildLinks">
            <summary>
            Список обновленных записей о дочерних ИО
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.ChildrenAdded">
            <summary>
            Список добавляемых дочерних объектов (используется кодом серверного сохранения)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.ChildrenRemoved">
            <summary>
            Список удаляемых дочерних объектов (используется кодом серверного сохранения)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.ReservedId">
            <summary>
            Ранее зарезервированный идентификатор объекта.
            Именно он будет использован при сохранении этого объекта.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.PersistedName">
            <summary>
            Доступ к хранимому имени объекта. Используется при мягком удалении объекта для финальной записи имени удаленной заглушки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.m_Parent">
            <summary>
            Родительский информационный объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.OtherContainersToAdd">
            <summary>
            Дополнительные родительские контейнеры для добавления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.OtherContainersToRemove">
            <summary>
            Дополнительные родительские контейнеры для удаления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.RevisionsToRemove">
            <summary>
            Номера ревизий для удаления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.m_Template">
            <summary>
            Шаблон объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.WriteTo(ProgramSoyuz.DataModel.InfoObjectBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.NewRevision">
            <summary>
            Ссылка на вновь созданную ревизию. Используется внутренней логикой группового сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.ChildLinksSafe">
            <summary>
            Список обновленных записей о дочерних ИО
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.ChildrenAddedSafe">
            <summary>
            Список добавляемых дочерних объектов (используется кодом серверного сохранения)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.ChildrenRemovedSafe">
            <summary>
            Список удаляемых дочерних объектов (используется кодом серверного сохранения)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.Parent">
            <summary>
            Родительский информационный объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.ParentInfoObject">
            <summary>
            Родительский информационный объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.ParentContainer">
            <summary>
            Родительский контейнер
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.Template">
            <summary>
            Шаблон объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.AreSysPropsChanged">
            <summary>
            Возвращает true если есть изменения в системных атрибутах объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.IsNewRevisionCreated">
            <summary>
            Возвращает true, если в ходе сохранения атрибутов была создана новая ревизия.
            Значение корректно только для кода серверного триггера OnBeforeCommit
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.CreationData.NewRevisionNumber">
            <summary>
            Возвращает номер ревизии, созданной в ходе сохранения ревизионируемых атрибутов.
            Значение корректно только для кода серверного триггера OnBeforeCommit
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList">
            <summary>
            Класс оболочка для операций со списком дополнительных родителей
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.m_pOwner">
            <summary>
            Объект, чья коллекция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.m_ExistingOtherContainers">
            <summary>
            Список существующих элементов коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.#ctor(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Конструктор
            </summary>
            <param name="pOwner">Объект, чья коллекция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.OnOwnerUpdated">
            <summary>
            Обновление списка при обновлении оболочки-владельца
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.Add(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.Contains(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.CopyTo(ProgramSoyuz.PLM.Scripting.DataContainer[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional.-or-<paramref name="arrayIndex" /> is equal to or greater than the length of <paramref name="array" />.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.-or-Type cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.Remove(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObject.OtherContainerList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.m_Revision">
            <summary>
            Ревизия объекта, по которой создан этот прокси-объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.m_Owner">
            <summary>
            Объект-владелец данной ревизии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.m_Number">
            <summary>
            Порядковый номер ревизии (итерации, среза значений)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.RevisionBase)">
            <summary>
            Внутренний конструктор
            </summary>
            <param name="owner"></param>
            <param name="revision">Ревизия объекта, для которой создается прокси</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.RevisionBase,System.Boolean)">
            <summary>
            Внутренний конструктор
            </summary>
            <param name="owner"></param>
            <param name="revision">Ревизия объекта, для которой создается прокси</param>
            <param name="editable">true если прокси нужна для низкоуровнего редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Int32)">
            <summary>
            Внутренний конструктор для создания будущих ревизий, если таковые нужны для сохранения ссылок на еще не созданные ревизии
            </summary>
            <param name="owner"></param>
            <param name="number">Явно указанный номер ревизии для случаев сохранения ссылок на еще не сохраненную ревизию.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Сериализация объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.CheckWrappedObject(System.Boolean)">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
            <param name="needAttributes">Если true, то производится полная загрузка объекта при необходимости</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.Equals(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Сравнение объектов
            </summary>
            <param name="other">Сравниваемый объект</param>
            <returns>true если объекты одинаковые</returns>
            <remarks>Объекты из базы считаются одинаковыми если они одного типа и их идентификаторы совпадают.
            Новые объекты считаются одинаковыми если это один и тот же объект</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.ActualObject">
            <summary>
            Обычный ИО в своём текущем состоянии (объект, чья ревизия)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.Owner">
            <summary>
            Объект-владелец данной ревизии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.Revision">
            <summary>
            Ревизия
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InfoObjectRevisionProxy.RevisionNumber">
            <summary>
            Номер ревизии
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IUICommandBase">
            <summary>
            Базовый интерфейс команды пользовательского интерфейса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUICommandBase.IsValid">
            <summary>
            Возвращает true, если данная команда может быть применена в текущем контексте
            </summary>
            <returns>true если команду можно использовать в текущем контексте</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IUISingleObjectCommand">
            <summary>
            Интерфейс UI команды одиночного объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUISingleObjectCommand.IsValid(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="obj">Потенциальный объект применения команды</param>
            <returns>true если команду можно применить к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUISingleObjectCommand.UpdateState(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объекта
            </summary>
            <param name="obj">Потенциальный объект применения команды</param>
            <param name="cmdUI">Интерфейс доступа к элементу интерфейса</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUISingleObjectCommand.Invoke(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Выполнение команды над указанным объектом
            </summary>
            <param name="obj">Объект, к которому примененяется команда</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IUIMultipleObjectCommand">
            <summary>
            Интерфейс UI команды для группы объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUIMultipleObjectCommand.IsValid(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="objects">Потенциальные объекты применения команды</param>
            <returns>true если команду можно использовать в текущем контексте</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUIMultipleObjectCommand.UpdateState(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingObject},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объекта
            </summary>
            <param name="objects">Потенциальные объекты применения команды</param>
            <param name="cmdUI">Интерфейс доступа к элементу интерфейса</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUIMultipleObjectCommand.Invoke(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Выполнение команды над указанным объектом
            </summary>
            <param name="objects">Объекты к которым примененяется команда</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IUIAttributeCommandBase">
            <summary>
            Интерфейс UI команды атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUIAttributeCommandBase.IsValid(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <returns>true если команду можно использовать в текущем контексте</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IUIAttributeCommand">
            <summary>
            Интерфейс UI команды атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUIAttributeCommand.UpdateState(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объекта
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <param name="cmdUI">Интерфейс доступа к элементу интерфейса</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUIAttributeCommand.Invoke(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Выполнение команды над указанным объектом
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IUIListAttributeCommand">
            <summary>
            Интерфейс UI команды спискового атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUIListAttributeCommand.UpdateState(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объекта
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
            <param name="cmdUI">Интерфейс доступа к элементу интерфейса</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUIListAttributeCommand.Invoke(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement})">
            <summary>
            Выполнение команды над указанным объектом
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IUISetAttributeCommand">
            <summary>
            Интерфейс UI команды для атрибута множества ссылок
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUISetAttributeCommand.UpdateState(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объекта
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
            <param name="cmdUI">Интерфейс доступа к элементу интерфейса</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUISetAttributeCommand.Invoke(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject})">
            <summary>
            Выполнение команды над указанным объектом
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IUICommand">
            <summary>
            Интерфейс команды пользовательского интерфейса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUICommand.GetImageKey(ProgramSoyuz.PLM.Scripting.IImageListManager)">
            <summary>
            Иконка схемы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IUICommand.NameKey">
            <summary>
            Ключ, идентифицирующий схему
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IUICommand.NameUI">
            <summary>
            Название схемы для пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IUICommand.Notes">
            <summary>
            Описание схемы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IUICommand.ShortcutKey">
            <summary>
            Клавиатурный шорткат для команды
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IUICommand.Kind">
            <summary>
            Тип применимости команды: одиночная, множественная или к атрибуту
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IAttributableObjectEvent">
            <summary>
            Интерфейс объектного события
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObjectEvent.IsApplicable(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает true, если подписка на это событие применима к указанному объекту.
            Вызывается в клиентском коде при показе пользователю списка возможных событий по объекту.
            </summary>
            <param name="thisObject">Объект, на события с которым подписались пользователи</param>
            <returns>true если событие применимо к объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObjectEvent.CheckState(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Проверка нового состояния объекта относительно старого для определения факта возникновения данного события.
            Вызывается в коде серверного сохранения после вызова OnBeforeCommit.
            </summary>
            <param name="thisObject">Объект, на события с которым подписались пользователи</param>
            <param name="modifiedObject">Измененный объект (либо <paramref name="thisObject"/>, либо один из его дочерних)</param>
            <param name="originalObject">Исходный объект, как был <paramref name="modifiedObject"/> до внесения изменений</param>
            <returns>true если событие произошло и следует вызвать обработчик <see cref="M:ProgramSoyuz.PLM.Scripting.IAttributableObjectEvent.Invoke(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.UserSubscription[])"/></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAttributableObjectEvent.Invoke(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.UserSubscription[])">
            <summary>
            Обработка события с объектом
            </summary>
            <param name="thisObject">Объект, на события с которым подписались пользователи</param>
            <param name="modifiedObject">Измененный объект (либо <paramref name="thisObject"/>, либо один из его дочерних)</param>
            <param name="originalObject">Исходный объект, как был <paramref name="modifiedObject"/> до внесения изменений</param>
            <param name="subscriptions">Пользовательские подписки на данное событие</param>
            <returns>true, если событие обработано</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Task">
            <summary>
            Задача WF. Некий самостоятельный кусочек работы, для выполнения которого может потребоваться
            привлечение одного или нескольких пользователей, и/или ресурсов компьютера
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor">
            <summary>
            Конструктор с отладочным подсчетом числа объектов в памяти
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.Finalize">
            <summary>
            Деструктор с отладочным подсчетом числа объектов в памяти
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Сериализация объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.CreateWrapper(ProgramSoyuz.DataModel.TaskBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="task">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная (или кешированная) скриптовая оболочка объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(ProgramSoyuz.DataModel.TaskBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="task">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.CreateAsInacessible(System.UInt32)">
            <summary>
            Возвращает оболочку по реальному объекту, недоступному по правам доступа.
            </summary>
            <param name="id">Идентификатор объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(System.UInt32)">
            <summary>
            Конструктор оболочки по реальному объекту, недоступному по правам доступа.
            </summary>
            <param name="id">Идентификатор объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="selectedObjects">Объекты, по которым создается задача</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(System.String,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pathToTemplate">Шаблон объекта</param>
            <param name="selectedObjects">Объекты, по которым создается задача</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(System.String,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pathToTemplate">Шаблон объекта</param>
            <param name="selectedObjects">Объекты, по которым создается задача</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="selectedObjects">Объекты, по которым создается задача</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.DataContainer,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},System.Collections.Generic.Dictionary{System.String,System.Object},ProgramSoyuz.DataModel.TaskBase.StatusEnum)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="context">Контекстный контейнер для задачи</param>
            <param name="selectedObjects">Объекты, по которым создается задача</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
            <param name="status">Статус создаваемой задачи</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(ProgramSoyuz.PLM.Scripting.Task.CreationData,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
            <param name="selectedObjects">Объекты, по которым создается задача</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(ProgramSoyuz.PLM.Scripting.Task.CreationData,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
            <param name="selectedObjects">Объекты, по которым создается задача</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.Task,System.UInt32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта, порожденного в ходе исполнения диаграммы
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="parentTask">Родительский экземпляр задачи</param>
            <param name="parentNodeId">Этап-подзадача родительской диаграммы, по которому создается данный объект</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.Task,System.UInt32,System.Collections.Generic.Dictionary{System.String,System.Object},ProgramSoyuz.DataModel.TaskBase.StatusEnum)">
            <summary>
            Конструктор нового объекта, порожденного в ходе исполнения диаграммы
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="parentTask">Родительский экземпляр задачи</param>
            <param name="parentNodeId">Этап-подзадача родительской диаграммы, по которому создается данный объект</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
            <param name="status">Статус создаваемой задачи</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.DataContainer,ProgramSoyuz.PLM.Scripting.Task,System.UInt32,System.Collections.Generic.Dictionary{System.String,System.Object},ProgramSoyuz.DataModel.TaskBase.StatusEnum)">
            <summary>
            Конструктор нового объекта, порожденного в ходе исполнения диаграммы
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="context">Контекстный контейнер для задачи</param>
            <param name="parentTask">Родительский экземпляр задачи</param>
            <param name="parentNodeId">Этап-подзадача родительской диаграммы, по которому создается данный объект</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
            <param name="status">Статус создаваемой задачи</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.DataContainer,ProgramSoyuz.PLM.Scripting.Task,System.UInt32,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},System.Collections.Generic.Dictionary{System.String,System.Object},ProgramSoyuz.DataModel.TaskBase.StatusEnum)">
            <summary>
            Конструктор нового объекта, порожденного в ходе исполнения диаграммы
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="context">Контекстный контейнер для задачи</param>
            <param name="parentTask">Родительский экземпляр задачи</param>
            <param name="parentNodeId">Этап-подзадача родительской диаграммы, по которому создается данный объект</param>
            <param name="selectedObjects">Объекты, по которым создается задача</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
            <param name="status">Статус создаваемой задачи</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.DoPreActivateSubTasks">
            <summary>
            Создает экхемпляры подзадач для каждого этапа-подзадачи диаграммы (если есть)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.DoEraseChildrenOrRelated">
            <summary>
            Каскадное удаление дочерних объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.CheckWrappedObject(System.Boolean)">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.MarkDirty">
            <summary>
            Помечает ообъект для пересохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.RestoreActiveStatus">
            <summary>
            Восстановление активного состояния процесса. Применяется при аварийном возобновлении процесса, если он непреднамеренно
            оказался завершенным.
            Следует вызвать <see cref="!:AttributableObject.Save()"/> для сохранения измененного статуса.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.EnumAllParents(System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean})">
            <summary>
            Перечисляет все родительские объекты
            </summary>
            <param name="recursive">True если требуется перечислить родителей на все уровни</param>
            <param name="includeOtherParents">Если true то доп родители попадают в перечисление. False - только прямые родители</param>
            <param name="continueHandler">Обработчик возвращает false, если указанный объект уже был обработан и дальнейшее продвижение по его родителям не требуется</param>
            <returns>Перечислитель родительских объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.EnumAllChildren(System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean})">
            <summary>
            Перечисляет все дочерние объекты
            </summary>
            <param name="recursive">True если требуется перечислить детей на все уровни</param>
            <param name="includeOtherChildren">Если true то доп дочерние попадают в перечисление. False - только прямые дочерние</param>
            <param name="continueHandler">Обработчик возвращает true, если дальнейшее продвижение по дочернием указанного объекта уже не требуется</param>
            <returns>Перечислитель дочерних объектов</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.m_DiagramWrapper">
            <summary>
            Ссылка на экземпляр диаграммы этой задачи
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.EnsureProcessDataLoaded">
            <summary>
            Проверяет и при необходимости загружает в кеш дочерние задачи этапов и их нагрузки.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.IsChildOf(ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Возвращает true, если объект является дочерним к указанному
            </summary>
            <remarks>Считается что объект дочерний сам к себе</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.GetWorkItems(System.Boolean)">
            <summary>
            Возвращает перечислитель нагрузок, порожденных этой задачей
            </summary>
            <param name="activeOnly">true - только активные и приостановленные, false - все нагрузки порожденные задачей</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.SetTimeoutInterval(System.TimeSpan)">
            <summary>
            Устанавливает интервал вызова метода кастомизации OnTimeout.
            Доступен лишь на сервере для уже сохраненных объектов. На клиенте - ничего не делает.
            </summary>
            <param name="timeout">Временной интервал. <see cref="F:System.TimeSpan.Zero"/> - означает, что вызов не требуется</param>
            <remarks>Для новых объектов интервал установлен в 5 секунд</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.ValidateStatusTransition(ProgramSoyuz.DataModel.TaskBase.StatusEnum)">
            <summary>
            Проверяет разрешен ли перевод статуса из одного состояния в другое. 
            Если не разрешен, выдает эксепшион
            </summary>
            <param name="newStatus">Новое статус нагрузки</param>
            <exception cref="T:ProgramSoyuz.PLM.Scripting.InvalidRequestException">Запрошенный переход заблокирован</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.DebuggerDisplayString">
            <summary>
            Формирует представление объекта для дебаггера
            </summary>
            <returns>Строка, которую отображает дебаггер для этого объекта</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.RealObject">
            <summary>
            Доступ к атрибутируемому "реальному" объекту. 
            Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.IsLightWeight">
            <summary>
            Возвращает true если этот объект "легковесный". То есть атрибуты для него не загружены
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.Params">
            <summary>
            Дополнительное поле для параметров активации этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.WorkFlowWarnings">
             <summary>
            Набор флагов, определяющих проблемные состояния рабочего процесса
             </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.Status">
            <summary>
            Статус объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.StatusOperation">
            <summary>
            Новый статус объекта после сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.IsUnderDiagramControl">
            <summary>
            Возвращает true если задача создана вышестоящей диаграммой
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.IsActiveOrPaused">
            <summary>
            Возвращает true если задача активна или приостановлена
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.IsErasedStub">
            <summary>
            Возвращает true если этот объект является заглушкой удалённого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.TaskDiagramRevision">
            <summary>
            Номер ревизии диаграммы, по которой работает этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.DateCreated">
            <summary>
            Локальное Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.CreatedByUserEffective">
            <summary>
            Пользователь, создавший этот объект (либо родительский, если этот создан автоматически)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.DateModified">
            <summary>
            Локальное Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.ModifiedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.DateActivated">
            <summary>
            Локальное дата/время активации объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.DateStarted">
            <summary>
            Локальное дата/время активации объекта (либо его создания, если время активации не установлено)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.ActivatedByUser">
            <summary>
            Пользователь, активировавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.DateClosed">
            <summary>
            Локальное Локальное дата/время закрытия объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.ClosedByUser">
            <summary>
            Пользователь, закрывший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.DateContentModified">
            <summary>
            Локальная дата/время последнего изменения содержательной части объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.ContentModifiedByUser">
            <summary>
            Ссылка на пользователя, изменившего содержательную часть этого объекта последним.
            Если реального пользователя нет, возвращается экземпляр системного псевдопользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.Template">
            <summary>
            Доступ к шаблону объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.RunTimeStateChanges">
            <summary>
            Поле для внесения низкоуровневых правок во внутреннее состояние диаграммы процесса.
            Используется для восстановления согласованного состояния, если такоковое произошло по каким-либо причинам 
            (изменения диаграммы на лету и т.п.)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.Templates">
            <summary>
            Перечисляет все шаблоны объекта, начиная с основного.
            Из дополнительных перечисляются только те, что расширяют поведение и атрибуты экземпляра объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.OtherTemplates">
            <summary>
            Доступ к дополнительным шаблонам объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.OtherClassTemplates">
            <summary>
            Доступ к дополнительным шаблонам-классам объекта (те шаблоны, что расширяют поведение и атрибута экземпляра объекта).
            Возвращаются шаблоны для последнего сохраненного состояния объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task._OtherClassTemplates">
            <summary>
            Доступ к дополнительным шаблонам-классам объекта (те шаблоны, что расширяют поведение и атрибуты экземпляра объекта).
            Возвращаются шаблоны для последнего сохраненного состояния объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.Container">
            <summary>
            Доступ к родительскому контейнеру.
            Возвращает оригинальную оболочку если иная не установлена объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.EffectiveContainer">
            <summary>
            Доступ к родительскому контейнеру (с учетом возможного наследования от родительской задачи)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.ParentOriginal">
            <summary>
            Доступ к родительской задаче
            Возвращает оригинальную оболочку если иная не установлена объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.Parent">
            <summary>
            Доступ к родительской задаче.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.Root">
            <summary>
            Ссылка на корневую задачу, от которой была порождена данная
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.BranchRoot">
            <summary>
            Возвращает корень ветви объектов своего типа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.AllParents">
            <summary>
            Перечисляет все родительские информационные объекты, начиная c себя (включая)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.Diagram">
            <summary>
            Доступ к экземпляру диаграммы с текущими статусами выполнения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.ParentDiagramNode">
            <summary>
            Доступ к этапу диаграммы, по которому была создана данная задача
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.HasParentDiagramNode">
            <summary>
            Возвращает true если задача создана вышестоящей диаграммой
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.ChildrenInCache">
            <summary>
            Возвращает перечислитель дочерних задач, имеющихся в кеше в данный момент
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task._Children">
            <summary>
            Возвращает перечислитель дочерних задач
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task._AllChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.Children">
            <summary>
            Возвращает перечислитель дочерних задач
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.AllChildren">
            <summary>
            Возвращает массив всех дочерних задач на все уровни.
            (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.NameKey">
            <summary>
            NameKey не определен для задачм
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#Task}#DirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#Task}#AllDirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.WorkItemsInCache">
            <summary>
            Возвращает перечислитель порожденных нагрузок, имеющихся в кеше в данный момент
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.WorkItems">
            <summary>
            Возвращает массив активных (а также приостановленных и прочих незавершенных и неотмененных) нагрузок, порожденных этой задачей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.LastActiveWorkItem">
            <summary>
            Ищет последнюю активную нагрузку-задачу порожденную этой задачей
            </summary>
            <returns>Нагрузку или null</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task._Bindings">
            <summary>
            Список привязок к этому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.Bindings">
            <summary>
            Список привязок к этому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.ParentBindings">
            <summary>
            Возвращает перечислитель унаследованных от родителей привязок к этому объекту/с использованием этой роли
            </summary>
            <returns>Перечислитель унаследованных от родителей привязок к этому объекту/с использованием этой роли</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.UserRightsInheritanceParent">
            <summary>
            Возвращает родительский объект по цепочке наследования прав доступа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.LastTimerInvocationTime">
            <summary>
            Время последнего вызова метода OnTimeout
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.AllLinkedUsers">
            <summary>
            Рекурсивно обходит все дочерние объекты, начиная с себя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.HasValidDiagram">
            <summary>
            Возвращает true если выполнение задачи подчинено диаграмме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.IsSupervisedByMe">
            <summary>
            Возвращает true если данная задача является процессом с диаграммой и 
            текущий пользователь является ее супервизором
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Task.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.CreationData.Status">
            <summary>
            Статус 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.CreationData.Params">
            <summary>
            Дополнительное поле для параметров этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.CreationData.ResaveObject">
            <summary>
            Флаг обозначающий необходимость пересохранить объект как есть
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.CreationData.m_Template">
            <summary>
            Шаблон объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.CreationData.m_Parent">
            <summary>
            Родительская задача
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.CreationData.m_Container">
            <summary>
            Родительский контейнер
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.CreationData.m_ParentDiagramNode">
            <summary>
            Родительский этап диаграммы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.CreationData.TaskDiagramRevision">
            <summary>
            Номер ревизии диаграммы, используемой этим процессом
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Task.CreationData.RunTimeStateChanges">
            <summary>
            Поле для сохранения ран-тайм состояния объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Task.CreationData.WriteTo(ProgramSoyuz.DataModel.TaskBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.CreationData.Template">
            <summary>
            Шаблон объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.CreationData.Parent">
            <summary>
            Родительская задача
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.CreationData.Container">
            <summary>
            Родительский контейнер
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.CreationData.ParentDiagramNode">
            <summary>
            Родительский этап диаграммы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.CreationData.AreSysPropsChanged">
            <summary>
            Возвращает true если есть изменения в системных атрибутах объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Task.CreationData.AreAdministrationPropsChanged">
            <summary>
            Возвращает true если есть изменения в атрибутах объекта, относящихся к администрированию WF
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingTaskCustomizationBase">
            <summary>
            Базовый класс для кастомизаторов схем
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CustomizationBase">
            <summary>
            Базовый класс для кастомизаторов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationBase._replacingHandlers">
            <summary>
            У шаблона-модификатора это список обработчиков, с атрибутами отмены вызова его у мастера.
            Хранится в сортированном виде для бинарного поиска
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomizationBase._replacedHandlers">
            <summary>
            У шаблона-мастера это список обработчиков, вызов которых отменён соответствующими модификаторами
            Хранится в сортированном виде для бинарного поиска
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationBase.CheckCustomizationCode(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.String,System.CodeDom.Compiler.CompilerError[]@)">
            <summary>
            Проверочная компиляция кода кастомизации объекта
            </summary>
            <param name="obj">Объект для которого проверяем код кастомизации</param>
            <param name="csCode">Текст одного или нескольких методов</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationBase.CheckCustomizationCode(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.String,ProgramSoyuz.PLM.Scripting.CustomizationMethod[]@,System.CodeDom.Compiler.CompilerError[]@,System.Int32@)">
            <summary>
            Проверочная компиляция кода кастомизации объекта
            </summary>
            <param name="obj">Объект для которого проверяем код кастомизации</param>
            <param name="csCode">Текст одного или нескольких методов</param>
            <param name="missingHandlers">На выходе список методов, которые можно добавить к коду</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <param name="nHeaderLines">Число строк, вставленных перед переданным для компиляции кодом</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationBase.GetDefaultImplementation(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.CustomizationMethod[])">
            <summary>
            Формирует реализацию по умолчанию для запрошенных методов кастомизации
            </summary>
            <param name="obj">Объект для которого проверяем код кастомизации</param>
            <param name="handlers">массив идентификаторов интересующих методов кастомизации,
            либо null если интересуют все методы для этого объекта</param>
            <returns>Строку с кодом</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationBase.GetCustomizationMethodIds(ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Формирует список идентификаторов методов кастомизации, которые могут быть определены для данной сущности
            </summary>
            <param name="entity">Тип сущности</param>
            <returns>массив идентификаторов методов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationBase.GetCustomizationMethodIds(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Формирует список идентификаторов методов кастомизации, которые могут быть определены для данной сущности
            </summary>
            <param name="attributableEntity">Тип шаблонируемой сущности</param>
            <returns>массив идентификаторов методов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationBase.GetCustomizationMethodIds(ProgramSoyuz.DataModel.UICommandBase.KindEnum)">
            <summary>
            Формирует список идентификаторов методов кастомизации, которые могут быть определены для данного типа команды
            </summary>
            <param name="cmdKind">Тип применимости UI команды</param>
            <returns>массив идентификаторов методов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationBase.GetCustomizationMethodIds(ProgramSoyuz.DataModel.ScriptingTaskBase.KindEnum)">
            <summary>
            Формирует список идентификаторов методов кастомизации, которые могут быть определены для данного типа скриптовой задачи
            </summary>
            <param name="kind">Тип скриптовой задачи</param>
            <returns>массив идентификаторов методов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationBase.GetCustomizationMethodIds(ProgramSoyuz.DataModel.IndexDefBase.KindEnum)">
            <summary>
            Формирует список идентификаторов методов кастомизации, которые могут быть определены для данного типа индекса
            </summary>
            <param name="kind">Тип индекса</param>
            <returns>массив идентификаторов методов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationBase.GetCustomizationMethodIds(ProgramSoyuz.DataModel.UICommandBase.KindEnum,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Формирует список идентификаторов методов кастомизации, которые могут быть определены для данного типа команды
            </summary>
            <param name="cmdKind">Тип применимости UI команды</param>
            <param name="dataType">Возможный тип данных атрибута, к которому относится команда</param>
            <returns>массив идентификаторов методов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationBase.GetCustomizationMethodIds(ProgramSoyuz.DataModel.EntityIdentifier,ProgramSoyuz.DataModel.AttributableEntityIdentifier,ProgramSoyuz.DataModel.UICommandBase.KindEnum,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum,ProgramSoyuz.DataModel.ScriptingTaskBase.KindEnum)">
            <summary>
            Формирует список идентификаторов методов кастомизации, которые могут быть определены для данной сущности
            </summary>
            <param name="entity">Тип сущности</param>
            <param name="attributableEntity">Тип шаблонируемой сущности</param>
            <param name="cmdKind">Тип применимости UI команды</param>
            <param name="dataType">Возможный тип данных атрибута, к которому относится команда</param>
            <param name="taskKind">Тип скриптовой задачи</param>
            <returns>массив идентификаторов методов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomizationBase.DoGetCustomizationMethodNames(ProgramSoyuz.PLM.Scripting.CustomizationMethod[])">
            <summary>
            Формирует множество имен методов кастомизации по списку их идентификаторов
            </summary>
            <param name="handlers">Список идентификаторов методов кастомизации</param>
            <returns>Множество соответствующих имен методов</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomizationBase.Owner">
            <summary>
            Ссылка на кастомизируемый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomizationBase.ReplacingHandlers">
            <summary>
            У шаблона-модификатора это список обработчиков, с атрибутами отмены вызова его у мастера.
            Хранится в сортированном виде для бинарного поиска
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomizationBase.ReplacedHandlers">
            <summary>
            У шаблона-мастера это список обработчиков, вызов которых отменён соответствующими модификаторами
            Хранится в сортированном виде для бинарного поиска
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTaskCustomizationBase.CheckCustomizationCode(ProgramSoyuz.DataModel.ScriptingTaskBase.KindEnum,System.String,ProgramSoyuz.PLM.Scripting.CustomizationMethod[]@,System.CodeDom.Compiler.CompilerError[]@,System.Int32@)">
            <summary>
            Проверочная компиляция кода кастомизации объекта
            </summary>
            <param name="kind">Тип скриптовой задачи</param>
            <param name="csCode">Текст одного или нескольких методов</param>
            <param name="missingHandlers">На выходе список методов, которые можно добавить к коду</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <param name="nHeaderLines">Число строк, вставленных перед переданным для компиляции кодом</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTaskCustomizationBase.GetDefaultImplementation(ProgramSoyuz.DataModel.ScriptingTaskBase.KindEnum,ProgramSoyuz.PLM.Scripting.CustomizationMethod[])">
            <summary>
            Формирует реализацию по умолчанию для запрошенных методов кастомизации
            </summary>
            <param name="kind">Тип скриптовой задачи</param>
            <param name="handlers">массив идентификаторов интересующих методов кастомизации,
            либо null если интересуют все методы для этого объекта</param>
            <returns>Строку с кодом</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingLazyTaskCustomization">
            <summary>
            Базовый класс для кастомизаторов скриптовых задач
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingLazyTaskCustomization.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingLazyTaskCustomization.IsValid">
            <summary>
            Проверка возможности выполнения задачи в текущем окружении
            </summary>
            <returns>Возвращает true, окружение подходит</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingLazyTaskCustomization.Invoke">
            <summary>
            Вызов задачи на исполнение
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingLazyTaskCustomization.ProgramSoyuz#PLM#Scripting#IScriptingTaskBase#Invoke(ProgramSoyuz.PLM.Scripting.UserSession,System.Object)">
            <summary>
            Вызов метода, реализованного скриптовой функцией
            </summary>
            <param name="session">Пользовательская сессия, инициировавшая вызов 
            (может быть null, если вызов инициировал серверный скрипт без указания сессии)</param>
            <param name="inputParams">Сериализуемые входные данные для метода</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingManualTaskCustomization">
            <summary>
            Базовый класс для кастомизаторов скриптовых задач
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingManualTaskCustomization.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingManualTaskCustomization.IsValid">
            <summary>
            Проверка возможности выполнения задачи в текущем окружении
            </summary>
            <returns>Возвращает true, окружение подходит</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingManualTaskCustomization.ProgramSoyuz#PLM#Scripting#IScriptingTaskBase#Invoke">
            <summary>
            Вызов задачи на исполнение
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingManualTaskCustomization.Invoke(ProgramSoyuz.PLM.Scripting.UserSession,System.Object)">
            <summary>
            Вызов метода, реализованного скриптовой функцией
            </summary>
            <param name="session">Пользовательская сессия, инициировавшая вызов 
            (может быть null, если вызов инициировал серверный скрипт без указания сессии)</param>
            <param name="inputParams">Сериализуемые входные данные для метода</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ScriptingMethodCustomization">
            <summary>
            Базовый класс для кастомизаторов скриптовых задач
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingMethodCustomization.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingMethodCustomization.ProgramSoyuz#PLM#Scripting#IScriptingTaskBase#IsValid">
            <summary>
            Проверка возможности выполнения задачи в текущем окружении
            </summary>
            <returns>Возвращает true, окружение подходит</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingMethodCustomization.ProgramSoyuz#PLM#Scripting#IScriptingTaskBase#Invoke">
            <summary>
            Вызов задачи на исполнение
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingMethodCustomization.Invoke(ProgramSoyuz.PLM.Scripting.UserSession,System.Object)">
            <summary>
            Вызов метода, реализованного скриптовой функцией
            </summary>
            <param name="session">Пользовательская сессия, инициировавшая вызов 
            (может быть null, если вызов инициировал серверный скрипт без указания сессии)</param>
            <param name="inputParams">Сериализуемые входные данные для метода</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.DragDropHandlerCustomization">
            <summary>
            Базовый класс для кастомизаторов операций драг'n'дропа
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IDragDropHandler">
            <summary>
            Интерфейс обработчика DND операций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IDragDropHandler.CalcDropEffects(ProgramSoyuz.PLM.Scripting.DragDropOperationContext,ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Формирует описатели доступных DND операций. Список описателей может формироваться, как единый на уровне контекста, так и 
            частный - для каждого объекта в context.ObjectsByTemplate (если операция по атрибутируемым объектам)
            </summary>
            <param name="context">Контекст групповой DND операции</param>
            <param name="destination">Целевой объект (UserItem, UserItemLink, AttributableObject)</param>
            <remarks>В операцию могут быть вовлечены и объекты других шаблонов. Они доступны через <paramref name="context"/>.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IDragDropHandler.InsertDropData(ProgramSoyuz.PLM.Scripting.DragDropOperationContext,ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Windows.Forms.DragDropEffects)">
            <summary>
            Собственно выполнение операции DND. Если в контексте присутствуют ObjectsByTemplate, обработанные объекты 
            следует отметить флагом object.Handled.
            </summary>
            <param name="context">Контекст групповой DND операции</param>
            <param name="destination">Целевой объект (UserItem, UserItemLink, AttributableObject)</param>
            <param name="dropEffect">Выполняемая операция одна из (Move, Copy, Link)</param>
            <returns>true если операцию следует продолжить с оставшимися объектами, false - пользователь затребовал завершение операции</returns>
            <remarks>Операция происходит в контексте группового сохранения. Все изменения будут сохранены по завершению выполнения
            всех обработчиков DND. Можно использовать явное сохранение обработанных объектов.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragDropHandlerCustomization.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragDropHandlerCustomization.CalcDropEffects(ProgramSoyuz.PLM.Scripting.DragDropOperationContext,ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Формирует описатели доступных DND операций. Список описателей может формироваться, как единый на уровне контекста, так и 
            частный - для каждого объекта в context.ObjectsByTemplate (если операция по атрибутируемым объектам)
            </summary>
            <param name="context">Контекст групповой DND операции</param>
            <param name="destination">Целевой объект (UserItem, UserItemLink, AttributableObject)</param>
            <remarks>В операцию могут быть вовлечены и объекты других шаблонов. Они доступны через <paramref name="context"/>.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragDropHandlerCustomization.InsertDropData(ProgramSoyuz.PLM.Scripting.DragDropOperationContext,ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Windows.Forms.DragDropEffects)">
            <summary>
            Собственно выполнение операции DND. Если в контексте присутствуют ObjectsByTemplate, обработанные объекты 
            следует отметить флагом object.Handled.
            </summary>
            <param name="context">Контекст групповой DND операции</param>
            <param name="destination">Целевой объект (UserItem, UserItemLink, AttributableObject)</param>
            <param name="dropEffect">Выполняемая операция одна из (Move, Copy, Link)</param>
            <returns>true если операцию следует продолжить с оставшимися объектами, false - пользователь затребовал завершение операции</returns>
            <remarks>Операция происходит в контексте группового сохранения. Все изменения будут сохранены по завершению выполнения
            всех обработчиков DND. Можно использовать явное сохранение обработанных объектов.</remarks>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FileVaultManagerCustomization">
            <summary>
            Базовый класс для кастомизаторов менеджеров файловых серверов
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IFileVaultManager">
            <summary>
            Интерфейс менеджера по операциям с файловыми хранилищами
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IFileVaultManager.GetPrefferedConnectionPoints(ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Возвращает точки соединения ФС в порядке убывания предпочтительности
            </summary>
            <param name="fileVault">Файловый сервер, чьи точки соединения интересуют</param>
            <returns>Массив точек, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IFileVaultManager.GetPrefferedFileVaultsForDownload(ProgramSoyuz.PLM.Scripting.FileDesc)">
            <summary>
            Возвращает файловые сервера для скачивания тела файла в порядке убывания предпочтительности
            </summary>
            <param name="file">Описатель файла</param>
            <returns>Массив файловых серверов или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IFileVaultManager.GetPrefferedFileVaultsForUpload(ProgramSoyuz.PLM.Scripting.FileDesc)">
            <summary>
            Возвращает файловые сервера для загрузки тела файла на ФС в порядке убывания предпочтительности
            </summary>
            <param name="file">Описатель файла</param>
            <returns>Массив файловых серверов или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVaultManagerCustomization.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVaultManagerCustomization.GetPrefferedConnectionPoints(ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Возвращает точки соединения ФС в порядке убывания предпочтительности
            </summary>
            <param name="fileVault">Файловый сервер, чьи точки соединения интересуют</param>
            <returns>Массив точек, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVaultManagerCustomization.GetPrefferedFileVaultsForDownload(ProgramSoyuz.PLM.Scripting.FileDesc)">
            <summary>
            Возвращает файловые сервера для скачивания тела файла в порядке убывания предпочтительности
            </summary>
            <param name="file">Описатель файла</param>
            <returns>Массив файловых серверов или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileVaultManagerCustomization.GetPrefferedFileVaultsForUpload(ProgramSoyuz.PLM.Scripting.FileDesc)">
            <summary>
            Возвращает файловые сервера для загрузки тела файла на ФС в порядке убывания предпочтительности
            </summary>
            <param name="file">Описатель файла</param>
            <returns>Массив файловых серверов или null</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.HttpHandlerCustomization">
            <summary>
            Базовый класс для кастомизаторов обработчиков HTTP запросов
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IHttpHandler">
            <summary>
            Интерфейс обработчика Http запросов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IHttpHandler.HandleWebRequest(System.Net.HttpListenerContext,ProgramSoyuz.PLM.Scripting.WebUserSession)">
            <summary>
            Обработчик веб запросов. Выполняется в серверных потоках-обработчиках сетевых запросов
            </summary>
            <param name="context">HTTP контекст запроса</param>
            <param name="session">Сессия Web пользователя. Используйте session.User == null, если пользователь не известен.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.HttpHandlerCustomization.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.HttpHandlerCustomization.HandleWebRequest(System.Net.HttpListenerContext,ProgramSoyuz.PLM.Scripting.WebUserSession)">
            <summary>
            Обработчик веб запросов. Выполняется в основном потоке серверного кеша
            </summary>
            <param name="context">HTTP контекст запроса</param>
            <param name="session">Сессия Web пользователя</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ShellContextMenuCustomization">
            <summary>
            Базовый класс для кастомизаторов обработчиков контекстного меню Windows проводника
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IShellContextMenuHandler">
            <summary>
            Интерфейс обработчика команды контекстного меню в Shell
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IShellContextMenuHandler.IsValidFor(System.String[])">
            <summary>
            Определяет, показывать данный обработчик для указанного списка файлов в контекстном меню
            </summary>
            <param name="files">Список файлов</param>
            <returns>True - да, показывать</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IShellContextMenuHandler.IsEnabledFor(System.String[])">
            <summary>
            Определяет, активен ли данный обработчик для указанного списка файлов в контекстном меню
            </summary>
            <param name="files">Список файлов</param>
            <returns>True - да, активен</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IShellContextMenuHandler.InvokeFor(System.String[],System.IntPtr)">
            <summary>
            Обработчик команды контекстного меню
            </summary>
            <param name="files">Список файлов</param>
            <param name="hwnd">окно, в котором показывается контекстное меню</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ShellContextMenuCustomization.IsValidFor(System.String[])">
            <summary>
            Определяет, показывать данный обработчик для указанного списка файлов в контекстном меню проводника
            </summary>
            <param name="files">Список файлов</param>
            <returns>True - да, показывать</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ShellContextMenuCustomization.IsEnabledFor(System.String[])">
            <summary>
            Определяет, активен ли данный обработчик для указанного списка файлов в контекстном меню проводника
            </summary>
            <param name="files">Список файлов</param>
            <returns>True - да, активен</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ShellContextMenuCustomization.InvokeFor(System.String[],System.IntPtr)">
            <summary>
            Обработчик команды контекстного меню проводника
            </summary>
            <param name="files">Список файлов</param>
            <param name="hwnd">окно, в котором показывается контекстное меню</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ServerCustomization">
            <summary>
            Базовый класс для кастомизаторов общих серверных операций
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IServerHandler">
            <summary>
            Интерфейс общих серверных операций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ServerCustomization.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserSessionCustomization">
            <summary>
            Базовый класс сетевого взаимодействия между клиентскими сессиями
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IUserSessionHandler">
            <summary>
            Интерфейс сетевого взаимодейтсвия между клиентскими сессиями
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUserSessionHandler.Invoke(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserSession,System.String,System.Object)">
            <summary>
            Вызов метода, реализованного пользовательской сессией
            </summary>
            <param name="callingUser">Пользователь, запросивший данную сессию</param>
            <param name="callingSession">Пользовательская сессия, запросившая друную пользовательскую сессию</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <returns>Результат выполнения запроса</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUserSessionHandler.OnBeforeInvoke(ProgramSoyuz.PLM.Scripting.UserSession,ProgramSoyuz.PLM.Scripting.UserSession,System.String,System.Object)">
            <summary>
            Предварительный обработчик перед отправкой запроса пользовательской сессии. Вызывается на локальном сервере
            </summary>
            <param name="callingSession">Пользовательская сессия, запросившая друную пользовательскую сессию</param>
            <param name="targetSession">Целевая сессия, которой отправляется запрос</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <returns>true если обработка завершена и дальнейший поиск обработчиков не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUserSessionHandler.OnAfterInvoke(ProgramSoyuz.PLM.Scripting.UserSession,ProgramSoyuz.PLM.Scripting.UserSession,System.String,System.Object,System.Object@)">
            <summary>
            Обработчик результата перед отправкой ответа пользовательской сессии. Вызывается на локальном сервере
            </summary>
            <param name="callingSession">Пользовательская сессия, запросившая друную пользовательскую сессию</param>
            <param name="targetSession">Целевая сессия, которой отправляется запрос</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <param name="result">Результат обработки</param>
            <returns>true если обработка завершена и дальнейший поиск обработчиков не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSessionCustomization.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSessionCustomization.Invoke(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserSession,System.String,System.Object)">
            <summary>
            Вызов метода, реализованного пользовательской сессией
            </summary>
            <param name="callingUser">Пользователь, запросивший данную сессию</param>
            <param name="callingSession">Пользовательская сессия, запросившая друную пользовательскую сессию</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <returns>Результат выполнения запроса</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSessionCustomization.OnBeforeInvoke(ProgramSoyuz.PLM.Scripting.UserSession,ProgramSoyuz.PLM.Scripting.UserSession,System.String,System.Object)">
            <summary>
            Предварительный обработчик перед отправкой запроса пользовательской сессии. Вызывается на локальном сервере
            </summary>
            <param name="callingSession">Пользовательская сессия, запросившая друную пользовательскую сессию</param>
            <param name="targetSession">Целевая сессия, которой отправляется запрос</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <returns>true если обработка завершена и дальнейший поиск обработчиков не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSessionCustomization.OnAfterInvoke(ProgramSoyuz.PLM.Scripting.UserSession,ProgramSoyuz.PLM.Scripting.UserSession,System.String,System.Object,System.Object@)">
            <summary>
            Обработчик результата перед отправкой ответа пользовательской сессии. Вызывается на локальном сервере
            </summary>
            <param name="callingSession">Пользовательская сессия, запросившая друную пользовательскую сессию</param>
            <param name="targetSession">Целевая сессия, которой отправляется запрос</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <param name="result">Результат обработки</param>
            <returns>true если обработка завершена и дальнейший поиск обработчиков не требуется</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ExternalServerCustomization">
            <summary>
            Базовый класс для кастомизаторов взаимодействия с внешними серверами
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IExternalServerHandler">
            <summary>
            Интерфейс операций взаимодействия с внешними серверами
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IExternalServerHandler.Invoke(ProgramSoyuz.PLM.Scripting.ExternalServer,System.String,System.Object)">
            <summary>
            Вызов метода, реализованного внешним сервером
            </summary>
            <param name="server">Сервер, от которого пришёл запрос</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IExternalServerHandler.OnBeforeInvoke(ProgramSoyuz.PLM.Scripting.UserSession,ProgramSoyuz.PLM.Scripting.ExternalServer,System.String,System.Object)">
            <summary>
            Предварительный обработчик перед отправкой запроса внешнему серверу. Вызывается на локальном сервере
            </summary>
            <param name="session">Пользовательская сессия, запросившая внешний сервер</param>
            <param name="server">Сервер, к которому обращён запрос</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <returns>true если обработка завершена и дальнейший поиск обработчиков не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IExternalServerHandler.OnAfterInvoke(ProgramSoyuz.PLM.Scripting.UserSession,ProgramSoyuz.PLM.Scripting.ExternalServer,System.String,System.Object,System.Object@)">
            <summary>
            Обработчик результата перед отправкой ответа внешнего сервера. Вызывается на локальном сервере
            </summary>
            <param name="session">Пользовательская сессия, запросившая внешний сервер</param>
            <param name="server">Сервер, к которому обращён запрос</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <param name="result">Результат обработки</param>
            <returns>true если обработка завершена и дальнейший поиск обработчиков не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServerCustomization.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServerCustomization.Invoke(ProgramSoyuz.PLM.Scripting.ExternalServer,System.String,System.Object)">
            <summary>
            Вызов метода, реализованного внешним сервером
            </summary>
            <param name="server">Сервер, от которого пришёл запрос</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServerCustomization.OnBeforeInvoke(ProgramSoyuz.PLM.Scripting.UserSession,ProgramSoyuz.PLM.Scripting.ExternalServer,System.String,System.Object)">
            <summary>
            Предварительный обработчик перед отправкой запроса внешнему серверу. Вызывается на локальном сервере
            </summary>
            <param name="session">Пользовательская сессия, запросившая внешний сервер</param>
            <param name="server">Сервер, к которому обращён запрос</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <returns>true если обработка завершена и дальнейший поиск обработчиков не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ExternalServerCustomization.OnAfterInvoke(ProgramSoyuz.PLM.Scripting.UserSession,ProgramSoyuz.PLM.Scripting.ExternalServer,System.String,System.Object,System.Object@)">
            <summary>
            Обработчик результата перед отправкой ответа внешнего сервера. Вызывается на локальном сервере
            </summary>
            <param name="session">Пользовательская сессия, запросившая внешний сервер</param>
            <param name="server">Сервер, к которому обращён запрос</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <param name="result">Результат обработки</param>
            <returns>true если обработка завершена и дальнейший поиск обработчиков не требуется</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IndexDefCustomizationBase">
            <summary>
            Базовый класс для кастомизаторов схем
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDefCustomizationBase.CheckCustomizationCode(ProgramSoyuz.DataModel.IndexDefBase.KindEnum,System.String,ProgramSoyuz.PLM.Scripting.CustomizationMethod[]@,System.CodeDom.Compiler.CompilerError[]@,System.Int32@)">
            <summary>
            Проверочная компиляция кода кастомизации объекта
            </summary>
            <param name="kind">Тип скриптовой задачи</param>
            <param name="csCode">Текст одного или нескольких методов</param>
            <param name="missingHandlers">На выходе список методов, которые можно добавить к коду</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <param name="nHeaderLines">Число строк, вставленных перед переданным для компиляции кодом</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDefCustomizationBase.GetDefaultImplementation(ProgramSoyuz.DataModel.IndexDefBase.KindEnum,ProgramSoyuz.PLM.Scripting.CustomizationMethod[])">
            <summary>
            Формирует реализацию по умолчанию для запрошенных методов кастомизации
            </summary>
            <param name="kind">Тип скриптовой задачи</param>
            <param name="handlers">массив идентификаторов интересующих методов кастомизации,
            либо null если интересуют все методы для этого объекта</param>
            <returns>Строку с кодом</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IndexDefCustomization">
            <summary>
            Базовый класс для кастомизаторов скриптовых задач
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IIndexDefBase">
            <summary>
            Базовый интерфейс автоматической скриптовой индекса 
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IIndexDefBase.Initialize(ProgramSoyuz.PLM.Scripting.IndexDef)">
            <summary>
            Начальное заполнение или перестраивание индекса
            </summary>
            <remarks>Для клиентских индексов выполняется на клиенте. 
            Для хранимых или серверных - на сервере в читающей блокировке.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDefCustomization.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDefCustomization.Initialize(ProgramSoyuz.PLM.Scripting.IndexDef)">
            <summary>
            Начальное заполнение или перестраивание индекса
            </summary>
            <param name="index">Индекс, требующий инициализации или перестроения </param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.BendPoint.#ctor(ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Shape,System.Boolean)">
            <exception cref="T:System.ArgumentNullException">
            <paramref name="relativeShape"/> is null.
            </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.BendPoint.#ctor(ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Shape,System.Boolean,System.Boolean)">
            <exception cref="T:System.ArgumentNullException">
            <paramref name="relativeShape"/> is null.
            </exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.BendPoint.AutoPosition">
            <summary>
            Автоопределение координат точки
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeWorkItemTemplate.ManageMailShortcuts(ProgramSoyuz.PLM.Scripting.WorkItem,ProgramSoyuz.PLM.Scripting.UserItemLink,ProgramSoyuz.PLM.Scripting.UserItemLink[])">
            <summary>
            Вызывает обработчик OnDiagramDeadlock из кода кастомизации
            Вызывается на сервере непосредственно после создания шорткатов для очередной нагрузки
            </summary>
            <param name="obj">Экземпляр процесса с диаграммой</param>
            <param name="creatorLink">Шорткат, созданный на стороне отправителя</param>
            <param name="recipientLinks">Шорткаты, созданные на стороне получателей. Может быть null для нагрузок
            в статусе Черновик (Draft)</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IAsyncFileOperation">
            <summary>
            Интерфейс асинхронной файловой операции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAsyncFileOperation.WaitForEnd">
            <summary>
            Ожидает завершения операции. Исключение файловой операции перегенерируются внутри, если 
            операция завершена не успешно.
            Завершение всей операции происходит либо по вызову этого метода, либо в Idle обработчике
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAsyncFileOperation.IsAsyncMode">
            <summary>
            Устанавливается в true для асинхронных операций,
            false - синхронный режим выполнения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAsyncFileOperation.IsComplete">
            <summary>
            Устанавливается в true, когда операция завершена. Следует вызвать WaitForEnd() для вызова завершающего операцию
            кода в текущем потоке.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAsyncFileOperation.FileDescs">
            <summary>
            Список файловых значений атрибутов, для которых производится операция сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAsyncFileOperation.HasAnythingToDo">
            <summary>
            Возвращает true, если среди сохраняемых атрибутов есть файловые
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAsyncFileOperation.Exception">
            <summary>
            Исключение при выполнении операции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAsyncFileOperation.IsExceptionUIAllowed">
            <summary>
            true или null если Idle обработчику разрешено сообщить пользователю об исключении.
            false если общение с пользователем выполнит вызывающий код
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IAsyncFileOperation.Data">
            <summary>
            Поле для пользовательских данных
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.NotifyCollectionBeforeChangeHandler">
            <summary>
            Обработчки события о готовящемся изменении коллекции
            </summary>
            <param name="sender">Объект отправитель события</param>
            <param name="e">Параметры события</param>
            <param name="cancelText">Текст сообщения об ошибке (если требуется отменить изменение)</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.INotifyCollectionBeforeChange">
            <summary>
            Интерфейс для подписки на событие о готовящемся изменении коллекции
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Attribute">
            <summary>
            Атрибут объекта
            </summary>
            <summary>
            Атрибут объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.IsMatchingdataTypes(ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Сравнивает два типа атрибутов и возвращаеn true для близких по сути типов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetDataType(System.Object)">
            <summary>
            Определяет тип переданного значения в терминах типа данных атрибута
            </summary>
            <param name="val">Проверяемое значение</param>
            <returns>Тип значение в виде типа данных атрибута</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute._needRecalc">
            <summary>
            Флаг, обозначающий необходимость перевычислить атрибут
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.OnOwnerUpdated">
            <summary>
            При обновлении основного объекта сбрасывает кешированные значения атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute._ChangedValues">
            <summary>
            Список для хранения измененных значений атрибута.
            0-я позиция зарезервирована за текущим значением атрибута.
            В прочих позициях могут помещаться устаревшие значения при выполнении с ними physical операций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.AddChangedValue(ProgramSoyuz.PLM.Scripting.AttributeValue)">
            <summary>
            Добавляет измененное значение атрибута.
            Используется для низкоуровневых операций например с устаревшими значениями атрибута
            </summary>
            <param name="value">Измененное устаревшее значение атрибута, с которым надлежит выполнить низкоуровневую операцию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetWrapperFor(ProgramSoyuz.DataModel.AttributeValueBase)">
            <summary>
            Возвращает оболочку для существующего значения существующего атрибута
            с использованием поиска среди уже выданных оболочек
            </summary>
            <param name="rawValue">Raw объект для которого нужна оболочка</param>
            <returns>Найденная оболочка или null</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.m_aChangedCollectionElements">
            <summary>
            Список новых или измененных элементов коллекций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetChangedCollectionElements(System.Boolean)">
            <summary>
            Перебирает измененные элементы коллекций: только свои, либо на все уровни
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.#ctor(ProgramSoyuz.DataModel.AttributeBase,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="Attribute">Реальный объект</param>
            <param name="attributeDef">Определение атрибута (если известно на момент создания объекта)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.#ctor(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.#ctor(ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="attributeDef">Определение атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.InitFrom(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Инициализирует эту оболочку низкоуровневым способом по другой оболочке
            </summary>
            <param name="src"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CalcDirty(System.Boolean)">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
            <param name="ignoreInitilizedToDefault">Если true, то наличие флага <see cref="F:ProgramSoyuz.DataModel.AttributeBase.OperationEnum.InitializedToDefault"/>
            не влияет на результат</param>
            <returns>true если объект изменен</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.MarkDirty">
            <summary>
            Симуляция изменения атрибута, чтобы он попал в список измененных
            </summary>
            <remarks>Полезно для управления перевычислением чего-либо в серверных триггерах.
            Кроме того, на клиенте позволяет из скрипта команды обновить в карточке вычисляемый при показе атрибут</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.MarkAsUnchanged(System.Boolean)">
            <summary>
            Устанавливает атрибут и при необходимости всем вложенным атрибутам флаг начального значения <see cref="F:ProgramSoyuz.DataModel.AttributeBase.OperationEnum.InitializedToDefault"/>
            </summary>
            <param name="recursive">true если требуется поставить флаг у всех вложенных атрибутов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.IsEqual(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Возвращает true, если переданное значение совпадает с текущим значением атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.IsValueEqual(System.Object)">
            <summary>
            Возвращает true, если переданное значение совпадает с текущим значением атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.Validate">
            <summary>
            Проверяет значение атрибута на валидность
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.ErasePhysicaly">
            <summary>
            Физическое стирание атрибута вместе со всеми его итерациями если есть таковые
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.InvokeUICommand(System.String)">
            <summary>
            Вызов UI команды, определенной в шаблоне для этого атрибута
            </summary>
            <param name="nameKey">Ключ UI команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.UpdateUICommandState(System.String,ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Проверка состояния UI команды, определенной в шаблоне для этого атрибута
            </summary>
            <param name="nameKey">Ключ UI команды</param>
            <param name="cmdUI">Контрол для обновления состояния</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.InvokeUICommand(System.String,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement})">
            <summary>
            Вызов UI команды, определенной в шаблоне для этого атрибута
            </summary>
            <param name="nameKey">Ключ UI команды</param>
            <param name="elements">Набор элементов коллекции, над которыми производится операция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.UpdateUICommandState(System.String,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Проверка состояния UI команды, определенной в шаблоне для этого атрибута
            </summary>
            <param name="nameKey">Ключ UI команды</param>
            <param name="elements">Набор элементов коллекции, над которыми производится операция</param>
            <param name="cmdUI">Контрол для обновления состояния</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.OnHyperlink(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Вызывает обработчик нажатия на гиперссылку для HTML/RTF атрибутов
            </summary>
            <param name="target">Целевой объект (для ссылок на объекты PLM)</param>
            <param name="targetUrl">URL гиперссылки (содержимое тэга HREF)</param>
            <param name="control">true если нажата клавиша Control</param>
            <param name="alt">true если нажата клавиша Alt</param>
            <param name="shift">true если нажата клавиша Shift</param>
            <param name="editMode">true если установлен режим редактирования текста</param>
            <returns>true если действие обработано и вызов других обработчиков не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.OnHyperlinkTooltip(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.String,System.Boolean,System.String@,System.String@)">
            <summary>
            Вызывает обработчик нажатия на гиперссылку для HTML/RTF атрибутов - формирование всплывающей подсказки для гиперссылки
            </summary>
            <param name="target">Целевой объект (для ссылок на объекты PLM)</param>
            <param name="targetUrl">URL гиперссылки (содержимое тэга HREF)</param>
            <param name="editMode">true если установлен режим редактирования текста</param>
            <param name="linkText">На выходе текст всплывающей подсказки</param>
            <param name="hintText">На выходе подсказка о вариациях поведения с разными сдвиговыми клавишами.</param>
            <returns>Строка подсказки, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetNamedValueRange">
            <summary>
            Возвращает корневой ИЗ, возможно вычисленный кастомизаций, определяющий диапазон возможных значений атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetNamedValueRange(ProgramSoyuz.PLM.Scripting.NamedValue[]@)">
            <summary>
            Возвращает корневой ИЗ, возможно вычисленный кастомизаций, определяющий диапазон возможных значений атрибута,
            либо непосредственный список возможных значений
            </summary>
            <param name="availableValues">На выходе список доступных значений, либо null, если используется возвращаемый корень ветви</param>
            <returns>Корень ветви ИЗ ( используется только если <paramref name="availableValues"/> равен null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetAvailableLinkValues">
            <summary>
              Вызывает обработчики GetAvailableLinkValues из кода кастомизации.
              Формирует список объектов, из которых можно выбрать значение ссылки/элемента множества
            </summary>
            <returns>Список объектов, либо null, если следует использовать обычный диалог поиска</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.IsReadOnlyInUI">
            <summary>
            Вычисляет является ли данный атрибут доступным только для чтения для данного объекта (или элемента коллекции).
            Вызывается код кастомизации.
            </summary>
            <returns>true означает только для чтения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.IsHiddenInUI">
            <summary>
              Вычисляет является ли данный атрибут скрытым для данного объекта (или элемента коллекции) в текущем окружении
            </summary>
            <returns>true означает только для чтения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CanConvertInput(System.Object)">
            <summary>
            Вызывает обработчики CanConvertInput из кода кастомизации.
            </summary>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>true, если значение <paramref name="newValue"/> пригодно для атрибута, false если не пригодно</returns>
            <remarks>Вызывается на клиенте для проверки пригодности значения для присваивания атрибуту.
            Используется для проверки возможности операции вставки из буфера.
            Все исключения перехватываются (репорт на сервер)</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.ConvertInput(System.Object@)">
            <summary>
            Вызывает обработчики кода кастомизации для конвертации вводимого значения перед присвоением его атрибуту.
            </summary>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <remarks>Вызывается на клиенте перед сменой значения атрибута (включая операции вставки из буфера).
            Исключения НЕ перехватываются.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetVirtualAttributeDefs">
            <summary>
            Возвращает список виртуальных определений атрибутов для отображения спискового атрибута.
            Для спискового (или композитного) атрибута вызывается обработчик кастомизации шаблона строки.
            </summary>
            <returns>Массив виртуальных определений атрибутов, либо null</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.m_ValueWrapper">
            <summary>
            Ссылка на новое или измененное значение объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.m_aCollectionElementWrappers">
            <summary>
            Список оболочек-элементов коллекции, созданных по реальным элементам коллекции этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.m_pCollectionElementList">
            <summary>
            Оболочка для работы со списком элементов коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.PrepareDelayedLoadAttributes">
            <summary>
            Проверяет наличие атрибутов отложенной загрузки и загружает их при необходимости, обновляя текущую скриптовую оболочку
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.PrepareHistoryAttributes">
            <summary>
            Проверяет загружена ли история и при необходимости загружает, обновляет текущую скриптовую оболочку
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.MarkForRecalculation">
            <summary>
            Перевычисляет вычисленное значение атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.PrepareForPersisting">
            <summary>
            Устанавливает операции сохранения для вычисленного значения атрибута (и элементов коллекции)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CreateCompositeElement">
            <summary>
            Создает экземпляр значения композитного атрибута для последующего присваивания 
            <see cref="P:ProgramSoyuz.PLM.Scripting.Attribute.CompositeElement"/>.
            </summary>
            <returns>Пустую заготовку для значения композитного атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetCollectionWrapper">
            <summary>
            Возвращает имеющийся или создает новый объект - оболочку коллекции элементов
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetCollectionElements(System.Boolean)">
            <summary>
            Возвращает перечислитель элементов коллекции спискового атрибута.
            </summary>
            <param name="async">true если разрешено асинхронное вычисление атрибута, false - вычисление должно быть произведено синхронно</param>
            <returns>Перечислитель элементов коллекции</returns>
            <remarks>Вызывающая сторона если ставит <paramref name="async"/> == true, то после завершения метода должна проверить 
            attr.IsAsyncCalculationinProgress. True означает, что начато асинхронное вычисление. Для его продолжения и завершения 
            следует периодически (например по OnIdle) вызывать этот же метод с параметром true до тех пор пока attr.IsAsyncCalculationinProgress остается 
            равным true.
            При завершении асинхронного вычисления свойство attr.IsAsyncCalculationinProgress будет установлено в false.
            Лишь тогда атрибут считается полностью вычисленным. До этого значение атрибута может содержать промежуточные данные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.DoCalculateCollection(System.Boolean)">
            <summary>
            Перевычисление коллекции
            </summary>
            <param name="async"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetCollectionElementsAt(System.Int32)">
            <summary>
            Возвращает перечислитель элементов коллекции спискового атрибута, существовавших в базе
            на момент указанной ревизии.
            </summary>
            <param name="nRevisionNumber">Номер ревизии, для которого формируется список элементов</param>
            <remarks>Для получения значений атрибутов элемента на момент указанной ревизии
            следует использовать <see cref="M:ProgramSoyuz.PLM.Scripting.Attribute.GetValueAt(System.Int32)"/></remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.DropHistory">
            <summary>
            Освобождает ссылки на оболочки устаревших элементов коллекций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetCollectionElementById(System.UInt32)">
            <summary>
            Возвращает элемент коллекции по его идентификатору
            </summary>
            <param name="id">Id элемента коллекции</param>
            <returns>Элемент коллекции, либо null, если нет такого</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetWrapperFor(ProgramSoyuz.DataModel.CollectionElementBase)">
            <summary>
            Возвращает имеющуюся или новую оболочку для указанного элемента коллекции
            </summary>
            <param name="element">raw объект</param>
            <returns>Скриптовую оболочку для raw объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetValueWrapper">
            <summary>
            Возвращает скириптовую оболочку для значения атрибута.
            В отличие от <see cref="P:ProgramSoyuz.PLM.Scripting.Attribute.Value"/> этот метод не производит вычисления атрибута,
            возвращая ту оболочку, что имеется на данный момент, либо новую, если она еще не была создана
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetValueObject(System.Boolean)">
            <summary>
            Возвращает значение атрибута: или существующее в базе или пустая оболочка для значения.
            </summary>
            <param name="async">true если разрешено асинхронное вычисление атрибута, false - вычисление должно быть произведено синхронно</param>
            <returns>Скриптовую оболочку значения атрибута</returns>
            <remarks>Вызывающая сторона если ставит <paramref name="async"/> == true, то после завершения метода должна проверить 
            attr.IsAsyncCalculationinProgress. True означает, что начато асинхронное вычисление. Для его продолжения и завершения 
            следует периодически (например по OnIdle) вызывать этот же метод с параметром true до тех пор пока attr.IsAsyncCalculationinProgress остается 
            равным true.
            При завершении асинхронного вычисления свойство attr.IsAsyncCalculationinProgress будет установлено в false.
            Лишь тогда атрибут считается полностью вычисленным. До того значение атрибута может содержать промежуточные данные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.DoCalculateValue(System.Boolean)">
            <summary>
            Вычисление атрибута
            </summary>
            <param name="async"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetValueAt(System.Int32)">
            <summary>
            Возвращает значение атрибута, каким оно было на момент указанной ревизии. Может вернуть null
            если значения тогда не было
            </summary>
            <param name="nRevisionNumber">Номер ревизии, для которой возвращается значение атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.EraseValue(ProgramSoyuz.PLM.Scripting.AttributeValue,System.Boolean)">
            <summary>
            Добавляет запись об удалении существующего значения атрибута
            </summary>
            <param name="value">Удаляемое существующее значение атрибута</param>
            <param name="physicalErase"> </param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.m_AttributeDef">
            <summary>
            Кешированная ссылка на определение атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CheckCachedAttributeDef(ProgramSoyuz.PLM.Scripting.AttributeDef,System.Boolean)">
            <summary>
            Устанавливает атрибуту ссылку на его атрибут деф, если она еще пустая
            </summary>
            <param name="def">Определение атрибута для этого экземпляра</param>
            <param name="force">Если true то ссылка на определение атрибута обновляется в любом случае</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.PreloadLinkedObjects(ProgramSoyuz.DataModel.PreloadModeEnum)">
            <summary>
            Предварительная загрузка объектов, на которые ссылается данный атрибут
            </summary>
            <param name="preloadMode">Флаги предварительной загрузки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedInfoObjects(System.Boolean)">
            <summary>
            Возвращает перечислитель множества объектов.
            </summary>
            <param name="async">true если разрешено асинхронное вычисление атрибута, false - вычисление должно быть произведено синхронно</param>
            <remarks>Вызывающая сторона если ставит <paramref name="async"/> == true, то после завершения метода должна проверить 
            attr.IsAsyncCalculationinProgress. True означает, что начато асинхронное вычисление. Для его продолжения и завершения 
            следует периодически (например по OnIdle) вызывать этот же метод с параметром true до тех пор пока attr.IsAsyncCalculationinProgress остается 
            равным true.
            При завершении асинхронного вычисления свойство attr.IsAsyncCalculationinProgress будет установлено в false.
            Лишь тогда атрибут считается полностью вычисленным. До того значение атрибута может содержать промежуточные данные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedInfoObjectsAt(System.Int32)">
            <summary>
            Возвращает перечислитель множества объектов, каким оно было на момент указанной ревизии.
            </summary>
            <param name="nRevisionNumber">Номер ревизии, для которой формируется список объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedDataContainers(System.Boolean)">
            <summary>
            Возвращает перечислитель множества объектов.
            </summary>
            <param name="async">true если разрешено асинхронное вычисление атрибута, false - вычисление должно быть произведено синхронно</param>
            <remarks>Вызывающая сторона если ставит <paramref name="async"/> == true, то после завершения метода должна проверить 
            attr.IsAsyncCalculationinProgress. True означает, что начато асинхронное вычисление. Для его продолжения и завершения 
            следует периодически (например по OnIdle) вызывать этот же метод с параметром true до тех пор пока attr.IsAsyncCalculationinProgress остается 
            равным true.
            При завершении асинхронного вычисления свойство attr.IsAsyncCalculationinProgress будет установлено в false.
            Лишь тогда атрибут считается полностью вычисленным. До того значение атрибута может содержать промежуточные данные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedDataContainersAt(System.Int32)">
            <summary>
            Возвращает перечислитель множества объектов, каким оно было на момент указанной ревизии.
            </summary>
            <param name="nRevisionNumber">Номер ревизии, для которой формируется список объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedUsers(System.Boolean)">
            <summary>
            Возвращает перечислитель множества объектов.
            </summary>
            <param name="async">true если разрешено асинхронное вычисление атрибута, false - вычисление должно быть произведено синхронно</param>
            <remarks>Вызывающая сторона если ставит <paramref name="async"/> == true, то после завершения метода должна проверить 
            attr.IsAsyncCalculationinProgress. True означает, что начато асинхронное вычисление. Для его продолжения и завершения 
            следует периодически (например по OnIdle) вызывать этот же метод с параметром true до тех пор пока attr.IsAsyncCalculationinProgress остается 
            равным true.
            При завершении асинхронного вычисления свойство attr.IsAsyncCalculationinProgress будет установлено в false.
            Лишь тогда атрибут считается полностью вычисленным. До того значение атрибута может содержать промежуточные данные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedUsersAt(System.Int32)">
            <summary>
            Возвращает перечислитель множества объектов, каким оно было на момент указанной ревизии.
            </summary>
            <param name="nRevisionNumber">Номер ревизии, для которой формируется список объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedTasks(System.Boolean)">
            <summary>
            Возвращает перечислитель множества объектов.
            </summary>
            <param name="async">true если разрешено асинхронное вычисление атрибута, false - вычисление должно быть произведено синхронно</param>
            <remarks>Вызывающая сторона если ставит <paramref name="async"/> == true, то после завершения метода должна проверить 
            attr.IsAsyncCalculationinProgress. True означает, что начато асинхронное вычисление. Для его продолжения и завершения 
            следует периодически (например по OnIdle) вызывать этот же метод с параметром true до тех пор пока attr.IsAsyncCalculationinProgress остается 
            равным true.
            При завершении асинхронного вычисления свойство attr.IsAsyncCalculationinProgress будет установлено в false.
            Лишь тогда атрибут считается полностью вычисленным. До того значение атрибута может содержать промежуточные данные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedTasksAt(System.Int32)">
            <summary>
            Возвращает перечислитель множества объектов, каким оно было на момент указанной ревизии.
            </summary>
            <param name="nRevisionNumber">Номер ревизии, для которой формируется список объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedTemplates(System.Boolean)">
            <summary>
            Возвращает перечислитель множества объектов.
            </summary>
            <param name="async">true если разрешено асинхронное вычисление атрибута, false - вычисление должно быть произведено синхронно</param>
            <remarks>Вызывающая сторона если ставит <paramref name="async"/> == true, то после завершения метода должна проверить 
            attr.IsAsyncCalculationinProgress. True означает, что начато асинхронное вычисление. Для его продолжения и завершения 
            следует периодически (например по OnIdle) вызывать этот же метод с параметром true до тех пор пока attr.IsAsyncCalculationinProgress остается 
            равным true.
            При завершении асинхронного вычисления свойство attr.IsAsyncCalculationinProgress будет установлено в false.
            Лишь тогда атрибут считается полностью вычисленным. До того значение атрибута может содержать промежуточные данные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedTemplatesAt(System.Int32)">
            <summary>
            Возвращает перечислитель множества объектов, каким оно было на момент указанной ревизии.
            </summary>
            <param name="nRevisionNumber">Номер ревизии, для которой формируется список объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedRoles(System.Boolean)">
            <summary>
            Возвращает перечислитель множества объектов.
            </summary>
            <param name="async">true если разрешено асинхронное вычисление атрибута, false - вычисление должно быть произведено синхронно</param>
            <remarks>Вызывающая сторона если ставит <paramref name="async"/> == true, то после завершения метода должна проверить 
            attr.IsAsyncCalculationinProgress. True означает, что начато асинхронное вычисление. Для его продолжения и завершения 
            следует периодически (например по OnIdle) вызывать этот же метод с параметром true до тех пор пока attr.IsAsyncCalculationinProgress остается 
            равным true.
            При завершении асинхронного вычисления свойство attr.IsAsyncCalculationinProgress будет установлено в false.
            Лишь тогда атрибут считается полностью вычисленным. До того значение атрибута может содержать промежуточные данные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedRolesAt(System.Int32)">
            <summary>
            Возвращает перечислитель множества объектов, каким оно было на момент указанной ревизии.
            </summary>
            <param name="nRevisionNumber">Номер ревизии, для которой формируется список объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedNamedValues(System.Boolean)">
            <summary>
            Возвращает перечислитель множества объектов.
            </summary>
            <param name="async">true если разрешено асинхронное вычисление атрибута, false - вычисление должно быть произведено синхронно</param>
            <remarks>Вызывающая сторона если ставит <paramref name="async"/> == true, то после завершения метода должна проверить 
            attr.IsAsyncCalculationinProgress. True означает, что начато асинхронное вычисление. Для его продолжения и завершения 
            следует периодически (например по OnIdle) вызывать этот же метод с параметром true до тех пор пока attr.IsAsyncCalculationinProgress остается 
            равным true.
            При завершении асинхронного вычисления свойство attr.IsAsyncCalculationinProgress будет установлено в false.
            Лишь тогда атрибут считается полностью вычисленным. До того значение атрибута может содержать промежуточные данные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedNamedValuesAt(System.Int32)">
            <summary>
            Возвращает перечислитель множества объектов, каким оно было на момент указанной ревизии.
            </summary>
            <param name="nRevisionNumber">Номер ревизии, для которой формируется список объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedObjects``1(System.Boolean)">
            <summary>
            Возвращает перечислитель множества объектов.
            </summary>
            <param name="async">true если разрешено асинхронное вычисление атрибута, false - вычисление должно быть произведено синхронно</param>
            <remarks>Вызывающая сторона если ставит <paramref name="async"/> == true, то после завершения метода должна проверить 
            attr.IsAsyncCalculationinProgress. True означает, что начато асинхронное вычисление. Для его продолжения и завершения 
            следует периодически (например по OnIdle) вызывать этот же метод с параметром true до тех пор пока attr.IsAsyncCalculationinProgress остается 
            равным true.
            При завершении асинхронного вычисления свойство attr.IsAsyncCalculationinProgress будет установлено в false.
            Лишь тогда атрибут считается полностью вычисленным. До того значение атрибута может содержать промежуточные данные</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedObjects``1">
            <summary>
            Возвращает перечислитель множества объектов.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetLinkedObjectsAt``1(System.Int32)">
            <summary>
            Возвращает перечислитель множества объектов, каким оно было на момент указанной ревизии.
            </summary>
            <param name="nRevisionNumber">Номер ревизии, для которой формируется список объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CreateCollectionElement">
            <summary>
            Создает новый элемент коллекции для последующего сохранения вместе с атрибутом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CreateCollectionElement(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Создает новый элемент коллекции для последующего сохранения вместе с атрибутом
            </summary>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CreateCollectionElementForLinkedObject(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Создает новый элемент коллекции для атрибута 'множество ИО'
            </summary>
            <param name="obj">Объект множества, для которого создается элемент коллекции</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.AddCollectionElement(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Добавляет новый элемент коллекции для сохранения вместе с атрибутом
            </summary>
            <param name="collectionElement">Добавляемый новый элемент коллекции</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.EraseCollectionElement(ProgramSoyuz.PLM.Scripting.CollectionElement,System.Boolean,System.Boolean)">
            <summary>
            Добавляет запись об удалении существующего элемента коллекции
            </summary>
            <param name="collectionElement">Удаляемый существующий элемент коллекции</param>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
            <param name="erasePhysically"> </param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.OnChildModified(ProgramSoyuz.PLM.Scripting.CollectionElement,System.Boolean,System.Boolean)">
            <summary>
            Вызывается ребенком в случае изменения кого-либо из его дочерних сущностей
            </summary>
            <param name="collectionElement">Дочерний элемент коллекции</param>
            <param name="sendNotifications"></param>
            <param name="isAuxilaryChange">Изменение порождено вспомогательным атрибутом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.OnChildModified(ProgramSoyuz.PLM.Scripting.AttributeValue,System.Boolean)">
            <summary>
            Вызывается ребенком в случае изменения кого-либо из его дочерних сущностей
            </summary>
            <param name="value">Дочернее значение атрибута</param>
            <param name="sendNotifications"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.OnChildCancelled(ProgramSoyuz.PLM.Scripting.CollectionElement,System.Boolean,System.Boolean)">
            <summary>
            Вызывается ребенком в случае отмены его изменения или создания
            </summary>
            <param name="collectionElement">Дочерний элемент коллекции</param>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
            <param name="isAuxilaryChange">Изменение порождено вспомогательным атрибутом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.OnChildCancelled(ProgramSoyuz.PLM.Scripting.AttributeValue,System.Boolean)">
            <summary>
            Вызывается ребенком в случае отмены его изменения или создания
            </summary>
            <param name="value">Дочернее значение атрибута</param>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.OnModified(System.Boolean,System.Boolean)">
            <summary>
            Вызывается сеттерами свойств этого объекта при изменении объекта
            </summary>
            <param name="sendNotifications"></param>
            <param name="isAuxilaryChange">Изменение порождено вспомогательным атрибутом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.NotifyPropertyChanged(System.Boolean)">
            <summary>
            Сообщает владельцу о необходимости обновить UI
            </summary>
            <param name="fullNotification">Если true, то происходит вызов метода кастомизации</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.OnErrorTextModified">
            <summary>
            Вызывается при изменении текста ошибки для данного атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.TurnToManual">
            <summary>
            Перевод вычисленного атрибута в ручное состояние
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.ResetWrapper">
            <summary>
            Сброс скриптовой оболочки значения и списка элементов.
            Позволяет сбросить ручные правки вычисляемого атрибута так, чтобы
            при очередном запросе он заново бы вычислился
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.TurnToCalculated">
            <summary>
             Если флаг установлен, то ручное значение, если было, удаляется, а атрибут переводится в вычисляемое состояние
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.RevertToRevision(System.Int32)">
            <summary>
            Отменяет текущие изменения атрибутов объекта. После чего производит рекурсивное копирование
            значений атрибутов в указанной ревизии в качестве текущих.
            После вызова этого 
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CreateCollectionElementFrom(ProgramSoyuz.PLM.Scripting.CollectionElement,System.Int32)">
            <summary>
            Создает новый элемент коллекции для последующего сохранения.
            Атрибуты элемента копируются из указанной ревизии существующего эдемента
            </summary>
            <param name="element">Исходный элемент коллекции. Его атрибуты копируются</param>
            <param name="revisionNumber">Номер ревизии исходного элемента, по которой берутся значения атрибутов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.MatchKeyType(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Проверяет совпадают ли тип данных и ключ у переданного атрибута с данным
            </summary>
            <param name="pAttr">Проверяемый атрибут</param>
            <returns>true, если ключ и тип совпадают</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.MatchKeyType(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Проверяет совпадают ли тип данных и ключ у переданного атрибута с данным
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <param name="eType">Тип данных атрибута</param>
            <returns>true, если ключ и тип совпадают</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.InitFrom(ProgramSoyuz.DataModel.AttributeData,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache)">
            <summary>
            Инициализирует значение атрибута по данным, сохраненным в пакете конфигурации
            </summary>
            <param name="attrData">данные об атрибуте</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetValue">
            <summary>
            Возвращает значение атрибута.
            Если определение атрибута имеется, то возвращаемое значение для значимых типов и строк будет значением по умолчанию этого типа
            </summary>
            <remarks>Для вычисляемых, вспомогательных и дополнительных атрибутов возвращается фактическое значение (может быть null)</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetValue(System.Object)">
            <summary>
            Возвращает значение атрибута.
            Если атрибут (простой) пуст, то возвращается указанное значение по умолчанию <paramref name="defaultValue"/>
            </summary>
            <param name="defaultValue">Значение по умолчанию, возвращаемое если атрибут пуст</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CopyValueFrom(ProgramSoyuz.PLM.Scripting.Attribute,System.Boolean)">
            <summary>
            Копирование значения из одного атрибута в другой
            </summary>
            <param name="srcAttr">Атрибут, откуда копируется значение</param>
            <param name="mergeCollections">true, если в коллекции элементов следует добавить строки, а не заменить</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.SetValue(System.Object,System.Boolean)">
            <summary>
            Устанавливает значение атрибута.
            </summary>
            <param name="value">Новое значение атрибута</param>
            <param name="checkEquality">Если true, то значение проверяется на равенство текущему значению.
            При совпадении изменение не производится.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.SetValue(System.Object)">
            <summary>
            Устанавливает значение атрибута.
            </summary>
            <param name="value">Новое значение атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.MakeEmpty">
            <summary>
            Инициализирует значение атрибута в пустое значение (с учетом его типа)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.NotifyPropertyBeforeChange(System.Object,System.String@)">
            <summary>
            Рассылка нотификации о назревающем изменении
            </summary>
            <param name="newValue">Новое значение</param>
            <param name="errorText">Сообщение об ошибке</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.m_ChangeNotificationsSuspended">
            <summary>
            Если счетчик больше нуля, то клиентский UI код не оповещается об изменениях в объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.SuspendChangeNotifications">
            <summary>
            Приостанавливает оповещение клиентского UI кода об изменениях в объектах
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.ResumeChangeNotifications">
            <summary>
            Возобновляет оповещение клиентского UI кода об изменениях в объектах
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.m_ErrorText">
            <summary>
            Текстовое описание проблемы со значением атрибута.
            Форма отказывается сохранять объект при не пустом описании
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.ResetErrorText(System.String)">
            <summary>
            Устанавливает сообщение об ошибке, без нотификации родителя об этом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.RefreshUI">
            <summary>
            Рассылка уведомления о необходимости обновить элемент пользовательского интерфейса, отображающий данный атрибут
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetUIData(ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает запрошенное представление атрибута в UI.
            </summary>
            <param name="dataKind">Запрашиваемый вид данных (название, иконки, превью)</param>
            <returns>null если следует использовать вариант по умолчанию,
            String для названий объекта (форматированный HTML тэгами для всего кроме просто названия),
            Icon (или CustomIcon) и Icon[](или CustomIcon[]) для иконок,
            Image (или BlobDesc) для превью</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetUniquenessValue(System.Object)">
            <summary>
            Преобразует указанное значение для сохранения в пространстве уникальности данного атрибута (с вызовом кастомизации)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetFriendlyName">
            <summary>
            Возвращает строковое представление объекта для пользователя
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.GetFriendlyFullName">
            <summary>
            Возвращает строковое представление объекта для пользователя
            Начиная с атрибута верхнего уровня
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.ToString">
            <summary>
            Возвращает основное название объекта по умолчанию
            </summary>
            <returns>Возвращает основное название объекта по умолчанию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.DebuggerDisplayString">
            <summary>
            Формирует представление объекта для дебаггера
            </summary>
            <returns>Строка, которую отображает дебаггер для этого объекта</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.OwnerObject">
            <summary>
            Атрибутируемый объект-владелец атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.NeedRecalc">
            <summary>
            Флаг, обозначающий необходимость перевычислить атрибут
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.RealObject">
            <summary>
            Доступ к атрибутируемому "реальному" объекту. 
            Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.Operation">
            <summary>
            Операция, которую следует произвести с объектом.
            Это поле используется при обработке сервером команды сохранения атрибутов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.ChangedValues">
            <summary>
            Список для хранения измененных значений атрибута.
            0-я позиция зарезервирована за текущим значением атрибута.
            В прочих позициях могут помещаться устаревшие значения при выполнении с ними низкоуровневых операций
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.HasChangedValues">
            <summary>
            Возвращает true если у объекта есть измененное значение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.ChangedValue">
            <summary>
            Ссылка на новое или измененное значение объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.ChangedCollectionElements">
            <summary>
            Текущий список добавленных или удаленных элементов коллекции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.AllChangedElements">
            <summary>
            Перебирает все измененные элементы коллекций на все уровни
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.HasGenericModifications">
            <summary>
            Возвращает true если у атрибута есть обычные не низкоуровневые изменения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsChangedManually">
            <summary>
            Возвращает true если атрибут был модифицирован вручную (а не вычислен)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsEmpty">
            <summary>
            Возвращает true, если атрибут не содержит значимых данных
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsActual">
            <summary>
            Возвращает true, если объект относится к актуальным, а не устаревшим атрибутам объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.NameKey">
            <summary>
            Ключ атрибута. Используется для связки конкретного атрибута с его определением в шаблоне объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.DataType">
            <summary>
            Идентификатор типа данных, содержащихся в атрибуте
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsLinkToClass">
            <summary>
            Возвращает true если тип этого атрибута - ссылка на шаблон-класс
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.HasCollection">
            <summary>
            Возвращает true если этот атрибут - списковый, композитный или множественный
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsBasedOnCollection">
            <summary>
            Возвращает true если этот атрибут - списковый, композитный или множественный
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.HasChangedElements">
            <summary>
            Возвращает true, если у элемента есть изменённые элементы коллекций
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsSetOfObjects">
            <summary>
            Возвращает true если этот атрибут - множество объектов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsCollectionOfElements">
            <summary>
            Возвращает true если этот атрибут списковый или композитный
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsSubItemVirtual">
            <summary>
            Возвращает true если у этого атрибута определен виртуальный шаблон для подчиненных элементов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsSafeLink">
            <summary>
            Возвращает true если ссылочный атрибут содержит мягкую ссылку
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IdentificationHandle">
            <summary>
            Уникальный номер в рамках сохраняемого объекта для
            обратной идентификации атрибута, у которого возникла проблема на сервере
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.ExistingCollectionElements">
            <summary>
            Возвращает перечислитель существующих элементов коллекции спискового атрибута.
            Для прокси объектов конкретных ревизий возвращает список элементов именно этой ревизии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.CompositeElement">
            <summary>
            Возвращает перечислитель элементов коллекции спискового атрибута, существующих в базе.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElements">
            <summary>
            Возвращает перечислитель элементов коллекции спискового атрибута.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.OlderCollectionElements">
            <summary>
            Возвращает перечислитель элементов коллекции спискового атрибута, существующих в базе.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.RealObjectValue">
            <summary>
            Внутренний аксессор для доступа к реальному значению атрибута с учетом возможного
            использования этого объекта со стороны прокси-объекта на конкретную ревизию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.RealObjectCollectionElements">
            <summary>
            Внутренний аксессор для доступа к списку элементов коллекции с учетом возможного
            использования этого объекта со стороны прокси-объекта на конкретную ревизию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.PersistedValue">
            <summary>
            Возвращает хранимое в базе значение атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.PersistedCollectionElements">
            <summary>
            Возвращает сохраненные в базе элементы коллекции атрибута.
            Если атрибут уже был изменен, возвращенные элементы могут включать текущие изменения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.Value">
            <summary>
            Возвращает значение атрибута: или существующее в базе или пустая оболочка для значения.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsCalculationInProgress">
            <summary>
            Возвращает true если в данный момент происходит вычисление атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsAsyncOperationInProgress">
            <summary>
            Возвращает true если в данный момент происходит асинхронное вычисление атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.OlderValues">
            <summary>
            Возвращает перечислитель значений атрибута в прошлых ревизиях, существующих в базе.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.AttributeDef">
            <summary>
            Возвращает определение этого атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.AttributeDefCached">
            <summary>
            Возвращает кешированное определение этого атрибута (если есть)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsAuxilary">
            <summary>
            Вспомогательный атрибут. В базе такие не сохраняются, в коде серверного сохранения они игнорируются.
            Предназначены для настройки отображения соседних атрибутов (например отчеты).
            Также для вспомогательных атрибутов можно переопределить геттер и сеттер.
            См. обработчики кастомизации SetValue и GetValue
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsAuxilaryEffective">
            <summary>
            true  если атрибут вспомогательный или находится во вспомогательном гриде
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsStatic">
            <summary>
            Статический атрибут. Хранится в прототипе объекта. Модификация возможна только через прототип
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.SubItemTemplate">
            <summary>
            Возвращает подчиненный шаблон в соответствии с определением этого атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.LinkedInfoObjects">
            <summary>
            Возвращает коллекцию множества объектов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.LinkedDataContainers">
            <summary>
            Возвращает коллекцию множества объектов.
            </summary>
        </member>
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Attribute.LinkedUsers" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Attribute.LinkedTasks" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Attribute.LinkedTemplates" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Attribute.LinkedRoles" проигнорирован -->
        <!-- Некорректный XML-комментарий для члена "P:ProgramSoyuz.PLM.Scripting.Attribute.LinkedNamedValues" проигнорирован -->
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.OwnerEntityAttribute">
            <summary>
            Корневой списковый атрибут, внутри которого находится данный
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsChangeNotificationsSuspended">
            <summary>
            Если флаг установлен в true, то клиентский UI код не оповещается об изменениях в объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.HasError">
            <summary>
            Возвращает true если атрибут не прошел валидацию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.ErrorText">
            <summary>
            Текстовое описание проблемы со значением атрибута.
            Форма отказывается сохранять объект при не пустом описании
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsPersistedCalculated">
            <summary>
            Флаг, обозначающий, что сохраненное в базе значение атрибута является вычисленным
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsCalculated">
            <summary>
            Возвращает true если атрибут является вычисленным
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsCalculatedEffective">
            <summary>
            Возвращает true если атрибут является вычисленным или вложенным к вычисленному списковому атрибуту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.IsValueEnteredManually">
            <summary>
            Возвращает true если текущее значение атрибута "ручное" (введено в клиенте руками)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.FriendlyIdentityName">
            <summary>
            Возвращает подробное название объекта без идентификатора (используется для показа в сообщениях  об ошибках и т.п.)
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Attribute.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.CreationData.NameKey">
            <summary>
            Ключ атрибута. Используется для связки конкретного атрибута с его определением в шаблоне объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.CreationData.DataType">
            <summary>
            Идентификатор типа данных, содержащихся в атрибуте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.CreationData.IdentificationHandle">
            <summary>
            Уникальный номер в рамках сохраняемого объекта для
            обратной идентификации атрибута, у которого возникла проблема на сервере
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CreationData.WriteTo(ProgramSoyuz.DataModel.AttributeBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.CreationData.TurnToCalculated">
            <summary>
             Если флаг установлен, то ручное значение, если было, удаляется, а атрибут переводится в вычисляемое состояние
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.CreationData.HasChanges">
            <summary>
            Возвращает true, если данные атрибута реально изменились
            Поле IdentificationHandle не учитываем
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList">
            <summary>
            Класс оболочка для операций со списком элементов коллекции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList._Attribute">
            <summary>
            Атрибут, чья коллекция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList._ExistingElements">
            <summary>
            Список существующих элементов коллекции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList._lastUsedOrdinal">
            <summary>
            Порядковый номер для следующего вновь добавляемого элемента коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.GetNextOrdinal">
            <summary>
            Порядковый номер для следующего вновь добавляемого элемента коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.#ctor(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Конструктор
            </summary>
            <param name="attribute">Атрибут, чья коллекция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.UpdateWrappedObject">
            <summary>
            Вызывается при обновлении raw объекта атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.IsEqualByAttributes(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement})">
            <summary>
            Сравнивает коллекцию поэлементно-поатрибутно
            </summary>
            <param name="other">Сравниваемая коллекция</param>
            <returns>true если две коллекции совпадают</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.GetEnumerator``1">
            <summary>
            Перечислитель множества объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.System#Collections#Generic#IEnumerable{ProgramSoyuz#PLM#Scripting#InfoObject}#GetEnumerator">
            <summary>
            Перечислитель множества объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.System#Collections#Generic#IEnumerable{ProgramSoyuz#PLM#Scripting#DataContainer}#GetEnumerator">
            <summary>
            Перечислитель множества объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.System#Collections#Generic#IEnumerable{ProgramSoyuz#PLM#Scripting#User}#GetEnumerator">
            <summary>
            Перечислитель множества объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.System#Collections#Generic#IEnumerable{ProgramSoyuz#PLM#Scripting#Task}#GetEnumerator">
            <summary>
            Перечислитель множества объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.System#Collections#Generic#IEnumerable{ProgramSoyuz#PLM#Scripting#AttributableObject}#GetEnumerator">
            <summary>
            Перечислитель множества объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.System#Collections#Generic#IEnumerable{ProgramSoyuz#PLM#Scripting#Template}#GetEnumerator">
            <summary>
            Перечислитель множества объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.System#Collections#Generic#IEnumerable{ProgramSoyuz#PLM#Scripting#Role}#GetEnumerator">
            <summary>
            Перечислитель множества объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.System#Collections#Generic#IEnumerable{ProgramSoyuz#PLM#Scripting#NamedValue}#GetEnumerator">
            <summary>
            Перечислитель множества объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.System#Collections#Generic#IEnumerable{ProgramSoyuz#PLM#Scripting#CollectionElement}#GetEnumerator">
            <summary>
            Перечислитель коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Возвращает перечислитель коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Add(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Добавление элемента коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Clear">
            <summary>
            Удаляет из коллекции все элементы
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.NotifyReset">
            <summary>
            Рассылает событие о значительном изменении коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.ReapplySorting">
            <summary>
            Шлет нотификацию Reset, что приводит к пересортировке коллекции в карточке
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Add``1(``0)">
            <summary>
            Добавление объекта к множеству
            </summary>
            <param name="item">Объект для добавления во множество</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Contains``1(``0)">
            <summary>
            Возвращает true если в коллекции есть указанный элемент
            </summary>
            <returns>
            true если <paramref name="item" /> найден; иначе, false.
            </returns>
            <param name="item">Искомый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.CopyTo``1(``0[],System.Int32)">
            <summary>
            Копирует элементы коллекции в <see cref="T:System.Array" />, начиная с указанного индекса.
            </summary>
            <param name="array">Одномерный массив <see cref="T:System.Array" /> в который копируем элементы коллекции.</param>
            <param name="arrayIndex">Индекс в массиве, начиная с которого копируем элементы коллекции.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Remove``1(``0)">
            <summary>
            Удаляет указанный элемент из коллекции.
            </summary>
            <returns>
            true если <paramref name="item" /> был успешно удален из коллекции.
            </returns>
            <param name="item">Удаляемый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.AssignSet``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Присваивает множеству объектов новое множество
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Add(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Добавление объекта к множеству
            </summary>
            <param name="item">Объект для добавления во множество</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Contains(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Возвращает true если в коллекции есть указанный элемент
            </summary>
            <returns>
            true если <paramref name="item" /> найден; иначе, false.
            </returns>
            <param name="item">Искомый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.CopyTo(ProgramSoyuz.PLM.Scripting.InfoObject[],System.Int32)">
            <summary>
            Копирует элементы коллекции в <see cref="T:System.Array" />, начиная с указанного индекса.
            </summary>
            <param name="array">Одномерный массив <see cref="T:System.Array" /> в который копируем элементы коллекции.</param>
            <param name="arrayIndex">Индекс в массиве, начиная с которого копируем элементы коллекции.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Remove(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Удаляет указанный элемент из коллекции.
            </summary>
            <returns>
            true если <paramref name="item" /> был успешно удален из коллекции.
            </returns>
            <param name="item">Удаляемый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Add(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Добавление объекта к множеству
            </summary>
            <param name="item">Объект для добавления во множество</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Contains(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Возвращает true если в коллекции есть указанный элемент
            </summary>
            <returns>
            true если <paramref name="item" /> найден; иначе, false.
            </returns>
            <param name="item">Искомый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.CopyTo(ProgramSoyuz.PLM.Scripting.DataContainer[],System.Int32)">
            <summary>
            Копирует элементы коллекции в <see cref="T:System.Array" />, начиная с указанного индекса.
            </summary>
            <param name="array">Одномерный массив <see cref="T:System.Array" /> в который копируем элементы коллекции.</param>
            <param name="arrayIndex">Индекс в массиве, начиная с которого копируем элементы коллекции.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Remove(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Удаляет указанный элемент из коллекции.
            </summary>
            <returns>
            true если <paramref name="item" /> был успешно удален из коллекции.
            </returns>
            <param name="item">Удаляемый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Add(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Добавление объекта к множеству
            </summary>
            <param name="item">Объект для добавления во множество</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Contains(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Возвращает true если в коллекции есть указанный элемент
            </summary>
            <returns>
            true если <paramref name="item" /> найден; иначе, false.
            </returns>
            <param name="item">Искомый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.CopyTo(ProgramSoyuz.PLM.Scripting.User[],System.Int32)">
            <summary>
            Копирует элементы коллекции в <see cref="T:System.Array" />, начиная с указанного индекса.
            </summary>
            <param name="array">Одномерный массив <see cref="T:System.Array" /> в который копируем элементы коллекции.</param>
            <param name="arrayIndex">Индекс в массиве, начиная с которого копируем элементы коллекции.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Remove(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Удаляет указанный элемент из коллекции.
            </summary>
            <returns>
            true если <paramref name="item" /> был успешно удален из коллекции.
            </returns>
            <param name="item">Удаляемый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Add(ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Добавление объекта к множеству
            </summary>
            <param name="item">Объект для добавления во множество</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Contains(ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Возвращает true если в коллекции есть указанный элемент
            </summary>
            <returns>
            true если <paramref name="item" /> найден; иначе, false.
            </returns>
            <param name="item">Искомый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.CopyTo(ProgramSoyuz.PLM.Scripting.Task[],System.Int32)">
            <summary>
            Копирует элементы коллекции в <see cref="T:System.Array" />, начиная с указанного индекса.
            </summary>
            <param name="array">Одномерный массив <see cref="T:System.Array" /> в который копируем элементы коллекции.</param>
            <param name="arrayIndex">Индекс в массиве, начиная с которого копируем элементы коллекции.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Remove(ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Удаляет указанный элемент из коллекции.
            </summary>
            <returns>
            true если <paramref name="item" /> был успешно удален из коллекции.
            </returns>
            <param name="item">Удаляемый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Add(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Добавление объекта к множеству
            </summary>
            <param name="item">Объект для добавления во множество</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Contains(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает true если в коллекции есть указанный элемент
            </summary>
            <returns>
            true если <paramref name="item" /> найден; иначе, false.
            </returns>
            <param name="item">Искомый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.CopyTo(ProgramSoyuz.PLM.Scripting.AttributableObject[],System.Int32)">
            <summary>
            Копирует элементы коллекции в <see cref="T:System.Array" />, начиная с указанного индекса.
            </summary>
            <param name="array">Одномерный массив <see cref="T:System.Array" /> в который копируем элементы коллекции.</param>
            <param name="arrayIndex">Индекс в массиве, начиная с которого копируем элементы коллекции.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Remove(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Удаляет указанный элемент из коллекции.
            </summary>
            <returns>
            true если <paramref name="item" /> был успешно удален из коллекции.
            </returns>
            <param name="item">Удаляемый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Add(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Добавление объекта к множеству
            </summary>
            <param name="item">Объект для добавления во множество</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Contains(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Возвращает true если в коллекции есть указанный элемент
            </summary>
            <returns>
            true если <paramref name="item" /> найден; иначе, false.
            </returns>
            <param name="item">Искомый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.CopyTo(ProgramSoyuz.PLM.Scripting.Template[],System.Int32)">
            <summary>
            Копирует элементы коллекции в <see cref="T:System.Array" />, начиная с указанного индекса.
            </summary>
            <param name="array">Одномерный массив <see cref="T:System.Array" /> в который копируем элементы коллекции.</param>
            <param name="arrayIndex">Индекс в массиве, начиная с которого копируем элементы коллекции.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Remove(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Удаляет указанный элемент из коллекции.
            </summary>
            <returns>
            true если <paramref name="item" /> был успешно удален из коллекции.
            </returns>
            <param name="item">Удаляемый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Add(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Добавление объекта к множеству
            </summary>
            <param name="item">Объект для добавления во множество</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Contains(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Возвращает true если в коллекции есть указанный элемент
            </summary>
            <returns>
            true если <paramref name="item" /> найден; иначе, false.
            </returns>
            <param name="item">Искомый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.CopyTo(ProgramSoyuz.PLM.Scripting.Role[],System.Int32)">
            <summary>
            Копирует элементы коллекции в <see cref="T:System.Array" />, начиная с указанного индекса.
            </summary>
            <param name="array">Одномерный массив <see cref="T:System.Array" /> в который копируем элементы коллекции.</param>
            <param name="arrayIndex">Индекс в массиве, начиная с которого копируем элементы коллекции.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Remove(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Удаляет указанный элемент из коллекции.
            </summary>
            <returns>
            true если <paramref name="item" /> был успешно удален из коллекции.
            </returns>
            <param name="item">Удаляемый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Add(ProgramSoyuz.PLM.Scripting.NamedValue)">
            <summary>
            Добавление объекта к множеству
            </summary>
            <param name="item">Объект для добавления во множество</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Contains(ProgramSoyuz.PLM.Scripting.NamedValue)">
            <summary>
            Возвращает true если в коллекции есть указанный элемент
            </summary>
            <returns>
            true если <paramref name="item" /> найден; иначе, false.
            </returns>
            <param name="item">Искомый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.CopyTo(ProgramSoyuz.PLM.Scripting.NamedValue[],System.Int32)">
            <summary>
            Копирует элементы коллекции в <see cref="T:System.Array" />, начиная с указанного индекса.
            </summary>
            <param name="array">Одномерный массив <see cref="T:System.Array" /> в который копируем элементы коллекции.</param>
            <param name="arrayIndex">Индекс в массиве, начиная с которого копируем элементы коллекции.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Remove(ProgramSoyuz.PLM.Scripting.NamedValue)">
            <summary>
            Удаляет указанный элемент из коллекции.
            </summary>
            <returns>
            true если <paramref name="item" /> был успешно удален из коллекции.
            </returns>
            <param name="item">Удаляемый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Contains(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Возвращает true если в коллекции есть указанный элемент
            </summary>
            <returns>
            true если <paramref name="item" /> найден; иначе, false.
            </returns>
            <param name="item">Искомый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.CopyTo(ProgramSoyuz.PLM.Scripting.CollectionElement[],System.Int32)">
            <summary>
            Копирует элементы коллекции в <see cref="T:System.Array" />, начиная с указанного индекса.
            </summary>
            <param name="array">Одномерный массив <see cref="T:System.Array" /> в который копируем элементы коллекции.</param>
            <param name="arrayIndex">Индекс в массиве, начиная с которого копируем элементы коллекции.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Remove(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Удаляет указанный элемент из коллекции.
            </summary>
            <returns>
            true если <paramref name="item" /> был успешно удален из коллекции.
            </returns>
            <param name="item">Удаляемый элемент.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.DoRemoveElement(ProgramSoyuz.PLM.Scripting.CollectionElement,System.Boolean)">
            <summary>
            Удаляет указанный элемент из коллекции.
            </summary>
            <returns>
            true если <paramref name="item" /> был успешно удален из коллекции.
            </returns>
            <param name="item">Удаляемый элемент.</param>
            <param name="sendNotifications">Если true, то метод уведомляет подписчиков об изменениях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.ResetToSingle(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Удаляет из коллекции все элементы заменяя их одним. Используется при присвоении значения композитному атрибуту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Calculated">
            <summary>
            Флаг обозначающий вычисленнную коллекцию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.NeedRecalc">
            <summary>
            Флаг обозначающий необходимость перевычислить коллекцию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.NeedRefreshUI">
            <summary>
            Флаг обозначающий необходимость обновить колонки грида в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.Count">
            <summary>
            Возвращает число элементов в коллекции.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Attribute.CollectionElementList.IsReadOnly">
            <summary>
            Возвращает true, если коллекция доступна только для чтения.
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IClientUIComponent">
            <summary>
            Интерфейс плагина пользовательского интерфейса PLM клиента
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IClientUIComponent.NameKey">
            <summary>
            Ключ, идентифицирующий компонент
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IClientUIComponent.NameUI">
            <summary>
            Название компонента для пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IClientUIComponent.Notes">
            <summary>
            Описание компонента
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IConfigurableModule">
            <summary>
            Интерфейс плагина, реализующего редактирование собственных настроек
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Properties.EmbeddedIcons">
            <summary>
              Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.EmbeddedIcons.ResourceManager">
            <summary>
              Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.EmbeddedIcons.Culture">
            <summary>
              Перезаписывает свойство CurrentUICulture текущего потока для всех
              обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.EmbeddedIcons.Error">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.EmbeddedIcons.Info">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.EmbeddedIcons.ProgramSoyuz">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.EmbeddedIcons.Question">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.EmbeddedIcons.SearchIcon">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.EmbeddedIcons.SeriousWarning">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Properties.EmbeddedIcons.Warning">
            <summary>
              Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.LabelShape">
            <summary>
            Метка на диаграмме
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Shape">
            <summary>
            Элемент описывающий узловой элемент в виде одиночной фигуры
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.NodeElement">
            <summary>
            Базовый элемент, представляющий собой значимый узел на диаграмме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.NodeElement.HeaderImage">
            <summary>
            Картинка для заголовка
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.RectangleShape.AdjustHeaderHeight">
            <summary>
            Устанавливает размер заголовка в зависимости от введеного текста
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.RectangleShape.HeaderHeight">
            <summary>
            Высота заголовка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.RectangleShape.MinHeaderHeight">
            <summary>
            Минимальный размер заголовка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.RectangleShape.TextRegion">
            <summary>
            Область для вывода текста заголовка
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.LabelShape.GetTextFormat">
            <summary>
            Создает объект формата текста
            </summary>
            <returns>Объект формата текста</returns>
        </member>
        <member name="T:ProgramSoyuz.DataModel.Protocol.CmdSearchOperationBase">
            <summary>
            Команда 'Поисковый запрос по всей базе'.
            В ответ получает PackSearchResult либо PackErrorInfo
            </summary>
        </member>
        <member name="F:ProgramSoyuz.DataModel.Protocol.CmdSearchOperationBase.Operation">
            <summary>
            Объект поисковой операции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.DataModel.Protocol.CmdSearchOperationBase.ToString">
            <summary>
            Возвращает описание команды, взятое из атрибута Description
            </summary>
        </member>
        <member name="M:ProgramSoyuz.DataModel.Protocol.CmdSearchOperationBase.GetShortFriendlyName">
            <summary>
            Возвращает пользовательское название выполняемого действия для
            отображения в строке статуса клиентского приложения
            </summary>
            <returns></returns>
        </member>
        <member name="P:ProgramSoyuz.DataModel.Protocol.CmdSearchOperationBase.IsSimpleContents">
            <summary>
            Возвращает true, если пакет не содержит сложные объекты, требующие читающей блокировки
            при десериализации
            </summary>
        </member>
        <member name="T:ProgramSoyuz.DataModel.Protocol.CmdCancelSearchOperationBase">
            <summary>
            Команда 'Отмена поискового запроса по всей базе'.
            В ответ получает PackSearchResult либо PackErrorInfo
            </summary>
        </member>
        <member name="F:ProgramSoyuz.DataModel.Protocol.CmdCancelSearchOperationBase.OperationId">
            <summary>
            Идентификатор поисковой операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.DataModel.Protocol.CmdCancelSearchOperationBase.NoReplyExpected">
            <summary>
            Если true то ответа от сервера не ожидается
            </summary>
        </member>
        <member name="M:ProgramSoyuz.DataModel.Protocol.CmdCancelSearchOperationBase.GetShortFriendlyName">
            <summary>
            Возвращает пользовательское название выполняемого действия для
            отображения в строке статуса клиентского приложения
            </summary>
            <returns></returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ServerCapabilities">
            <summary>
            Набор возможностей сервера
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ServerCapabilities.FullTextSearch">
            <summary>
            База, используемая сервером подерживает полнотекстовый поиск
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ServerCapabilities.StringCollationSupportedInQuery">
            <summary>
            База, используемая сервером поддерживает указание вида сравнения строк прямо в запросе
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IServerCallback">
            <summary>
            Интерфейс для доступа к серверной функциональности
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.AddMessageToTheQueue(ProgramSoyuz.DataModel.PersistentMessageBase,System.Boolean)">
            <summary>
            Складывает в очередь для обработки очередное событие
            </summary>
            <param name="msg">Событие для обработки</param>
            <param name="saveToStorage">Если true то событие сначала сохраняется в базе, 
            откуда удаляется только после успешной обработки события</param>
            <remarks>Сохраненные в базе события будут выполнены даже после перезапуска сервера.
            События не сохраненные в базе будут утрачены при перезапуске сервера</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.GetDatabaseCollation(System.Nullable{System.Boolean})">
            <summary>
            Возвращает способ сопоставления строк в базе данных
            </summary>
            <param name="caseSensitive">null - значение, используемое СУБД по умолчанию, true - чувствительный к регистру вариант,
            false - не чувствительный</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.GetLastIdentity(System.Data.Common.DbTransaction)">
            <summary>
            Возвращает id последней добавленной  текущим коннекшионом записи
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.ExecuteReader(System.Data.Common.DbTransaction,ProgramSoyuz.Common.SQLStringBuilder)">
            <summary>
            Выполняет параметризованный запрос к базе
            </summary>
            <param name="transaction">Транзакция в рамках которой будет исполняться команда</param>
            <param name="sql">SQL текст команды и набор параметров</param>
            <returns>Читающий базу объект</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.ExecuteReader(System.Data.Common.DbTransaction,System.String,System.Collections.Generic.IEnumerable{Wintellect.PowerCollections.Pair{System.String,System.Object}})">
            <summary>
            Выполненяет параметризованный запрос к базе
            </summary>
            <param name="transaction">Транзакция в рамках которой будет исполняться команда</param>
            <param name="sql">SQL текст команды</param>
            <param name="parameters">Набор параметров для запроса</param>
            <returns>Читающий базу объект</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.ExecuteUpdateQuery(System.Data.Common.DbTransaction,ProgramSoyuz.Common.SQLStringBuilder)">
            <summary>
            Выполняет параметризованный запрос к базе на обновление
            </summary>
            <param name="transaction">Транзакция в рамках которой будет исполняться команда</param>
            <param name="sql">SQL текст команды и набор параметров</param>
            <returns>Возвращает число измененных записей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.GetDataSet(System.String,System.String,System.Data.Common.DbDataAdapter@,System.Data.Common.DbTransaction)">
            <summary>
            Возвращает DataSet для добавления или обновления записей
            </summary>
            <param name="name">Имя таблицы в DataSet</param>
            <param name="sql">SQL используемое для формирования DataSet</param>
            <param name="adapter">На выходе адаптер к данным датасета</param>
            <param name="transaction">Транзакция, в рамках которой исполняется команда</param>
            <remarks>Для датасета формируются команды на обновление только если указана непустая транзакция.
            В противном случае датасет предполагается к использованию только для чтения</remarks>
            <returns>DataSet c таблицей: [csName]</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.CreateCommand(System.Data.Common.DbTransaction,System.String)">
            <summary>
            Создает команду для выполнения запроса к базе
            </summary>
            <param name="transaction">Транзакция в рамках которой будет исполняться команда</param>
            <param name="sql">SQL текст команды</param>
            <returns>Вновь созданную команду к базе</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.GetNameKeyId(System.String)">
            <summary>
            Возвращает числовой идентификатор строкового ключа
            </summary>
            <param name="nameKey">Строковый ключ атрибута, для которого нужен идентификатор</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.IsCapableOf(ProgramSoyuz.PLM.Scripting.ServerCapabilities)">
            <summary>
            Возвращает true, если сервер поддерживает запрошенную функциональность
            </summary>
            <param name="feature">Проверяемая серверная функция</param>
            <returns>true если сервер поддерживает запрошенную функцию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.GetUncommitedObject(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32)">
            <summary>
            Возвращает незафиксированный объект, если есть таковой в текущей операции сохранения
            </summary>
            <param name="entity">Тип сущности</param>
            <param name="id">Идентификатор</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.MirrorFileBodyTo(ProgramSoyuz.PLM.Scripting.FileDesc,ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Выполняет копирование теля файла на указанное файловое хранилище
            </summary>
            <param name="fileDesc">Описатель файла</param>
            <param name="fileVault">Файловое хранилище</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.GetFileDescsByVault(ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Возвращает список описателей файлов, хранящихся на указанном файловом сервере
            </summary>
            <param name="fileVault">Интересующий файловый сервер</param>
            <returns>Список файловых описателей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.GetFileDescsByVaultDifference(ProgramSoyuz.PLM.Scripting.FileVault,ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Возвращает список описателей файлов, хранящихся на указанном файловом сервере и 
            отсутствующих на втором указанном файловом сервере
            </summary>
            <param name="fileVault">Интересующий файловый сервер</param>
            <param name="otherFileVault">Сервер, разница в файлах с которым, интересует</param>
            <returns>Список файловых описателей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.InvalidatePersistentObjectName(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Добавляет объект в очередь на обновление хранимого в базе имени
            </summary>
            <param name="obj">Объект, хранимое в базе название которого, следует обновить</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.InvalidatePersistentAttributes(ProgramSoyuz.PLM.Scripting.AttributableObject,System.String[])">
            <summary>
            Ставит объект в очередь на обновление хранимых вычисляемых атрибутов
            </summary>
            <param name="obj">Объект, чьи атрибуты обновляем</param>
            <param name="nameKeys">Набор ключей атрибутов, подлежащих обновлению</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.GetPerformanceData">
            <summary>
            Заполняет словарь данными счетчиков производительности сервера
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.GetThreadsState">
            <summary>
            Формирует сведения о текущих задачах серверных потоков
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerCallback.GetLicensedStations">
            <summary>
            Возвращает множество лицензированных в данный момент рабочих станций
            </summary>
            <returns>Множество ключей рабочих станций</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IServerCallback.DatabaseConnection">
            <summary>
            Возвращает соединение с базой, используемое текущим потоком
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IServerCallback.DatabaseTransaction">
            <summary>
            Ссылка на текущую транзакцию, используемую текущим потоком
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IServerCallback.DataFactory">
            <summary>
            Возвращает фабрику классов для работы с базой
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IServerCallback.BatchModeSupported">
            <summary>
            Возвращает true, если СУБД поддерживает режим группового обновления (BatchMode) 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IServerCallback.QueryHintsSupported">
            <summary>
            Возвращает true, если СУБД поддерживает подсказки SQL запроса ( WITH(INDEX(...), NOLOCK) )
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IServerCallback.StringCollationSupportedInQuery">
            <summary>
            Возвращает true, если СУБД поддерживает конструкцию COLLATE при сравнении строк
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IServerCallback.AliasSupportedInUpdate">
            <summary>
            Возвращает true, если СУБД поддерживает конструкцию UPDATE alias SET... FROM SomeTable AS alias
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IServerCallback.IsFullTextSearchSupported">
            <summary>
            Возвращает true если сервис полнотекстового поиска установлен и 
            база поддерживает конструкцию FREETEXT( column, condition )
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IServerCallback.IsMARSEnabled">
            <summary>
            Флаг указывает поддерживается ли MARS данным соединением к базе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IServerCallback.AllowUsingExternalStorage">
            <summary>
            Флаг включающий использование внешнего хранения блобов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IServerCallback.Log">
            <summary>
            Объект для записи событий в лог MT сервиса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IServerCallback.ServiceName">
            <summary>
            Имя Windows сервиса, в котором работает сервер
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IScriptingHost">
            <summary>
            Интерфейс для взаимодействия с провайдером данных
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.EnterLock(System.Boolean)">
            <summary>
            Создает и входит в автоматическую блокировку на чтение данных серверного кеша.
            </summary>
            <param name="bExclusive">true если нужна эксклюзивная блокировка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.SaveChanges(System.Action{ProgramSoyuz.DataModel.Protocol.PackProgressNotification},System.Boolean)">
            <summary>
            Сохранение текущего набора изменений в скриптовом слое
            </summary>
            <param name="progressNotificator">Опциональный обработчик нотификаций о ходе выполнения команды сервером</param>
            <param name="asyncFileMode"></param>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.SaveChangesAsync(System.Action{ProgramSoyuz.PLM.Scripting.Service.ScriptingSaveSet,System.Exception,ProgramSoyuz.PLM.Scripting.IAsyncFileOperation,System.Object},System.Boolean,System.Boolean,System.Object)">
            <summary>
            Сохранение текущего набора изменений в скриптовом слое
            </summary>
            <param name="callback">Опциональный обработчик, вызываемый при завершении операции сохранения</param>
            <param name="lazyProcessing">true если отправляемый пакет может обрабатываться в "ленивом" режиме</param>
            <param name="asyncFileMode">Если true, то файловая операция выполняется асинхронно, а опциональный обработчик завершения будет вызван не дожидаясь завершения
            файловой операции</param>
            <param name="callbackData">Данные для передачи в функцию обратного вызова</param>
            <returns>true если команда отправлена на сервер, false если для сохранения ничего нет - в этом случае <paramref name="callback"/>вызван не будет.</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.LockScriptingObjects(ProgramSoyuz.DataModel.Protocol.CmdLockOperationBase.LockOperationEnum,System.Collections.Generic.IEnumerable{ProgramSoyuz.DataModel.DataObjectIdentifier},System.UInt32)">
            <summary>
            Групповая операции блокировки объектов
            </summary>
            <param name="op">Операция блокировки</param>
            <param name="ids">Идентификаторы объектов</param>
            <param name="userId">Идентификатор пользователя</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.IsObjectAutolocked(ProgramSoyuz.DataModel.DataObjectIdentifier,ProgramSoyuz.PLM.Scripting.UserSession)">
            <summary>
            Возвращает true если на объект установлена автоматическая блокировка
            со стороны указанной сессии либо текущей (на клиенте), либо любой (на сервере) сессии/
            </summary>
            <param name="id">Проверяемый объект</param>
            <param name="session">Проверяемая сессия. 
            Null означает текущая клиентская, либо любая при запросе на сервере</param>
            <returns>true если установлена</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.InvokeServerMethod(System.String,System.String,System.Object)">
            <summary>
            Вызов серверной функции, реализованной серверным модулем конфигурации
            </summary>
            <param name="moduleId">Ключ (идентификатор) модуля. Если указан пустая строка, метод ищется среди всех имеющихся модулей</param>
            <param name="methodName">Имя метода</param>
            <param name="inputParam">Сериализуемый набор входных данных для метода</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.InvokeServerMethod(ProgramSoyuz.PLM.Scripting.AttributableObject,System.String,System.Object)">
            <summary>
            Вызов метода шаблона на сервере
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="obj">Объект, для которого вызываем метод</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.InvokeServerMethod(ProgramSoyuz.PLM.Scripting.Template,System.String,System.Object,System.Boolean)">
            <summary>
            Вызов метода шаблона на сервере
            </summary>
            <param name="obj">Объект, для которого вызываем метод</param>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
            <param name="thisTemplateOnly"></param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.InvokeModuleMethod(System.String,System.String,System.Object)">
            <summary>
            Вызов функции модуля, реализованной клиентским (при вызове на клиенте)
            или серверным (при вызове на сервере) модулем конфигурации
            </summary>
            <param name="moduleId">Ключ (идентификатор) модуля. Если указан пустая строка, метод ищется среди всех имеющихся модулей</param>
            <param name="methodName">Имя метода</param>
            <param name="inputParam">Сериализуемый набор входных данных для метода</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.InvokeUserSession(System.UInt32,System.String,System.Object,System.Boolean,System.Int32)">
            <summary>
            Вызов метода, реализованного клиентской сессией
            </summary>
            <param name="sessionId">Идентификатор пользовательской сессии</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <param name="doNotWait">true если результат работы вызова не требуется</param>
            <param name="maxTimeout">Максимальное время ожидания ответа (ms)</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.InvokeUserSessionAsync(System.UInt32,ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation)">
            <summary>
            Асинхронный вызов метода, реализованного клиентской сессией
            </summary>
            <param name="sessionId">Идентификатор пользовательской сессии</param>
            <param name="asyncOperation">Объект асинхронного вызова</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.InvokeOnServerAsync(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject,ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation)">
            <summary>
            Асинхронный вызов серверного метода (серверное скриптовое действие или метод шаблона)
            </summary>
            <param name="target">Целевой объект, чей метод вызывается</param>
            <param name="asyncOperation">Объект асинхронного вызова</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.InvokeScriptingTask(System.UInt32,System.Object,System.Boolean)">
            <summary>
            Вызов скриптовой задачи
            </summary>
            <param name="taskId">Вызываемая скриптовая задача</param>
            <param name="inputParams">Сериализуемый набор входных данных для метода (для скриптовых функций и вручную запускаемых задач)</param>
            <param name="asynk">Если true, то для серверной фоновой задачи запуск производится в фоновом потоке, 
            для остальных параметр игнорируются и задачи выполняются синхронно</param>
            <returns>Результат работы метода (для скриптовых функций и вручную запускаемых задач)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.WriteToLog(System.String,System.Diagnostics.EventLogEntryType,ProgramSoyuz.PLM.Scripting.ScriptingObject[])">
            <summary>
            Запись сообщения в системный лог (на сервере), либо в отладочное окно (на клиенте)
            </summary>
            <param name="message">Сообщение</param>
            <param name="type">Тип сообщения</param>
            <param name="referredObjects">Объекты, упомянутые в сообщении</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetObjectFromIndex(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32)">
            <summary>
            Доступ к объекту вложенной сущности по идентификатору
            </summary>
            <param name="entity">Тип сущности запрошенного объекта</param>
            <param name="id">Идентификатор запрошенного объекта</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.HandleException(System.Exception,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Обработчик исключений. Отчеты о неожидаемых исключениях отправляются на сервер.
            </summary>
            <param name="e">Эксепшион</param>
            <param name="errorCode">Код ошибки</param>
            <param name="userFriendlyMessage">Начало сообщения об ошибке для пользователя</param>
            <param name="framesToSkip">Число фреймов стека между пользовательским кодом и этим методом</param>
            <param name="advancedMode">Если false, то сообщение об ошибке не содержит кнопку доступа к техническим подробностям
            (кроме возникновения неожидаемых исключений)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.ReportException(System.Exception,System.String,System.String,System.Int32)">
            <summary>
            Сохраняет отчет об исключении в файле на сервере.
            </summary>
            <param name="e">Эксепшион</param>
            <param name="errorCode">Код ошибки</param>
            <param name="description">Описание проблемы</param>
            <param name="framesToSkip">Число фреймов стека между пользовательским кодом и этим методом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.ReportError(System.String,System.String,System.Int32)">
            <summary>
            Сохраняет отчет об ошибке на сервере.
            </summary>
            <param name="errorCode">Код ошибки</param>
            <param name="description">Описание проблемы</param>
            <param name="framesToSkip">Число фреймов стека между пользовательским кодом и этим методом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.RefreshObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Клиентская версия: обновляет представление объекта в клиентском UI
            Серверная версия: добавляет объект в очередь на обновление хранимого в базе названия ИО 
            </summary>
            <param name="obj">Объект, представление в UI которого (или хранимое в базе название) следует обновить</param>
            <param name="sortChildren">Если true, то осуществляется пересортировка дочерних элементов (в дереве клиентского приложения)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.RequestLoginToken">
            <summary>
            Запрашивает у сервера билетик на автоматический логин от текущей учётной записи
            </summary>
            <returns>Билетик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.CheckIntegrity(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},System.Boolean,System.Boolean)">
            <summary>
            Проверяет логическую целостность объектов и исправляет, если возможно
            </summary>
            <param name="objects">Набор объектов для исправления</param>
            <param name="fixIfPossible">true если следует попытаться исправить проблему</param>
            <param name="wait">true, если следует выполнить проверку синхронно, false если проверка ставится в 
            очередь на фоновую обработку</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetBlobDesc(System.UInt32)">
            <summary>
            Доступ к бинарным данным по идентификатору БЛОБа
            </summary>
            <returns>Байтовый массив с бинарными данными или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetXmlDesc(System.UInt32)">
            <summary>
            Доступ к бинарным данным по идентификатору БЛОБа
            </summary>
            <returns>Байтовый массив с бинарными данными или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetLoadingFileStream(ProgramSoyuz.DataModel.FileDescBase,ProgramSoyuz.DataModel.AttributableDataObject)">
            <summary>
            Соединяется с файловым сервером и открывает поток для скачивания тела файла.
            </summary>
            <returns>Поток с телом файла для скачивания</returns>
            <remarks>Реализация потока автоматически запрашивает очередной блок данных файла по мере поглощения
            данных клиентом потока.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetFileDesc(System.UInt32)">
            <summary>
            Доступ к файловому дескриптору по ID
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.EnqueueFileDownload(ProgramSoyuz.PLM.Scripting.FileDesc,System.String,System.Action{ProgramSoyuz.PLM.Scripting.IAsyncFileOperation},ProgramSoyuz.PLM.Scripting.IAsyncFileOperation@)">
            <summary>
            Добавляет в очередь асинхронную операцию на скачивание файла
            </summary>
            <returns>true, если операция поставлена в очередь. В этом случае по её завершении будет вызван <paramref name="callback"/>
            false, если скачивание файла не требуется и операция завершена синхронно.</returns>
            <remarks>Асинхронный вариант поддержан только на клиенте</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.WaitForBackgroundFileOperations(System.Int32)">
            <summary>
            Блокирует текущий поток до того как будут завершены файловые операции, находящиеся в очереди.
            </summary>
            <param name="milliseconds">Время ожидания в миллисекундах или Infinite. (-1), если ожидание должно быть бесконечным.</param>
            <returns>true, если все операции завершены, false, если произошло завершение по времени</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetIcons">
            <summary>
            Доступ к иконкам, существующим в PLM системе
            </summary>
            <returns>Коллекцию иконок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetIcon(System.UInt32)">
            <summary>
            Доступ к иконке по идентификатору
            </summary>
            <returns>Найденную иконку или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetIcon(System.Guid)">
            <summary>
            Доступ к иконке по идентификатору
            </summary>
            <returns>Найденную иконку или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetFileVault(System.UInt32)">
            <summary>
            Доступ к файловому хранилищу по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetFileVaults">
            <summary>
            Доступ к файловым хранилищам, существующим в PLM системе
            </summary>
            <returns>Список файловых хранилищ</returns>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.MirrorFileBodyTo(ProgramSoyuz.PLM.Scripting.FileDesc,ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Выполняет копирование теля файла на указанное файловое хранилище
            </summary>
            <param name="fileDesc">Описатель файла</param>
            <param name="fileVault">Файловое хранилище</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetProxyServer(System.UInt32)">
            <summary>
            Доступ к вспомогательному серверу по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetProxyServers">
            <summary>
            Доступ к имеющимся вспомогательным серверам
            </summary>
            <returns>Список запрошенных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetExternalServer(System.UInt32)">
            <summary>
            Доступ к внешнему серверу по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetExternalServers">
            <summary>
            Доступ к имеющимся внешним серверам
            </summary>
            <returns>Список запрошенных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.InvokeExternalServer(System.UInt32,System.String,System.Object,System.Boolean,System.Int32)">
            <summary>
            Вызов метода, реализованного внешним сервером
            </summary>
            <param name="serverId">Идентификатор внешнего сервера</param>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <param name="doNotWait">true если результат работы вызова не требуется</param>
            <param name="maxTimeout">Максимальное время ожидания ответа (ms)</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.InvokeExternalServerAsync(System.UInt32,ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation)">
            <summary>
            Асинхронный вызов метода, реализованного внешним сервером
            </summary>
            <param name="serverId">Идентификатор внешнего сервера</param>
            <param name="asyncOperation">Объект асинхронного вызова</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetNamedValue(System.UInt32)">
            <summary>
            Доступ к именованному значению по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetNamedValues(System.Boolean)">
            <summary>
            Доступ к именованным значениям, существующим в PLM системе
            </summary>
            <param name="bRootOnly">Если true, то возвращаются только корневые именованные значения.
            Если false, то возвращаются все значения</param>
            <returns>Список запрошенных именованных значений</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetRegistryItem(System.UInt32)">
            <summary>
            Доступ к элементу реестра по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetRegistryItems(System.Boolean)">
            <summary>
            Доступ к элементам реестра, существующим в PLM системе
            </summary>
            <param name="bRootOnly">Если true, то возвращаются только корневые элементы
            Если false, то возвращаются все значения</param>
            <returns>Список запрошенных элементов реестра</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUniquenessSpace(System.UInt32)">
            <summary>
            Доступ к пространству уникальности по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUniquenessSpaces">
            <summary>
            Доступ к пространствам уникальности, существующим в PLM системе
            </summary>
            <returns>Список пространтсв уникальности</returns>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.CheckValueForUniqueness(ProgramSoyuz.PLM.Scripting.UniquenessSpace,ProgramSoyuz.PLM.Scripting.Attribute[],System.Object[],System.Int32[]@,System.UInt32[]@)">
            <summary>
            Проверяет наличие в таблице уникальности указанных значений
            </summary>
            <param name="obj">Пространство уникальности</param>
            <param name="attributes">Список владельцев для проверяемых значений</param>
            <param name="values">Список проверяемых значений</param>
            <param name="conflictingIndexes">На выходе список индексов в <paramref name="attributes"/> уникальность для которых нарушена</param>
            <param name="foundOwnerIds">На выходе список идентификаторов конфликтных объектов для найденных объектов с нарушеним уникальности.
            Может быть null, если конфликтов не найдено, либо если найден дубликат во входной группе данных</param>
            <returns>true если ни одно из указанных значений не нарушит уникальность. False если запрошенные данные нарушают уникальность</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetTemplate(System.UInt32)">
            <summary>
            Доступ к шаблону по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetTemplates(System.Boolean)">
            <summary>
            Доступ к шаблонам, существующим в PLM системе
            </summary>
            <param name="bRootOnly">Если true, то возвращаются только корневые шаблоны.
            Если false, то возвращаются все шаблоны</param>
            <returns>Список запрошенных шаблонов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetRootTemplates(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Доступ к корневым шаблонам указанного типа, существующим в PLM системе
            </summary>
            <param name="templateKind">Тип сущности интересующих шаблонов</param>
            <returns>Список запрошенных шаблонов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetCreatableTemplates(ProgramSoyuz.DataModel.TemplateBase,ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Возвращает список шаблонов тех объектов, которые могут быть созданы дочерними к указанному
            </summary>
            <param name="template">Шаблон родительского объекта</param>
            <param name="kind">Фильтр по типу сущности</param>
            <returns>Массив шаблонов объектов, которые можно создавать дочерними к текущему</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetTemplatePrototype(ProgramSoyuz.DataModel.TemplateBase)">
            <summary>
            Возвращает прототип шаблона из клиентского или серверного кеша
            </summary>
            <param name="template">Шаблон, для которого запрашиваем прототип</param>
            <returns>Найденный прототип или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetCurrentUser">
            <summary>
            Доступ к текущей учетной записи, от имени которой работает клиентский скрипт
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUser(System.UInt32)">
            <summary>
            Доступ к учетной записи по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUser(System.String,System.String)">
            <summary>
            Доступ к учетной записи по логину и паролю
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUsers(System.Boolean)">
            <summary>
            Доступ к учетным записям, существующим в PLM системе
            </summary>
            <param name="bRootOnly">Если true, то возвращаются только корневые учетные записи.
            Если false, то возвращаются все значения</param>
            <returns>Список запрошенных именованных значений</returns>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUsersByOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},System.Boolean)">
            <summary>
            Возвращает пользователей, которым предоставлена запрошенная операция
            </summary>
            <param name="obj">Объект, по операции над которым ищутся пользователи</param>
            <param name="op">Запрошенная операция</param>
            <param name="positiveSet">Уже вычисленные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="negativeSet">Уже отклоненные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="ignoreTemplateCustomization">Если true, то при поиске не вызывается кастомизация прав CheckOperation уровня шаблонов</param>
            <returns>Массив пользователей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUsersByCustomOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.NamedValue,Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},System.Boolean)">
            <summary>
            Возвращает пользователей, которым предоставлена запрошенная пользовательская операция
            </summary>
            <param name="obj">Объект относительно которого проверяется наличие операции</param>
            <param name="op">Запрошенная пользовательская операция</param>
            <param name="positiveSet">Уже вычисленные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="negativeSet">Уже отклоненные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="ignoreTemplateCustomization">Если true, то при поиске не вызывается кастомизация прав CheckCustomOperation уровня шаблонов</param>
            <returns>Массив пользователей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.IsUserVisible(System.UInt32,System.Boolean)">
            <summary>
            Возвращает true если пользователь виден текущему пользователю
            </summary>
            <param name="id">Идентификатор проверяемого пользователя</param>
            <param name="ignoreGlobalPermissions">Если true то глобальные разрешения администратору не учитываются</param>
            <returns>true если виден</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.LoadUserAuditRecords(System.UInt32,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Выполняет чтение из базы записей аудита пользователей
            </summary>
            <param name="userId">Идентификатор интересующего пользователя, либо 0 - пользователь неизвестен, либо uint.MaxValue - без фильтра на пользователя</param>
            <param name="dateFrom">Время в UTC, начиная с которого ищем записи</param>
            <param name="dateTo">Время в UTC, заканчивая которым ищем записи</param>
            <param name="maxRecords">Максимальное количество возвращаемых записей, либо 0, если без ограничения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetRole(System.UInt32)">
            <summary>
            Доступ к роли по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetRoles(System.Boolean)">
            <summary>
            Доступ к ролям, существующим в PLM системе
            </summary>
            <param name="bRootOnly">Если true, то возвращаются только корневые шаблоны.
            Если false, то возвращаются все шаблоны</param>
            <returns>Список ролей</returns>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetRootRoles">
            <summary>
            Доступ к корневым ролям указанного типа, существующим в PLM системе
            </summary>
            <returns>Список запрошенных ролей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserBinding(System.UInt32)">
            <summary>
            Доступ к привязке по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserBindingsByTarget(System.UInt32,ProgramSoyuz.DataModel.DataObjectIdentifier)">
            <summary>
            Возвращает список привязок к конкретному объекту указанного пользователя
            </summary>
            <returns>Список привязок к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserBindingsByTarget(ProgramSoyuz.DataModel.DataObjectIdentifier)">
            <summary>
            Возвращает список привязок к конкретному объекту
            </summary>
            <returns>Список привязок к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserBindingsByOwner(System.UInt32)">
            <summary>
            Возвращает список привязок указанного пользователя
            </summary>
            <returns>Список привязок пользователя</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserBindings">
            <summary>
            Возвращает список имеющихся в кеше привязок прав доступа
            </summary>
            <returns>Список привязок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetConfiguratorBinding(System.UInt32)">
            <summary>
            Доступ к привязке по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetConfiguratorBindingsByTarget(System.UInt32,ProgramSoyuz.DataModel.DataObjectIdentifier)">
            <summary>
            Возвращает список привязок к конкретному объекту указанного пользователя
            </summary>
            <returns>Список привязок к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetConfiguratorBindingsByTarget(ProgramSoyuz.DataModel.DataObjectIdentifier)">
            <summary>
            Возвращает список привязок к конкретному объекту
            </summary>
            <returns>Список привязок к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetConfiguratorBindingsByOwner(System.UInt32)">
            <summary>
            Возвращает список привязок указанного пользователя
            </summary>
            <returns>Список привязок пользователя</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetConfiguratorBindings">
            <summary>
            Возвращает список имеющихся в кеше привязок прав доступа
            </summary>
            <returns>Список привязок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetDataContainer(System.UInt32)">
            <summary>
            Доступ к контейнеру по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetDataContainer(System.Guid)">
            <summary>
            Доступ к контейнеру по глобальному идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetDataContainers(System.Guid[])">
            <summary>
            Доступ к контейнерам объектам по глобальным идентификаторам
            </summary>
            <param name="identifiers">Идентификаторы запрошенных объектов</param>
            <returns>Массив найденный объектов (размер и порядок соответствует исходному <paramref name="identifiers"/>)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetDataContainers(System.Boolean)">
            <summary>
            Доступ к контейнерам, существующим в PLM системе
            </summary>
            <param name="bRootOnly">Если true, то возвращаются только корневые контейнеры.
            Если false, то возвращаются все значения</param>
            <returns>Список запрошенных объектов</returns>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetServiceDataContainers">
            <summary>
            Доступ к сервисным контейнерам, существующим в PLM системе
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.IsContainerLoaded(System.UInt32)">
            <summary>
            Возвращает true, если все информационные объекты контейнера загружены в кеш
            </summary>
            <param name="id">Идентификатор контейнера</param>
            <returns>true, если все информационные объекты контейнера загружены в кеш</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.RequestContainerContents(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Инициирует загрузку содержимого контейнера
            </summary>
            <param name="id">Идентификатор контейнера</param>
            <param name="recursive">Рекурсивная загрузка контейнеров</param>
            <param name="synchronous">Если true то ждем пока все загрузится</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetInfoObject(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Доступ к информационному объекту по идентификатору
            </summary>
            <param name="id">Идентификатор запрошенного объекта</param>
            <param name="loadIfNotCached">Если true, то производит загрузку объекта с сервера/из базы</param>
            <param name="resolveLightweight">Если true, то для легковесных объектов производится полная загрузка (игнорируется на сервере)</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetInfoObject(System.Guid)">
            <summary>
            Доступ к информационному объекту по глобальному идентификатору
            </summary>
            <param name="id">Идентификатор запрошенного объекта</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetInfoObjects(System.Guid[])">
            <summary>
            Доступ к информационным объектам по глобальным идентификаторам (через запрос базы)
            </summary>
            <param name="identifiers">Идентификаторы запрошенных объектов</param>
            <returns>Массив найденный объектов (размер и порядок соответствует исходному <paramref name="identifiers"/>)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetInfoObjects(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Доступ к информационным объектам указанного контейнера, существующим в PLM системе
            </summary>
            <param name="nContainerId">Идентификатор контейнера</param>
            <param name="bRootOnly">Если true, то возвращаются только корневые контейнеры.
            Если false, то возвращаются все значения</param>
            <param name="loadIfNeeded">Если true то при необходимости содержимое контейнера предварительно будет загружено в кеш</param>
            <returns>Список запрошенных объектов</returns>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.PreloadInfoObjects(System.Collections.Generic.IEnumerable{System.UInt32},ProgramSoyuz.DataModel.PreloadModeEnum,System.Boolean)">
            <summary>
            Предварительная загрузка группы указанных ИО в указанном режиме загрузки
            </summary>
            <param name="ids">Идентификатор запрошенного объекта</param>
            <param name="mode">Набор флагов <see cref="T:ProgramSoyuz.DataModel.PreloadModeEnum"/>, определяющих режим предварительной загрузки ИО</param>
            <param name="wait">true - блокирующий вызов, false - (только на клиенте, на сервере игнорируется) метод завершается сразу же после отправки запроса к серверу без ожидания результата</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.ReserveInfoObjectIds(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            Резервирование идентификаторов ИО в базе в указанном количестве
            </summary>
            <param name="containerId">Контейнер, в котором создаются резервированные объекты</param>
            <param name="templateId">Шаблон ИО для которых резервируются ID</param>
            <param name="count">Требуемое количество идентификаторов</param>
            <returns>Набор зарезервированных идентификаторов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserItem(System.UInt32)">
            <summary>
            Доступ к элементу рабочего стола по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserItems(System.Boolean)">
            <summary>
            Доступ к элементам рабочего стола, существующим в PLM системе
            </summary>
            <param name="bRootOnly">Если true, то возвращаются только корневые именованные значения.
            Если false, то возвращаются все значения</param>
            <returns>Список запрошенных именованных значений</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetRootUserItems(ProgramSoyuz.DataModel.UserBase)">
            <summary>
            Доступ к элементам рабочего стола, существующим в PLM системе
            </summary>
            <param name="user">Пользователь, чьи ЭРС интересуют</param>
            <returns>Список запрошенных ЭРС</returns>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserItemLink(System.UInt32)">
            <summary>
            Доступ к шорткату элемента рабочего стола по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserItemLinks(ProgramSoyuz.DataModel.UserBase,ProgramSoyuz.DataModel.UserItemBase,ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean)">
            <summary>
            Доступ к шорткатам в указанном элементе рабочего стола пользователя
            </summary>
            <param name="user">Пользователь, чьи шорткаты интересуют</param>
            <param name="userItem">Элемент ПРС</param>
            <param name="target">Целевой объект, ссылки на который интересуют. Если null, то возвращаются все</param>
            <param name="preloadTargets">Если true, то на клиенте происходит предварительная загрузка целевых объектов ссылок</param>
            <returns>Список запрошенных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetWorkItem(System.UInt32,System.Boolean)">
            <summary>
            Доступ к нагрузке по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetWorkItems(System.UInt32,System.Boolean)">
            <summary>
            Доступ к нагрузкам, существующим в PLM системе
            </summary>
            <param name="bActive">Если true, то возвращаются активные нагрузки, false - остальные</param>
            <param name="userId">Идентификатор пользователя, чьи нагрузки интересуют. Если 0, то возвращаются все видимые сессией нагрузки</param>
            <returns>Список нагрузок</returns>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.IsWorkItemNewForUser(ProgramSoyuz.DataModel.WorkItemBase,ProgramSoyuz.DataModel.UserBase)">
            <summary>
            Проверка является ли нагрузка новой для пользователя (непросмотренной)
            </summary>
            <param name="workItem">Проверяемая нагрузка</param>
            <param name="user">Проверяемый пользователь</param>
            <returns>true если счетчик изменений проверяемой нагрузки больше того, что сохранен в настройках</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.MarkAsViewedByUser(ProgramSoyuz.DataModel.WorkItemBase,ProgramSoyuz.DataModel.UserBase)">
            <summary>
            Сбрасывает флаг новизны данной нагрузки для указанного пользователя
            </summary>
            <param name="workItem">Проверяемая нагрузка</param>
            <param name="user">Пользователь, просмотревший нагрузку</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.MarkAsUnviewedByUser(ProgramSoyuz.DataModel.WorkItemBase,ProgramSoyuz.DataModel.UserBase)">
            <summary>
            Устанавливает флаг новизны данной нагрузки для указанного пользователя
            </summary>
            <param name="workItem">Проверяемая нагрузка</param>
            <param name="user">Пользователь, просмотревший нагрузку</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetTask(System.UInt32,System.Boolean)">
            <summary>
            Доступ к нагрузке по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetTasks(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean)">
            <summary>
            Возвращает массив запрошенных задач
            </summary>
            <param name="bActive">Если true, то возвращаются только активные задачи, false - все</param>
            <param name="obj">Объект, чьи задачи интересуют.</param>
            <returns>Массив найденных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetSupervisedTasks(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Возвращает список процессов, для которых указанный пользователь является супервизором.
            На клиенте user - игнорируется - используется текущий пользователь.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetTasksByContext(System.UInt32)">
            <summary>
            Возвращает список задач по запрошенным контекстным контейнерам
            </summary>
            <returns>Массив найденных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetClientSession(System.UInt32)">
            <summary>
            Доступ к сессии по ID. Если объекта с таким ID нет, возвращает null
            </summary>
            <param name="sessionId">Идентификатор пользовательской сессии</param>
            <returns>Сессия или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.DropUserSession(ProgramSoyuz.PLM.Scripting.UserSession,System.String)">
            <summary>
            Отключает указанную сессию
            </summary>
            <param name="session">Завершаемая сессия</param>
            <param name="message">Сообщение пользователю о причине отключения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.DropAllUserSessions(ProgramSoyuz.PLM.Scripting.User,System.String)">
            <summary>
            Отключает все сессии указанного пользователя
            </summary>
            <param name="user">Пользователь</param>
            <param name="message">Сообщение пользователю о причине отключения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserSessions(System.UInt32)">
            <summary>
            Доступ к сессиям, подключенным к PLM системе
            </summary>
            <param name="nUserId">Идентификатор пользователя, чьи сессии интересуют. Если 0, то
            возвращаются все сессии</param>
            <returns>Список подключенных сессий</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetCurrentSession">
            <summary>
            Доступ к текущей сессии, которой клиент связан с сервером
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetConfigurationModules">
            <summary>
            Доступ к модулям конфигурации, существующим в PLM системе
            </summary>
            <returns>Коллекцию модулей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetConfigurationModule(System.UInt32)">
            <summary>
            Доступ к модулю конфигурации по идентификатору
            </summary>
            <returns>Найденный модуль или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetAutoIncrementedCounter(System.UInt32)">
            <summary>
            Доступ к счетчику по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetAutoIncrementedCounters">
            <summary>
            Доступ к счетчикам, существующим в PLM системе
            </summary>
            <returns>Список счетчиков</returns>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.AutoIncrementedCounter_GetNextValue(System.UInt32,System.String)">
            <summary>
            Возвращает очередное значение счетчика
            </summary>
            <param name="id">Идентификатор счетчика</param>
            <param name="selectorKey"> </param>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.AutoIncrementedCounter_ResetCounterValue(System.UInt32,System.String,System.Int32)">
            <summary>
            Переустанавливает значение счетчика
            </summary>
            <param name="id">Идентификатор счетчика</param>
            <param name="selectorKey">Ключ подчиненного счетчика</param>
            <param name="newValue">Новое значение счетчика</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetFileContext(System.UInt32)">
            <summary>
            Доступ к файловому контексту по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetFileLocalCopies">
            <summary>
            Доступ к записям о локальных копиях, относящихся к данной рабочей станции
            </summary>
            <returns>Список записей</returns>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetFileLocalCopies(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Доступ ко всем записям о локальных копиях, относящихся к указанонму файловому атрибуту
            </summary>
            <returns>Список записей</returns>
            <exception cref="T:ProgramSoyuz.DataModel.PLMException">Операция завершилась не успешно</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetFileLocalCopy(System.UInt32)">
            <summary>
            Доступ к записи о локальной копии файла по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetFileLocalCopy(System.String)">
            <summary>
            Доступ к записи о локальной копии файла по пути к файлу
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetWorkSpaceScheme(System.UInt32)">
            <summary>
            Доступ к схеме раскладки объектов по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetWorkSpaceSchemes">
            <summary>
            Доступ к схеме раскладки объектов, существующим в PLM системе
            </summary>
            <returns>Список схем раскладки объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetScriptingTask(System.UInt32)">
            <summary>
            Доступ к автоматической скриптовой задаче по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetScriptingTasks">
            <summary>
            Доступ к автоматической скриптовой задаче, существующим в PLM системе
            </summary>
            <returns>Список автоматических скриптовых задач</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.Search(ProgramSoyuz.PLM.Scripting.SearchOperationBase,System.Boolean)">
            <summary>
            Запуск операции поиска
            </summary>
            <param name="operation">Поисковый запрос</param>
            <param name="asynchronous">true для асинхронного поиска</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.CancelSearch(ProgramSoyuz.PLM.Scripting.SearchOperationBase)">
            <summary>
            Отмена поисковой операции
            </summary>
            <param name="operation">Поисковая операция, выполнение которой требуется отменить</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUsageReport(ProgramSoyuz.DataModel.DataObjectIdentifier,System.Int32)">
            <summary>
            Запрос у сервера отчета об использовании указанного объекта
            </summary>
            <param name="objectId">Интересующий объект</param>
            <param name="recordsToReturn">Максимальное количество объектов в результате запроса.
            0 означает - без ограничения</param>
            <returns>Список идентификаторов найденных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetConfiguration(System.UInt32)">
            <summary>
            Доступ к конфигурации по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetConfigurations(System.Boolean)">
            <summary>
            Доступ к конфигурациям, существующим в PLM системе
            </summary>
            <param name="bRootOnly">Если true, то возвращаются только корневые объекты.
            Если false, то возвращаются все объекты</param>
            <returns>Список запрошенных конфигураций</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserSubscription(System.UInt32)">
            <summary>
            Доступ к подписке по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserSubscriptions(ProgramSoyuz.DataModel.DataObjectIdentifier)">
            <summary>
            Доступ к подпискам по конкретному объекту
            </summary>
            <param name="targetId">Идентификатор целевого объекта</param>
            <returns>Список запрошенных подписок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserSubscriptions(System.UInt32,ProgramSoyuz.DataModel.DataObjectIdentifier)">
            <summary>
            Доступ к подпискам пользователя по конекретному объекту
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <param name="targetId">Идентификатор целевого объекта</param>
            <returns>Список запрошенных подписок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserNotification(System.UInt32)">
            <summary>
            Доступ к уведомлению по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetUserNotifications(System.UInt32)">
            <summary>
            Доступ к уведомлениям, существующим в PLM системе
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Список запрошенных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetIndexDef(System.UInt32)">
            <summary>
            Доступ к индексу по идентификатору
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetIndexDefs">
            <summary>
            Доступ к индексам, существующим в PLM системе
            </summary>
            <returns>Список объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.ContainsKey(ProgramSoyuz.PLM.Scripting.IndexDef,ProgramSoyuz.PLM.Scripting.User,System.String)">
            <summary>
            Проверяет наличие указанного ключа в индексе
            </summary>
            <param name="index">Индекс</param>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
            <param name="indexedKey">Искомый ключ</param>
            <returns>true, если ключ имеется в индексе</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetAllKeys(ProgramSoyuz.PLM.Scripting.IndexDef,ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Возвращает все ключи имеющиеся в индексе
            </summary>
            <param name="index">Индекс</param>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
            <returns>Массив имеющихся  в индексе ключей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.CountIndexedRecords(ProgramSoyuz.PLM.Scripting.IndexDef,ProgramSoyuz.PLM.Scripting.User,System.Boolean)">
            <summary>
            Количество строк в индексе
            </summary>
            <param name="index">Индекс</param>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
            <param name="countValues">true, если следует считать значения а не ключи</param>
            <returns>Набор записей индекса по указанному ключу</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetIndexedRecords(ProgramSoyuz.PLM.Scripting.IndexDef,ProgramSoyuz.PLM.Scripting.User,System.String,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Выполнение поиска по индексу
            </summary>
            <param name="index">Индекс</param>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
            <param name="indexedKey">Ключ, по которому производится поиск, если null - возвращает все записи индекса</param>
            <param name="integerNumber"></param>
            <param name="needAll"></param>
            <returns>Набор записей индекса по указанному ключу</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.AddIndexedRecords(ProgramSoyuz.PLM.Scripting.IndexDef,ProgramSoyuz.PLM.Scripting.User,System.String,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.IndexRecord},System.Boolean)">
            <summary>
            Добавляет записи в индекс
            </summary>
            <param name="index">Индекс</param>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
            <param name="indexedKey">Индексируемый ключ</param>
            <param name="items">Набор данных для добавления в индекс по указанному ключу</param>
            <param name="replaceIfKeyExists">Определяет происходит ли замена или добавление записей к существующему ключу,
              если указанный ключ уже есть в индексе</param>
            <returns>true, если индекс уже содержал запись с таким ключом. 
            В этом случае для уникальных индексов новая запись замещает старую</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.RemoveIndexedRecords(ProgramSoyuz.PLM.Scripting.IndexDef,ProgramSoyuz.PLM.Scripting.User,System.String)">
            <summary>
            Удаляет из индекса данные по указанному ключу
            </summary>
            <param name="index">Индекс</param>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
            <param name="indexedKey">Ключ для удаления из индекса</param>
            <returns>true, если что-нибудь было удалено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.RemoveIndexedRecords(ProgramSoyuz.PLM.Scripting.IndexDef,ProgramSoyuz.PLM.Scripting.User,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.IndexRecord})">
            <summary>
            Удаляет из индекса строки с указанными индентификаторами
            </summary>
            <param name="index">Индекс</param>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
            <param name="records">Строки удаляемые из индекса</param>
            <returns>true, если что-нибудь было удалено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.RemoveIndexedRecords(ProgramSoyuz.PLM.Scripting.IndexDef)">
            <summary>
            Удаляет из индекса все данные
            </summary>
            <param name="index">Индекс</param>
            <returns>true, если что-нибудь было удалено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.LoadLanguageData(System.String)">
            <summary>
            Загрузка в кеш пакета локализации для указанного языка.
            Используются строки по <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/>: "ru", "en", "fi", и пр.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.GetLocalizedString(System.UInt32)">
            <summary>
            Доступ к локализованной строке по идентификатору
            </summary>
            <returns>Найденную строку или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.AddFileProgressListener(ProgramSoyuz.PLM.Scripting.Service.UI.FileProgressDelegate)">
            <summary>
            Добавляет подписчика на события о ходе файловых операций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.RemoveFileProgressListener(ProgramSoyuz.PLM.Scripting.Service.UI.FileProgressDelegate)">
            <summary>
            Удаляет подписчика на события о ходе файловых операций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IScriptingHost.BuildConfigurationObjectsIndex(ProgramSoyuz.DataModel.ImportPacketPhaseEnum,System.Guid[])">
            <summary>
            Заполнение индекса существующими в кеше объектами конфигурации
            </summary>
            <param name="importPhase">Фаза сохранения объектов</param>
            <param name="configurations">Идентификаторы конфигураций, чьи сервисные ИО следует добавить в индекс</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.ServerHostName">
            <summary>
            Имя сервера, к которому подключены в данный момент
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.ServerPortNumber">
            <summary>
            Порт сервера, к которому подключены в данный момент
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.ServerTime">
            <summary>
            Серверное время в UTC
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.LocalEndPoint">
            <summary>
            IP адрес и порт локальной стороны соединения. Результат следует преобразовать к IPEndPoint
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.ServerFrameWorkVersion">
            <summary>
            Версия фреймворка, работающего на сервере
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.ServerComputerKey">
            <summary>
            Хеш серверного компьютера (номер материнской платы, процессора и системы)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.ActiveProcesses">
            <summary>
            Список активных процессов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.KernelState">
            <summary>
            Текущий режим работы ядра ядра
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.RunningOnServer">
            <summary>
            Возвращает true при работе на сервере
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.RunningOnProxyServer">
            <summary>
            Возвращает true при работе на вспомогательном сервере
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.ProxyServer">
            <summary>
            Возвращает учетную запись текущего прокси сервера, на котором выполняется данный вызов 
            (либо null если текущий процесс не является вспомогательным сервером)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.ModuleEnvironment">
            <summary>
            Возвращает строку с ключами окружения на клиенте (пустая строка на сервере) 
            </summary>
            <remarks>Настройка ModuleEnvironment из клиентского конфиг файла</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.MasterServerGUID">
            <summary>
            GUID центрального хранилища
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.Product">
            <summary>
            Сведения о продукте
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.CurrentLanguage">
            <summary>
            Доступ к текущему языку пакета локализации
            </summary>
            <value>Строка с кодом языка</value>
            <remarks>Сеттер доступен только на клиентской стороне. Используются 
            строки по <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/>: "ru", "en", "fi", и пр.
            При установке нового языка с сервера загружается соответствующий пакет языковых данных (если есть)</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.AvailableLocalizationLanguages">
            <summary>
            Доступ к имеющимся языкам пакетов локализации.
            Используются строки по <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/>: "ru", "en", "fi", и пр.
            </summary>
            <value>Массив кодов языка</value>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IScriptingHost.ActiveLocalizationPacks">
            <summary>
            Доступ к включенным языкам пакетов локализации (из включенных пакетов локализации)
            Используются строки по <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/>: "ru", "en", "fi", и пр.
            </summary>
            <value>Массив кодов языков</value>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding">
            <summary>
            Связка Пользователь - Конфигурация.
            Посредством этих объектов осуществляется привязка пользователя к к конфигурациям
            с указанием разрешенных операций
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.CreateWrapper(ProgramSoyuz.DataModel.ConfiguratorBindingBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="binding">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.#ctor(ProgramSoyuz.DataModel.ConfiguratorBindingBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="ConfiguratorBinding">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.#ctor(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.Configuration)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="user">Пользователь, чья привязка</param>
            <param name="configuration">Конфигурация</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.#ctor(ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.Operations">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.Configuration">
            <summary>
            Целевая конфигурация 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.Parent">
            <summary>
            Доступ к родительскому объекту
            Возвращает Original объект, либо текущее значение, если оно изменено в данной оболочке
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.CreationData.Operations">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.CreationData.m_Parent">
            <summary>
            Родительский объект, к которому относится связка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.CreationData.m_Configuration">
            <summary>
            Конфигурация, используемая этой связкой
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.CreationData.Parent">
            <summary>
            Родительская учетная запись
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfiguratorBinding.CreationData.Configuration">
            <summary>
            Конфигурация, используемая этой связкой
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IntegrityWarning">
            <summary>
            Предупреждение о логической ошибке в атрибутирумом объекте.
            </summary>
            <remarks>Логические ошибки могут быть предопределенные, такие как отсутствие обязательных
            атрибутов или нарушения уникальности, а могут быть сформированы модулями конфигурации</remarks>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning._owner">
            <summary>
            Объект-владелец данной ревизии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning.m_Data">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning._operation">
            <summary>
            Операция, которую следует произвести с объектом.
            Это поле используется при обработке сервером команды сохранени
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning._realObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.IntegrityWarningBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="owner">Объект-владелец данной ревизии</param>
            <param name="IntegrityWarning">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.IntegrityWarningBase.KindEnum)">
            <summary>
            Конструктор нового объекта
            </summary>
            <param name="owner">Объект владелец записи</param>
            <param name="kind">Тип логической проблемы</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,System.String,System.String)">
            <summary>
            Конструктор нового объекта
            </summary>
            <param name="owner">Объект владелец записи</param>
            <param name="nameKey">Идентификатор логической проблемы для кода кастомизации</param>
            <param name="message">Описание проблемы</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,System.String,System.String,ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Конструктор нового объекта
            </summary>
            <param name="owner">Объект владелец записи</param>
            <param name="nameKey">Идентификатор логической проблемы для кода кастомизации</param>
            <param name="message">Описание проблемы</param>
            <param name="attribute">Проблемный атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,System.String,ProgramSoyuz.DataModel.WarningLevelEnum,System.String,ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Конструктор нового объекта
            </summary>
            <param name="owner">Объект владелец записи</param>
            <param name="nameKey">Идентификатор логической проблемы для кода кастомизации</param>
            <param name="level">Уровень проблемности</param>
            <param name="message">Описание проблемы</param>
            <param name="attribute">Проблемный атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,System.String,ProgramSoyuz.DataModel.WarningLevelEnum,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement,System.String)">
            <summary>
            Конструктор нового объекта
            </summary>
            <param name="owner">Объект владелец записи</param>
            <param name="nameKey">Идентификатор логической проблемы для кода кастомизации</param>
            <param name="level">Уровень проблемности</param>
            <param name="message">Описание проблемы</param>
            <param name="element">Проблемный элемент коллекции</param>
            <param name="attributeNameKey">Ключ проблемного атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.MarkAsConfirmed">
            <summary>
            Ставит флаг подтверждения проблемы. Дата подтверждения будет обновлена
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.KeepForLaterCheck">
            <summary>
            Ставит флаг пропуска проверки проблемы. Дата подтверждения в этом случае не обновляется, но
            запись о проблеме остается с объектом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.Erase">
            <summary>
            Удаление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.DoRawCancelChanges(System.Boolean)">
            <summary>
            Возвращает объект в начальное состояние
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.OnModified">
            <summary>
            Вызывается сеттерами свойств этого объекта при изменении объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.GetReferredObject">
            <summary>
            Вспомогательная ссылка на объект, имеющий отношение к проблеме
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.GetAttributeHash">
            <summary>
            Формирует хеш для поиска имеющихся объектов по проблемному атрибуту
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.Operation">
            <summary>
            Операция, которую следует произвести с объектом.
            Это поле используется при обработке сервером команды сохранени
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.IsConfirmed">
            <summary>
            Возвращает true, если логическая проблема все еще актуальна у объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.Owner">
            <summary>
            Ссылка на объект-владелец этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.OwnerObject">
            <summary>
            Ссылка на объект-владелец этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.Kind">
            <summary>
            Идентификатор типа проблемы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.AttributeId">
            <summary>
            Идентификатор проблемного атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CollectionElementId">
            <summary>
            Идентификатор проблемного элемента коллекции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.EntityAttributeNameKey">
            <summary>
            Ключ атрибута верхнего уровня, в котором обнаружена проблема
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.ProblemAttributeName">
            <summary>
            Пользовательское полное название (с путем) проблемного атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.Message">
            <summary>
            Текстовое сообщение о проблеме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.TextData">
            <summary>
            Текстовый параметр для использования кодом кастомизации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.ProblemAttribute">
            <summary>
            Атрибут, у которого проблема
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.ProblemCollectionElement">
            <summary>
            Элемент коллекции, у которого нашелся проблемный атрибут
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.AttributeNameKey">
            <summary>
            Ключ атрибута, в котором обнаружена проблема
            Если определен элемент коллекции, то это ключ его дочернего атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.ReferredObjectId">
            <summary>
            Вспомогательная ссылка на объект, имеющий отношение к проблеме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.ReferredObject">
            <summary>
            Вспомогательная ссылка на объект, имеющий отношение к проблеме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.ReferredAttributeId">
            <summary>
            Вспомогательная ссылка на атрибут объекта, имеющего отношение к проблеме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.ReferredAttribute">
            <summary>
            Вспомогательная ссылка на атрибут объекта, имеющего отношение к проблеме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.UniquenessEntryId">
            <summary>
            Идентификатор конфликтующей записи в таблице уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.NameKey">
            <summary>
            Дополнительные данные для кода кастомизации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.WarningLevel">
            <summary>
            Степень проблемности данного предупреждения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.Category">
            <summary>
            Категория данного предупреждения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.DateConfirmed">
            <summary>
            Локальное дата/время последнего подтверждения актуальности объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IntegrityWarning.WarningOperationEnum">
            <summary>
            Набор операций выполняемых с объектами
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CreationData.AttributeId">
            <summary>
            Идентификатор проблемного атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CreationData.CollectionElementId">
            <summary>
            Идентификатор проблемного элемента коллекции - владельца проблемного атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CreationData.AttributeNameKey">
            <summary>
            Ключ атрибута, в котором обнаружена проблема
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CreationData.Kind">
            <summary>
            Идентификатор типа проблемы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CreationData.ReferredObjectId">
            <summary>
            Вспомогательная ссылка на объект, имеющий отношение к проблеме
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CreationData.ReferredAttributeId">
            <summary>
            Вспомогательная ссылка на атрибут, имеющий отношение к проблеме
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CreationData.NameKey">
            <summary>
            Дополнительные данные для кода кастомизации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CreationData.CustomWarningLevel">
            <summary>
            Степень проблемности данного предупреждения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CreationData.UniquenessEntryId">
            <summary>
            Идентификатор конфликтующей записи в таблице уникальности
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CreationData.Message">
            <summary>
            Текстовое сообщение о проблеме для описания проблем уровня конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarning.CreationData.TextData">
            <summary>
            Текстовый параметр для использования кодом кастомизации
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.WarningsCollection">
            <summary>
              Класс оболочка для операций со списком сообщений о проблемах объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WarningsCollection._owner">
            <summary>
              Роль, чья коллекция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WarningsCollection._warnings">
            <summary>
              Список объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WarningsCollection._baseWarnings">
            <summary>
              Список объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WarningsCollection.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.IntegrityWarning})">
            <summary>
              Конструктор
            </summary>
            <param name = "owner">Шаблон, чья коллекция</param>
            <param name="warnings">Список имеющихся проблем объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WarningsCollection.FindByNameKey(System.String)">
            <summary>
            Возвращает список записей уровня конфигурации о проблемах по указанному тэгу
            </summary>
            <param name="nameKey">Тэг для поиска записей</param>
            <returns>Массив найденных записей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WarningsCollection.FindByNameKey(System.String,ProgramSoyuz.DataModel.IntegrityWarningBase.KindEnum)">
            <summary>
            Возвращает список записей уровня конфигурации о проблемах по указанному тэгу
            </summary>
            <param name="nameKey">Тэг для поиска записей</param>
            <param name="kind">Тип проблемы</param>
            <returns>Массив найденных записей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WarningsCollection.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref = "T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WarningsCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              An <see cref = "T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WarningsCollection.Add(ProgramSoyuz.PLM.Scripting.IntegrityWarning)">
            <summary>
              Adds an item to the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name = "item">The object to add to the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WarningsCollection.Clear">
            <summary>
              Removes all items from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WarningsCollection.Contains(ProgramSoyuz.PLM.Scripting.IntegrityWarning)">
            <summary>
              Determines whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
              true if <paramref name = "item" /> is found in the <see cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name = "item">The object to locate in the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WarningsCollection.CopyTo(ProgramSoyuz.PLM.Scripting.IntegrityWarning[],System.Int32)">
            <summary>
              Copies the elements of the <see cref = "T:System.Collections.Generic.ICollection`1" /> to an <see
               cref = "T:System.Array" />, starting at a particular <see cref = "T:System.Array" /> index.
            </summary>
            <param name = "array">The one-dimensional <see cref = "T:System.Array" /> that is the destination of the elements copied from <see
               cref = "T:System.Collections.Generic.ICollection`1" />. The <see cref = "T:System.Array" /> must have zero-based indexing.</param>
            <param name = "arrayIndex">The zero-based index in <paramref name = "array" /> at which copying begins.</param>
            <exception cref = "T:System.ArgumentNullException"><paramref name = "array" /> is null.</exception>
            <exception cref = "T:System.ArgumentOutOfRangeException"><paramref name = "arrayIndex" /> is less than 0.</exception>
            <exception cref = "T:System.ArgumentException"><paramref name = "array" /> is multidimensional.-or-<paramref
              name = "arrayIndex" /> is equal to or greater than the length of <paramref name = "array" />.-or-The number of elements in the source <see
               cref = "T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref
               name = "arrayIndex" /> to the end of the destination <paramref name = "array" />.-or-Type cannot be cast automatically to the type of the destination <paramref
               name = "array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WarningsCollection.Remove(ProgramSoyuz.PLM.Scripting.IntegrityWarning)">
            <summary>
              Removes the first occurrence of a specific object from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              true if <paramref name = "item" /> was successfully removed from the <see
               cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref
               name = "item" /> is not found in the original <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name = "item">The object to remove from the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WarningsCollection.Owner">
            <summary>
              Роль, чья коллекция
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WarningsCollection.Count">
            <summary>
              Gets the number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              The number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WarningsCollection.IsReadOnly">
            <summary>
              Gets a value indicating whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
              true if the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IntegrityWarningData">
            <summary>
            Класс для передачи в ядро информации о логических проблемах найденных проверяющимим модулями
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.#ctor(System.String)">
            <summary>
            Конструктор по логической проблеме с объектом
            </summary>
            <param name="message">Описание проблемы</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.#ctor(System.String,System.String)">
            <summary>
            Конструктор по логической проблеме с объектом/атрибутом
            </summary>
            <param name="entityAttributeNameKey">Ключ атрибута верхнего уровня, в котором обнаружена проблема</param>
            <param name="message">Описание проблемы</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.#ctor(System.UInt32,System.String)">
            <summary>
            Конструктор по логической проблеме с объектом/атрибутом
            </summary>
            <param name="attributeId">Идентификатор проблемного атрибута</param>
            <param name="message">Описание проблемы</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.#ctor(System.UInt32,System.String,System.String)">
            <summary>
            Конструктор по логической проблеме с элементом коллекции/атрибутом
            </summary>
            <param name="subItemAttributeNameKey">Ключ дочернего атрибута , в котором обнаружена проблема</param>
            <param name="collectionElementId">Идентификатор проблемного элемента коллекции</param>
            <param name="message">Описание проблемы</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.AttributeId">
            <summary>
            Идентификатор проблемного атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.CollectionElementId">
            <summary>
            Идентификатор проблемного элемента коллекции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.AttributeNameKey">
            <summary>
            Ключ атрибута, в котором обнаружена проблема
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.Message">
            <summary>
            Текстовое сообщение о проблеме для описнаия проблем уровня конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.ReferredObjectId">
            <summary>
            Вспомогательная ссылка на объект, имеющий отношение к проблеме
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.ReferredAttributeId">
            <summary>
            Вспомогательная ссылка на атрибут, имеющий отношение к проблеме
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.Data">
            <summary>
            Дополнительные данные для кода кастомизации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.WarningLevel">
            <summary>
            Степень проблемности данного предупреждения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IntegrityWarningData.ToString">
            <summary>
            Возвращает основное название объекта по умолчанию
            </summary>
            <returns>Возвращает основное название объекта по умолчанию</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ConfigurationModule">
            <summary>
            Модуль конфигурации.
            Объект для хранения описания и идентификационных характеристик dll файла модуля конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationModule.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationModule.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationModule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationModule.CreateWrapper(ProgramSoyuz.DataModel.ConfigurationModuleBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="module">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationModule.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationModule.#ctor(ProgramSoyuz.DataModel.ConfigurationModuleBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="module">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationModule.MarkDirty">
            <summary>
            Помечает ообъект для пересохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationModule.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationModule.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationModule.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationModule.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationModule.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationModule.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.Notes">
            <summary>
            Пользовательские заметки об иконке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.RelativePath">
            <summary>
            Место расположения модуля на сервере (относительный путь)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.FileAvailabilityStatus">
            <summary>
            Состояние файлов этого модуля (на сервере)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.Targets">
            <summary>
            Ключи приложений, которые могут использовать этот модуль
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.ModuleCompany">
            <summary>
            Название компании производителя модуля
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.ModuleTitle">
            <summary>
            Название модуля
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.ModuleDescription">
            <summary>
            Описание модуля
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.ModuleVersion">
            <summary>
            Версия модуля
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ConfigurationModule.IsLoadEnabled">
            <summary>
            Возвращает true если разрешена загрузка этого модуля
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ConfigurationModule.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationModule.CreationData.Notes">
            <summary>
            Пользовательские заметки об иконке
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationModule.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ConfigurationModule.CreationData.ResaveObject">
            <summary>
            Флаг обозначающий необходимость пересохранить объект как есть
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ConfigurationModule.CreationData.WriteTo(ProgramSoyuz.DataModel.ConfigurationModuleBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.Validate(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
              Вызывает обработчики Validate из кода кастомизации
            </summary>
            <param name = "obj">Сохраняемый объект</param>
            <param name = "attr">Сохраняемый атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.ValidateInput(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.Attribute,System.Object@,System.Boolean)">
            <summary>
              Вызывает обработчики ValidateInput из кода кастомизации
            </summary>
            <param name = "obj">Сохраняемый объект</param>
            <param name = "attr">Сохраняемый атрибут</param>
            <param name = "newValue">Проверяемое новое значение атрибута</param>
            <param name = "interceptUserExceptions">true означает, что если в пользовательском коде происходит исключение,
                то оно перехватывается и его текст трактуется как сообщение об ошибке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.BuildUniquenessValue(ProgramSoyuz.PLM.Scripting.Attribute,System.String)">
            <summary>
            Вызывает обработчики подготовки значения атрибута для помещения в пространство уникальности. Возвращает true если значение успешно вычислено
            </summary>
            <param name="attr">Собственно атрибут, чье значение помещается в ПУ</param>
            <param name="uniqueValue">Значение по умолчанию</param>
            <returns>Возвращает значение, помещаемое в ПУ</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.GetSelectIORange(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.PLM.Scripting.DataContainer[]@,ProgramSoyuz.PLM.Scripting.DataContainer[]@)">
            <summary>
              Вызывает обработчики GetSelectIORange из кода кастомизации.
              Формирует списки контейнеров, определяющих диапазон поиска ИО, а так же
              список идентификаторов контейнеров, поиск в которых должен быть включен по умолчанию
            </summary>
            <param name = "attr">Атрибут, чье ссылочное значение редактируем</param>
            <param name = "сontainerRange">На выходе получает список контейнеров, среди которых ищем ИО</param>
            <param name = "defaultContainersToSearchIn">На выходе получает список контейнеров,
              поиск в которых должен быть включен по умолчанию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.GetAvailableLinkValues(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
              Вызывает обработчики GetAvailableLinkValues из кода кастомизации.
              Формирует список объектов, из которых можно выбрать значение ссылки/элемента множества
            </summary>
            <param name = "attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <returns>Список объектов, либо null, если следует использовать обычный диалог поиска</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.GetSelectNamedValueRange(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.PLM.Scripting.NamedValue@,ProgramSoyuz.PLM.Scripting.NamedValue[]@)">
            <summary>
              Вызывает обработчики GetSelectIORange из кода кастомизации.
              Формирует корень ветки именованных значений, отображаемых
              в выпадающем списке атрибута "перечисление"
            </summary>
            <param name = "attr">Атрибут, чье значение редактируем</param>
            <param name = "namedValueRoot">На входе значение, установленное в определении атрибута.
              На выходе ожидается корень ветки ИЗ, которое следует использовать для формирования выпадающего списка значений</param>
            <param name="availableValues">На выходе список доступных значений, либо null, если используется <paramref name="namedValueRoot"/></param>
            <returns>true, если метод успешно вернул чего запрошено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.GetSelectTemplateRange(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.PLM.Scripting.Template@,ProgramSoyuz.PLM.Scripting.Template[]@)">
            <summary>
              Вызывает обработчики GetSelectTemplateRange из кода кастомизации.
              Формирует корень ветки шаблонов или список значений, отображаемых
              в выпадающем списке атрибута "шаблон/доп. класс"
            </summary>
            <param name = "attr">Атрибут, чье значение редактируем</param>
            <param name = "templateRoot">На входе значение, установленное в определении атрибута.
              На выходе ожидается корень ветки ИЗ, которое следует использовать для формирования выпадающего списка значений</param>
            <param name="availableValues">Список доступных значений </param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.GetSelectIconRange(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.PLM.Scripting.CustomIcon[]@)">
            <summary>
              Вызывает обработчики GetSelectIconRange из кода кастомизации.
              Формирует список значений, отображаемых
              в выпадающем списке атрибута "иконка"
            </summary>
            <param name = "attr">Атрибут, чье значение редактируем</param>
            <param name="availableValues">Список доступных значений </param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.GetSearchableRange(ProgramSoyuz.PLM.Scripting.AttributeDef,System.Object[]@)">
            <summary>
              Вызывает обработчики GetSearchableRange из кода кастомизации.
              Формирует список значений, отображаемых
              в выпадающем списке атрибута в конструкторе поисковых запросов
            </summary>
            <param name = "attr">Атрибут, чье значение редактируем</param>
            <param name="availableValues">Список доступных значений </param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.ResolveAttribute(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
              Вызывает обработчик ResolveAttribute из кода кастомизации и модулей
            </summary>
            <param name = "obj">Объект для которого вычисляем атрибут</param>
            <param name = "attr">Вычисляемый атрибут</param>
            <returns>true если значение вычислено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.ResolveAttribute(ProgramSoyuz.PLM.Scripting.CollectionElement,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
              Вызывает обработчик ResolveAttribute из кода кастомизации и модулей
            </summary>
            <param name = "obj">Элемент коллекции для которого вычисляем атрибут</param>
            <param name = "attr">Вычисляемый атрибут</param>
            <returns>true если значение вычислено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.DoInvokeResolveAttribute_Customization``2(``0,ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.CustomizationBase@)">
            <summary>
              Вызов кода вычисления атрибута из кода кастомизации
            </summary>
            <param name = "obj">Объект, для которого вычисляем атрибут</param>
            <param name = "attr">Вычисляемый атрибут</param>
            <param name="currentCustomizator"> </param>
            <returns>true если значение вычислено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.ResolveAttributeSearchItem(ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem)">
            <summary>
              Вызов кода корректировки поискового запроса для перенесенного атрибута
            </summary>
            <param name = "attr">Определение атрибута-ссылки</param>
            <param name = "searchItem">На сервере - элемент поискового дерева, который следует модифицировать в соответствии
              с определением ссылки на атрибут другого объекта. На клиенте - null</param>
            <returns>true если метод реализован и поиск поддерживается. Если метод возвращает false, то поиск
              по этому атрибуту считается нереализованным.</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.DoInvokeResolveAttributeSearchItem_Customization``2(ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem,ProgramSoyuz.PLM.Scripting.CustomizationBase@)">
            <summary>
              Вызов кода корректировки поискового запроса для перенесенного атрибута
            </summary>
            <param name = "attr">Определение атрибута-ссылки</param>
            <param name = "searchItem">На сервере - элемент поискового дерева, который следует модифицировать в соответствии
              с определением ссылки на атрибут другого объекта. На клиенте - null</param>
            <param name="currentCustomizator"> </param>
            <returns>true если метод реализован и поиск поддерживается. Если метод возвращает false, то поиск
              по этому атрибуту считается нереализованным.</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.OnHyperlink(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.PLM.Scripting.ScriptingObject,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Вызывает обработчик нажатия на гиперссылку для HTML/RTF атрибутов
            </summary>
            <param name="attr">Атрибут с гипертекстом</param>
            <param name="target">Целевой объект (для ссылок на объекты PLM)</param>
            <param name="targetUrl">URL гиперссылки (содержимое тэга HREF)</param>
            <param name="control">true если нажата клавиша Control</param>
            <param name="alt">true если нажата клавиша Alt</param>
            <param name="shift">true если нажата клавиша Shift</param>
            <param name="editMode">true если установлен режим редактирования текста</param>
            <returns>true если действие обработано и вызов других обработчиков не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.OnHyperlinkTooltip(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.PLM.Scripting.ScriptingObject,System.String,System.Boolean,System.String@,System.String@)">
            <summary>
            Обработчик нажатия на гиперссылку для HTML/RTF атрибутов - формирование всплывающей подсказки для гиперссылки
            </summary>
            <param name="attr">Атрибут с гипертекстом</param>
            <param name="target">Целевой объект (для ссылок на объекты PLM)</param>
            <param name="targetUrl">URL гиперссылки (содержимое тэга HREF)</param>
            <param name="editMode">true если установлен режим редактирования текста</param>
            <param name="linkText">На выходе текст всплывающей подсказки</param>
            <param name="hintText">На выходе подсказка о вариациях поведения с разными сдвиговыми клавишами.</param>
            <returns>Строка подсказки если этот объект готов обработать данную ссылку, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.GetValue(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.AttributeValue,System.Object@)">
            <summary>
            Вызывается при запросе значения простого вспомогательного атрибута
            </summary>
            <param name="obj">Объект, чей атрибут запрашиваем</param>
            <param name = "def">Определение атрибута</param>
            <param name="valueWrapper">Объект-оболочка значения атрибута</param>
            <param name="value">На выходе значение атрибута</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.SetValue(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.AttributeValue,System.Object)">
            <summary>
            Вызывается при запросе значения простого вспомогательного атрибута
            </summary>
            <param name="obj">Объект, чей атрибут запрашиваем</param>
            <param name = "def">Определение атрибута</param>
            <param name="valueWrapper">Объект-оболочка значения атрибута</param>
            <param name="newValue"></param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.DoGetUIData(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
              Возвращает запрошенное представление объекта в UI
            </summary>
            <param name = "attr">Объект для которого требуется UI представление</param>
            <param name = "dataKind">Запрашиваемый вид данных (название, иконки, превью)</param>
            <returns>null если следует использовать вариант по умолчанию,
              String для названий объекта (форматированный HTML тэгами для всего кроме просто названия),
              строковый ключ инконки в общем ImageListе и массив таких ключей для иконок,
              Image (или BlobDesc) для превью</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.GetUIData(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает запрошенное представление объекта в UI
            </summary>
            <param name="obj">Объект для которого требуется UI представление</param>
            <param name="attr">Собственно атрибут, дяя которого вызван метод</param>
            <param name="dataKind">Запрашиваемый вид данных (название, иконки, превью)</param>
            <returns>null если следует использовать вариант по умолчанию,
            String для названий объекта (форматированный HTML тэгами для всего кроме просто названия),
            CustomIcon (или строковый ключ иконки в общем ImageListе) и 
            CustomIcon[] (или массив ключей, или массив KeyValuePair&lt;String, String|CustomIcon|Object&gt;) для иконок,
            Image (или BlobDesc) для превью,
            Color для раскраски элементов в дереве и списке,
            FontStyle для указания стиля шрифта в дереве и списке</returns>
            <remarks> Вызывается в основном клиентским UI кодом.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAttributeDef.Compare(ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.IAttributableObject)">
            <summary>
            Сравнивает два объекта по атрибуту
            </summary>
            <param name="obj1">Первый объект для сравнения</param>
            <param name="obj2">Второй объект для сравнения</param>
            <returns>null, если следует использовать сравнение по умолчанию, 0 если значения равны, -1, если attr1 меньше attr2, и 1 если больше</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ClientConfigurationFlags">
            <summary>
            Набор битовых флагов, определяющих конфигурацию клиентского приложения
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IConfigurationController">
            <summary>
            Интерфейс для для подключения ресурсного файла конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IConfigurationController.ClientConfiguration">
            <summary>
            Набор битовых флагов, определяющих конфигурацию клиентского приложения
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IAboutBox">
            <summary>
            Интерфейс для показа диалога About
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IAboutBox.Show(System.Windows.Forms.IWin32Window)">
            <summary>
            Вызов диалога
            </summary>
            <param name="owner">Родительское окно для диалога</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IConfigurationSettingsBox">
            <summary>
            Интерфейс для показа диалога Настроек конфигурации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IConfigurationSettingsBox.Show(System.Windows.Forms.IWin32Window)">
            <summary>
            Вызов диалога
            </summary>
            <param name="owner">Родительское окно для диалога</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IUserSettingsBox">
            <summary>
            Интерфейс для показа диалога Настроек пользователя
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUserSettingsBox.Show(System.Windows.Forms.IWin32Window)">
            <summary>
            Вызов диалога
            </summary>
            <param name="owner">Родительское окно для диалога</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserSubscription">
            <summary>
            Подписка пользователя на события с объектами 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSubscription.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSubscription.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.CreateWrapper(ProgramSoyuz.DataModel.UserSubscriptionBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="userSubscription">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.#ctor(ProgramSoyuz.DataModel.UserSubscriptionBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="obj">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.#ctor(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.UserSubscriptionBase.ObjectEvents)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="user">Владелец подписки</param>
            <param name="targetObject">Целевой объект</param>
            <param name="eventsMask">Набор событий, интересующих пользователя</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.#ctor(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="user">Владелец подписки</param>
            <param name="targetObject">Целевой объект</param>
            <param name="eventNameKey">Ключ объектного события</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.#ctor(ProgramSoyuz.PLM.Scripting.UserSubscription.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.TargetUser">
            <summary>
            Доступ к родительскому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.TargetId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.Target">
            <summary>
            Целевой объект подписки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.ReminderText">
            <summary>
            Пользовательские текст напоминания
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.CustomEvent">
            <summary>
            Код пользовательского события
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.ValidnessTimeout">
            <summary>
            Промежуток времени, в течение которого подписка действует
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.EventCode">
            <summary>
            Событие срабатывания для этой подписки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.IsRecursiveOnChildren">
            <summary>
            Возвращает true если подписка действует и на дочерние обхекты
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserSubscription.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSubscription.CreationData.ValidnessTimeout">
            <summary>
            Промежуток времени, в течение которого подписка действует
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSubscription.CreationData.ReminderText">
            <summary>
            Пользовательские текст напоминания
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSubscription.CreationData.CustomEvent">
            <summary>
            Код пользовательского события
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSubscription.CreationData.EventCode">
            <summary>
            Набор битов, обозначающих интересующие события
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSubscription.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSubscription.CreationData.m_TargetUser">
            <summary>
            Пользователь, чья подписка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSubscription.CreationData.m_TargetObject">
            <summary>
            Целевой объект подписки
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.CreationData.WriteTo(ProgramSoyuz.DataModel.UserSubscriptionBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.CreationData.TargetUser">
            <summary>
            Пользователь, чья подписка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSubscription.CreationData.TargetObject">
            <summary>
            Целевой объект подписки
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserSubscription.CustomEventInfo">
            <summary>
            Сведения о пользовательском событии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSubscription.CustomEventInfo.Value">
            <summary>
            Ссылка на ИЗ события
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSubscription.CustomEventInfo.Flags">
            <summary>
            Набор битовых флагов, определяющих обработку этого события
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.CustomEventInfo.#ctor(ProgramSoyuz.PLM.Scripting.NamedValue,ProgramSoyuz.DataModel.UserSubscriptionBase.BitFlags)">
            <summary>
            Конструктор
            </summary>
            <param name="value">Ссылка на ИЗ события</param>
            <param name="flags">Набор битовых флагов, определяющих обработку этого события</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSubscription.CustomEventInfo.Equals(ProgramSoyuz.PLM.Scripting.UserSubscription.CustomEventInfo)">
            <summary>
            Указывает, равен ли текущий объект другому объекту того же типа.
            </summary>
            <returns>
            true, если текущий объект равен параметру <paramref name="other"/>, в противном случае — false.
            </returns>
            <param name="other">Объект, который требуется сравнить с данным объектом.
                            </param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.LogicalAndOperationItem">
            <summary>
            Класс для операции логического умножения в дереве поискового запроса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LogicalAndOperationItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LogicalAndOperationItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LogicalAndOperationItem.DoValidate">
            <summary>
            Валидация поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LogicalAndOperationItem.GetQueryExpression(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует поисковое SQL выражение для себя и своих детей
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>SQL строку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LogicalAndOperationItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LogicalAndOperationItem.GenerateCode(System.Text.StringBuilder,System.String,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по созданию данного элемента. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="parentItemName">Имя родительского элемента (может быть null)</param>
            <param name="offset">Текущий сдвиг кода в табах</param>
            <param name="usedTemplates"></param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.LogicalOrOperationItem">
            <summary>
            Класс для операции логического сложения в дереве поискового запроса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LogicalOrOperationItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LogicalOrOperationItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LogicalOrOperationItem.DoValidate">
            <summary>
            Валидация поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LogicalOrOperationItem.GetQueryExpression(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует поисковое SQL выражение для себя и своих детей
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>SQL строку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LogicalOrOperationItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LogicalOrOperationItem.GenerateCode(System.Text.StringBuilder,System.String,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по созданию данного элемента. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="parentItemName">Имя родительского элемента (может быть null)</param>
            <param name="offset">Текущий сдвиг кода в табах</param>
            <param name="usedTemplates"></param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem">
            <summary>
            Базовый класс объектов для поиска по системным атрибутам
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem.Create(ProgramSoyuz.DataModel.EntityIdentifier,ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Создает фильтр нужного типа по идентификатору сущности
            </summary>
            <param name="entity">Тип искомой сущности</param>
            <param name="parent">Родительский поисковый элемент </param>
            <returns>Фильтрующий элемент дерева поискового запроса для объектов указанной сущности</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem.AppendEnumCondition(ProgramSoyuz.Common.SQLStringBuilder,System.String)">
            <summary>
            Добавляет SQL условие на системный атрибут типа "Перечисление"
            </summary>
            <param name="sql">Объект для добавления в него условия</param>
            <param name="columnName"> </param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem.AppendChildSubquery(ProgramSoyuz.Common.SQLStringBuilder,ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32,ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Добавляет SQL условие на дочерний объект
            </summary>
            <param name="sql">Объект для добавления в него условия</param>
            <param name="searchQueryBuilder">Текущий построить поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <param name="childEntity">Тип сущности дочерних объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem.AppendTaskCondition(ProgramSoyuz.Common.SQLStringBuilder,System.String,ProgramSoyuz.PLM.Scripting.SearchQueryBuilder)">
            <summary>
            Добавляет SQL условие на системный атрибут типа "Задача"
            </summary>
            <param name="sql">Объект для добавления в него условия</param>
            <param name="columnName">Имя колонки, к которой применяется условие</param>
            <param name="searchQueryBuilder">Текущий построить поискового запроса</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem.GenerateCode(System.Text.StringBuilder,System.String,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по созданию данного элемента. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="parentItemName">Имя родительского элемента (может быть null)</param>
            <param name="offset">Текущий сдвиг кода в табах</param>
            <param name="usedTemplates"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem.AppendFullTextNameFilter(System.String,System.Collections.Generic.List{Wintellect.PowerCollections.Pair{System.String,System.Object}},ProgramSoyuz.Common.SQLStringBuilder,System.String)">
            <summary>
            Добавляет полнотекстовый фильтр на имя объекта. Вызывается для операций RelationalOperator.Contains и RelationalOperator.NotContains
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem.PropertyId">
            <summary>
            Идентификатор системного свойства, к которому применяем фильтр
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem.PropertyName">
            <summary>
            Название системного атрибута, по которому задано условие
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem.SystemPropertyId">
            <summary>
            Идентификаторы системных свойств, по которым осуществляем поиск
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchConditionFilterItem.PropertyTypeId">
            <summary>
            Код типа системного свойства объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchCollectionElementFilterItem">
            <summary>
            Класс для поиска элементов коллекций по их системным свойствам
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCollectionElementFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCollectionElementFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCollectionElementFilterItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCollectionElementFilterItem.DoValidate">
            <summary>
            Выполняет предварительную проверку корректности запроса.
            Генерирует исключение, если что-то не корректно
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCollectionElementFilterItem.IsValidForContext(System.Int32)">
            <summary>
            Проверяет подходит ли данный объект для запрошенного контекста
            </summary>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>true если подходит</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCollectionElementFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCollectionElementFilterItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchCollectionElementFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchAttributeValueFilterItem">
            <summary>
            Класс для поиска элементов значений атрибутов по их системным свойствам
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeValueFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeValueFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeValueFilterItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeValueFilterItem.DoValidate">
            <summary>
            Выполняет предварительную проверку корректности запроса.
            Генерирует исключение, если что-то не корректно
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeValueFilterItem.IsValidForContext(System.Int32)">
            <summary>
            Проверяет подходит ли данный объект для запрошенного контекста
            </summary>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>true если подходит</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeValueFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeValueFilterItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchAttributeValueFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchAttributeFileValueFilterItem">
            <summary>
            Класс для поиска элементов значений файловых атрибутов по их системным свойствам
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeFileValueFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeFileValueFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeFileValueFilterItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeFileValueFilterItem.DoValidate">
            <summary>
            Выполняет предварительную проверку корректности запроса.
            Генерирует исключение, если что-то не корректно
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeFileValueFilterItem.IsValidForContext(System.Int32)">
            <summary>
            Проверяет подходит ли данный объект для запрошенного контекста
            </summary>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>true если подходит</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeFileValueFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeFileValueFilterItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchAttributeFileValueFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Internal.UserRightsHelpers">
            <summary>
            Вспомогательный класс для общего кода вычисления прав доступа
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Internal.UserRightsHelpers.GetUsersByCustomOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.NamedValue,System.Collections.Generic.IEnumerable{ProgramSoyuz.DataModel.UserBindingBase},Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},System.Boolean)">
            <summary>
            Возвращает пользователей, которым предоставлена запрошенная пользовательская операция
            </summary>
            <param name="obj">Объект, по операции над которым ищутся пользователи</param>
            <param name="op">Запрошенная пользовательская операция</param>
            <param name="effectiveUserBindings">Перечислитель действующих на объект привязок</param>
            <param name="positiveSet">Уже вычисленные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="negativeSet">Уже отклоненные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="ignoreTemplateCustomization">Если true, то при поиске не вызывается кастомизация прав CheckOperation уровня шаблонов</param>
            <returns>Массив пользователей (группы, если были, преобразованы в списки пользователей)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Internal.UserRightsHelpers.GetUsersByOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,System.Collections.Generic.IEnumerable{ProgramSoyuz.DataModel.UserBindingBase},Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User},System.Boolean)">
            <summary>
            Возвращает пользователей, которым предоставлена запрошенная операция
            </summary>
            <param name="obj">Объект, по операции над которым ищутся пользователи</param>
            <param name="op">Запрошенная операция</param>
            <param name="effectiveUserBindings">Перечислитель действующих на объект привязок</param>
            <param name="positiveSet">Уже вычисленные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="negativeSet">Уже отклоненные пользователи. Для них проверки не требуются. Может быть null.</param>
            <param name="ignoreTemplateCustomization">Если true, то при поиске не вызывается кастомизация прав CheckOperation уровня шаблонов</param>
            <returns>Массив пользователей</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImageListManagerBase">
            <summary>
            Базовый класс менеджера иконок для UI 
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IImageListManager">
            <summary>
            Интерфейс для работы с основным ImageList приложения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IImageListManager.GetCustomIconImageKey(ProgramSoyuz.PLM.Scripting.CustomIcon)">
            <summary>
            Возвращает строковый ключ PLM-иконки
            </summary>
            <param name="customIcon">Иконка</param>
            <returns>Строковый ключ иконки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IImageListManager.GetFileImageKey(System.String)">
            <summary>
            Формирует иконку по расширению файла и возвращает ее строковый ключ
            </summary>
            <param name="fileName">Путь или имя файла</param>
            <returns>Строковый ключ иконки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IImageListManager.GetGrayscaleImageKey(System.String,System.Single)">
            <summary>
            Формирует grayscale-иконку по расширению файла и возвращает ее строковый ключ
            </summary>
            <param name="originalImageKey">Ключ исходной, полноцветной иконки</param>
            <param name="alphaBlend">Alpha-blend</param>
            <returns>Строковый ключ иконки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IImageListManager.GetSepiaToneImageKey(System.String,System.Single)">
            <summary>
            Формирует sepiatone-иконку по расширению файла и возвращает ее строковый ключ
            </summary>
            <param name="originalImageKey">Ключ исходной, полноцветной иконки</param>
            <param name="alphaBlend">Alpha-blend</param>
            <returns>Строковый ключ иконки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IImageListManager.GetImage(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Возвращает битмап, соответствующий объекту
            </summary>
            <param name="obj">объект, чей битмап нужно получить</param>
            <returns>Возвращает битмап</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IImageListManager.GetCompoundImage(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Возвращает составной битмап (с доп. иконками и оверлей-иконкой), соответствующий объекту
            </summary>
            <param name="obj">объект, чей битмап нужно получить</param>
            <returns>Возвращает битмап</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IImageListManager.ImageList">
            <summary>
            Доступ к списку иконок, используемых пользовательским интерфейсом
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImageListManagerBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImageListManagerBase.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImageListManagerBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.DragObjectInfoBase">
            <summary>
            Вспомогательный базовый класс для ДНД операций.
            Определяет общий интерфейс для управления списком разрешенных ДНД операций
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragObjectInfoBase._supportedOps">
            <summary>
            Список осуществимых с объектом операций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragObjectInfoBase.ClearDropEffects">
            <summary>
            Сброс списка осуществимых с объектом операций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragObjectInfoBase.AddOp(ProgramSoyuz.Common.GuiLib.DropEffectDesc)">
            <summary>
            Добавляет операцию, осуществимую с объектом
            </summary>
            <param name="op">Операция</param>
            <returns>true, если операция добавлена успешно. false, если такая уже есть в списке</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragObjectInfoBase.AddOp(ProgramSoyuz.Common.GuiLib.DropEffectDesc,System.Boolean)">
            <summary>
            Добавляет операцию, осуществимую с объектом
            </summary>
            <param name="op">Операция</param>
            <param name="replaceExistent">Если true то имеющаяся в списке (если есть) такая же операция заменяется на указанную</param>
            <returns>true, если операция добавлена успешно. false, если такая уже есть/была в списке</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragObjectInfoBase.ContainsOp(System.Windows.Forms.DragDropEffects)">
            <summary>
            Возвращает true если указанная операция уже есть в списке
            </summary>
            <param name="op">Операция</param>
            <returns>true, если операция добавлена успешно. false, если такая уже есть в списке</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragObjectInfoBase.RemoveOp(System.Windows.Forms.DragDropEffects)">
            <summary>
            Удаляет указанную операцию из списка поддерживаемых
            </summary>
            <param name="op">Удаляемая операция</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragObjectInfoBase._isSealed">
            <summary>
            Признак того, что дроп эффекты для этого объекта вычислены окончательно и уточнять их не требуется
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragObjectInfoBase.SupportedOpsMask">
            <summary>
            Маска осуществимых DND операций
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragObjectInfoBase.SupportedOps">
            <summary>
            Список осуществимых с объектом операций
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragObjectInfoBase.AreDropEffectsFinalized">
            <summary>
            Признак того, что дроп эффекты для этого объекта вычислены окончательно и уточнять их не требуется
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.DragObjectInfo">
            <summary>
            Набор данных по конкретному объекту, участвующему в DND операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragObjectInfo._target">
            <summary>
            Основной объект, который перетаскиваем (или чью ссылку несём)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragObjectInfo._otherContainer">
            <summary>
            Доп. контейнер для случая, когда DND операция происходит с ИО/контейнером, находящимся в неродном контейнере
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragObjectInfo._userItemLink">
            <summary>
            Шорткат рабочего стола для случая когда DND операция происходит по ярлыку из рабочего стола
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragObjectInfo._handled">
            <summary>
            Устанавливается в true после выполнения DND операции с этим объектом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragObjectInfo.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Конструктор по объекту
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragObjectInfo.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Конструктор по ссылке на ИО/контейнер в доп. контейнере
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragObjectInfo.#ctor(ProgramSoyuz.PLM.Scripting.UserItemLink)">
            <summary>
            Конструктор по ссылке пользовательского рабочего стола
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragObjectInfo.Target">
            <summary>
            Основной объект, который перетаскиваем (или чью ссылку несём)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragObjectInfo.OtherContainer">
            <summary>
            Доп. контейнер для случая, когда DND операция происходит с ИО, находящимся в неродном контейнере
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragObjectInfo.Shortcut">
            <summary>
            Шорткат рабочего стола для случая когда DND операция происходит по ярлыку из рабочего стола
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragObjectInfo.Handled">
            <summary>
            Устанавливается в true после выполнения DND операции с этим объектом.
            true означает что какой-то из обработчиков уже выполнил DND операцию с этим объектом
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.DragDropOperationContext">
            <summary>
            Контекст DND операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragDropOperationContext._allowedEntitites">
            <summary>
            Список разрешенных типов объектов, которые могут отображаться контекстом целевого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragDropOperationContext._objectsByTemplate">
            <summary>
            Список объектов, сгруппированных по шаблону
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragDropOperationContext._rawData">
            <summary>
            Исходный контейнер с данными
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragDropOperationContext._defaultOperation">
            <summary>
            Операция по умолчанию
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragDropOperationContext._defaultOperationPriority">
            <summary>
            Текущий приоритет операции по умолчанию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.SetDefaultOperation(System.Windows.Forms.DragDropEffects,System.Int32)">
            <summary>
            Устанавливает операцию по умолчанию, если указанное значение приоритета меньше текущего
            </summary>
            <param name="defaultOperation">Операция DND</param>
            <param name="priority">Приоритет. Чем меньше значение, тем выше приоритет</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragDropOperationContext._params">
            <summary>
            Словарь для хранения вспомогательной информации, используемой кастомизаторами
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.#ctor(System.Windows.Forms.IDataObject)">
            <summary>
            Конструктор по данным и целевому объекту
            </summary>
            <param name="rawData"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.#ctor(System.Windows.Forms.IDataObject,ProgramSoyuz.DataModel.EntityIdentifier[])">
            <summary>
            Конструктор по данным и набору разрешенных принимаемых сущностей
            </summary>
            <param name="rawData"></param>
            <param name="allowedEntitites"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.IsAllowed(ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Проверяет, разрешена ли вставка объектов определенного типа
            </summary>
            <param name="entity">Тип объекта для проверки</param>
            <returns>True, есть вставка допускается</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.GetObjectsByTemplate(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Список объектов, сгруппированных по шаблону определенного типа
            </summary>
            <param name="entity">Тип шаблона</param>
            <returns>Коллекция пар шаблон-DragObjectInfo</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.GetDataPresent(System.String)">
            <summary>
            Проверяет наличие данных определенного формата в контексте
            </summary>
            <param name="format">Формат данных в соответствии с <see cref="T:System.Windows.Forms.DataFormats"/>, либо пользовательский формат данных</param>
            <returns>True, если данные такого формата присутствуют</returns>
            <remarks>Метод возвращает false при запросе любого формата данных, если в них имеются объекты PLM. <see cref="P:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.ObjectsByTemplate"/>
            В этом случае следует считать, что переносятся именно объекты PLM и операция выполняется над ObjectsByTemplate</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.GetData(System.String)">
            <summary>
            Возвращает данные определенного формата из контексте
            </summary>
            <param name="format">Формат данных в соответствии с <see cref="T:System.Windows.Forms.DataFormats"/>, либо пользовательский формат данных</param>
            <returns>Данные, если есть или null</returns>
            <remarks>Метод возвращает false при запросе любого формата данных, если в них имеются объекты PLM. <see cref="P:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.ObjectsByTemplate"/>
            В этом случае следует считать, что переносятся именно объекты PLM и операция выполняется над ObjectsByTemplate</remarks>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragDropOperationContext._handled">
            <summary>
            Флаг, указывающий, что ДНД операция обработана
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DragDropOperationContext._forbiddenOps">
            <summary>
            Маска запрещённых DND операций. Если установлена, то указанные в ней операции исключаются из списка возможных
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.CalcResultingDropEffects">
            <summary>
            Вычисляет итоговый список дроп эффектов
            </summary>
            <returns>Массивы допустимых операций или null</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.DefaultOperation">
            <summary>
            Операция по умолчанию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.ObjectsByTemplate">
            <summary>
            Список объектов, сгруппированных по шаблону
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.AllowedEntitites">
            <summary>
            Список разрешенных типов объектов, которые могут отображаться контекстом целевого объекта.
            Обычно null, что означает отсутствие ограничений
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.RawData">
            <summary>
            Исходный контейнер с данными
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.Params">
            <summary>
            Словарь для хранения вспомогательной информации, используемой кастомизаторами
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.Handled">
            <summary>
            True, если кто-то что-то обработал. Используется как возвращаемое значение метода InsertData в DND инфраструктуре
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.HasAnythingToDo">
            <summary>
            True, если еще не все обработано.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DragDropOperationContext.ForbiddenOpsMask">
            <summary>
            Маска запрещённых DND операций. Если установлена, то указанные в ней операции исключаются из списка возможных
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.LocalizedString">
            <summary>
            Локализованная текстовая строка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.LocalizedString._data">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.PrepareModification">
            <summary>
              Подготовка объекта к внесению изменений
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.LocalizedString.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
              При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.CreateWrapper(ProgramSoyuz.DataModel.LocalizedStringBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="rawObj">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.#ctor(ProgramSoyuz.DataModel.LocalizedStringBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="rawObj">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.#ctor(ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.#ctor(System.String,ProgramSoyuz.PLM.Scripting.ScriptingBaseObject,ProgramSoyuz.DataModel.LocalizedStringBase.PropertyIdEnum,System.String)">
            <summary>
            Конструктор нового объекта
            </summary>
            <param name="languageCode">Код языка</param>
            <param name="parent">Объект-владелец</param>
            <param name="propertyId">Идентификатор локализованного свойства</param>
            <param name="value">Локализованный текст</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.ToString">
            <summary>
            Возвращает основное название объекта по умолчанию
            </summary>
            <returns>Возвращает основное название объекта по умолчанию</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.NameKey">
            <summary>
            Ключ пользовательской локализованной строки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.LanguageCode">
            <summary>
            Код языка: ru, en и пр
            Используются строки по <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/>: "ru", "en", "fi", и пр.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.Text">
            <summary>
            Собственно локализованное текстовое значение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.PropertyId">
            <summary>
            Идентификатор системного свойства объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.InvariantTextHash">
            <summary>
            Хеш значения нейтрального языка, по которому была создана данная локализованная строка. Используется для обнаружения
            расхождений
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.Parent">
            <summary>
              Родительский объект, к которому относится строка
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData.LanguageCode">
            <summary>
            Код языка: ru, en и пр
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData.PropertyId">
            <summary>
            Идентификатор системного свойства объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData.NameKey">
            <summary>
            Ключ пользовательской локализованной строки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData.Text">
            <summary>
            Собственно локализованное текстовое значение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData.InvariantTextHash">
            <summary>
            Хеш значения нейтрального языка, по которому была создана данная локализованная строка. Используется для обнаружения
            расхождений
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData._Parent">
            <summary>
              Родительский объект, к которому относится строка
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData.WriteTo(ProgramSoyuz.DataModel.LocalizedStringBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData.Parent">
            <summary>
              Родительский объект, к которому относится строка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.LocalizedString.CreationData.IsKeyDataChanged">
            <summary>
            Возвращает true если у объекта изменились значения ключевых полей
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.EntityAttribute">
            <summary>
            Атрибут объекта верхнего уровня
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.CreateCalculatedAttribute(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Создает экземпляр вычисленного атрибута
            </summary>
            <param name="nameKey">Ключ запрошенного атрибута</param>
            <param name="dataType">Тип запрошенного атрибута</param>
            <returns>Возвращает инициализированный экземпляр объекта для использования в качестве вычисленного атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.#ctor(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="nameKey">Ключ запрошенного атрибута</param>
            <param name="dataType">Тип запрошенного атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.AttributeBase,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="owner">Атрибутируемый объект-владелец данного атрибута</param>
            <param name="attribute">Реальный объект</param>
            <param name="attributeDef">Определение атрибута (если известно на момент создания объекта)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="owner">Атрибутируемый объект-владелец данного атрибута</param>
            <param name="attributeDef">Определение атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="owner">Атрибутируемый объект-владелец данного атрибута</param>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.OnChildModified(ProgramSoyuz.PLM.Scripting.CollectionElement,System.Boolean,System.Boolean)">
            <summary>
            Вызывается ребенком в случае изменения кого-либо из его дочерних сущностей
            </summary>
            <param name="collectionElement">Дочерний элемент коллекции</param>
            <param name="sendNotifications">Если true, то производится рассылка уведомление NotifyPropertyChanged с обновлением UI</param>
            <param name="isAuxilaryChange">Изменение порождено вспомогательным атрибутом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.OnChildModified(ProgramSoyuz.PLM.Scripting.AttributeValue,System.Boolean)">
            <summary>
            Вызывается ребенком в случае изменения кого-либо из его дочерних сущностей
            </summary>
            <param name="value">Дочернее значение атрибута</param>
            <param name="sendNotifications">Если true, то производится рассылка уведомление NotifyPropertyChanged с обновлением UI</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.OnModified(System.Boolean,System.Boolean)">
            <summary>
            Вызывается сеттерами свойств этого объекта при изменении объекта
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
            <param name="isAuxilaryChange">Изменение порождено вспомогательным атрибутом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.NotifyPropertyChanged(System.Boolean)">
            <summary>
            Сообщает владельцу о необходимости обновить UI
            </summary>
            <param name="fullNotification">Если true, то происходит вызов метода кастомизации</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.OnErrorTextModified">
            <summary>
            Вызывается при изменении текста ошибки для данного атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.RefreshUI">
            <summary>
            Рассылка уведомления о необходимости обновить элемент пользовательского интерфейса, отображающий данный атрибут
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.OnChildCancelled(ProgramSoyuz.PLM.Scripting.CollectionElement,System.Boolean,System.Boolean)">
            <summary>
            Вызывается ребенком в случае отмены его изменения или создания
            </summary>
            <param name="collectionElement">Дочерний элемент коллекции</param>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
            <param name="isAuxilaryChange">Изменение порождено вспомогательным атрибутом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.OnChildCancelled(ProgramSoyuz.PLM.Scripting.AttributeValue,System.Boolean)">
            <summary>
            Вызывается ребенком в случае отмены его изменения или создания
            </summary>
            <param name="value">Дочернее значение атрибута</param>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.Erase">
            <summary>
            Удаление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.DoRawCancelChanges(System.Boolean)">
            <summary>
            Возвращает объект в начальное состояние
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.Validate">
            <summary>
            Проверяет значение атрибута на валидность
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.NotifyPropertyBeforeChange(System.Object,System.String@)">
            <summary>
            Рассылка нотификации о назревающем изменении
            </summary>
            <param name="newValue">Новое значение</param>
            <param name="errorText">Сообщение об ошибке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.EntityAttribute.GetFriendlyFullName">
            <summary>
            Возвращает строковое представление объекта для пользователя
            Начиная с атрибута верхнего уровня
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.EntityAttribute.Owner">
            <summary>
            Атрибутируемый объект-владелец данного атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.EntityAttribute.OwnerObject">
            <summary>
            Атрибутируемый объект-владелец атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.EntityAttribute.ProgramSoyuz#DataModel#IStrictlyNamedSubObject#OwnerObject">
            <summary>
            Атрибутируемый объект-владелец атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.EntityAttribute.VirtualOwnerObject">
            <summary>
            Атрибутируемый объект - виртуальный владелец данного атрибута, то есть
            тот объект, что получил этот атрибут в качестве вычисленного по ссылке (ResolveAttribute).
            Для прочих атрибутов возвращает основного владельца <seealso cref="P:ProgramSoyuz.PLM.Scripting.EntityAttribute.OwnerObject"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.EntityAttribute.OwnerEntityAttribute">
            <summary>
            Корневой списковый атрибут, внутри которого находится данный, либо сам атрибут, если он и так корневой
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.EntityAttribute.IsCalculationInProgress">
            <summary>
            Возвращает true если в данный момент происходит вычисление атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.EntityAttribute.IsAsyncOperationInProgress">
            <summary>
            Возвращает true если в данный момент происходит асинхронное вычисление атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.EntityAttribute.AttributeDef">
            <summary>
            Возвращает определение этого атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.EntityAttribute.IdentityName">
            <summary>
            Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FormProgressStatus">
            <summary>
            Окно для показа статуса длительных операций. Работает в UI потоке без кнопки Отмена
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FormProgressStatus.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="line1">Текст первой строки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FormProgressStatus.#ctor(System.String,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="line1">Текст первой строки</param>
            <param name="line2">Текст второй строки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FormProgressStatus.#ctor(System.Drawing.Image,System.String,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="image">Иконка</param>
            <param name="line1">Текст первой строки</param>
            <param name="line2">Текст второй строки</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.XmlDesc">
            <summary>
            Дескриптор XML объекта, хранимого в PLM
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.XmlDesc.m_OwnerObject">
            <summary>
            Объект-владелец данного описателя бинарного объекта.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.XmlDesc.m_Data">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.XmlDesc.m_RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.XmlDesc.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.XmlDesc.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.XmlDesc.#ctor(ProgramSoyuz.DataModel.XmlDescBase,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="fileDesc">Реальный объект</param>
            <param name="owner">Владелец дескриптора XML объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.XmlDesc.#ctor(System.String)">
            <summary>
            Конструктор нового XML объекта
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.XmlDesc.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.XmlDesc.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.XmlDesc.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.XmlDesc.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.XmlDesc.GetDataAsXml">
            <summary>
            Тело XML объекта в виде Xml документа.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.XmlDesc.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.XmlDesc.OwnerObject">
            <summary>
            Объект-владелец данного описателя бинарного объекта.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.XmlDesc.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.XmlDesc.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.XmlDesc.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.XmlDesc.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.XmlDesc.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.XmlDesc.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.XmlDesc.Data">
            <summary>
            Тело бинарного объекта в байтах
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.XmlDesc.Length">
            <summary>
            Размер бинарного объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.XmlDesc.Size">
            <summary>
            Размер бинарного объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.XmlDesc.IsDataModified">
            <summary>
            Возвращает true, если бинарные данные объекта были изменены и требуют сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.XmlDesc.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.XmlDesc.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.XmlDesc.CreationData.XmlData">
            <summary>
            Тело объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.XmlDesc.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FileContext">
            <summary>
            Файловый контекст операции сохранения. Используется для запоминания состояния сессии,
            в которой открыто несколько файлов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileContext.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileContext.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.#ctor(System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="details">Дополнительные сведения о файловом контексте</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.CreateWrapper(ProgramSoyuz.DataModel.FileContextBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="context">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.#ctor(ProgramSoyuz.DataModel.FileContextBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="FileContext">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.Erase">
            <exception cref="T:ProgramSoyuz.PLM.Scripting.InvalidRequestException">Объект еще не создан</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.AddDependancy(System.UInt32,System.UInt32,System.String,ProgramSoyuz.DataModel.FileDependancyBase.BitFlags)">
            <summary>
            Добавление очередной файловой зависимости к создаваемому файловому контексту
            </summary>
            <param name="fileId">Идентификатор основного файла</param>
            <param name="targetFileId">Идентификатор образующего файла</param>
            <param name="relativePath">Путь от основного файла к образующему</param>
            <param name="flags">Набор флагов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileContext.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileContext.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileContext.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileContext.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileContext.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileContext.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileContext.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileContext.Details">
            <summary>
            Подробности о сохраненном контексте (версия софта например)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileContext.FileDependancies">
            <summary>
            Список связей между файлами, включенных в данный контекст. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileContext.AssemblyLinks">
            <summary>
            Список сборочных связей верхнего уровня между файлами, включенных в данный контекст. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileContext.ContextLinks">
            <summary>
            Список контекстных связей верхнего уровня между файлами, включенных в данный контекст. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileContext.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileContext.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FileContext.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileContext.CreationData.Details">
            <summary>
            Дополнительные сведения о файловом контексте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileContext.CreationData.FileDependancies">
            <summary>
            Список связей между файлами, включенных в данный контекст. 
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.OnInitialize(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
              Вызывает обработчик OnInitialize из кода кастомизации и модулей
            </summary>
            <param name = "obj">Создаваемый объект, требующий инициализации</param>
            <param name="classTemplate">Шаблон доп класса, для которого вызываем инициализацию</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.OnInitialize(ProgramSoyuz.PLM.Scripting.CollectionElement,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
              Вызывает обработчик OnInitialize из кода кастомизации и модулей
            </summary>
            <param name = "obj">Создаваемый элемент коллекции, требующий инициализации</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.OnInitializeFrom(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
              Вызывает обработчик OnInitializeFrom из кода кастомизации
            </summary>
            <param name = "obj">Создаваемый объект, требующий инициализации</param>
            <param name="classTemplate">Шаблон доп класса, для которого вызываем инициализацию</param>
            <param name="source">Оригинальный объект, по которому делаем копию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.OnInitializeFrom(ProgramSoyuz.PLM.Scripting.CollectionElement,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
              Вызывает обработчик OnInitializeFrom из кода кастомизации
            </summary>
            <param name = "obj">Создаваемый элемент коллекции, требующий инициализации</param>
            <param name="source">Оригинальный объект, по которому делаем копию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.BuildPrintingPageContents(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor,ProgramSoyuz.PLM.Scripting.DisplayElementsList)">
            <summary>
            Формирование содержимого страницы интерактивного документа
            </summary>
            <param name="obj">Объект, отображаемый на интерактивном документе</param>
            <param name="editor">Интерфейс доступа к редактору документа</param>
            <param name="elements">Формируемый набор элементов содержимого страницы печатного документа</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.Draw(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Drawing.Graphics,ProgramSoyuz.PLM.Scripting.IDrawingContext)">
            <summary>
            Отрисовка объекта на поле интерактивного документа
            </summary>
            <param name="obj">Объект, отображаемый на интерактивном документе</param>
            <param name="g">Контекст устройства вывода</param>
            <param name="context">Контекст отображения объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.HitTest(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor,System.Drawing.PointF)">
            <summary>
            Отрисовка объекта на поле интерактивного документа
            </summary>
            <param name="obj">Объект, отображаемый на интерактивном документе</param>
            <param name="editor">Интерфейс доступа к редактору документа</param>
            <param name="point">Точка в системе координат страницы (мм, вправо-вниз)</param>
            <returns>true если точка попала в объект, false - не попало, и null если следует вызвать обработчик базового класса</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.Validate(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
              Вызывает обработчики Validate из кода кастомизации и модулей
            </summary>
            <param name = "obj">Проверяемый объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.Validate(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
              Вызывает обработчики Validate из кода кастомизации и модулей
            </summary>
            <param name = "obj">Проверяемый объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.DoCalculateOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.AsyncCalculationOp)">
            <summary>
              Вызывает обработчик Calculate из кода кастомизации и модулей
            </summary>
            <param name = "obj">Объект для которого вычисляем атрибут</param>
            <param name = "attr">Вычисляемый атрибут</param>
            <param name="asyncOp">Конкретная операция для выполнения</param>
            <returns>true если значение вычислено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.DoCalculateOperation(ProgramSoyuz.PLM.Scripting.CollectionElement,ProgramSoyuz.PLM.Scripting.SubItemAttribute)">
            <summary>
              Вызывает обработчик Calculate из кода кастомизации и модулей
            </summary>
            <param name = "obj">Элемент коллекции для которого вычисляем атрибут</param>
            <param name = "attr">Вычисляемый атрибут</param>
            <returns>true если значение вычислено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.DoCalculateOperation_Customization``2(``0,``1,System.Object@,ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.AsyncCalculationOp)">
            <summary>
              Вызов кода вычисления атрибута из кода кастомизации
            </summary>
            <param name = "obj">Объект, для которого вычисляем атрибут</param>
            <param name = "attr">Вычисляемый атрибут</param>
            <param name="currentCustomizator"> </param>
            <param name="asyncOp">Конкретная операция для выполнения</param>
            <returns>true если значение вычислено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.PreCheckOperation(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
              Вызывает обработчики PreCheckOperation из кода кастомизации
            </summary>
            <param name = "user">Пользователь, выполняющий операцию</param>
            <param name = "obj">Проверяемый объект</param>
            <param name = "target">Объект, параметр операции (создание/перенос)</param>
            <param name = "op">Проверяемая операция</param>
            <param name = "attrNameKey">Проверяемый атрибут</param>
            <param name = "element">Проверяемый элемент коллекции</param>
            <returns>true если можно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.CheckOperation(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
              Вызывает обработчики Check из кода кастомизации
            </summary>
            <param name = "user">Пользователь, выполняющий операцию</param>
            <param name = "obj">Проверяемый объект</param>
            <param name = "target">Объект, параметр операции (создание/перенос)</param>
            <param name = "op">Проверяемая операция</param>
            <param name = "attrNameKey">Проверяемый атрибут</param>
            <param name = "element">Проверяемый элемент коллекции</param>
            <returns>true если можно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.PreCheckCustomOperation(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.NamedValue,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
              Вызывает обработчики PreCheckCustomOperation из кода кастомизации
            </summary>
            <param name = "user">Пользователь, выполняющий операцию</param>
            <param name = "obj">Проверяемый объект</param>
            <param name = "target">Объект, параметр операции (создание/перенос)</param>
            <param name = "op">Проверяемая операция</param>
            <param name = "attrNameKey">Проверяемый атрибут</param>
            <param name = "element">Проверяемый элемент коллекции</param>
            <returns>true если можно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.CheckCustomOperation(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.NamedValue,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
              Вызывает обработчики Check из кода кастомизации
            </summary>
            <param name = "user">Пользователь, выполняющий операцию</param>
            <param name = "obj">Проверяемый объект</param>
            <param name = "target">Объект, параметр операции (создание/перенос)</param>
            <param name = "op">Проверяемая операция</param>
            <param name = "attrNameKey">Проверяемый атрибут</param>
            <param name = "element">Проверяемый элемент коллекции</param>
            <returns>true если можно</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate._UIDataLocks">
            <summary>
            Множество объектов для которых в данный момент вычисляется GetFriendlyName()
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.GetUIData(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
              Вызывает обработчики GetUIData из кода кастомизации и модулей
            </summary>
            <param name = "obj">Объект для которого требуется UI представление</param>
            <param name = "dataKind">Запрашиваемый вид данных (название, иконки, превью)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.IsReadOnlyInUI(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
              Вызывает обработчики IsReadOnlyInUI из кода кастомизации
            </summary>
            <param name = "obj">Проверяемый объект</param>
            <param name = "def">Проверяемый атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.IsHiddenInUI(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
              Вызывает обработчики IsHiddenInUI из кода кастомизации
            </summary>
            <param name = "obj">Проверяемый объект</param>
            <param name = "def">Проверяемый атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.IsPageHiddenInUI(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.PageDef)">
            <summary>
              Вызывает обработчики IsPageHiddenInUI из кода кастомизации
            </summary>
            <param name = "obj">Проверяемый объект</param>
            <param name = "def">Проверяемая закладка</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.KeyComparer">
            <summary>
              Компаратор для сравнения пар строк по ключу
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.DoGetUIData(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind,System.Object[])">
            <summary>
              Возвращает запрошенное представление объекта в UI, складывая его в кеш вычисленных UI значений
            </summary>
            <param name = "obj">Объект для которого требуется UI представление</param>
            <param name = "dataKind">Запрашиваемый вид данных (название, иконки, превью)</param>
            <param name = "uiDataCache">Кеш представлений объекта в UI, может быть null (для серверного вызова)</param>
            <returns>null если следует использовать вариант по умолчанию,
              String для названий объекта (форматированный HTML тэгами для всего кроме просто названия),
              строковый ключ инконки в общем ImageListе и массив таких ключей для иконок,
              Image (или BlobDesc) для превью</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.Invoke(System.String,ProgramSoyuz.PLM.Scripting.AttributableObject,System.Object)">
            <summary>
              Вызывает обработчик Invoke из кода кастомизации
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="obj">Объект, для которого вызываем метод</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.Invoke(System.String,ProgramSoyuz.PLM.Scripting.CollectionElement,System.Object)">
            <summary>
              Вызывает обработчик Invoke из кода кастомизации
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="obj">Объект, для которого вызываем метод</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.Invoke(System.String,ProgramSoyuz.PLM.Scripting.Template,System.Object,System.Boolean)">
            <summary>
              Вызывает обработчик Invoke из кода кастомизации
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="template">Объект, для которого вызываем метод, по прототипу</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
            <param name="thisTemplateOnly">Если true, то вызывается лишь метод определенный в кастомизаторе данного шаблона (и его модификаторах)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.CheckIntegrity(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.WarningsCollection,System.Boolean)">
            <summary>
            Вызывает обработчик провреки объекта на предмет наличия логических проблем
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="warnings">Формируемый список проблем объекта</param>
            <param name="fixIfPossible">Установлено в true, если следует попытаться исправить ситуацию.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.ResolveClassAttributeOwner(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Возвращает объект, являющийся местом физического хранения атрибута доп класса.
            Если объект не совпадает с текущим, то запрос атрибута автоматически использует
            логику прокси-атрибута на указанный объект.
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="attr">Определение атрибута доп. класса</param>
            <returns>Объект, являющийся реальным местом хранения атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.ResolveClassAttributeSearchItem(ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem)">
            <summary>
              Вызов кода корректировки поискового запроса для перенесенного атрибута класса
            </summary>
            <param name = "attr">Определение атрибута класса</param>
            <param name = "searchItem">На сервере - элемент поискового дерева, который следует модифицировать в соответствии
              с определением ссылки на атрибут другого объекта. На клиенте - null</param>
            <returns>true если метод реализован и поиск поддерживается. Если метод возвращает false, то поиск
              по этому атрибуту трактуется как по обычному атрибуту.</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.DoInvokeResolveClassAttributeSearchItem_Customization``2(ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem,ProgramSoyuz.PLM.Scripting.CustomizationBase@)">
            <summary>
              Вызов кода корректировки поискового запроса для перенесенного атрибута
            </summary>
            <param name = "attr">Определение атрибута-ссылки</param>
            <param name = "searchItem">На сервере - элемент поискового дерева, который следует модифицировать в соответствии
              с определением ссылки на атрибут другого объекта. На клиенте - null</param>
            <param name="currentCustomizator"> </param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.GetVirtualAttributeDefs(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Возвращает список виртуальных определений атрибутов для отображения спискового атрибута
            </summary>
            <param name="obj">Объект верхнего уровня, для списковых атрибутов которого запрашиваются виртуальные колонки</param>
            <param name="attr">Списковый атрибут, для которого могут быть добавлены виртуальные колонки</param>
            <returns>Массив виртуальных определений атрибутов, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.CalcDropEffects(ProgramSoyuz.PLM.Scripting.DragDropOperationContext,ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
              Вызывает обработчики CalcDropEffects из кода кастомизации шаблонов
            </summary>
            <param name="context">Набор данных для подготовки DND операции</param>
            <param name="template">Шаблон обрабатываемых объектов</param>
            <param name="destination">Целевой объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.InsertDropData(ProgramSoyuz.PLM.Scripting.DragDropOperationContext,ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Windows.Forms.DragDropEffects)">
            <summary>
            Вызывает обработчики выполнения операции DND
            </summary>
            <param name="context">Набор данных для выполнения DND операции</param>
            <param name="template">Шаблон обрабатываемых объектов</param>
            <param name="destination">Целевой объект</param>
            <param name="dropEffect">Выполняемая операция</param>
            <returns>true если операцию следует продолжить с оставшимися объектами, false - пользователь затребовал завершение операции</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.PrepareDisplayParams(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.DataModel.AttributeDefBase.BaseParams)">
            <summary>
              Вызывает обработчики PrepareDisplayParams из кода кастомизации
            </summary>
            <param name = "obj">Объект, в чьей карточке используется атрибут</param>
            <param name = "def">Определение атрибута, для которого подготавливаем параметры отображения</param>
            <param name = "displayParams">Параметры отображения атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.PrepareEditor(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.AttributeEditorProps)">
            <summary>
            Вызывается при подготовке редактора атрибута при формировании карточки указанного объекта
            </summary>
            <param name="obj">Объект, в чьей карточке используется атрибут</param>
            <param name = "def">Определение атрибута, для которого подготавливаем параметры отображения</param>
            <param name="editorProps">Параметры редактора атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.IsCreatableFromUI(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Вызывается на клиенте для определения возможности создания объекта через пользовательский интерфейс.
            Вызывается кастомизатор сначала для шаблона родительского объекта, затем для шаблона возможного дочернего объекта.
            Порядок обхода кастомизаторов - модификаторы-дети-родители, пока кто-нибудь вернет не null
            </summary>
            <param name="parent">Объект, по которому проверяем возможность создать дочерний объект</param>
            <param name="child">Шаблон дочернего объекта, который может быть включен в меню</param>
            <returns>true если элемент может быть создан (пункт меню показан), false - пункт меню скрыт, 
            null - следует продолжить вызов других обработчиков</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.UIDataLocks">
            <summary>
            Множество объектов для которых в данный момент вычисляется GetFriendlyName()
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTemplate.AsyncCalculationOp">
            <summary>
            Набор команд для вызова асинхронного вычисления атрибутов
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase">
            <summary>
            Базовый класс для кастомизаторов шаблонов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase._customizationMethodIdsByKind">
            <summary>
            Индекс списков обработчиков по типу шаблона
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.GetCustomizationMethods(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Возвращает список обработчиков по типу шаблона
            </summary>
            <param name="kind">Тип атрибутируемой сущности</param>
            <returns>Массив идентификаторов методов</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase._customizationMethodNamesByKind">
            <summary>
            Индекс списков обработчиков по типу шаблона
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.GetCustomizationMethodNames(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Возвращает список обработчиков по типу шаблона
            </summary>
            <param name="kind">Тип атрибутируемой сущности</param>
            <returns>Массив идентификаторов методов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.CheckForReplacingHandlers">
            <summary>
            Проверяет данный экземпляр на наличие методов с атрибутом <see cref="T:ProgramSoyuz.PLM.Scripting.ReplaceMasterAttribute"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.IsHandlerReplaced(ProgramSoyuz.PLM.Scripting.CustomizationMethod)">
            <summary>
            Возвращает true если указанный обработчик мастер шаблона перекрыт модификатором и вызываться не должен
            </summary>
            <param name="methodId">Проверяемый идентификатор обработчика</param>
            <returns>true если обработчик перекрыт</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.CheckCustomizationCode(ProgramSoyuz.DataModel.AttributableEntityIdentifier,System.String,ProgramSoyuz.PLM.Scripting.CustomizationMethod[]@,System.CodeDom.Compiler.CompilerError[]@,System.Int32@)">
            <summary>
            Проверочная компиляция кода кастомизации объекта
            </summary>
            <param name="kind">Тип атрибутируемой сущности</param>
            <param name="csCode">Текст одного или нескольких методов</param>
            <param name="missingHandlers">На выходе список методов, которые можно добавить к коду</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <param name="nHeaderLines">Число строк, вставленных перед переданным для компиляции кодом</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.GetDefaultImplementation(ProgramSoyuz.DataModel.AttributableEntityIdentifier,ProgramSoyuz.PLM.Scripting.CustomizationMethod[])">
            <summary>
            Формирует реализацию по умолчанию для запрошенных методов кастомизации
            </summary>
            <param name="kind">Тип атрибутируемой сущности</param>
            <param name="handlers">массив идентификаторов интересующих методов кастомизации,
            либо null если интересуют все методы для этого объекта</param>
            <returns>Строку с кодом</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.OnInitialize(ProgramSoyuz.PLM.Scripting.PrototypeObject)">
            <summary>
            Инициализация вновь созданного прототипа объекта.
            Вызывается на клиенте (или на сервере в клиентском скрипте) 
            при создании нового экземпляра прототипа
            </summary>
            <param name="obj">Объект, который инициализируем</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.OnInitialize(ProgramSoyuz.PLM.Scripting.PrototypeObject,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Инициализация вновь созданного прототипа объекта.
            Вызывается на клиенте (или на сервере в клиентском скрипте) 
            при создании нового экземпляра прототипа
            </summary>
            <param name="obj">Объект, который инициализируем</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.OnInitialize(ProgramSoyuz.PLM.Scripting.PrototypeObject,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean@)">
            <summary>
            Инициализация вновь созданного прототипа объекта.
            Вызывается на клиенте (или на сервере в клиентском скрипте) 
            при создании нового экземпляра прототипа
            </summary>
            <param name="obj">Объект, который инициализируем</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.Calculate(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Boolean)">
            <summary>
            Подготовка вычисленного атрибута. Возвращает true если значение успешно вычислено
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="attr">Собственно атрибут, чье значение может установить этот метод</param>
            <param name="allowAsync">true если вызывающая сторона готова к асинхронному вычислению атрибута. 
            В этом случае обработчику следует поставить attr.IsAsyncCalculationinProgress в true</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.CancelCalculate(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Отмена начатого асинхронного вычисления
            </summary>
            <param name="obj">Объект, чей атрибут асинхронно вычисляется</param>
            <param name="attr">Атрибут, вычисляемый асинхронно</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.Calculate(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Подготовка вычисленного атрибута. Возвращает true если значение успешно вычислено
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="attr">Собственно атрибут, чье значение может установить этот метод</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.CanConvertInput(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Object)">
            <summary>
            Вызывается на клиенте для проверки пригодности значения для присваивания атрибуту.
            Используется для проверки возможности операции вставки из буфера
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>true, если значение <paramref name="newValue"/> пригодно для атрибута, false если не пригодно, null если следует вызывать обработчик предшественника</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.ConvertInput(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Object@)">
            <summary>
            Конвертация вводимого значения перед присвоением его атрибуту.
            Вызывается на клиенте перед сменой значения атрибута (включая операции вставки из буфера)
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>true, если конвертация произошла и/или значение <paramref name="newValue"/> пригодно для атрибута.
            false означает, что следует вызвать обработчик предшественника</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.OnAttributeChanged(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Функция вызывается как нотификация об изменении какого-либо атрибута прототипа объекта
            </summary>
            <param name="obj">Объект, чей атрибут изменился</param>
            <param name="attr">Собственно изменившийся атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.OnAttributeChanged(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Boolean@)">
            <summary>
            Функция вызывается как нотификация об изменении какого-либо атрибута прототипа объекта
            </summary>
            <param name="obj">Объект, чей атрибут изменился</param>
            <param name="attr">Собственно изменившийся атрибут</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.IsReadOnlyInUI(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Определяет является ли атрибут доступным только для чтения 
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки прототипа атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Проверяемое определение атрибута</param>
            <returns>true означает - только для чтения</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул true</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.IsHiddenInUI(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Определяет является ли атрибут скрытым
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Проверяемое определение атрибута</param>
            <returns>true означает, что атрибут скрыт</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул true</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.IsPageHiddenInUI(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.PageDef)">
            <summary>
            Определяет является ли закладка скрытой
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чью закладку проверяем</param>
            <param name="page">Проверяемое определение закладки</param>
            <returns>true означает, что закладка скрыта</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул true</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.IsAttributeVisibleInUI(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Определяет, является ли атрибут скрытым (false) или видимым (true)
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Проверяемый  атрибут</param>
            <returns>true означает, что атрибут виден, false - скрыт, null - продолжить вызовы других кастомизаторов.
            Если ни один из кастомизаторов не вернул ни true, ни false - атрибут считается видимым</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул null</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.IsPageVisibleInUI(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.PageDef)">
            <summary>
            Определяет, является ли закладка скрытой (false) или видимой (true)
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="page">Проверяемая закладка</param>
            <returns>true означает, что закладка видна, false - скрыта, null - продолжить вызовы других кастомизаторов.
            Если ни один из кастомизаторов не вернул ни true, ни false - закладка считается видимой</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул null</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.IsAttributeEditableInUI(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Определяет, является ли атрибут заблокированным (false) или редактируемым (true)
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Проверяемый  атрибут</param>
            <returns>true означает, что атрибут редактируемый, false - только для чтения, null - продолжить вызовы других кастомизаторов.
            Если ни один из кастомизаторов не вернул ни true, ни false - атрибут считается редактируемым</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул null.
            Этот метод вызывается лишь в том случае, когда атрибут разрешен к редактированию правами доступа и другими настройками конфигурации
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.PrepareDisplayParams(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.DataModel.AttributeDefBase.BaseParams)">
            <summary>
            Вызывается при подготовке параметров отображения атрибута при формировании карточки указанного объекта
            </summary>
            <param name="obj">Объект, в чьей карточке используется атрибут</param>
            <param name="def">Определение атрибута, чьи параметры настраиваются</param>
            <param name="displayParams">Параметры отображения атрибута</param>
            <returns>true если настройка завершена и дальнейшие обработчики вызывать не следует</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.PrepareEditor(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.AttributeEditorProps)">
            <summary>
            Вызывается при подготовке редактора атрибута при формировании карточки указанного объекта
            </summary>
            <param name="obj">Объект, в чьей карточке используется атрибут</param>
            <param name="def">Определение атрибута, чьи параметры настраиваются</param>
            <param name="editorProps">Параметры редактора атрибута</param>
            <returns>true если настройка завершена и дальнейшие обработчики вызывать не следует</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.OnBeforeDisplayInUI(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.IPropertySheetCallback)">
            <summary>
            Вызывается клиентским кодом UI перед показом карточки прототипа объекта.
            </summary>
            <param name="obj">Объект, чья карточка показывается</param>
            <param name="propertySheet">Ссылка на интерфейс доступа к штатной карточке атрибутируемого объекта</param>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.OnBeforeDisplayInUI(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.IPropertySheetCallback,System.Boolean@)">
            <summary>
            Вызывается клиентским кодом UI перед показом карточки прототипа объекта.
            </summary>
            <param name="obj">Объект, чья карточка показывается</param>
            <param name="propertySheet">Ссылка на интерфейс доступа к штатной карточке атрибутируемого объекта</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            
            Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.OnAttributeControlCreated(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Windows.Forms.Control,ProgramSoyuz.PLM.Scripting.IPropertyPanel)">
            <summary>
            Вызывается клиентским кодом UI перед показом редактора атрибута на карточке объекта.
            </summary>
            <param name="obj">Объект, чья карточка показывается</param>
            <param name="attr">Атрибут, для которого создается редактор</param>
            <param name="control">Созданный редактор для атрибута.</param>
            <param name="panel">Ссылка на интерфейс доступа к панели карточки объекта, на которой создается редактор атрибута.
            Используйте panel.PageDef для доступа к определению текущей панели.</param>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.OnAttributeControlCreated(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Windows.Forms.Control,ProgramSoyuz.PLM.Scripting.IPropertyPanel,System.Boolean@)">
            <summary>
            Вызывается клиентским кодом UI перед показом редактора атрибута на карточке объекта.
            </summary>
            <param name="obj">Объект, чья карточка показывается</param>
            <param name="attr">Атрибут, для которого создается редактор</param>
            <param name="control">Созданный редактор для атрибута.</param>
            <param name="panel">Ссылка на интерфейс доступа к панели карточки объекта, на которой создается редактор атрибута.
            Используйте panel.PageDef для доступа к определению текущей панели.</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.GetUIData(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает запрошенное представление объекта в UI
            </summary>
            <param name="obj">Объект для которого требуется UI представление</param>
            <param name="dataKind">Запрашиваемый вид данных (название, иконки, превью)</param>
            <returns>null если следует использовать вариант по умолчанию,
            String для названий объекта (форматированный HTML тэгами для всего кроме просто названия),
            CustomIcon (или строковый ключ иконки в общем ImageListе) и 
            CustomIcon[] (или массив ключей, или массив KeyValuePair&lt;String, String|CustomIcon|Object&gt;) для иконок,
            Image (или BlobDesc) для превью,
            Color для раскраски элементов в дереве и списке,
            FontStyle для указания стиля шрифта в дереве и списке</returns>
            <remarks> Вызывается в основном клиентским UI кодом.
            Название объекта может запрашиваться и серверным кодом.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.Invoke(System.String,ProgramSoyuz.PLM.Scripting.PrototypeObject,System.Object)">
            <summary>
            Вызов пользовательского метода объекта
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="obj">Объект, для которого вызываем метод</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.CalcDropEffects(ProgramSoyuz.PLM.Scripting.DragDropOperationContext,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.DragObjectInfo},ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Формирует описатели доступных DND операций. Для каждого объекта в <paramref name="objects"/> следует
            указать одну или несколько доступных операций.
            </summary>
            <param name="context">Контекст групповой DND операции</param>
            <param name="objects">Объекты этого шаблона, с которыми следует выполнить DND операцию</param>
            <param name="destination">Целевой объект (ссылки на объекты автоматически приводятся к целевому атрибутируемый объекту)</param>
            <returns>Список описателей возможных DND операций</returns>
            <remarks>В операцию могут быть вовлечены и объекты других шаблонов. Они доступны через <paramref name="context"/>.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.InsertData(ProgramSoyuz.PLM.Scripting.DragDropOperationContext,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.DragObjectInfo},ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Windows.Forms.DragDropEffects)">
            <summary>
            Собственно выполнение операции DND. Для каждого объекта из <paramref name="objects"/> следует выполнить операцию,
            указанную в <paramref name="dropEffect"/>. Обработанные объекты следует отметить флагом object.Handled
            </summary>
            <param name="context">Контекст групповой DND операции</param>
            <param name="objects">Объекты этого шаблона, с которыми следует выполнить DND операцию</param>
            <param name="destination">Целевой объект (ссылки на объекты автоматически приводятся к целевому атрибутируемый объекту)</param>
            <param name="dropEffect">Выполняемая операция одна из (Move, Copy, Link)</param>
            <returns>true если операцию следует продолжить с оставшимися объектами, false - пользователь затребовал завершение операции</returns>
            <remarks>Операция происходит в контексте группового сохранения. Все изменения будут сохранены по завершению выполнения
            всех обработчиков DND. Можно использовать явное сохранение обработанных объектов.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.InsertDropData(ProgramSoyuz.PLM.Scripting.DragDropOperationContext,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.DragObjectInfo},ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Windows.Forms.DragDropEffects)">
            <summary>
            Собственно выполнение операции DND. Для каждого объекта из <paramref name="objects"/> следует выполнить операцию,
            указанную в <paramref name="dropEffect"/>. Обработанные объекты следует отметить флагом object.Handled
            </summary>
            <param name="context">Контекст групповой DND операции</param>
            <param name="objects">Объекты этого шаблона, с которыми следует выполнить DND операцию</param>
            <param name="destination">Целевой объект (ссылки на объекты автоматически приводятся к целевому атрибутируемый объекту)</param>
            <param name="dropEffect">Выполняемая операция одна из (Move, Copy, Link)</param>
            <returns>true если операцию следует продолжить с оставшимися объектами, false - пользователь затребовал завершение операции</returns>
            <remarks>Операция происходит в контексте группового сохранения. Все изменения будут сохранены по завершению выполнения
            всех обработчиков DND. Можно использовать явное сохранение обработанных объектов.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.GetVirtualAttributeDefs(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Возвращает список виртуальных определений атрибутов для отображения спискового атрибута
            </summary>
            <param name="obj">Объект верхнего уровня, для списковых атрибутов которого запрашиваются виртуальные колонки</param>
            <param name="attr">Списковый атрибут, для которого могут быть добавлены виртуальные колонки</param>
            <returns>Массив виртуальных определений атрибутов, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomizationBase.IsCreatableFromUI(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Вызывается на клиенте для определения возможности создания объекта через пользовательский интерфейс.
            Вызывается кастомизатор сначала для шаблона родительского объекта, затем для шаблона возможного дочернего объекта.
            Порядок обхода кастомизаторов - модификаторы-дети-родители, пока кто-нибудь вернет не null
            </summary>
            <param name="parent">Объект, по которому проверяем возможность создать дочерний объект</param>
            <param name="child">Шаблон дочернего объекта, который может быть включен в меню</param>
            <returns>true если элемент может быть создан (пункт меню показан), false - пункт меню скрыт, 
            null - следует продолжить вызов других обработчиков</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2">
            <summary>
            Базовый класс для кастомизаторов шаблонов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.Validate(`0)">
            <summary>
            Проверка объекта перед сохранением. Возвращает сообщение об ошибке либо null.
            Вызывается на сервере в ходе проверки группового сохранения
            </summary>
            <param name="obj">Объект, который проверяем</param>
            <returns>null, если все хорошо, либо сообщение об ошибке</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnInitialize(`0)">
            <summary>
            Инициализация вновь созданного объекта.
            Вызывается на клиенте (или на сервере в клиентском скрипте) 
            сразу после установки значений по умолчанию в атрибутах
            </summary>
            <param name="obj">Объект, который инициализируем</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnInitialize(`0,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Инициализация вновь созданного объекта.
            Вызывается на клиенте (или на сервере в клиентском скрипте) 
            сразу после установки значений по умолчанию в атрибутах
            </summary>
            <param name="obj">Объект, который инициализируем</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnInitialize(`0,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean@)">
            <summary>
            Инициализация вновь созданного объекта.
            Вызывается на клиенте (или на сервере в клиентском скрипте) 
            сразу после установки значений по умолчанию в атрибутах
            </summary>
            <param name="obj">Объект, который инициализируем</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnInitializeFrom(`0,`0)">
            <summary>
            Инициализация вновь созданного объекта по имеющемуся объекту. (Создание копии)
            Вызывается на клиенте (или на сервере в клиентском скрипте) 
            внутри вызовов <see cref="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreateCopy"/>, <see cref="M:ProgramSoyuz.PLM.Scripting.DataContainer.CreateCopy(System.Boolean)"/>.
            </summary>
            <param name="obj">Объект, который инициализируем</param>
            <param name="source">Оригинальный объект, по которому делаем копию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnInitializeFrom(`0,`0,System.Boolean@)">
            <summary>
            Инициализация вновь созданного объекта по имеющемуся объекту. (Создание копии)
            Вызывается на клиенте (или на сервере в клиентском скрипте) 
            внутри вызовов <see cref="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreateCopy"/>, <see cref="M:ProgramSoyuz.PLM.Scripting.DataContainer.CreateCopy(System.Boolean)"/>.
            </summary>
            <param name="obj">Объект, который инициализируем</param>
            <param name="source">Оригинальный объект, по которому делаем копию</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.Calculate(`0,`1,System.Boolean)">
            <summary>
            Подготовка вычисленного атрибута. Возвращает true если значение успешно вычислено
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="attr">Собственно атрибут, чье значение может установить этот метод</param>
            <param name="allowAsync">true если вызывающая сторона готова к асинхронному вычислению атрибута.</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
            <remarks>Если allowAsync == true, и обработчик готов к асинхронному вычислению, следует поставить attr.IsAsyncCalculationinProgress в true. 
            В этом случае метод будет вызываться повторно по OnIdle до тех пор пока attr.IsAsyncCalculationinProgress остается в true.
            При завершении асинхронного вычисления свойство attr.IsAsyncCalculationinProgress следует установить в false.
            Для хранения промежуточного состояния следует использовать словарь obj.PropertyBag[attr.NameKey].</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.CancelCalculate(`0,`1)">
            <summary>
            Отмена начатого асинхронного вычисления
            </summary>
            <param name="obj">Объект, чей атрибут асинхронно вычисляется</param>
            <param name="attr">Атрибут, вычисляемый асинхронно</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.Calculate(`0,`1)">
            <summary>
            Подготовка вычисленного атрибута. Возвращает true если значение успешно вычислено
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="attr">Собственно атрибут, чье значение может установить этот метод</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.ResolveAttribute(`0,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Возвращает атрибут другого объекта для определения атрибута с типом "ссылка на другой атрибут"
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="attr">Определение атрибута-ссылки</param>
            <returns>Найденный атрибут другого объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.ResolveAttributeSearchItem(ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem)">
            <summary>
            Модифицирует поисковое дерево для выполнения запроса по атрибуту с типом "ссылка на другой атрибут"
            </summary>
            <param name="attr">Определение атрибута-ссылки</param>
            <param name="searchItem">На сервере - элемент поискового дерева, который следует модифицировать в соответствии
            с определением ссылки на атрибут другого объекта. На клиенте - null</param>
            <returns>true если метод реализован и поиск поддерживается. Если метод возвращает false, то поиск
            по этому атрибуту считается нереализованным.</returns>
            <remarks>Обычно в этом методе следует вставить поисковый элемент на атрибут-ссылку на другой объект, а 
            существующий элемент переприцепить к нему в виде подзапроса</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.CanConvertInput(`0,`1,System.Object)">
            <summary>
            Вызывается на клиенте для проверки пригодности значения для присваивания атрибуту.
            Используется для проверки возможности операции вставки из буфера
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>true, если значение <paramref name="newValue"/> пригодно для атрибута, false если не пригодно, null если следует вызывать обработчик предшественника</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.ConvertInput(`0,`1,System.Object@)">
            <summary>
            Конвертация вводимого значения перед присвоением его атрибуту.
            Вызывается на клиенте перед сменой значения атрибута (включая операции вставки из буфера)
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>true, если конвертация произошла и/или значение <paramref name="newValue"/> пригодно для атрибута.
            false означает, что следует вызвать обработчик предшественника</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnAttributeChanged(`0,`1)">
            <summary>
            Функция вызывается как нотификация об изменении какого-либо атрибута объекта
            </summary>
            <param name="obj">Объект, чей атрибут изменился</param>
            <param name="attr">Собственно изменившийся атрибут</param>
            <remarks>Метод вызывается по месту изменения значения атрибута. Это может происходить как на клиенте,
            так и на сервере. В том числе внутри обработки операции сохранения, где вложенные вызовы сохранения
            заблокированы (приводят к исключению)</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnAttributeChanged(`0,`1,System.Boolean@)">
            <summary>
            Функция вызывается как нотификация об изменении какого-либо атрибута объекта
            </summary>
            <param name="obj">Объект, чей атрибут изменился</param>
            <param name="attr">Собственно изменившийся атрибут</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Метод вызывается по месту изменения значения атрибута. Это может происходить как на клиенте,
            так и на сервере. В том числе внутри обработки операции сохранения, где вложенные вызовы сохранения
            заблокированы (приводят к исключению).
            Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeSave(`0)">
            <summary>
            Серверный триггер. Вызывается в ходе выполнения группового 
            сохранения объектов сразу после проверки/валидации всех сохраняемых объектов
            </summary>
            <param name="obj">Сохраняемый объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeSave(`0,System.Boolean@)">
            <summary>
            Серверный триггер. Вызывается в ходе выполнения группового 
            сохранения объектов сразу после проверки/валидации всех сохраняемых объектов
            </summary>
            <param name="obj">Сохраняемый объект</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам.
            [ReplaceMaster] атрибут позволяет из скрипта модификатора отключить обработчик мастер-шаблона</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeErase(`0)">
            <summary>
            Серверный триггер. Вызывается в ходе выполнения группового 
            сохранения объектов для каждого удаляемого объекта
            </summary>
            <param name="obj">Удаляемый объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeErase(`0,System.Boolean@)">
            <summary>
            Серверный триггер. Вызывается в ходе выполнения группового 
            сохранения объектов для каждого удаляемого объекта
            </summary>
            <param name="obj">Удаляемый объект</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам.
            [ReplaceMaster] атрибут позволяет из скрипта модификатора отключить обработчик мастер-шаблона</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeCommit(`0)">
            <summary>
            Серверный триггер. Вызывается в ходе выполнения группового 
            сохранения объектов после внесения изменений в базу, 
            непосредственно перед фиксацией транзакции
            </summary>
            <param name="obj">Сохраняемый/удаляемый объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeCommit(`0,System.Boolean@)">
            <summary>
            Серверный триггер. Вызывается в ходе выполнения группового 
            сохранения объектов после внесения изменений в базу, 
            непосредственно перед фиксацией транзакции
            </summary>
            <param name="obj">Сохраняемый/удаляемый объект</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам.
            [ReplaceMaster] атрибут позволяет из скрипта модификатора отключить обработчик мастер-шаблона</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnAfterCommit(`0)">
            <summary>
            Серверный триггер. Вызывается в после выполнения группового 
            сохранения объектов после внесения изменений в базу, фиксации
            транзакции и внесения изменений в серверный кеш.
            Этот метод вызывается вне рамок группового сохранения, но 
            в том же серверном потоке
            </summary>
            <param name="obj">Вновь созданный или измененный объект объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnAfterCommit(`0,System.Boolean@)">
            <summary>
            Серверный триггер. Вызывается в после выполнения группового 
            сохранения объектов после внесения изменений в базу, фиксации
            транзакции и внесения изменений в серверный кеш.
            Этот метод вызывается вне рамок группового сохранения, но 
            в том же серверном потоке
            </summary>
            <param name="obj">Вновь созданный или измененный объект объект</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам.
            [ReplaceMaster] атрибут позволяет из скрипта модификатора отключить обработчик мастер-шаблона</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.PreCheckOperation(ProgramSoyuz.PLM.Scripting.User,`0,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Проверка возможности выполнения указанной операции с атрибутом данного объекта или самим объектом.
            Вызывается в первую очередь при проверке прав доступа. Если метод возвращает false, то 
            операция считается запрещённой.
            Вызывается в коде проверки прав доступа как на клиенте, так и на сервере.
            </summary>
            <param name="user">Пользователь, чья операция проверяется</param>
            <param name="obj">Объект, с которым производится операция</param>
            <param name="target">Объект, параметр операции (создание/перенос)</param>
            <param name="op">Код операции</param>
            <param name="attrNameKey">Ключ атрибута для проверки операции с атрибутом</param>
            <param name="element">Элемент коллекции, с атрибутом которого производится операция</param>
            <returns>Возвращает true если следует разрешить операцию, false - если запретить, 
            null - если следует выполнить дальнейшие проверки ролевой системы доступа</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.PreCheckCustomOperation(ProgramSoyuz.PLM.Scripting.User,`0,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.NamedValue,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Проверка возможности выполнения указанной операции с атрибутом данного объекта или самим объектом.
            Вызывается в первую очередь при проверке прав доступа. Если метод возвращает false, то 
            операция считается запрещённой.
            Вызывается в коде проверки прав доступа как на клиенте, так и на сервере.
            </summary>
            <param name="user">Пользователь, чья операция проверяется</param>
            <param name="obj">Объект, с которым производится операция</param>
            <param name="target">Объект, параметр операции (создание/перенос)</param>
            <param name="op">ИЗ пользовательской операции</param>
            <param name="attrNameKey">Ключ атрибута для проверки операции с атрибутом</param>
            <param name="element">Элемент коллекции, с атрибутом которого производится операция</param>
            <returns>Возвращает true если следует разрешить операцию, false - если запретить, 
            null - если следует выполнить дальнейшие проверки ролевой системы доступа</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.CheckOperation(ProgramSoyuz.PLM.Scripting.User,`0,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Проверка возможности выполнения указанной операции с атрибутом данного объекта или самим объектом.
            Вызывается в последнюю очередь при проверке прав доступа, только в том случае, 
            если разрешение на операцию не было предоставлено правилами доступа имеющихся ролей.
            Вызывается в коде проверки прав доступа как на клиенте, так и на сервере
            </summary>
            <param name="user">Пользователь, чья операция проверяется</param>
            <param name="obj">Объект, с которым производится операция</param>
            <param name="target">Объект, параметр операции (создание/перенос)</param>
            <param name="op">Код операции</param>
            <param name="attrNameKey">Ключ атрибута для проверки операции с атрибутом</param>
            <param name="element">Элемент коллекции, с атрибутом которого производится операция</param>
            <returns>Возвращает true если следует разрешить операцию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.CheckCustomOperation(ProgramSoyuz.PLM.Scripting.User,`0,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.NamedValue,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Проверка возможности выполнения указанной операции с атрибутом данного объекта или самим объектом.
            Вызывается в последнюю очередь при проверке прав доступа, только в том случае, 
            если разрешение на операцию не было предоставлено правилами доступа имеющихся ролей.
            Вызывается в коде проверки прав доступа как на клиенте, так и на сервере
            </summary>
            <param name="user">Пользователь, чья операция проверяется</param>
            <param name="obj">Объект, с которым производится операция</param>
            <param name="target">Объект, параметр операции (создание/перенос)</param>
            <param name="op">ИЗ пользовательской операции</param>
            <param name="attrNameKey">Ключ атрибута для проверки операции с атрибутом</param>
            <param name="element">Элемент коллекции, с атрибутом которого производится операция</param>
            <returns>Возвращает true если следует разрешить операцию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.GetUIData(`0,ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает запрошенное представление объекта в UI
            </summary>
            <param name="obj">Объект для которого требуется UI представление</param>
            <param name="dataKind">Запрашиваемый вид данных (название, иконки, превью)</param>
            <returns>null если следует использовать вариант по умолчанию,
            String для названий объекта (форматированный HTML тэгами для всего кроме просто названия),
            CustomIcon (или строковый ключ иконки в общем ImageListе) и 
            CustomIcon[] (или массив ключей, или массив KeyValuePair&lt;String, String|CustomIcon|Object&gt;) для иконок,
            Image (или BlobDesc) для превью,
            Color для раскраски элементов в дереве и списке,
            FontStyle для указания стиля шрифта в дереве и списке</returns>
            <remarks> Вызывается в основном клиентским UI кодом.
            Название объекта может запрашиваться и серверным кодом.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnUpdated(`0,System.Boolean)">
            <summary>
            Вызывается на клиенте непосредственно после встраивания обновлённого объекта
            в клиентский кеш
            </summary>
            <param name="obj">Объект, обновлённый в клиентском кеше</param>
            <param name="isFirst">true, если объект впервые появился в клиентском кеше</param>
            <remarks> Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnChildrenUpdated(`0)">
            <summary>
            Вызывается на клиенте непосредственно после встраивания изменений среди дочерних объектов
            в клиентский кеш
            </summary>
            <param name="obj">Объект, непосредственные дети которого были обновлены в клиентском кеше</param>
            <remarks> Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.IsReadOnlyInUI(`0,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Определяет является ли атрибут доступным только для чтения 
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Проверяемое определение атрибута</param>
            <returns>true означает - только для чтения</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул true</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.IsHiddenInUI(`0,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Определяет является ли атрибут скрытым
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Проверяемое определение атрибута</param>
            <returns>true означает, что атрибут скрыт</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул true</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.IsPageHiddenInUI(`0,ProgramSoyuz.PLM.Scripting.PageDef)">
            <summary>
            Определяет является ли закладка скрытой
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чью закладку проверяем</param>
            <param name="page">Проверяемое определение закладки</param>
            <returns>true означает, что закладка скрыта</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул true</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.IsAttributeVisibleInUI(`0,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Определяет, является ли атрибут скрытым (false) или видимым (true)
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Проверяемый  атрибут</param>
            <returns>true означает, что атрибут виден, false - скрыт, null - продолжить вызовы других кастомизаторов.
            Если ни один из кастомизаторов не вернул ни true, ни false - атрибут считается видимым</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул null</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.IsPageVisibleInUI(`0,ProgramSoyuz.PLM.Scripting.PageDef)">
            <summary>
            Определяет, является ли закладка скрытой (false) или видимой (true)
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="page">Проверяемая закладка</param>
            <returns>true означает, что закладка видна, false - скрыта, null - продолжить вызовы других кастомизаторов.
            Если ни один из кастомизаторов не вернул ни true, ни false - закладка считается видимой</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул null</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.IsAttributeEditableInUI(`0,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Определяет, является ли атрибут заблокированным (false) или редактируемым (true)
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Проверяемый  атрибут</param>
            <returns>true означает, что атрибут редактируемый, false - только для чтения, null - продолжить вызовы других кастомизаторов.
            Если ни один из кастомизаторов не вернул ни true, ни false - атрибут считается редактируемым</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул null.
            Этот метод вызывается лишь в том случае, когда атрибут разрешен к редактированию правами доступа и другими настройками конфигурации
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.PrepareDisplayParams(`0,ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.DataModel.AttributeDefBase.BaseParams)">
            <summary>
            Вызывается при подготовке параметров отображения атрибута при формировании карточки указанного объекта
            </summary>
            <param name="obj">Объект, в чьей карточке используется атрибут</param>
            <param name="def">Определение атрибута, чьи параметры настраиваются</param>
            <param name="displayParams">Параметры отображения атрибута</param>
            <returns>true если настройка завершена и дальнейшие обработчики вызывать не следует</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.PrepareEditor(`0,ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.AttributeEditorProps)">
            <summary>
            Вызывается при подготовке редактора атрибута при формировании карточки указанного объекта
            </summary>
            <param name="obj">Объект, в чьей карточке используется атрибут</param>
            <param name="def">Определение атрибута, чьи параметры настраиваются</param>
            <param name="editorProps">Параметры редактора атрибута</param>
            <returns>true если настройка завершена и дальнейшие обработчики вызывать не следует</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeSendChangesToServer(`0)">
            <summary>
            Вызывается внутри скриптового (клиентского и серверного) кода перед передачей 
            серверу команды на изменение объектов.
            Обработчики вызываются в порядке от родительских шаблонов к дочерним и модификаторам.
            </summary>
            <remarks>Физически может вызываться как на клиенте, так и на сервере, если сохранение иницировано
            например серверным методом, или другим скриптовым кодом.
            Исключения, вышедшие их этого метода, предотвращают сохранение объекта. 
            Пользователю показывается сообщение.
            Следует иметь в виду, что этот метод может вызываться несколько раз для одних и тех же входных данных.
            Такое бывает в случае нескольких неуспешных попыток пользователя сохранить объект. В этом случае,
            если метод изменяет что-ли в объектах, на которых у исходного набора есть ссылки, то повторные вызовы
            метода могут привести к использованию уже измененных связанных скриптовых оболочек.
            Возможно для таких объектов понадобится вызывать CancelChanges() либо EnsureObjectInSaveSet(), чтобы
            эти измененные объекты попали в новый контекст очередной попытки сохранения.
            Метод вызывается и для элементов коллекций (как изменяемых, так и удаляемых)
            </remarks>
            <param name="obj">Объект, изменения в котором собираемся отправлять на сервер</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeSendChangesToServer(`0,System.Boolean@)">
            <summary>
            Вызывается внутри скриптового (клиентского и серверного) кода перед передачей 
            серверу команды на изменение объектов.
            Обработчики вызываются в порядке от родительских шаблонов к дочерним и модификаторам.
            </summary>
            <param name="obj">Объект, изменения в котором собираемся отправлять на сервер</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Физически может вызываться как на клиенте, так и на сервере, если сохранение иницировано
            например серверным методом, или другим скриптовым кодом.
            Исключения, вышедшие их этого метода, предотвращают сохранение объекта. 
            Пользователю показывается сообщение.
            Следует иметь в виду, что этот метод может вызываться несколько раз для одних и тех же входных данных.
            Такое бывает в случае нескольких неуспешных попыток пользователя сохранить объект. В этом случае,
            если метод изменяет что-ли в объектах, на которых у исходного набора есть ссылки, то повторные вызовы
            метода могут привести к использованию уже измененных связанных скриптовых оболочек.
            Возможно для таких объектов понадобится вызывать CancelChanges() либо EnsureObjectInSaveSet(), чтобы
            эти измененные объекты попали в новый контекст очередной попытки сохранения.
            Метод вызывается и для элементов коллекций (как изменяемых, так и удаляемых).
            
            Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeSendEraseToServer(`0)">
            <summary>
            Вызывается внутри скриптового (клиентского и серверного) кода перед передачей 
            серверу команды на удаление объектов.
            Обработчики вызываются в порядке от родительских шаблонов к дочерним и модификаторам.
            </summary>
            <remarks>Физически может вызываться как на клиенте, так и на сервере, если удаление иницировано
            например серверным методом, или другим скриптовым кодом.
            Исключения, вышедшие их этого метода, предотвращают удаление объекта. 
            Пользователю показывается сообщение.
            Метод аналогичен <see cref="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeSendChangesToServer(`0)"/>, но вызывается для удаляемых объектов.
            Метод не вызывается для удаляемых элементов коллекций.
            </remarks>
            <param name="obj">Объект, изменения в котором собираемся отправлять на сервер</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeSendEraseToServer(`0,System.Boolean@)">
            <summary>
            Вызывается внутри скриптового (клиентского и серверного) кода перед передачей 
            серверу команды на удаление объектов.
            Обработчики вызываются в порядке от родительских шаблонов к дочерним и модификаторам.
            </summary>
            <param name="obj">Объект, изменения в котором собираемся отправлять на сервер</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Физически может вызываться как на клиенте, так и на сервере, если удаление иницировано
            например серверным методом, или другим скриптовым кодом.
            Исключения, вышедшие их этого метода, предотвращают удаление объекта. 
            Пользователю показывается сообщение.
            Метод аналогичен <see cref="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeSendChangesToServer(`0,System.Boolean@)"/>, но вызывается для удаляемых объектов.
            Метод не вызывается для удаляемых элементов коллекций.
            
            Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeDisplayInUI(`0,ProgramSoyuz.PLM.Scripting.IPropertySheetCallback)">
            <summary>
            Вызывается клиентским кодом UI перед показом карточки объекта.
            </summary>
            <param name="obj">Объект, чья карточка показывается</param>
            <param name="propertySheet">Ссылка на интерфейс доступа к штатной карточке атрибутируемого объекта</param>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnBeforeDisplayInUI(`0,ProgramSoyuz.PLM.Scripting.IPropertySheetCallback,System.Boolean@)">
            <summary>
            Вызывается клиентским кодом UI перед показом карточки объекта.
            </summary>
            <param name="obj">Объект, чья карточка показывается</param>
            <param name="propertySheet">Ссылка на интерфейс доступа к штатной карточке атрибутируемого объекта</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            
            Метод с параметром out handled вызывается сначала от детей к родителям, пока кто-нибудь не установит <paramref name="handled"/> в true,
            затем метод с сигнатурой без параметра в порядке от родителей к детям-модификаторам </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnAttributeControlCreated(`0,`1,System.Windows.Forms.Control,ProgramSoyuz.PLM.Scripting.IPropertyPanel)">
            <summary>
            Вызывается клиентским кодом UI перед показом редактора атрибута на карточке объекта.
            </summary>
            <param name="obj">Объект, чья карточка показывается</param>
            <param name="attr">Атрибут, для которого создается редактор</param>
            <param name="control">Созданный редактор для атрибута</param>
            <param name="panel">Ссылка на интерфейс доступа к панели карточки объекта, на которой создается редактор атрибута.
                Используйте panel.PageDef для доступа к определению текущей панели.</param>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnAttributeControlCreated(`0,`1,System.Windows.Forms.Control,ProgramSoyuz.PLM.Scripting.IPropertyPanel,System.Boolean@)">
            <summary>
            Вызывается клиентским кодом UI перед показом редактора атрибута на карточке объекта.
            </summary>
            <param name="obj">Объект, чья карточка показывается</param>
            <param name="attr">Атрибут, для которого создается редактор</param>
            <param name="control">Созданный редактор для атрибута</param>
            <param name="panel">Ссылка на интерфейс доступа к панели карточки объекта, на которой создается редактор атрибута.
                Используйте panel.PageDef для доступа к определению текущей панели.</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.Invoke(System.String,`0,System.Object)">
            <summary>
            Вызов пользовательского метода объекта
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="obj">Объект, для которого вызываем метод</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.CheckIntegrity(`0,System.Boolean)">
            <summary>
            Проверяет объект на предмет наличия логических проблем
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="fixIfPossible">Установлено в true, если следует попытаться исправить ситуацию</param>
            <returns>Список неисправленных проблем, которые следует увидеть пользователю</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.CheckIntegrity(`0,ProgramSoyuz.PLM.Scripting.WarningsCollection,System.Boolean)">
            <summary>
            Проверяет объект на предмет наличия логических проблем. Вызывается на сервере сразу после сохранения (только проверка), 
            а также по запросу пользователя, прямому или фоновому (опционально с исправлением)
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="warnings">Формируемый список проблем объекта</param>
            <param name="fixIfPossible">Установлено в true, если следует попытаться исправить ситуацию.</param>
            <remarks>На входе в списке <paramref name="warnings"/> могут быть ранее вычисленные и сохраненные сообщения о проблемах.
            В этом случае их следует проверить и подтвердить вызовом <see cref="M:ProgramSoyuz.PLM.Scripting.IntegrityWarning.MarkAsConfirmed"/>. Неподтвержденные
            сообщения будут удалены. Кроме того обработчик может добавить новые сообщения о проблемах, либо явно удалить ранее имевшиеся.
            Для опознавания "своих" проблемных сообщений следует использовать <see cref="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.Kind"/> и <see cref="P:ProgramSoyuz.PLM.Scripting.IntegrityWarning.NameKey"/>.
            Уже сохраненные в базе сообщения о проблемах являются неизменяемыми. Их можно только удалить. Создаваемые в этой сессии сообщения
            могут меняться другими обработчиками.
            В случае успешного исправления проблемы следует удалить запись о ней в коллекции <paramref name="warnings"/>.
            Схема вызова: родители-дети-модификаторы</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.ResolveClassAttributeOwner(`0,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Возвращает объект, являющийся местом физического хранения атрибута доп класса.
            Если объект не совпадает с текущим, то запрос атрибута автоматически использует
            логику прокси-атрибута на указанный объект.
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="attr">Определение атрибута доп. класса</param>
            <returns>Объект, являющийся реальным местом хранения атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.ResolveClassAttributeSearchItem(ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem)">
            <summary>
            Модифицирует поисковое дерево для выполнения запроса по атрибуту доп класса
            </summary>
            <param name="attr">Определение атрибута-ссылки</param>
            <param name="searchItem">На сервере - элемент поискового дерева, который следует модифицировать в соответствии
            с реальным объектом хранения указанного атрибута доп. класса. На клиенте - null</param>
            <returns>true если метод реализован и поиск поддерживается. Если метод возвращает false означает, 
            что следует поискать другой обработчик</returns>
            <remarks>Обычно в этом методе следует либо оставить как есть и вернуть true, либо вставить поисковый элемент на 
            атрибут-ссылку на другой объект, а существующий элемент переприцепить к нему в виде подзапроса и вернуть true</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnFileSavedToVault(`0,ProgramSoyuz.PLM.Scripting.AttributeValue,ProgramSoyuz.PLM.Scripting.FileDesc,ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Вызывается на клиенте сразу после успешной отправки всех тел файлов, вовлеченных в операцию сохранения
            </summary>
            <param name="obj">Объект, чей файл сохранен</param>
            <param name="attributeValue">Значение атрибута</param>
            <param name="file">Описатель сохраненного файла</param>
            <param name="vault">Файловое хранилище, подтвердившее принятие тела файла</param>
            <remarks>Клиентский обработчик вызывается внутри клиентского вызова операции Save после того как все файлы
            загружены на файловые сервера. Аналогичный серверный обработчик <see cref="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnFileUploadConfirmed(`0,ProgramSoyuz.PLM.Scripting.AttributeValue,ProgramSoyuz.PLM.Scripting.FileDesc,ProgramSoyuz.PLM.Scripting.FileVault)"/> вызывается асинхронно для каждого полученного
            от ФС подтверждения о фиксации очередного файла.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnFileUploadConfirmed(`0,ProgramSoyuz.PLM.Scripting.AttributeValue,ProgramSoyuz.PLM.Scripting.FileDesc,ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Вызывается на сервере сразу после фиксации сведений о сохраненном в файловом хранилище теле файла
            </summary>
            <param name="obj">Объект, чей файл сохранен</param>
            <param name="attributeValue">Значение атрибута</param>
            <param name="file">Описатель сохраненного файла</param>
            <param name="vault">Файловое хранилище, подтвердившее принятие тела файла</param>
            <remarks>серверный обработчик вызывается асинхронно для каждого полученного от ФС подтверждения о фиксации очередного файла. 
            Аналогичный клиентский обработчик  <see cref="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.OnFileSavedToVault(`0,ProgramSoyuz.PLM.Scripting.AttributeValue,ProgramSoyuz.PLM.Scripting.FileDesc,ProgramSoyuz.PLM.Scripting.FileVault)"/> вызывается внутри клиентского вызова операции Save после 
            того как все файлы загружены на файловые сервера. </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.BuildPrintingPageContents(`0,ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor,ProgramSoyuz.PLM.Scripting.DisplayElementsList)">
            <summary>
            Формирование содержимого страницы интерактивного печатного документа
            </summary>
            <param name="obj">Объект, отображаемый на интерактивном документе</param>
            <param name="editor">Интерфейс доступа к редактору документа</param>
            <param name="elements">Формируемый набор элементов содержимого страницы печатного документа</param>
            <returns>true если содержимое страницы сформировано полностью, и обработчики базовых классов вызывать не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.Draw(`0,System.Drawing.Graphics,ProgramSoyuz.PLM.Scripting.IDrawingContext)">
            <summary>
            Отрисовка объекта на поле интерактивного печатного документа
            </summary>
            <param name="obj">Объект, отображаемый на интерактивном документе</param>
            <param name="g">Контекст устройства вывода</param>
            <param name="context">Контекст отображения объекта</param>
            <returns>true если объект нарисован, и обработчики базовых классов вызывать не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateCustomization`2.HitTest(`0,ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor,System.Drawing.PointF)">
            <summary>
            Определение, попадает ли точка в объект на странице интерактивного печатного документа
            </summary>
            <param name="obj">Объект, отображаемый на интерактивном документе</param>
            <param name="editor">Интерфейс доступа к редактору документа</param>
            <param name="point">Точка в системе координат страницы (мм, вправо-вниз)</param>
            <returns>true если точка попала в объект, false - не попало, и null если следует вызвать обработчик базового класса</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserTemplateCustomization">
            <summary>
            Базовый класс для кастомизаторов шаблонов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserTemplateCustomization.InitSession(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Вызывается на клиенте при инициализации сессии. Может использоваться
            для начальной загрузки необходимых пользователю контейнеров
            </summary>
            <param name="obj">Пользователь, сессия которого инициализируется</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserTemplateCustomization.BeforeSessionConnected(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserSession,System.Int32,System.Collections.Generic.ICollection{ProgramSoyuz.DataModel.StationKeyStruct})">
            <summary>
            Вызывается на сервере после проверки логина при входе пользователя в систему, но перед
            тем как отправлен ответ об успешном логине или о нехватке лицензий.
            </summary>
            <param name="obj">Пользователь, сессия которого инициализируется</param>
            <param name="session">Вновь инициализируемая сессия</param>
            <param name="allowedConnections">Максимальное число подключенных рабочих мест (по условиям лицензии)</param>
            <param name="licensedStations">Подключенные в данный момент рабочие места без учета проверяемой сессии</param>
            <returns>true если сессия проверена и обработчики базовых шаблонов и родительских групп вызывать не требуется</returns>
            <remarks>Метод вызывается от детей к родителям и родительским группам, пока кто-нибудь не вернёт true.
            Исключение в этом методе означает неудавшийся логин пользователя. 
            Для передачи сообщения пользователю следует использовать <see cref="T:ProgramSoyuz.PLM.Scripting.HumanFaultException"/>.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserTemplateCustomization.SessionConnected(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserSession)">
            <summary>
            Вызывается на сервере после проверки логина при входе пользователя в систему, но перед
            тем как отправлен ответ об успешном логине.
            </summary>
            <param name="obj">Пользователь, сессия которого инициализируется</param>
            <param name="session">Вновь инициализированная сессия</param>
            <remarks>Исключение в этом методе означает неудавшийся логин пользователя. 
            Для передачи сообщения пользователю следует использовать <see cref="T:ProgramSoyuz.PLM.Scripting.HumanFaultException"/>.
            Вызывается в порядке от родительских шаблонов к дочерним и модификаторам.
            </remarks>
        </member>
        <!-- Некорректный XML-комментарий для члена "M:ProgramSoyuz.PLM.Scripting.UserTemplateCustomization.SessionConnected(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserSession,System.Boolean@)" проигнорирован -->
        <member name="M:ProgramSoyuz.PLM.Scripting.UserTemplateCustomization.SessionDisconnected(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserSession)">
            <summary>
            Вызывается не сервере после завершения сессии пользователя
            </summary>
            <param name="obj">Пользователь, сессия которого завершилась</param>
            <param name="session">Только что закрывшаяся сессия</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.WorkItemTemplateCustomization">
            <summary>
            Базовый класс для кастомизаторов шаблонов нагрузок
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItemTemplateCustomization.ManageMailShortcuts(ProgramSoyuz.PLM.Scripting.WorkItem,ProgramSoyuz.PLM.Scripting.UserItemLink,ProgramSoyuz.PLM.Scripting.UserItemLink[])">
            <summary>
            Вызывается на сервере непосредственно после создания шорткатов для очередной нагрузки.
            После вызова OnBeforeSave внутри серверной обработки сохранения объектов
            </summary>
            <param name="obj">Экземпляр процесса с диаграммой</param>
            <param name="creatorLink">Шорткат, созданный на стороне отправителя</param>
            <param name="recipientLinks">Шорткаты, созданные на стороне получателей. Может быть null для нагрузок
            в статусе Черновик (Draft)</param>
            <remarks>В этом коде можно изменить переместить созданные шорткаты в необходимые элементы ПРС,
            отменить создание шорткатов и/или создать новые. 
            Код работает внутри серверного контекста сохранения. Явные вызовы Save не требуются</remarks>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization">
            <summary>
            Базовый класс для кастомизаторов шаблонов задач
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.CanCreate(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Вызывается на клиенте для определения возможности запуска задачи для указанных объектов
            </summary>
            <param name="selectedObjects">Объекты, по которым производится проверка возможности запуска задачи</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.CanCreate(ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Вызывается на клиенте для определения возможности запуска задачи для указанных объектов
            </summary>
            <param name="template">Шаблон создаваемого объекта</param>
            <param name="selectedObjects">Объекты, по которым производится проверка возможности запуска задачи</param>
            <returns>false, если по данным стартовым объектам следует запретить запуск процесса;
            true, если этот обработчик не препятствует запуску (при этом вызываются прочие обработчики CanCreate)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.CanCreate(ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},System.String@)">
            <summary>
            Вызывается на клиенте для определения возможности запуска задачи для указанных объектов
            </summary>
            <param name="template">Шаблон создаваемого объекта</param>
            <param name="selectedObjects">Объекты, по которым производится проверка возможности запуска задачи</param>
            <param name="grayTooltip">На выходе содержит сообщение для показа пользователю, с подсказкой почему создание не возможно</param>
            <returns>false, если по данным стартовым объектам следует запретить запуск процесса;
            true, если этот обработчик не препятствует запуску (при этом вызываются прочие обработчики CanCreate)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.OnCreate(ProgramSoyuz.PLM.Scripting.Task,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Вызывается на клиенте при создании задачи по указанным объектам
            </summary>
            <param name="obj">Создаваемая задача</param>
            <param name="selectedObjects">Объекты, по которым создается задача</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.OnTimeout(ProgramSoyuz.PLM.Scripting.Task,System.TimeSpan@)">
            <summary>
            Периодически вызывается на сервере для каждой активной задачи. 
            Первый вызов происходит вскоре после создания задачи
            </summary>
            <param name="obj">Задача для которой вызван периодический метод</param>
            <param name="repeatInterval">На выходе ожидаемый интервал повторного вызова этого метода.
            Интервал не гарантируется. При перезапуске сервера метод вызывается вскоре после запуска сервера в работу.
            TimeSpan.Zero означает, что дальнейший вызов этого метода вплоть до изменения объекта не требуется.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.OnChildTaskCompleted(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Вызывается на сервере при завершении дочерней задачи
            </summary>
            <param name="obj">Родительская задача</param>
            <param name="childTask">Завершенная дочерняя задача</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.UpdateNodeTransitionState(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.WorkItem,ProgramSoyuz.PLM.Scripting.NamedValue,ProgramSoyuz.PLM.Scripting.TaskDiagramNode,ProgramSoyuz.Common.GuiLib.ICmdUI2)">
            <summary>
            Вызывается на клиенте для настройки меню переходов с этапа. Вызывается сначала для подзадачи этапа, затем для процесса.
            Во втором случае obj - это процесс.
            </summary>
            <param name="obj">Родительская задача</param>
            <param name="workItem">Завершаемая нагрузка, порожденная указанной задачей</param>
            <param name="closeStatus">Именованное значение (обычно виртуальное), определяющее вариант завершения нагрузки.
            Обычно в его значении содержится в строковой форме Guid перехода или выбранного для перехода этапа, а NameKey
            соответствует ключу перехода или целевого этапа</param>
            <param name="targetNode">Целевой этап диаграммы, через контекстное меню которого пользователь выбирает переход.
            При обычном завершении этапа - null</param>
            <param name="cmdUI">Интерфейс доступа к управляющему элементу интерфейса. Его свойство Enabled и прочие могут быть настроены этим методом.
            Свойство cmdUI.Hidden позволяет совсем скрыть пункт меню</param>.
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.UpdateNodeTransitionState(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.WorkItem,ProgramSoyuz.PLM.Scripting.NamedValue,ProgramSoyuz.PLM.Scripting.TaskDiagramNode,ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Вызывается на клиенте для настройки меню переходов с этапа. Вызывается сначала для подзадачи этапа, затем для процесса.
            Во втором случае obj - это процесс.
            </summary>
            <param name="obj">Родительская задача</param>
            <param name="workItem">Завершаемая нагрузка, порожденная указанной задачей</param>
            <param name="closeStatus">Именованное значение (обычно виртуальное), определяющее вариант завершения нагрузки.
            Обычно в его значении содержится в строковой форме Guid перехода или выбранного для перехода этапа, а NameKey
            соответствует ключу перехода или целевого этапа</param>
            <param name="targetNode">Целевой этап диаграммы, через контекстное меню которого пользователь выбирает переход.
            При обычном завершении этапа - null</param>
            <param name="cmdUI">Интерфейс доступа к управляющему элементу интерфейса. Его свойство Enabled и прочие могут быть настроены этим методом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.OnBeforeWorkItemCompleted(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.WorkItem)">
            <summary>
            Вызывается на сервере при попытке завершения нагрузки, порожденной этой задачей
            </summary>
            <param name="obj">Родительская задача</param>
            <param name="workItem">Завершаемая нагрузка, порожденная указанной задачей</param>
            <remarks>Под завершением подразумевается перевод нагрузки в статус Closed.
            Аннулирование нагркузки не приводит к вызову этого метода.
            Исключение внутри этого метода приведет к отказу в завершении нагрузки. Пользователь увидит сообщение об ошибке.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.OnWorkItemCompleted(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.WorkItem)">
            <summary>
            Вызывается на сервере при завершении нагрузки, порожденной этой задачей
            </summary>
            <param name="obj">Родительская задача</param>
            <param name="workItem">Завершенная нагрузка, порожденная указанной задачей</param>
            <remarks>Под завершением подразумевается перевод нагрузки в статус Closed или Cancelled.
            Вызывается в фоновом серверном потоке после фиксации в базе завершенной нагрузки.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.OnDiagramNodeActivated(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Нотификация об активации очередного этапа диаграммы.
            Вызывается на сервере для процесса и для подзадачи этапа.
            </summary>
            <param name="obj">Задача, чья диаграмма продвинулась, либо подзадача этапа только что переведенная в активное состояние</param>
            <param name="node">Этап диаграммы, ставший активным</param>
            <remarks>Вызывается сначала для процесса с диаграммой, затем для подзадачи ставшего активным этапа.
            На момент вызова статус этапа уже установлен, но еще не сохранен. Исключения безмолвно попадают в серверный отчет и 
            не влияют на выполнение диаграммы процесса.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.OnDiagramNodePassed(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Нотификация о завершении очередного этапа диаграммы.
            Вызывается на сервере для процесса и для подзадачи этапа.
            </summary>
            <param name="obj">Задача, чья диаграмма продвинулась, либо подзадача только что пройденного этапа</param>
            <param name="node">Завершенный этап диаграммы</param>
            <remarks>Вызывается сначала для процесса с диаграммой, затем для подзадачи пройденного этапа
            На момент вызова статус этапа уже установлен, но еще не сохранен. Исключения безмолвно попадают в серверный отчет и 
            не влияют на выполнение диаграммы процесса.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.ResolveOutcomingLinks(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Перечисляет исходящие связи, по которым диаграмме следует продвинуться дальше.
            Вызывается на сервере.
            </summary>
            <param name="obj">Завершенная подзадача этапа</param>
            <param name="node">Этап диаграммы, для которой формируем дальнейший путь выполнения</param>
            <returns>Перечислитель (фильтрованный) исходящих связей этапа <paramref name="node"/></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.OnDiagramDeadlock(ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Вызывается на сервере при невозможности дальнейшего продвижения диаграммы
            </summary>
            <param name="obj">Экземпляр процесса с диаграммой</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.CalcWorkFlowWarnings(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.DataModel.TaskBase.WorkFlowWarningFlags@)">
            <summary>
            Вызывается на сервере для определения проблем диаграммы процесса, о которых следует оповестить супервизоров.
            Вызывается для активных процессов с диаграммами периодически примерно раз в минуту.
            </summary>
            <param name="obj">Экземпляр процесса с диаграммой</param>
            <param name="warningFlags">Формируемый методом набор битов с проблемами этого процесса</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.BuildDiagramNodeContentFields(ProgramSoyuz.PLM.Scripting.TaskDiagramNode,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField})">
            <summary>
            Вызывается на клиенте при отрисовке этапа диаграммы процесса для формирования списка дополнительных полей, 
            которые следует отобразить внутри прямоугольника этапа диаграммы
            </summary>
            <param name="node">Этап диаграммы, подлежащий отрисовке</param>
            <param name="fields">Формируемый список полей</param>
            <remarks>Метод вызывается по всем шаблонам подзадачи этапа в порядке от родителей к модификаторам/детям</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskTemplateCustomization.PrepareDiagramNodeVisualizationStyle(ProgramSoyuz.PLM.Scripting.TaskDiagramNode,ProgramSoyuz.PLM.Scripting.TaskDiagramNodeStyle)">
            <summary>
            Вызывается на клиенте при отрисовке этапа диаграммы процесса для формирования списка дополнительных полей, 
            которые следует отобразить внутри прямоугольника этапа диаграммы
            </summary>
            <param name="node">Этап диаграммы, подлежащий отрисовке</param>
            <param name="style">Объект с настройками визуального отображения этапа на диаграмме</param>
            <remarks>Метод вызывается по всем шаблонам подзадачи этапа в порядке от родителей к модификаторам/детям,
            затем вызывается для шаблона процесса, которому принадлежит этап в таком же порядке.</remarks>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.TaskEditorShapeStyler">
            <summary>
            Класс вычисления параметров отрисовки этапа подзадачи в редакторе
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.TaskViewerShapeStyler">
            <summary>
            Класс вычисления параметров отрисовки этапа подзадачи в просмотровщике
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.ViewerShapeStyler">
            <summary>
            Базовая реализация стилей этапа для просмотровщика
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.ViewerShapeStyler.GetBorderColor(ProgramSoyuz.DataModel.DiagramStateEnum)">
            <summary>
            Цвет границы этапа
            </summary>
            <returns>Цвет границы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.ViewerShapeStyler.GetBackgroundColor(ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Shape,ProgramSoyuz.DataModel.DiagramStateEnum)">
            <summary>
            Цвет фона этапа
            </summary>
            <returns>Цвет фона</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.ViewerShapeStyler.GetHeaderColor(ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Shape,ProgramSoyuz.DataModel.DiagramStateEnum)">
            <summary>
            Цвет заголовка этапа
            </summary>
            <returns>Цвет заголовка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.TaskViewerShapeStyler.GetBorderColor(ProgramSoyuz.DataModel.DiagramStateEnum)">
            <summary>
            Цвет границы этапа
            </summary>
            <returns>Цвет границы</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.SwitchShape">
            <summary>
            Этап типа свич
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.SwitchShape.RemoveSubConnections(ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.CaseShape)">
            <summary>
            Удаялет все линки, исходящие из указанного кейса
            </summary>
            <param name="caseShape">Кейс</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.SwitchShape.GetCaseConnections(ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.CaseShape)">
            <summary>
            Вычисляет линки, которые исходят только от указанного кейса
            </summary>
            <param name="caseShape">Кейс</param>
            <returns>Линки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.SwitchShape.GetSelector(System.Guid)">
            <summary>
            Получение селектора по гуиду именованого значения
            </summary>
            <param name="nv">Идентификатор именованого значения</param>
            <returns>Селектор или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.SwitchShape.GetSelector(ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection)">
            <summary>
            Поиск селектора по соединению, которое входит в этот селектор
            </summary>
            <param name="connection">Соединение</param>
            <returns>Селектор или null</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.SwitchShape.MinX">
            <summary>
            Минимальная X-координата среди свича и кейсов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.SwitchShape.MaxWidth">
            <summary>
            Максимальная ширина среди свича и кейсов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.SwitchShape.CaseBorderRectangle">
            <summary>
            Прямоугольник выделения свича и кейсов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.SwitchShape.DrawingRectangle">
            <summary>
            Прямоугольник для отрисовки
            </summary>
            <remarks>
            По умолчанию он совпадает с <see cref="!:BorderRectangle"/>, но в случае с свитч это не так
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.HeaderShape.GetHeaderFormat">
            <summary>
            Создает объект формата текста заголовка
            </summary>
            <returns>Объект формата текст заголовка</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImportExport.PlainObjectExporter`1">
            <summary>
            Вспомогательный класс для экспорта списка простых объектов в пакет
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator">
            <summary>
            Класс для формирования пакета конфигурации.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.m_Objects">
            <summary>
            Индекс для объектов в пакете
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.m_RestoreMode">
            <summary>
            Список идентификаторов объектов с указанным режимом импорта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.CustomData">
            <summary>
            Пользовательские данные для сохранения в пакете. Содержимое должно быть сериализуемо.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.AddObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.DataModel.ObjectPackDataBase.ObjectRestoreModeEnum)">
            <summary>
            Добавляет объект в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="restoreMode">Режим встраивания объекта при импорте в целевую систему</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.Remove(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Удаляет объект из списка экспортируемых
            </summary>
            <param name="obj">Объект для удаления из пакета</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.IsObjectAdded(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Проверяет наличие объекта в пакете (проверка по идентификатору)
            </summary>
            <param name="obj">проверяемый объект</param>
            <returns>true если объект уже есть в пакете</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.GetObject(ProgramSoyuz.DataModel.DataObjectIdentifier)">
            <summary>
            Ищет в индексе объект по идентификатору
            </summary>
            <param name="id">Идентификатор запрошенного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.GetObjects(ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Возвращает перечислитель объектов указанной сущности
            </summary>
            <param name="entity">Тип сущности запрошенных объектов</param>
            <returns>Перечислитель объектов указанной сущности</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.Contains(ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Возвращает true если в пакете есть объекты указанной указанной сущности
            </summary>
            <param name="entity">Тип сущности запрошенных объектов</param>
            <returns>true если есть</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.m_ExternalObjects">
            <summary>
            Множество объектов, используемых уже включенными в пакет.
            Эти объекты должны присутствовать в пакете в виде внешних ссылок
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.AddExternalLink(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Добавляет объект в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.RefreshExternalLinks">
            <summary>
            Рассылает события об изменениях в списке внешних ссылок
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.NotifyPacketChanged(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.PacketOperationEnum)">
            <summary>
            Рассылает событие о добавлении объекта в пакет
            </summary>
            <param name="obj">Добавленный или исключенный объект</param>
            <param name="operation">Операция, произведенная с указанным объектом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.SaveWithUI(System.String,ProgramSoyuz.DataModel.ConfigurationImportFlags)">
            <summary>
            Экспорт пакета конфигурации. Запрашивает у пользователя имя файла и сохраняет в него сформированный пакет
            </summary>
            <param name="suggestedName">Предлагаемое пользователю имя файла (может быть пустым или null)</param>
            <param name="importFlags">Флаги определяющие, какие данные объектов копировать (данные или оформление)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.Save(System.String,ProgramSoyuz.DataModel.ConfigurationImportFlags)">
            <summary>
            Сохранение пакета в файл
            </summary>
            <param name="path">Путь к файлу, в который сохраняем пакет</param>
            <param name="importFlags">Флаги определяющие, какие данные объектов копировать (данные или оформление)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.Save(System.IO.Stream,ProgramSoyuz.DataModel.ConfigurationImportFlags)">
            <summary>
            Сохранение пакета в поток
            </summary>
            <param name="stream">Поток, в который сохраняем пакет конфигурации</param>
            <param name="importFlags">Флаги определяющие, какие данные объектов копировать (данные или оформление)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.BuildPackData(ProgramSoyuz.DataModel.ConfigurationImportFlags)">
            <summary>
            Формирует набор данных пакета, готовый к сериализации
            </summary>
            <param name="importFlags">Флаги определяющие, какие данные объектов копировать (данные или оформление)</param>
            <returns>Данные пакета, готовые к сериализации</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.ObjectsCount">
            <summary>
            Общее количество объектов в пакете
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.ExternalObjects">
            <summary>
            Перечислитель объектов, используемых уже включенными в пакет.
            Эти объекты должны присутствовать в пакете в виде внешних ссылок
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.Objects">
            <summary>
            Индекс для объектов в пакете
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.RestoreMode">
            <summary>
            Список идентификаторов объектов с указанным режимом импорта
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.PacketChanged">
            <summary>
            Событие о добавлении объекта в пакет
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.PacketOperationEnum">
            <summary>
            Набор вариантов изменения пакета
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackCreator.PacketChangedEventHandler">
            <summary>
            Сигнатура обработчика события об изменении пакета
            </summary>
            <param name="obj">Добавленный или исключенный объект</param>
            <param name="operation">Операция, произведенная с указанным объектом</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.PlainObjectExporter`1.m_TargetObjects">
            <summary>
            Список объектов, добавляемых в пакет целиком
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.PlainObjectExporter`1.Add(`0)">
            <summary>
            Добавляет в пакет указанный объект
            </summary>
            <param name="obj">Добавляемый объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.PlainObjectExporter`1.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Добавляет в пакет указанные объекты
            </summary>
            <param name="objects">Добавляемые объекты</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.PlainObjectExporter`1.AddTarget(`0,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Добавляет объекты в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="additionQueue">Очередь для объектов на добавление в пакет</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.PlainObjectExporter`1.AddGenericObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Добавляет объекты в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="additionQueue">Очередь для объектов на добавление в пакет</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.PlainObjectExporter`1.AddObject(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Добавляет объект в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <returns>Возвращает true, если объект добавлен в пакет, false, если добавлен только линк</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.PlainObjectExporter`1.TargetObjects">
            <summary>
            Список ролей, добавляемых в пакет целиком
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributeDefVirtual">
            <summary>
            Класс для виртуальных определений атрибутов, используемых объектами
            с виртуальными доп атрибутами
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributeDef">
            <summary>
              Определение атрибута.
              Определение атрибута существует в контексте шаблона. Обозначает интерфейсную конструкцию для
              создания и редактирования атрибута объекта, привязанного к этому шаблону. Помимо этого в определении
              атрибута определяются различные правила работы с атрибутом.
            </summary>
            <remarks>
              Привязка реального атрибута объекта к определению этого атрибута "мягкая"
              осуществляется по ключу <see cref="P:ProgramSoyuz.PLM.Scripting.AttributeDef.NameKey"/>.
            </remarks>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.m_pData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.PrepareModification">
            <summary>
              Подготовка объекта к внесению изменений
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.m_pRealObject">
            <summary>
              Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
              При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.CreateWrapper(ProgramSoyuz.DataModel.AttributeDefBase,System.Boolean)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "def">Реальный объект</param>
            <param name = "original">false, если предполагается возможность редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
              Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.Uninitialized">
            <summary>
              Значение для обозначения неицициализированной ссылки на предшественника по наследованию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.#ctor">
            <summary>
              Конструктор для значения Uninitialized
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.#ctor(ProgramSoyuz.DataModel.AttributeDefBase,System.Boolean)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "attributeDef">Реальный объект</param>
            <param name = "original">false, если предполагается возможность редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.#ctor(ProgramSoyuz.PLM.Scripting.Template,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "template">Шаблон к которому относится объект</param>
            <param name = "nameKey">Программное название объекта</param>
            <param name = "dataType">Тип данных атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.#ctor(ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.MakeUnsavedCopy(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Создает новый объект - несохраненную копию данного
            </summary>
            <param name="newParent">Новый родительский шаблон, для которого делается копия объекта</param>
            <returns>Копию объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
              Инициализирует этот объект по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
              Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name = "objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.IncludeInDifferencesReport(System.String)">
            <summary>
            Возвращает true если свойство следует включить в отчет об изменениях
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.IdAssigned(System.UInt32)">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name = "id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.SaveCompleted">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
              что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.MoveTo(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Перенос объекта к другому родителю.
            </summary>
            <param name = "newParent">Новый родительский объект для закладки</param>
            <remarks>
              Происходит только перенос к другому родителю. 
              Какого-либо сохранения общих свойств этим методом не осуществляется
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.DoCancelChanges(System.Boolean)">
            <summary>
              Отмена измений, сделанных в объекте
            </summary>
            <param name = "sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
              Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name = "range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.CheckWrappedObject">
            <summary>
              Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
              Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.GetNameUILocalizedNonModified(System.String)">
            <summary>
              Пользовательское название объекта (без применения модификаторов) (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.GetNotesLocalizedNonModified(System.String)">
            <summary>
              Пользовательские заметки об атрибуте (всплывающая подсказка) (без применения модификаторов) (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.GetDisplayParams``1">
            <summary>
              Доступ к десериализованному набору параметров отображения атрибута
            </summary>
            <returns>Кешированный объект с набором параметров</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.GetReadOnlyInUIForObject(ProgramSoyuz.PLM.Scripting.IAttributableObject)">
            <summary>
              Вычисляет является ли данный атрибут доступным только для чтения для данного объекта (или элемента коллекции)
            </summary>
            <param name = "obj">Отображаемый в UI объект </param>
            <returns>true означает только для чтения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.GetHiddenInUIForObject(ProgramSoyuz.PLM.Scripting.IAttributableObject)">
            <summary>
              Вычисляет является ли данный атрибут скрытым для данного объекта (или элемента коллекции) в текущем окружениии
            </summary>
            <param name = "obj">Отображаемый в UI объект </param>
            <returns>true означает только для чтения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.CanBeSearched">
            <summary>
            Возвращает true если этот атрибут может использоваться в поисковых запросах
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.CanBeSearched(System.Boolean@)">
            <summary>
            Возвращает true если этот атрибут может использоваться в поисковых запросах
            </summary>
            <param name="indexed">На выходе true если атрибут индексирован</param>
            <returns>true если атрибут пригоден доля поиска</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.m_Predecessor">
            <summary>
              Предшественник по наследованию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.IsValidLinkTarget(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject,System.String@)">
            <summary>
              Проверяет, соответствует ли указанный объект параметрам, заданным в определении атрибута
              (тип сущности, шаблон, наследование и пр.)
            </summary>
            <param name = "target">Проверяемый объект</param>
            <param name = "reason">Сообщение об ошибке в случае несоответствия</param>
            <returns>true, если объект годится</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.PrepareForAnotherKind(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Сбрасывает неактуальные атрибуты после создания копии объекта для шаблона другого типа.
            Вызывается в коде сеттера родительского шаблона
            </summary>
            <param name="oldKind">Старый тип шаблона</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.MergeWith(ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Склеивает текущий создаваемый объект с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.ToString">
            <summary>
              Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.DebuggerDisplayString">
            <summary>
              Формирует представление объекта для дебаггера
            </summary>
            <returns>Строка, которую отображает дебаггер для этого объекта</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.Entity">
            <summary>
              Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ChangedData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.RealObject">
            <summary>
              Доступ к "реальному" объекту.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.WrappedObject">
            <summary>
              Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsDirtySelf">
            <summary>
              Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ParentConfigurationId">
            <summary>
              Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ParentConfigurationInEffect">
            <summary>
              Конфигурация, к которой относится этот объект с учётом возможного наследования
              конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.NameKey">
            <summary>
              Программное название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.NameUILocalized">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.NameUILocalizedNonModified">
            <summary>
              Пользовательское название объекта (без применения модификаторов) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.NameUI">
            <summary>
              Пользовательское название атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.NameUINonModified">
            <summary>
              Пользовательское название атрибута (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.NotesLocalized">
            <summary>
             Пользовательские заметки об атрибуте (всплывающая подсказка) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.NotesLocalizedNonModified">
            <summary>
              Пользовательские заметки об атрибуте (всплывающая подсказка) (без применения модификаторов) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.Notes">
            <summary>
            Пользовательские заметки об атрибуте (всплывающая подсказка)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.NotesNonModified">
            <summary>
            Пользовательские заметки об атрибуте (всплывающая подсказка) (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.Params">
            <summary>
              Пользовательские дополнительные параметры закладки, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ParamsNonModified">
            <summary>
              Пользовательские дополнительные параметры закладки, возможно определяющие программное 
            поведение (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.Tags">
            <summary>
              Строка с тэгами атрибута, для использования логикой конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.TagsNonModified">
            <summary>
              Строка с тэгами атрибута, для использования логикой конфигурации (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.LayoutDef">
            <summary>
              XML раскладка атрибута на форме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.LayoutDefNonModified">
            <summary>
              XML раскладка атрибута на форме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.LayoutFlags">
            <summary>
             Набор флагов для опций размещения атрибута на форме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.LayoutFlagsNonModified">
            <summary>
             Набор флагов для опций размещения атрибута на форме (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.PageNameKey">
            <summary>
              Программное название страницы (ключ страницы), к которой относится этот атрибут
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.PageNameKeyNonModified">
            <summary>
              Программное название страницы (ключ страницы), к которой относится этот атрибут (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.UICommandNameKey">
            <summary>
              Программное название ассоциированной UI команды, связанной с этим атрибутом (не используется)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DataType">
            <summary>
              Тип данных атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DataTypeNonModified">
            <summary>
              Тип данных атрибута (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DisplayType">
            <summary>
              Тип интерфейсного элемента для атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DisplayTypeNonModified">
            <summary>
              Тип интерфейсного элемента для атрибута (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DisplaySizeType">
            <summary>
              Тип способа настройки размера контрола
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DisplaySizeTypeNonModified">
            <summary>
              Тип способа настройки размера контрола (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DisplayHeight">
            <summary>
              Параметр для настройки размера контрола
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DisplayHeightNonModified">
            <summary>
              Параметр для настройки размера контрола (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DisplayParams">
            <summary>
              Дополнительное поле для параметров отображения интерфейса атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DisplayParamsNonModified">
            <summary>
              Дополнительное поле для параметров отображения интерфейса атрибута (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ColumnSizeMode">
            <summary>
              Режим автоустановки размера колонки в гриде
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ColumnSizeModeNonModified">
            <summary>
              Режим автоустановки размера колонки в гриде (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ColumnWidth">
            <summary>
              Ширина колонки в гриде
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ColumnWidthNonModified">
            <summary>
              Ширина колонки в гриде (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ColumnMinimumWidth">
            <summary>
              Минимальная ширина колонки в гриде
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ColumnMinimumWidthNonModified">
            <summary>
              Минимальная ширина колонки в гриде (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ColumnFillWeight">
            <summary>
              Вес колонки в гриде по ширине
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ColumnFillWeightNonModified">
            <summary>
              Вес колонки в гриде по ширине (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.SubItemContainerKey">
            <summary>
              Ключ контейнера, использующийся в качестве фильтра при выборе значения одиночной ссылки на информационный объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.SubItemContainerKeyNonModified">
            <summary>
              Ключ контейнера, использующийся в качестве фильтра при выборе значения одиночной ссылки 
            на информационный объект (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.AutoCalculationMode">
            <summary>
              Режим автовычисления атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.AutoCalculationModeNonModified">
            <summary>
              Режим автовычисления атрибута (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsAllowOverwriteCalculatedValue">
            <summary>
            true если вычисленное значение может быть перекрыто "ручным"
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsAllowOverwriteCalculatedValueNonModified">
            <summary>
            true если вычисленное значение может быть перекрыто "ручным" (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsCalculatedPersistent">
            <summary>
            true если вычисленное значение хранится в базе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsCalculatedPersistentNonModified">
            <summary>
            true если вычисленное значение хранится в базе (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsCheckOnObjectLoad">
            <summary>
            true если при подъеме объекта в серверный кеш следует перевычислить значение и обновить его в базе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsCheckOnObjectLoadNonModified">
            <summary>
            true если при подъеме объекта в серверный кеш следует перевычислить значение и обновить его в базе (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.AutoCalculationKind">
            <summary>
            Способ вычисления атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.AutoCalculationKindNonModified">
            <summary>
            Способ вычисления атрибута (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.CalculationTime">
            <summary>
            Время первого вычисления атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.CalculationTimeNonModified">
            <summary>
            Время первого вычисления атрибута (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.PersistanceTime">
            <summary>
            Время пересохранения атрибута в базу
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.PersistanceTimeNonModified">
            <summary>
            Время пересохранения атрибута в базу (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.AutoCalculationRule">
            <summary>
              Идентификатор правила автовычисления атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.AutoCalculationRuleNonModified">
            <summary>
              Идентификатор правила автовычисления атрибута (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.AutoCalculationRuleKey">
            <summary>
              Текстовое название для обработки атрибута внешними расширениями
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.AutoCalculationRuleKeyNonModified">
            <summary>
              Текстовое название для обработки атрибута внешними расширениями (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.AutoCalculationParams">
            <summary>
              Параметры для автовычисления атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.AutoCalculationParamsNonModified">
            <summary>
              Параметры для автовычисления атрибута (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.SearchableInUIMode">
            <summary>
            Режим использования атрибута в поиске
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.SearchableInUIModeNonModified">
            <summary>
            Режим использования атрибута в поиске (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.AutoRefreshInUIInterval">
            <summary>
            Интервал в секундах для автоматического обновления вычисляемых атрибутов при показе в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.AutoRefreshInUIIntervalNonModified">
            <summary>
            Интервал в секундах для автоматического обновления вычисляемых атрибутов 
            при показе в UI (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.RecalculateInterval">
            <summary>
            Интервал в секундах для автоматического обновления вычисляемых атрибутов при показе в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.RecalculateIntervalNonModified">
            <summary>
            Интервал в секундах для автоматического обновления вычисляемых атрибутов 
            при показе в UI (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.GroupKey">
            <summary>
              Строка, определяющая порядок атрибутов, используется для сортировки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.GroupKeyNonModified">
            <summary>
              Строка, определяющая порядок атрибутов, используется для сортировки (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ProgramSoyuz#PLM#Scripting#IObjectWithCustomizationCode#CustomizationCode">
            <summary>
              Код скрипта кастомизации объектов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.CustomizationCode">
            <summary>
              Код скрипта валидации и/или вычисления атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.HasCustomizationCode">
            <summary>
              Возвращает true если у raw объекта есть код кастомизации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsErasedByInheritance">
            <summary>
              Возвращает true если этот объект является удалённой заглушкой
              для исключения предшественника из иерархии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.FlagsSelf">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.FlagsNonModified">
            <summary>
              Набор битовых флагов объекта (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.UpdateRelatedAttributes">
            <summary>
              Если флаг установлен во время операции сохранения, и производится
              изменение ключа этого определения атрибута, то автоматически производится и 
              замена ключей у атрибутов, порожденных по этому определению
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.RecalculatePersistedAttributes">
            <summary>
            Если флаг установлен, то все объекты использующие этот атрибут ставятся в очередь на его перевычисление
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsSimpleDataType">
            <summary>
              Возвращает true для "простых" типов данных
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsRequired">
            <summary>
              Возвращает true если у определения атрибута установлен флаг обязательности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsRequiredSafely">
            <summary>
             Возвращает true если обязательность атрибута является мягкой (сохранять без него можно, но отображается логическая проблема)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsIteratable">
            <summary>
              Возвращает true если у определения атрибута установлен флаг итерируемости
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsIteratableWithRevision">
            <summary>
              Возвращает true если у определения атрибута установлен флаг итерируемости с созданием новой ревизии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsIdentityAttribute">
            <summary>
              Возвращает true для атрибутов идентифицирующих объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsLabelHidden">
            <summary>
              Возвращает true если метку показывать не требуется
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsShowButton">
            <summary>
              Возвращает true если следует показать кнопку для этого атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsReadOnlyInUI">
            <summary>
              Возвращает true если для пользователя атрибут должен выглядеть как доступный только для чтения.
              Скрипт с таким атрибутов работает как с обычным.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsReadOnly">
            <summary>
            Возвращает true в случае если установлено какое-либо правило вычисления атрибута и
            не установлен флаг, разрешающий ввод ручных значений поверх вычисленных,
            а так же если установлен флаг "только для чтения в пользовательском интерфейсе"
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsWriteProhibited">
            <summary>
              Возвращает true в случае если установлено какое-либо правило вычисления атрибута и
              не установлен флаг, разрешающий ввод ручных значений поверх вычисленных,
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsFixedWidth">
            <summary>
              Возвращает true если ширина колонки в гриде для этого атрибута фиксирована
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsInitiallyHidden">
            <summary>
              Возвращает true если колонка в гриде для этого атрибута изначально скрыта от показа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ColumnVisibility">
            <summary>
            Режим отображения колонки атрибута в списках
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ColumnVisibilityNonModified">
            <summary>
            Режим отображения колонки атрибута в списках (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsAuxilary">
            <summary>
              Вспомогательный атрибут. В базе такие не сохраняются, в коде серверного сохранения они игнорируются.
              Предназначены для настройки отображения соседних атрибутов (например отчеты)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsAuxilaryInheritsFormReadOnly">
            <summary>
            Для вспомогательного атрибута означает, что атрибут следует статусу ридонли формы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsSkipOnCopy">
            <summary>
            Атрибут пропускается при операциях поатрибутного копирования объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsStatic">
            <summary>
            Наличие флага означает, что атрибут является статическим (собственный атрибут прототипа)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsHidden">
            <summary>
            Наличие флага означает, что атрибут скрыт в объектах по этому шаблону (статический атрибут при этом остается видимым в прототипе)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsLogicalSort">
            <summary>
            Возвращает true если объекты этого шаблона следует сортировать с учётом выделения чисел в названии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsObjectCloseParam">
            <summary>
            Наличие флага означает, что атрибут является параметром закрытия объекта (WorkItem)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsIndexed">
            <summary>
              Наличие флага означает, что значения атрибута индексируются
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsIndexedAlways">
            <summary>
              Возвращает true если тиа данных в комбинации с жесткостью ссылки подлежит обязательному индексированию в базе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsSelectTargetOnServer">
            <summary>
              Наличие флага означает что диалог выбора ИО используется в варианте серверного поиска.
              Применяется для атрибутов - ссылок на ИО и множеств ИО
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsSafeLink">
            <summary>
              Наличие флага означает, что ссылка хранится как обычное целое число без проверки целостности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsFixedTargetRevision">
            <summary>
            Атрибут-ссылка на ИО указывает на фиксированную ревизию объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsRequisite">
            <summary>
              Возвращает true если атрибут относится к реквизитной части объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsSubItemTemplateIncludesInherited">
            <summary>
              Возвращает true если разрешено использование дочерних шаблонов для ссылочных атрибутов с ограничением на шаблон объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsLinkToClassTemplate">
            <summary>
              Наличие флага означает, что присвоение класса модифицирует набор атрибутов экземпляра объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsClassTemplateDefinition">
            <summary>
            Возвращает true, если этот атрибут определяет доп шаблон объекта, модифицирующий состав его атрибутов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DateCreated">
            <summary>
              Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.CreatedByUser">
            <summary>
              Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DateModified">
            <summary>
              Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ModifiedByUser">
            <summary>
              Пользователь, изменивший этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.UIChangesCounter">
            <summary>
              Суммарный счетчик изменений атрибута, влияющих на отображение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.Icon">
            <summary>
              Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IconNonModified">
            <summary>
              Иконка, установленная для этого объекта (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DisplayIcon">
            <summary>
              Иконка, показываемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.Parent">
            <summary>
              Доступ к родительскому шаблону
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ParentMaster">
            <summary>
              Родительский шаблон (или его мастер, если родитель является модификатором)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IsSubItemTemplateDefined">
            <summary>
              True если определен шаблон для подчиненных элементов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.SubItemTemplate">
            <summary>
              Доступ к шаблону для подчиненных элементов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.SubItemTemplateNonModified">
            <summary>
              Доступ к шаблону для подчиненных элементов (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.SubItemNamedValue">
            <summary>
              Именованное значение, используемое в качестве корня для списка возможных значений атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.SubItemNamedValueNonModified">
            <summary>
              Именованное значение, используемое в качестве корня для списка возможных 
            значений атрибута (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.UniquenessSpace">
            <summary>
              Пространство уникальности для значений атрибутов по этому определению
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.UniquenessSpaceNonModified">
            <summary>
              Пространство уникальности для значений атрибутов по этому определению (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DefaultValue">
            <summary>
              Значение по умолчанию для атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.DefaultValueNonModified">
            <summary>
              Значение по умолчанию для атрибута (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.Predecessor">
            <summary>
              Предшественник по наследованию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.ModifiedClone">
            <summary>
              Модифицированная версия этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.IdentityName">
            <summary>
              Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData">
            <summary>
              Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.PrepareDefaults">
            <summary>
            Установка значений по умолчанию для новых объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.NameKey">
            <summary>
              Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.NameUI">
            <summary>
              Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.Notes">
            <summary>
              Пользовательские заметки об объекте (всплывающая подсказка)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.Params">
            <summary>
              Пользовательские дополнительные параметры объекта, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.Tags">
            <summary>
              Строка с тэгами атрибута, для использования логикой конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.PageNameKey">
            <summary>
              Программное название страницы (ключ страницы), к которой относится этот атрибут
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.UICommandNameKey">
            <summary>
              Программное название ассоциированной UI команды, связанной с этим атрибутом
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.DataType">
            <summary>
              Тип данных атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.DisplayType">
            <summary>
              Тип интерфейсного элемента для атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.DisplaySizeType">
            <summary>
              Тип способа настройки размера контрола
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.DisplayHeight">
            <summary>
              Параметр для настройки размера контрола
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.DisplayParams">
            <summary>
              Дополнительное поле для параметров отображения интерфейса атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.ColumnSizeMode">
            <summary>
              Режим автоустановки размера колонки в гриде
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.ColumnWidth">
            <summary>
              Ширина колонки в гриде
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.ColumnMinimumWidth">
            <summary>
              Минимальная ширина колонки в гриде
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.ColumnFillWeight">
            <summary>
              Вес колонки в гриде по ширине
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.m_SubItemTemplate">
            <summary>
              Шаблон, используемый для подчиненных элементов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.SubItemContainerKey">
            <summary>
              Ключ контейнера, использующийся в качестве фильтра при выборе значения одиночной ссылки на информационный объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.m_SubItemNamedValue">
            <summary>
              Именованное значение, используемое в качестве корня для списка возможных значений атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.m_DefaultObjectValue">
            <summary>
              Скриптовой объект - значение ссылочных атрибутов по умолчанию
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.m_DefaultValue">
            <summary>
              Значение по умолчанию для атрибута (строки, числа)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.AutoCalculationMode">
            <summary>
              Идентификатор правила автовычисления атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.AutoCalculationRuleKey">
            <summary>
              Текстовое название для обработки атрибута внешними расширениями
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.AutoCalculationParams">
            <summary>
              Параметры для автовычисления атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.SearchableInUIMode">
            <summary>
            Режим использования атрибута в поиске
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.AutoRefreshInUIInterval">
            <summary>
            Интервал в секундах для автоматического обновления вычисляемых атрибутов при показе в UI
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.RecalculateInterval">
            <summary>
            Интервал в секундах для автоматического перевычисления вычисляемых при необходимости атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.GroupKey">
            <summary>
              Строка, определяющая порядок атрибута на закладке, используется для сортировки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.CustomizationCode">
            <summary>
              Код скрипта валидации и/или вычисления атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.OriginalFlags">
            <summary>
              Оригинальный набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.ColumnVisibility">
            <summary>
              Режим отображения колонки атрибута в списках
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.m_Parent">
            <summary>
              Родительский шаблон, к которому относится закладка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.m_Icon">
            <summary>
              Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.m_UniquenessSpace">
            <summary>
              Пространство уникальности для значений атрибутов по этому определению
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.m_ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.LayoutDef">
            <summary>
            XML раскладка атрибута на форме
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.LayoutFlags">
            <summary>
            Набор флагов для опций размещения атрибута на форме
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.UpdateRelatedAttributes">
            <summary>
              Если флаг установлен во время операции сохранения, и производится
              изменение ключа и/или признака индексирования этого определения атрибута, то автоматически производится и 
              замена ключей/признака индексирования у атрибутов, порожденных по этому определению
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.RecalculatePersistedAttributes">
            <summary>
            Если флаг установлен, то все объекты использующие этот атрибут ставятся в очередь на его перевычисление
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.WriteTo(ProgramSoyuz.DataModel.AttributeDefBase.Body)">
            <summary>
              Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name = "pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.MakeCopy(ProgramSoyuz.DataModel.AttributeDefBase.Body)">
            <summary>
              Создает копию этого класса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.GetChangesLevel(System.Type)">
            <summary>
            Определяет уровень изменений, накопленных в этом объекте: данные или скин
            </summary>
            <param name="dataType">Тип данных для сохранения объекта в пакете, производный от <see cref="T:ProgramSoyuz.DataModel.ObjectPackDataBase"/></param>
            <returns>Флаги, характеризующие имеющиеся изменения</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.SubItemTemplate">
            <summary>
              Шаблон, используемый для подчиненных элементов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.SubItemNamedValue">
            <summary>
              Именованное значение, используемое в качестве корня для списка возможных значений атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.DefaultObjectValue">
            <summary>
              Скриптовой объект - значение ссылочных атрибутов по умолчанию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.DefaultValue">
            <summary>
              Значение по умолчанию для атрибута (строки, числа, даты, время)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.Parent">
            <summary>
              Родительский шаблон
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.Icon">
            <summary>
              Иконка для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.UniquenessSpace">
            <summary>
              Пространство уникальности для значений атрибутов по этому определению
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeDef.CreationData.ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributeDef.DistinctKeyEqualityComparer">
            <summary>
              Сравнение объектов по ключевым свойствам
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDef.DistinctKeyEqualityComparer.Default">
            <summary>
              Сравнивающий объект для реализации словаря различных по ключевым свойствам объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefVirtual.#ctor(ProgramSoyuz.PLM.Scripting.Template,System.String,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
              Конструктор нового объекта
            </summary>
            <param name = "template">Шаблон к которому относится определение атрибута</param>
            <param name="nameKey">Программное название объекта</param>
            <param name="nameUI">Пользовательское название атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ProxyServer">
            <summary>
            Вспомогательный сервер.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.CreateWrapper(ProgramSoyuz.DataModel.ProxyServerBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="proxyServer">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.#ctor(ProgramSoyuz.DataModel.ProxyServerBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="ProxyServer">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer._connectionPoints">
            <summary>
            Список вычисленных точек соединения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.GetConnectionPoints">
            <summary>
            Разбор строки вида "1.2.3.4:1234, 5.6.7.8:1111" в список хостов с портами
            </summary>
            <returns>Список IP адресов</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.NameKey">
            <summary>
            Программное название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.NameUI">
            <summary>
            Пользовательское название пространства уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.Notes">
            <summary>
            Пользовательские заметки об иконке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.Params">
            <summary>
            Пользовательские дополнительные параметры закладки, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.GroupKey">
            <summary>
            Строка, определяющая очередность файловых серверов при выборе их для файловой операции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoints">
            <summary>
            Адреса для поключения клиентов "IP:Port, IP:Port"
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.IsRunning">
            <summary>
            Возвращает true если файловый сервер работает
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.IsWorkflowProcessor">
            <summary>
            Флаг установлен, если этот вспомогательный сервер является фоновым обработчиком WF процессов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.IsProxyDataCache">
            <summary>
            Флаг установлен, если этот вспомогательный сервер является кеширующим сервером для операций чтения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.GUID">
            <summary>
            Глобально-уникальный идентификатор хранилища
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.Icon">
            <summary>
            Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.DisplayIcon">
            <summary>
            Иконка, показываемая в UI
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ProxyServer.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.CreationData.Params">
            <summary>
            Пользовательские дополнительные параметры объекта, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.CreationData.GroupKey">
            <summary>
            Строка, определяющая очередность файловых серверов при выборе их для файловой операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.CreationData.m_Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.CreationData.WriteTo(ProgramSoyuz.DataModel.ProxyServerBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.CreationData.Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint">
            <summary>
            Точка соединения с файловым сервером
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint._proxyServer">
            <summary>
            ФС владелец точки соединения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint._host">
            <summary>
            Имя или адрес хоста
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint._port">
            <summary>
            Номер порта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint._customData">
            <summary>
            Дополнительные данные из файла конфигурации ФС
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint._ipAddress">
            <summary>
            IP адрес
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint.#ctor(ProgramSoyuz.PLM.Scripting.ProxyServer,System.String,System.Int32,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="proxyServer">Файловый сервер</param>
            <param name="host">Имя или адрес порта</param>
            <param name="port">Номер порта</param>
            <param name="customData">Дополнительные данные из файла конфиуграции ФС</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint._resolveFromDns">
            <summary>
            Список точек соединения по DNS запросу
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint.ResolveFromDNS(System.Boolean)">
            <summary>
            Возвращает список IP адресов по результатам DNS запроса по <see cref="P:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint.Host"/>
            </summary>
            <param name="requery">true если требуется перезапросить DNS, иначе возвращется кешированное значение, если есть</param>
            <returns>Список IP адресов, как их вернул DNS запрос</returns>
            <remarks>Если ТС определяет конкретный IP адрес, то никаких запросов к DNS не происходит, и 
            возвращается массив из одного блока IP:порт</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint.ProxyServer">
            <summary>
            ФС владелец точки соединения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint.Host">
            <summary>
            Имя или адрес хоста
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint.Port">
            <summary>
            Номер порта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint.IpAddress">
            <summary>
            IP адрес, если он явно определён этой точкой.
            Если задано имя хоста, то null. В этом случае следует использовать метод <see cref="M:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint.ResolveFromDNS(System.Boolean)"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint.IsIPDefined">
            <summary>
             Возвращает true если точка соединения определяет конкретный IP адрес
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ProxyServer.ConnectionPoint.CustomData">
            <summary>
            Дополнительные данные из файла конфигурации ФС
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Strings.SysStrings">
            <summary>
              Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Strings.SysStrings.ResourceManager">
            <summary>
              Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Strings.SysStrings.Culture">
            <summary>
              Перезаписывает свойство CurrentUICulture текущего потока для всех
              обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Strings.SysStrings.OperationEnum_Create">
            <summary>
              Ищет локализованную строку, похожую на Создание.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Strings.SysStrings.OperationEnum_Erase">
            <summary>
              Ищет локализованную строку, похожую на Удаление.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Strings.SysStrings.OperationEnum_Modify">
            <summary>
              Ищет локализованную строку, похожую на Изменение.
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper">
            <summary>
            Интерфейс взаимодействия с модулем поддержки автоматизации MSVS
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper.CreateInstance">
            <summary>
            Создает новый экземпляр Visual Studio
            </summary>
            <returns>true, если все получилось</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper.AttachToInstance(System.String)">
            <summary>
            Создает или подключается к существующему экземпляр Visual Studio, который редактирует кастомизацию
            </summary>
            <returns>true, если все получилось</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper.CreateSolution(System.String,System.String@,System.String[])">
            <summary>
            Создает новый солюшион для внешней сборки кода кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper.CheckSolution(System.String,System.String@,System.String[])">
            <summary>
            Проверяет и обновляет при необходимости солюшион для внешней сборки кода кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper.OpenSolutionItem(System.String,System.String)">
            <summary>
            Открывает указанный файл в солюшионе для внешней сборки
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper.CheckSourceFiles(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Action{System.String,System.Int32,System.Int32})">
            <summary>
            Проверяет и обновляет при необходимости файлы солюшиона для внешней сборки кода кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper.ReleaseInstanceToUser">
            <summary>
            Переводит экземпляр студии в режим подконтрольный пользователю
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper.ForgetInstance">
            <summary>
            Освобождает экземпляр студии, отдавая его пользователю
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper.BuildSolution">
            <summary>
            Инициирует сборку. Возвращает true, если сборка произошла без ошибок
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper.GetSourceFiles">
            <summary>
            Формирует список файлов-исходников, присутствующих в солюшионе
            </summary>
            <returns>Список путей файлов</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper.IsAttached">
            <summary>
            Возвращает true если соединение со студией установлено
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IVisualStudioAutomationHelper.MSDevVersion">
            <summary>
            Версия студии для использования ("9.0", "10.0", и т.д.)
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IVisualStudioFileHelper">
            <summary>
            Интерфейс взаимодействия с модулем генерации файла проекта MSVS
            Используется, если установлена Express версия студии, которая не поддерживает автоматизацию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVisualStudioFileHelper.CreateSolution(System.String,System.String@,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Создает новый солюшион для внешней сборки кода кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.CanCreate(ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},System.String@)">
            <summary>
            Вызывает обработчик CanCreate из кода кастомизации
            </summary>
            <param name="template">Шаблон задачи для которой вызываем проверку создания</param>
            <param name="selectedObjects">Объекты, по которым производится проверка возможности запуска задачи</param>
            <param name="grayTooltip">На выходе содержит сообщение для показа пользователю, с подсказкой почему создание не возможно</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.OnCreate(ProgramSoyuz.PLM.Scripting.Task,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Вызывает обработчик OnCreate из кода кастомизации
            </summary>
            <param name="obj">Задача для которой вызван периодический метод</param>
            <param name="selectedObjects">Объекты, по которым создается задача</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.OnTimeout(ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Вызывает обработчик OnTimeout из кода кастомизации
            </summary>
            <param name="obj">Задача для которой вызван периодический метод</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.OnChildTaskCompleted(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Вызывает обработчик OnChildTaskCompleted из кода кастомизации
            </summary>
            <param name="obj">Родительская задача</param>
            <param name="childTask">Завершенная дочерняя задача</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.OnWorkItemCompleted(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.WorkItem)">
            <summary>
            Вызывает обработчик OnWorkItemCompleted из кода кастомизации
            </summary>
            <param name="obj">Родительская задача</param>
            <param name="workItem">Завершенная нагрузка, порожденная указанной задачей</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.OnBeforeWorkItemCompleted(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.WorkItem)">
            <summary>
            Вызывает обработчик OnBeforeWorkItemCompleted из кода кастомизации
            </summary>
            <param name="obj">Родительская задача</param>
            <param name="workItem">Завершаемая нагрузка, порожденная указанной задачей</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.UpdateNodeTransitionState(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.WorkItem,ProgramSoyuz.PLM.Scripting.NamedValue,ProgramSoyuz.PLM.Scripting.TaskDiagramNode,ProgramSoyuz.Common.GuiLib.ICmdUI2)">
            <summary>
            Вызывается на клиенте для настройки меню переходов
            </summary>
            <param name="obj">Родительская задача</param>
            <param name="workItem">Завершаемая нагрузка, порожденная указанной задачей</param>
            <param name="closeStatus">Именованное значение (обычно виртуальное), определяющее вариант завершения нагрузки.
            Обычно в его значении содержится в строковой форме Guid перехода или выбранного для перехода этапа</param>
            <param name="targetNode">Целевой этап диаграммы, через контекстное меню которого пользователь выбирает переход.
            При обычном завершении этапа - null</param>
            <param name="cmdUI">Интерфейс доступа к управляющему элементу интерфейса. Его свойство Enabled и прочие могут быть настроены этим методом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.OnDiagramNodeActivated(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Вызывает обработчик OnDiagramNodeActivated из кода кастомизации
            </summary>
            <param name="obj">Задача, чья диаграмма продвинулась</param>
            <param name="node">Этап диаграммы, ставший активным</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.OnDiagramNodePassed(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Вызывает обработчик OnDiagramNodePassed из кода кастомизации
            </summary>
            <param name="obj">Задача, чья диаграмма продвинулась</param>
            <param name="node">Завершенный этап диаграммы</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.ResolveOutcomingLinks(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.TaskDiagramNode,ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Вызывает обработчик ResolveOutcomingLinks из кода кастомизации
            </summary>
            <param name="obj">Завершенная подзадача этапа</param>
            <param name="node">Этап диаграммы, для которой формируем дальнейший путь выполнения</param>
            <param name="subTask"></param>
            <returns>Перечислитель (фильтрованный) исходящих связей этапа <paramref name="node"/></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.OnDiagramDeadlock(ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Вызывает обработчик OnDiagramDeadlock из кода кастомизации
            </summary>
            <param name="obj">Экземпляр процесса с диаграммой</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.CalcWorkFlowWarnings(ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Вызывает обработчик CalcProblemFlags из кода кастомизации
            </summary>
            <param name="obj">Экземпляр процесса с диаграммой</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.BuildDiagramNodeContentFields(ProgramSoyuz.PLM.Scripting.TaskDiagramNode,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField})">
            <summary>
            Вызывает обработчик BuildDiagramNodeContentFields из кода кастомизации
            </summary>
            <param name="node">Этап диаграммы</param>
            <param name="fields">Формируемый список полей</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeTaskTemplate.PrepareDiagramNodeVisualizationStyle(ProgramSoyuz.PLM.Scripting.TaskDiagramNode,ProgramSoyuz.PLM.Scripting.TaskDiagramNodeStyle)">
            <summary>
            Вызывает обработчик PrepareDiagramNodeVisualizationStyle из кода кастомизации
            </summary>
            <param name="node">Этап диаграммы</param>
            <param name="style">Объект с настройками визуального отображения этапа на диаграмме</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager._locker">
            <summary>
            Объект-блокировщик для доступа к кешу кастомизаторов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager._childrenToParentsTemplateCustomizators">
            <summary>
            Кеш нисходящих (от детей к родителям) кастомизаторов шаблонов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager._parentsToChildrenTemplateCustomizators">
            <summary>
            Кеш восходящих (от родителей к детям) кастомизаторов шаблонов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager._singleTemplateCustomizators">
            <summary>
            Кеш кастомизаторов одиночных шаблонов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager._attributeDefCustomizators">
            <summary>
            Кеш кастомизаторов определений атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager._accessRuleCustomizators">
            <summary>
            Кеш кастомизаторов правил доступа
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager.DropCustomizationCache">
            <summary>
            Сброс кеша кастомизаторов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager.GetTemplateCustomizators(ProgramSoyuz.PLM.Scripting.IAttributableObject)">
            <summary>
            Перечисляет доступные кастомизаторы для шаблонов указанного объекта в порядке от родителей к детям
            </summary>
            <param name="obj">Объект для которого достаем кастомизаторы</param>
            <returns>Перечисление доступных кастомизаторов шаблонов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager.GetTemplateCustomizators(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.Boolean)">
            <summary>
            Перечисляет доступные кастомизаторы для шаблонов указанного объекта
            </summary>
            <param name="obj">Объект для которого достаем кастомизаторы</param>
            <param name="childrenToParents">true, если перечисление должно происходить от детей к родителям</param>
            <returns>Перечисление доступных кастомизаторов шаблонов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager.GetTemplateCustomizators(ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Перечисляет доступные кастомизаторы для данного шаблона без наследования по родителям
            </summary>
            <param name="template">Шаблон, для которого формируется список кастомизаторов</param>
            <param name="childrenToParents">true, если перечисление должно происходить от детей к родителям</param>
            <returns>Перечисление доступных кастомизаторов шаблонов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager.GetSingleTemplateCustomizators(ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Перечисляет доступные кастомизаторы для данного шаблона и модификаторов без наследования по родителям
            </summary>
            <param name="template">Шаблон, для которого формируется список кастомизаторов</param>
            <param name="modificatorsFirst">true, если перечисление должно происходить от модификаторов к мастеру</param>
            <returns>Перечисление доступных кастомизаторов шаблонов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager.GetTemplatesCustomizators(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Template},System.Boolean)">
            <summary>
            Перечисляет доступные кастомизаторы для списка шаблонов
            </summary>
            <param name="templates">Список шаблонов</param>
            <param name="masterFirst">кастомизаторы мастера идут перед кастомизаторами модификаторов</param>
            <returns>Перечисление доступных кастомизаторов шаблонов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager.DoGetTemplateCustomizators(ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Перечисляет доступные кастомизаторы для списка шаблонов
            </summary>
            <param name="template">Шаблон, для которого формируется список кастомизаторов</param>
            <param name="masterFirst">кастомизаторы мастера идут перед кастомизаторами модификаторов</param>
            <returns>Перечисление доступных кастомизаторов шаблонов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager.GetAttributeDefCustomizators(ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Перечисляет доступные кастомизаторы определения атрибута в порядке от детей к предшественникам
            </summary>
            <param name="def">Определение атрибута</param>
            <returns>Перечисление доступных кастомизаторов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager.GetAccessRuleCustomizators(ProgramSoyuz.PLM.Scripting.AccessRule)">
            <summary>
            Перечисляет доступные кастомизаторы правила доступа в порядке от детей к предшественникам
            </summary>
            <param name="rule">Правило доступа</param>
            <returns>Перечисление доступных кастомизаторов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeManager.GetUICommandCustomizator(ProgramSoyuz.DataModel.UICommandBase)">
            <summary>
            Находит кастомизатор UI команды с учетом активных модификаторов
            </summary>
            <param name="cmd">UI команда</param>
            <returns>Актуальный кастомизатор UI команды</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchTaskFilterItem">
            <summary>
            Класс для уточнения диапазона задач (Task) для дочерних элементов поискового запроса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskFilterItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskFilterItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchTaskFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FileDesc">
            <summary>
            Дескриптор файла, хранимого в PLM
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.m_OwnerObjects">
            <summary>
            Объект-владелец данного файлового описателя. (Их может быть несколько)
            Используется для доступа к потоку загрузки тела файла 
            (при этом требуется проверка прав доступа)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.AddOwnerObject(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Объект-владелец данного файлового описателя
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.m_Data">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc._LocalFilePath">
            <summary>
            Локальный путь к файлу, если известен. Используется для поддержки клиентской логики для генерации превью.
            На сервере не сохраняется.
            Заполняется автоматически, если известен полный путь, либо вручную по необходимости.
            Используется внутри вызова <see cref="M:ProgramSoyuz.PLM.Scripting.FileDesc.GeneratePreviewImage"/>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.m_RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.NullFile">
            <summary>
            Null файл.
            Используется в UI для обработки отсутствующих файлов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.#ctor">
            <summary>
            Конструктор null файла
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.#ctor(ProgramSoyuz.DataModel.FileDescBase,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="fileDesc">Реальный объект</param>
            <param name="owner">Владелец дескриптора файла</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.#ctor(ProgramSoyuz.DataModel.FileDescBase,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="fileDesc">Реальный объект</param>
            <param name="owners">Владельцы дескриптора файла</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.#ctor(System.String)">
            <summary>
            Конструктор по имени файла
            </summary>
            <param name="path">Исходное имя файла (с путем)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.#ctor(System.IO.Stream,System.String)">
            <summary>
            Конструктор по имени файла и стриму с его телом
            </summary>
            <param name="fileName">Исходное имя файла</param>
            <param name="pStream">Стрим с телом сохраняемого файла</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.#ctor(System.IO.Stream,System.String,System.DateTime)">
            <summary>
            Конструктор по имени файла и стриму с его телом
            </summary>
            <param name="fileName">Исходное имя файла</param>
            <param name="pStream">Стрим с телом сохраняемого файла</param>
            <param name="fileCreatedAndModifiedDate">Дата создания файла (она же дата изменения)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.#ctor(System.IO.Stream,System.String,System.DateTime,System.DateTime)">
            <summary>
            Конструктор по имени файла и стриму с его телом
            </summary>
            <param name="fileName">Исходное имя файла</param>
            <param name="pStream">Стрим с телом сохраняемого файла</param>
            <param name="fileCreatedDate">Дата создания файла</param>
            <param name="fileModifiedDate">Дата изменения файла</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.Upload(System.String)">
            <summary>
            Подготовка к загрузке файла
            </summary>
            <param name="path">Исходное имя файла (с путем)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.Upload(System.IO.Stream,System.String,System.DateTime,System.DateTime)">
            <summary>
            Подготовка к загрузке файла
            </summary>
            <param name="fileName">Исходное имя файла</param>
            <param name="pStream">Стрим с телом сохраняемого файла</param>
            <param name="fileCreatedDate">Дата создания файла</param>
            <param name="fileModifiedDate">Дата изменения файла</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.FixRawFileData(System.Byte[],System.Int64)">
            <summary>
            Низкоуровневое исправление данных файла. Следует вызывать после внешнего обновления тела файла в каталогах файлового сервера
            </summary>
            <param name="hash">Хеш тела файла</param>
            <param name="size">Размер файла</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.DownloadFile">
            <summary>
            Соединяется с файловым сервером и открывает поток для скачивания тела файла.
            </summary>
            <returns>Стрим с телом файла для скачивания</returns>
            <remarks>Реализация потока автоматически запрашивает очередной блок данных файла по мере поглощения
            данных клиентом потока.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.WriteFileTo(System.String,System.String)">
            <summary>
            Соединяется с файловым сервером, открывает поток для скачивания тела файла.
            Скачивает файл и записывает его по указанному пути.
            </summary>
            <param name="folder">Путь к существующему каталогу, куда сохранить файл</param>
            <param name="fileName">Имя файла (с расширением или без)</param>
            <remarks>Если <paramref name="fileName"/> не указан или без расширения, то используется
            исходное имя или расширение файла</remarks>
            <returns>Получившийся путь к файлу</returns>
            <remarks>Если файл уже существует и его хеш и размер совпадает с требуемым, то фактического скачивания не происходит</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.BuildTargetPath(System.String,System.String)">
            <summary>
            Формирует целевой путь для скачивания файла по пути к каталогу и опциональному имени файла
            </summary>
            <param name="folder">Путь к существующему каталогу, куда сохранить файл</param>
            <param name="fileName">Имя файла (с расширением или без)</param>
            <returns>Получившийся путь к файлу</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.WriteFileTo(System.String)">
            <summary>
            Соединяется с файловым сервером, открывает поток для скачивания тела файла.
            Скачивает файл и записывает его по указанному пути.
            </summary>
            <param name="path">Полный путь к файлу</param>
            <remarks>Если файл уже существует и его хеш и размер совпадает с требуемым, то фактического скачивания не происходит</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.WriteFileAsyncTo(System.String,System.Action{ProgramSoyuz.PLM.Scripting.IAsyncFileOperation},ProgramSoyuz.PLM.Scripting.IAsyncFileOperation@)">
            <summary>
            Асинхронно скачивает файл и записывает его по указанному пути. По завершении операции вызывается обработчик <paramref name="callback"/>
            </summary>
            <param name="path">Полный путь к файлу</param>
            <param name="callback">Обработчик вызываемый при завершении операции скачивания</param>
            <param name="fileOperation">Объект асинхронной файловой операции</param>
            <returns>true, если операция поставлена в очередь. В этом случае по её завершении будет вызван <paramref name="callback"/>
            false, если скачивание файла не требуется и операция завершена синхронно.</returns>
            <remarks>Если файл уже существует и его хеш и размер совпадает с требуемым, то фактического скачивания не происходит</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.DoWriteFileTo(System.IO.Stream,System.String)">
            <summary>
            Записывает содержимое потока по указанному пути
            </summary>
            <param name="downloadingStream">Поток с телом файла</param>
            <param name="path">Путь, куда записывается файл</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.DoCheckFileWriteAccess(System.String)">
            <summary>
            Предварительная проверка открытия файла с правами на запись.
            Происходит до попытки обращения к файловому серверу за телом файла
            </summary>
            <param name="path">Путь к файлу</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.m_UploadingDataStream">
            <summary>
            Стрим с телом файла для отправки на сервер
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.m_OwnsUploadingStream">
            <summary>
            Если true, то стрим автоматически закрывается по завершении аплоада
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.m_IsUploadOperationInProgress">
            <summary>
            true означает, что стрим задействован в операции загрузки файлов на сервер
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.m_UploadingStreamStartPosition">
            <summary>
            Начальная позиция стрима в момент вызова конструктора описателя файла
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.PrepareUploadingDataStream">
            <summary>
            Стрим с телом файла для отправки на сервер
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.PrepareCloneToVault">
            <summary>
            Подготовка к загрузке файла для зеркалирования в другое хранилище
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc._uploadedToVault">
            <summary>
            Файловое хранилище, принявшее тело файла во время операции сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.OnFileUploaded(System.Byte[],ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Вызывается при подтверждении со стороны файлового сервера о получении файла
            </summary>
            <param name="fileHash">Хеш файла, подтвержденный сервером</param>
            <param name="fileVault">Идентификатор хранилища, принявшего файл</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.OnFileUploaded(ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Вызывается при завершении отправки файла с сервера на ФС
            </summary>
            <param name="fileVault">ФС, куда было отправлено тело файла</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.IsFileIdentical(System.String)">
            <summary>
            Проверяет идентичность хеша указанному файлу
            </summary>
            <param name="path">Путь к файлу</param>
            <returns>true, если хеш и размер совпали</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.IsFileIdentical(System.IO.FileStream)">
            <summary>
            Проверяет идентичность хеша указанному файлу
            </summary>
            <param name="stream">Поток открытый по файлу</param>
            <returns>true, если хеш и размер совпали</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.IsFileIdentical(ProgramSoyuz.PLM.Scripting.FileDesc)">
            <summary>
            Проверяет идентичность хеша указанному файлу
            </summary>
            <param name="other">Сравниваемый описатель файла</param>
            <returns>true, если хеш и размер совпали</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.IsFileIdentical(ProgramSoyuz.DataModel.FileData)">
            <summary>
            Проверяет идентичность хеша указанному файлу
            </summary>
            <param name="other">Сравниваемые данные файла</param>
            <returns>true, если хеш и размер совпали</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.ComputeFileHash(System.IO.Stream)">
            <summary>
            Вычисляет хеш тела файла, используемый для проверки идентифчности
            </summary>
            <param name="stream">Поток открытый по файлу</param>
            <returns>байтовый массив хеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.GeneratePreviewImage">
            <summary>
            Фомирует изображение превью по файлу (в виде массива байтов) (формат картинки PNG)
            </summary>
            <returns>Массив байтов с картинкой либо null</returns>
            <remarks>Превью формируется по локальному файлу, если он известен. 
            При создании нового файла, используется либо путь к файлу, либо если путь не указан то <see cref="P:ProgramSoyuz.PLM.Scripting.FileDesc.UploadingDataStream"/>.
            В последнем случае создается временный файл.
            При использовании уже загруженного файла для генерации превью должен быть задан <see cref="P:ProgramSoyuz.PLM.Scripting.FileDesc.LocalFilePath"/>. Именно он 
            используется для формирования превью. Если таковой не задан, функция вернет null
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.GeneratePreviewImage(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Фомирует изображение превью по файлу (в виде массива байтов) в указанном формате изображения
            </summary>
            <param name="imageFormat">Формат изображения</param>
            <returns>Массив байтов с картинкой либо null</returns>
            <remarks>Превью формируется по локальному файлу, если он известен. 
            При создании нового файла, используется либо путь к файлу, либо если путь не указан то <see cref="P:ProgramSoyuz.PLM.Scripting.FileDesc.UploadingDataStream"/>.
            В последнем случае создается временный файл.
            При использовании уже загруженного файла для генерации превью должен быть задан <see cref="P:ProgramSoyuz.PLM.Scripting.FileDesc.LocalFilePath"/>. Именно он 
            используется для формирования превью. Если таковой не задан, функция вернет null
            </remarks>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.m_bDisposed">
            <summary>
            Флаг устанавливается при вызове Dispose
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.Dispose">
            <summary>
            Освобождение ресурсов, используемых этим объектом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.Finalize">
             <summary>
             Деструктор
             </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.ReleaseOwnedStream">
            <summary>
            Освобождает читающий поток, если он был открыт этим объектом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDesc.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.OwnerObjects">
            <summary>
            Объекты-владелецы данного файлового описателя (их может быть несколько)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.OwnerObject">
            <summary>
            Объект-владелец данного файлового описателя (первый если их несколько)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.BodySize">
            <summary>
            Размер тела файла в байтах
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.FileHash">
            <summary>
            Хеш тела файла
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.FileModifiedDate">
            <summary>
            Дата/время изменения файла в UTC (атрибут файловой системы)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.FileCreatedDate">
            <summary>
            Дата/время создания файла в UTC (атрибут файловой системы)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.OriginalName">
            <summary>
            Имя файла, как оно было на момент первого сохранения файла в базу
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.FilePath">
            <summary>
            Для вновь созданных объектов возвращает полный путь к локальному файлу (если известен).
            В остальных случаях имя файла на момент первого сохранения в базу.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.FileVaults">
            <summary>
            Список файловых хранилищ, в которых есть этот файл
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.UploadingDataStream">
            <summary>
            Стрим с телом файла для отправки на файловый сервер
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.DownloadingDataStream">
            <summary>
            Стрим с телом файла скачиваемого с файлового сервера
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.OwnsUploadingStream">
            <summary>
            Если true, то стрим автоматически закрывается по завершении аплоада
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.IsFileBodyExists">
            <summary>
            Возвращает true, если файл был успешно загружен в PLM
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.IsZeroLengthFile">
            <summary>
            Возвращает true, если тело файла нулевой длины (в файловом хранилище его нет)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.PlainText">
            <summary>
            Текстовое содержимое файла для полнотекстовой индексации.
            Текстовое содержимое доступно только для отправки на сервер. 
            С сервера на клиент текстовое содержимое не передается.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.IsPreliminary">
            <summary>
            True если файл создается в предварительном режиме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.IsUploadOperationInProgress">
            <summary>
            true означает, что стрим задействован в операции загрузки файлов на сервер
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.LocalFilePath">
            <summary>
            Локальный путь к файлу, если известен. Используется для поддержки клиентской логики для генерации превью.
            На сервере не сохраняется.
            Заполняется автоматически, если известен полный путь, либо вручную по необходимости.
            Используется внутри вызова <see cref="M:ProgramSoyuz.PLM.Scripting.FileDesc.GeneratePreviewImage"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDesc.UploadedToVault">
            <summary>
            Файловое хранилище, принявшее тело файла во время операции сохранения
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FileDesc.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.CreationData.OriginalName">
            <summary>
            Имя файла, как оно было на момент первого сохранения файла в базу
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.CreationData.BodySize">
            <summary>
            Размер тела файла в байтах
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.CreationData.FileHash">
            <summary>
            Длинный хеш тела файла
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.CreationData.FileModifiedDate">
            <summary>
            Дата/время изменения файла в UTC (атрибут файловой системы)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.CreationData.FileCreatedDate">
            <summary>
            Дата/время создания файла в UTC (атрибут файловой системы)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.CreationData.PlainText">
            <summary>
            Текстовое содержимое файла для полнотекстовой индексации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.CreationData.IsPreliminary">
            <summary>
            True если файл создается в предварительном режиме
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDesc.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UICommandCustomizationBase">
            <summary>
            Базовый класс для кастомизаторов UI команд
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommandCustomizationBase.CheckCustomizationCode(ProgramSoyuz.DataModel.UICommandBase.KindEnum,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum,ProgramSoyuz.DataModel.AttributableEntityIdentifier,System.String,ProgramSoyuz.PLM.Scripting.CustomizationMethod[]@,System.CodeDom.Compiler.CompilerError[]@,System.Int32@)">
            <summary>
            Проверочная компиляция кода кастомизации объекта
            </summary>
            <param name="cmdKind">Тип применимости команды</param>
            <param name="attrDataType">Возможный тип данных атрибута, к которому относится эта команда</param>
            <param name="entityKind">Тип атрибутируемой сущности</param>
            <param name="csCode">Текст одного или нескольких методов</param>
            <param name="missingHandlers">На выходе список методов, которые можно добавить к коду</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <param name="nHeaderLines">Число строк, вставленных перед переданным для компиляции кодом</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UICommandCustomizationBase.GetDefaultImplementation(ProgramSoyuz.DataModel.UICommandBase.KindEnum,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum,ProgramSoyuz.DataModel.AttributableEntityIdentifier,ProgramSoyuz.PLM.Scripting.CustomizationMethod[])">
            <summary>
            Формирует реализацию по умолчанию для запрошенных методов кастомизации
            </summary>
            <param name="cmdKind">Тип применимости команды</param>
            <param name="attrDataType">Возможный тип данных атрибута, к которому относится команда</param>
            <param name="entityKind">Тип атрибутируемой сущности</param>
            <param name="handlers">массив идентификаторов интересующих методов кастомизации,
            либо null если интересуют все методы для этого объекта</param>
            <returns>Строку с кодом</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UISingleObjectCommandCustomization`1">
            <summary>
            Базовый класс для кастомизаторов UI команд, применимых к нескольким объектам
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISingleObjectCommandCustomization`1.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISingleObjectCommandCustomization`1.IsValid">
            <summary>
            Проверка применимости данной команды в текущем окружении
            </summary>
            <returns>Возвращает true, если данная команда потенциально может быть применена</returns>
            <remarks>Вызывается при первом построении меню или тулбара объекта</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISingleObjectCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUISingleObjectCommand#UpdateState(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объектов
            </summary>
            <param name="obj">Набор выделенных объектов,к которым потенциально может быть применена команда</param>
            <param name="cmdUI">Объект для управления контролом вызова команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISingleObjectCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUISingleObjectCommand#Invoke(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Выполнение команды над указанными объектами
            </summary>
            <param name="obj">Набор объектов, к которым следует применить команду</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISingleObjectCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUISingleObjectCommand#IsValid(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="obj">Потенциальный объект применения команды</param>
            <returns>true если команду можно применить к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISingleObjectCommandCustomization`1.IsValid(`0)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="obj">Потенциальный объект применения команды</param>
            <returns>true если команду можно применить к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISingleObjectCommandCustomization`1.IsValid(ProgramSoyuz.PLM.Scripting.PrototypeObject)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="obj">Потенциальный объект применения команды</param>
            <returns>true если команду можно применить к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISingleObjectCommandCustomization`1.UpdateState(`0,ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объектов
            </summary>
            <param name="obj">Набор выделенных объектов,к которым потенциально может быть применена команда</param>
            <param name="cmdUI">Объект для управления контролом вызова команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISingleObjectCommandCustomization`1.Invoke(`0)">
            <summary>
            Выполнение команды над указанными объектами
            </summary>
            <param name="obj">Набор объектов, к которым следует применить команду</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISingleObjectCommandCustomization`1.UpdateState(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объектов
            </summary>
            <param name="obj">Набор выделенных объектов,к которым потенциально может быть применена команда</param>
            <param name="cmdUI">Объект для управления контролом вызова команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISingleObjectCommandCustomization`1.Invoke(ProgramSoyuz.PLM.Scripting.PrototypeObject)">
            <summary>
            Выполнение команды над указанными объектами
            </summary>
            <param name="obj">Набор объектов, к которым следует применить команду</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UIMultipleObjectCommandCustomization`1">
            <summary>
            Базовый класс для кастомизаторов UI команд, применимых к нескольким объектам
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIMultipleObjectCommandCustomization`1.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIMultipleObjectCommandCustomization`1.IsValid">
            <summary>
            Проверка применимости данной команды в текущем окружении
            </summary>
            <returns>Возвращает true, если данная команда потенциально может быть применена</returns>
            <remarks>Вызывается при первом построении меню или тулбара объекта</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIMultipleObjectCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUIMultipleObjectCommand#UpdateState(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingObject},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объектов
            </summary>
            <param name="objects">Набор выделенных объектов,к которым потенциально может быть применена команда</param>
            <param name="cmdUI">Объект для управления контролом вызова команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIMultipleObjectCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUIMultipleObjectCommand#Invoke(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Выполнение команды над указанными объектами
            </summary>
            <param name="objects">Набор объектов, к которым следует применить команду</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIMultipleObjectCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUIMultipleObjectCommand#IsValid(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="objects">Потенциальные объекты применения команды</param>
            <returns>true если команду можно применить к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIMultipleObjectCommandCustomization`1.IsValid(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="objects">Потенциальные объекты применения команды</param>
            <returns>true если команду можно применить к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIMultipleObjectCommandCustomization`1.UpdateState(System.Collections.Generic.IEnumerable{`0},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объектов
            </summary>
            <param name="objects">Набор выделенных объектов,к которым потенциально может быть применена команда</param>
            <param name="cmdUI">Объект для управления контролом вызова команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIMultipleObjectCommandCustomization`1.Invoke(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Выполнение команды над указанными объектами
            </summary>
            <param name="objects">Набор объектов, к которым следует применить команду</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UIAttributeCommandCustomization`1">
            <summary>
            Базовый класс для кастомизаторов UI команд, применимых к атрибуту
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIAttributeCommandCustomization`1.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIAttributeCommandCustomization`1.IsValid">
            <summary>
            Проверка применимости данной команды в текущем окружении
            </summary>
            <returns>Возвращает true, если данная команда потенциально может быть применена</returns>
            <remarks>Вызывается при первом построении меню или тулбара объекта</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIAttributeCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUIAttributeCommand#UpdateState(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объектов
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <param name="cmdUI">Объект для управления контролом вызова команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIAttributeCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUIAttributeCommand#Invoke(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Выполнение команды над указанными объектами
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIAttributeCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUIAttributeCommandBase#IsValid(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <returns>true если команду можно применить к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIAttributeCommandCustomization`1.IsValid(`0)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <returns>true если команду можно применить к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIAttributeCommandCustomization`1.UpdateState(`0,ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объектов
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <param name="cmdUI">Объект для управления контролом вызова команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIAttributeCommandCustomization`1.Invoke(`0)">
            <summary>
            Выполнение команды над указанными объектами
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UIListAttributeCommandCustomization`1">
            <summary>
            Базовый класс для кастомизаторов UI команд, применимых к атрибуту
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIListAttributeCommandCustomization`1.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIListAttributeCommandCustomization`1.IsValid">
            <summary>
            Проверка применимости данной команды в текущем окружении
            </summary>
            <returns>Возвращает true, если данная команда потенциально может быть применена</returns>
            <remarks>Вызывается при первом построении меню или тулбара объекта</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIListAttributeCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUIListAttributeCommand#UpdateState(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объектов
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
            <param name="cmdUI">Объект для управления контролом вызова команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIListAttributeCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUIListAttributeCommand#Invoke(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement})">
            <summary>
            Выполнение команды над указанными объектами
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIListAttributeCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUIAttributeCommandBase#IsValid(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <returns>true если команду можно применить к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIListAttributeCommandCustomization`1.IsValid(`0)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <returns>true если команду можно применить к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIListAttributeCommandCustomization`1.UpdateState(`0,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объектов
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
            <param name="cmdUI">Объект для управления контролом вызова команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UIListAttributeCommandCustomization`1.Invoke(`0,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.CollectionElement})">
            <summary>
            Выполнение команды над указанными объектами
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UISetAttributeCommandCustomization`1">
            <summary>
            Базовый класс для кастомизаторов UI команд, применимых к атрибуту
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISetAttributeCommandCustomization`1.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISetAttributeCommandCustomization`1.IsValid">
            <summary>
            Проверка применимости данной команды в текущем окружении
            </summary>
            <returns>Возвращает true, если данная команда потенциально может быть применена</returns>
            <remarks>Вызывается при первом построении меню или тулбара объекта</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISetAttributeCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUISetAttributeCommand#UpdateState(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объектов
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
            <param name="cmdUI">Объект для управления контролом вызова команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISetAttributeCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUISetAttributeCommand#Invoke(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject})">
            <summary>
            Выполнение команды над указанными объектами
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISetAttributeCommandCustomization`1.ProgramSoyuz#PLM#Scripting#IUIAttributeCommandBase#IsValid(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <returns>true если команду можно применить к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISetAttributeCommandCustomization`1.IsValid(`0)">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <returns>true если команду можно применить к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISetAttributeCommandCustomization`1.UpdateState(`0,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объектов
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
            <param name="cmdUI">Объект для управления контролом вызова команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISetAttributeCommandCustomization`1.Invoke(`0,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Выполнение команды над указанными объектами
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISetAttributeCommandCustomization`1.UpdateState(`0,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject},ProgramSoyuz.Common.GuiLib.ICmdUI)">
            <summary>
            Обновление состояния элементов интерфейса в соответствие с текущим состоянием объектов
            </summary>
            <param name="attr">Потенциальный объект применения команды</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
            <param name="cmdUI">Объект для управления контролом вызова команды</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UISetAttributeCommandCustomization`1.Invoke(`0,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingBaseObject})">
            <summary>
            Выполнение команды над указанными объектами
            </summary>
            <param name="attr">Объект, к которому примененяется команда</param>
            <param name="selectedElements">набор выделенных элементов списка</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributableObjectEventCustomization`1">
            <summary>
            Базовый класс для кастомизаторов объектных событий
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObjectEventCustomization`1.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObjectEventCustomization`1.IsApplicable(`0)">
            <summary>
            Возвращает true, если подписка на это событие применима к указанному объекту.
            Вызывается в клиентском коде при показе пользователю списка возможных событий по объекту.
            </summary>
            <param name="thisObject">Объект, на события с которым подписались пользователи</param>
            <returns>true если событие применимо к объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObjectEventCustomization`1.CheckState(`0,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Проверка нового состояния объекта относительно старого для определения факта возникновения данного события.
            Вызывается в коде серверного сохранения после вызова OnBeforeCommit.
            </summary>
            <param name="thisObject">Объект, на события с которым подписались пользователи</param>
            <param name="modifiedObject">Измененный объект (либо <paramref name="thisObject"/>, либо один из его дочерних)</param>
            <param name="originalObject">Исходный объект, как был <paramref name="modifiedObject"/> до внесения изменений</param>
            <returns>true если событие произошло и следует вызвать обработчик <see cref="M:ProgramSoyuz.PLM.Scripting.AttributableObjectEventCustomization`1.Invoke(`0,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.UserSubscription[])"/>,
            false - если событие не произошло</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObjectEventCustomization`1.Invoke(`0,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.UserSubscription[])">
            <summary>
            Обработка события с объектом
            </summary>
            <param name="thisObject">Объект, на события с которым подписались пользователи</param>
            <param name="modifiedObject">Измененный объект (либо <paramref name="thisObject"/>, либо один из его дочерних)</param>
            <param name="originalObject">Исходный объект, как был <paramref name="modifiedObject"/> до внесения изменений</param>
            <param name="subscriptions">Пользовательские подписки на данное событие</param>
            <returns>true, если событие обработано</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObjectEventCustomization`1.ProgramSoyuz#PLM#Scripting#IUICommandBase#IsValid">
            <summary>
            Возвращает true, если данная команда может быть применена к указанному объекту
            </summary>
            <returns>true если команду можно использовать в текущем контексте</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObjectEventCustomization`1.ProgramSoyuz#PLM#Scripting#IAttributableObjectEvent#IsApplicable(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает true, если подписка на это событие применима к указанному объекту.
            Вызывается в клиентском коде при показе пользователю списка возможных событий по объекту.
            </summary>
            <param name="thisObject">Объект, на события с которым подписались пользователи</param>
            <returns>true если событие применимо к объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObjectEventCustomization`1.ProgramSoyuz#PLM#Scripting#IAttributableObjectEvent#CheckState(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Проверка нового состояния объекта относительно старого для определения факта возникновения данного события.
            Вызывается в коде серверного сохранения после вызова OnBeforeCommit.
            </summary>
            <param name="thisObject">Объект, на события с которым подписались пользователи</param>
            <param name="modifiedObject">Измененный объект (либо <paramref name="thisObject"/>, либо один из его дочерних)</param>
            <param name="originalObject">Исходный объект, как был <paramref name="modifiedObject"/> до внесения изменений</param>
            <returns>true если событие произошло и следует вызвать обработчик <see cref="M:ProgramSoyuz.PLM.Scripting.IAttributableObjectEvent.Invoke(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.UserSubscription[])"/></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributableObjectEventCustomization`1.ProgramSoyuz#PLM#Scripting#IAttributableObjectEvent#Invoke(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.UserSubscription[])">
            <summary>
            Обработка события с объектом
            </summary>
            <param name="thisObject">Объект, на события с которым подписались пользователи</param>
            <param name="modifiedObject">Измененный объект (либо <paramref name="thisObject"/>, либо один из его дочерних)</param>
            <param name="originalObject">Исходный объект, как был <paramref name="modifiedObject"/> до внесения изменений</param>
            <param name="subscriptions">Пользовательские подписки на данное событие</param>
            <returns>true, если событие обработано</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IHtmlActiveTemplate">
            <summary>
            Интерфейс кастомизатора активного HTML шаблона
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IHtmlActiveTemplate.GetInlineItem(System.Int32)">
            <summary>
            Возвращает значение, вычисленное вставленным блоком с указанным индексом
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserRightsCache">
            <summary>
            Класс для кеширования вычисленных прав доступа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserRightsCache._usersByCustomOperationAndObject">
            <summary>
            Индекс по пользовательским операциям
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserRightsCache._usersByOperationAndObject">
            <summary>
            Индекс по стандартным операциям доступа
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserRightsCache.Get(ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает запись индекса по операции и объекту. Если таковой еще нет, автоматически создается новая и добавляется в индекс
            </summary>
            <param name="op">Операция</param>
            <param name="obj">Объект</param>
            <returns>Запись индекса</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserRightsCache.Get(ProgramSoyuz.PLM.Scripting.NamedValue,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает запись индекса по операции и объекту. Если таковой еще нет, автоматически создается новая и добавляется в индекс
            </summary>
            <param name="op">Операция</param>
            <param name="obj">Объект</param>
            <returns>Запись индекса</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserRightsCache.Clear">
            <summary>
            Сброс имеющихся данных
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserRightsCache.OperationObjectEntry">
            <summary>
            Елиница хранения для одного объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserRightsCache.OperationObjectEntry._isPositiveSetComplete">
            <summary>
            true если <see cref="F:ProgramSoyuz.PLM.Scripting.UserRightsCache.OperationObjectEntry.positiveSet"/> содержит полный набор пользователей, для которых операция разрешена
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserRightsCache.OperationObjectEntry.positiveSet">
            <summary>
            Набор пользователей, для которых операция разрешена
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserRightsCache.OperationObjectEntry.negativeSet">
            <summary>
            Набор пользователей, для которых известно, что разрешения на операцию нет
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserRightsCache.OperationObjectEntry.Contains(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Возвращает результат проверки для пользователя: true - разрешено, false - запрещено, либо null если не известно
            </summary>
            <param name="user">Проверяемый пользователь</param>
            <returns>true, false, либо null если не известно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserRightsCache.OperationObjectEntry.Add(ProgramSoyuz.PLM.Scripting.User,System.Boolean)">
            <summary>
            Добавляет в индекс результат вычисления для пользователя
            </summary>
            <param name="user">Пользователь</param>
            <param name="positive">true если операция разрешена</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserRightsCache.OperationObjectEntry.AddPositiveComplete(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.User})">
            <summary>
            Добавляет вычисленный набор пользователей, для которых операция разрешена
            </summary>
            <param name="users"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserRightsCache.OperationObjectEntry.GetPositiveUsers">
            <summary>
            Возвращает имеющихся пользователей с разрешенной операцией
            </summary>
            <returns>Перечислитель пользователей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserRightsCache.OperationObjectEntry.GetNegativeUsers">
            <summary>
            Возвращает имеющихся пользователей с запрещённой операцией
            </summary>
            <returns>Перечислитель пользователей</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserRightsCache.OperationObjectEntry.IsPositiveSetComplete">
            <summary>
            true если <see cref="F:ProgramSoyuz.PLM.Scripting.UserRightsCache.OperationObjectEntry.positiveSet"/> содержит полный набор пользователей, для которых операция разрешена
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserRightsCache.UsersByObject">
            <summary>
            Класс для хранения списков пользователей по атрибутируемому объекту
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserRightsCache.UsersByObject._usersByObject">
            <summary>
            Записи индекса по атрибутируемым объектам
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserRightsCache.UsersByObject.Get(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает запись индекса по операции и объекту. Если таковой еще нет, автоматически создается новая и добавляется в индекс
            </summary>
            <param name="obj">Объект</param>
            <returns>Запись индекса</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserRightsCache.UsersByObject.Get(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32)">
            <summary>
            Возвращает запись индекса по операции и объекту. Если таковой еще нет, автоматически создается новая и добавляется в индекс
            </summary>
            <param name="entity">Тип объекта</param>
            <param name="id">Идентификатор объекта</param>
            <returns>Запись индекса</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeStyle">
            <summary>
            Интерфейс стилей этапа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeStyle.GradientStyle">
            <summary>
            Градиент
            </summary>
            <returns>Тип градиента</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeStyle.BackgroundColor">
            <summary>
            Цвет фона этапа
            </summary>
            <returns>Цвет фона</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeStyle.GradientHeaderStyle">
            <summary>
            Градиент заголовка
            </summary>
            <returns>Тип градиента</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeStyle.HeaderColor">
            <summary>
            Цвет заголовка этапа
            </summary>
            <returns>Цвет заголовка</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeStyle.BorderColor">
            <summary>
            Цвет границы этапа
            </summary>
            <returns>Цвет границы</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeStyle.IsBorderDashed">
            <summary>
            Тип границы этапа
            </summary>
            <returns>Сплошной или прерывистый</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeStyle.RoundingSize">
            <summary>
            Сглаживание углов
            </summary>
            <returns>Радиус</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IServerModule">
            <summary>
            Интерфейс для серверного модуля конфигурации
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IModule">
            <summary>
            Базовый интерфейс для модулей конфигурации
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IIdentifiableModule">
            <summary>
            Базовый интерфейс для модулей и компонентов конфигурации, использующих идентификатор модуля для 
            обозначения адресата события или вызова функции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IIdentifiableModule.ModuleId">
            <summary>
            Возвращает строковый идентификатор модуля. Используется как идентификатор модуля при вызове 
            модульной функции или при поиске адресата хранимого сообщения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IModule.OnUnload">
            <summary>
            Вызывается непосредственно перед завершением работы модуля
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IServerModule.OnLoad(ProgramSoyuz.PLM.Scripting.IServerCallback)">
            <summary>
            Вызывается непосредственно после загрузки основных данных
            </summary>
            <param name="serverApp">Интерфейс для доступа к серверной функциональности</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IPersistentMessageListener">
            <summary>
            Интерфейс объектов, реализующих обработку хранимых сообщений
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPersistentMessageListener.HandlePersistentMessage(ProgramSoyuz.DataModel.PersistentMessageBase)">
            <summary>
            Обработчик хранимых сообщений, адресованных этому процессу
            </summary>
            <param name="msg">Сообщение адресованное серверному процессу</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IUserSessionTrigger">
            <summary>
            Интерфейс для серверного автоматического триггера операций со скриптовыми объектами
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUserSessionTrigger.UserConnected(ProgramSoyuz.PLM.Scripting.UserSession)">
            <summary>
            Триггер логина пользователя в систему
            </summary>
            <param name="session">Вновь инициализированная сессия</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IUserSessionTrigger.UserDisconnected(ProgramSoyuz.PLM.Scripting.UserSession)">
            <summary>
            Триггер выхода пользователя из системы
            </summary>
            <param name="session">Только что закрывшаяся сессия</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ICustomServerFunction">
            <summary>
            Интерфейс для серверного модуля, реализующего специализированные серверные функции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ICustomServerFunction.Invoke(ProgramSoyuz.PLM.Scripting.UserSession,System.String,System.Object,System.Object@)">
            <summary>
            Вызов метода, реализованного серверным модулем
            </summary>
            <param name="session">Пользовательская сессия, инициировавшая вызоы 
            (может быть null, если вызов инициировал серверный скрипт без указания сессии)</param>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="inputParams">Сериализуемые входные данные для метода</param>
            <param name="outputParams">Сериализуемый результат работы метода</param>
            <returns>true если этот модуль взялся выполнять указанный метод</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IObjectValidator">
            <summary>
            Интерфейс для серверной проверки/исправления объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectValidator.CheckIntegrity(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean)">
            <summary>
            Проверяет объект на предмет наличия логических проблем
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="bFixIfPossible">Установлено в true, если модулю следует попытаться исправить ситуацию</param>
            <returns>Список неисправленных проблем, которые следует увидеть пользователю</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IServerEventListener">
            <summary>
            Интерфейс обработки различных серверных сообщений
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IWorkSpaceSchemeBase">
            <summary>
            Базовый интерфейс схемы элемента рабочего пространства пользователя
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IWorkSpaceSchemeBase.IsValidFor(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Возвращает true, если данная схема может быть применена к указанному объекту
            </summary>
            <param name="pObject">Потенциальный базовый объект схемы</param>
            <returns>true если объект подходит</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IWorkSpaceSchemeBase.CalcSelf(ProgramSoyuz.PLM.Scripting.UserItem)">
            <summary>
            Формирует виртуальное представление собственно элемента рабочего пространства
            </summary>
            <param name="userItem">Элемент рабочего пространства, для которого строим схему</param>
            <returns>Виртуальное представление самого себя</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IWorkSpaceSchemeBase.OnEditSchemeParams(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.UserItem)">
            <summary>
            Вызов редактора параметров схемы
            </summary>
            <param name="pObject">Объект, который помещается в рабочее пространство</param>
            <param name="pUserItem">Набор редактирумых параметров</param>
            <returns>true, если изменения следует применить </returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IWorkSpaceScheme">
            <summary>
            Интерфейс схемы элемента рабочего пространства пользователя
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IWorkSpaceScheme.GetImageKey(ProgramSoyuz.PLM.Scripting.IImageListManager)">
            <summary>
            Иконка схемы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IWorkSpaceScheme.NameKey">
            <summary>
            Ключ, идентифицирующий схему
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IWorkSpaceScheme.NameUI">
            <summary>
            Название схемы для пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IWorkSpaceScheme.Notes">
            <summary>
            Описание схемы
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.RegistryValuesCache">
            <summary>
            Кеш для хранения найденных по путям скриптовых объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryValuesCache._locker">
            <summary>
            Объект-блокировщик для кешированных данных
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RegistryValuesCache._objectsByPath">
            <summary>
            Кеш запрошенных объектов по пути
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryValuesCache.Lookup(System.String)">
            <summary>
            Поиск кешированного значения по пути
            </summary>
            <param name="path">Поисковый путь</param>
            <returns>Найденное кешированное значение или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryValuesCache.Lookup(System.String,System.Boolean@)">
            <summary>
            Поиск кешированного значения по пути
            </summary>
            <param name="path">Поисковый путь</param>
            <param name="keyFound">На выходе true если в словаре зарегистрирован указанный поисковый путь </param>
            <returns>Найденное кешированное значение или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryValuesCache.Add(System.String,System.Object)">
            <summary>
            Поиск кешированного значения по пути
            </summary>
            <param name="path">Поисковый путь</param>
            <param name="item">Объект для добавления в кеш</param>
            <returns>Найденное кешированное значение или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RegistryValuesCache.Clear">
            <summary>
            Сброс кеша
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchSetAttributeCriterionItem">
            <summary>
            Класс для элемента-условия в дереве поискового запроса на атрибут-множество ссылок на объекты
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchSetAttributeCriterionItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchSetAttributeCriterionItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchSetAttributeCriterionItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32,System.String@)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel"></param>
            <param name="searchColumn">На выходе получает имя столбца, по которому осуществляется запрос</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchSetAttributeCriterionItem.GetQueryExpression(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует поисковое SQL выражение для себя и своих детей
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel"></param>
            <returns>SQL строку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchSetAttributeCriterionItem.GenerateCode(System.Text.StringBuilder,System.String,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по созданию данного элемента. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="parentItemName">Имя родительского элемента (может быть null)</param>
            <param name="offset">Текущий сдвиг кода в табах</param>
            <param name="usedTemplates"></param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrototypeObject">
            <summary>
            Прототип атрибутируемого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PrototypeObject.m_Owner">
            <summary>
            Объект-владелец прототипа
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Сериализация объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.#ctor(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Конструктор объекта
            </summary>
            <param name="template">Шаблон, для которого этот объект явлется прототипом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.#ctor(ProgramSoyuz.PLM.Scripting.IPrototypeContainer)">
            <summary>
            Конструктор объекта
            </summary>
            <param name="owner">Объект-владелец прототипа</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.#ctor(ProgramSoyuz.PLM.Scripting.IPrototypeContainer,ProgramSoyuz.DataModel.AttributeData[],ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache)">
            <summary>
            Конструктор объекта
            </summary>
            <param name="owner">Объект-владелец прототипа</param>
            <param name="attributes">набор данных об атрибутах</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.#ctor(ProgramSoyuz.PLM.Scripting.IPrototypeContainer,ProgramSoyuz.DataModel.AttributeData[],ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,System.Boolean)">
            <summary>
            Конструктор объекта
            </summary>
            <param name="owner">Объект-владелец прототипа</param>
            <param name="attributes">набор данных об атрибутах</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="readOnly">true, если следует пометить объект как неизменяемый</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.OnModified">
            <summary>
            Вызывается при изменении этого объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.Clone">
            <summary>
            Создаёт клон объекта (через сериализацию)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.Save(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Сохранение этого объекта вне зависимости от наличия текущего контекста группового сохранения
            </summary>
            <param name="saveRelatedRange">диапазон "затягивания в сохранение"
            измененных связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.Erase">
            <summary>
            Удаление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.CheckWrappedObject(System.Boolean)">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
            <param name="needAttributes">Если true, то производится полная загрузка объекта при необходимости</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.CreateAttributeData(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
              Создаёт набор данных по атрибуту
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrototypeObject.CreateCollectionElementData(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
              Создаёт набор данных по элементу коллекции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrototypeObject.TargetTemplate">
            <summary>
            Шаблон, для которого этот объект является прототипом
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrototypeObject.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrototypeObject.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrototypeObject.Template">
            <summary>
            Доступ к шаблону объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrototypeObject.Templates">
            <summary>
            Перечисляет все шаблоны объекта, начиная с основного.
            Из дополнительных перечисляются только те, что расширяют поведение и атрибуты экземпляра объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrototypeObject.OtherClassTemplates">
            <summary>
            Доступ к дополнительным шаблонам-классам объекта (те шаблоны, что расширяют поведение и атрибута экземпляра объекта).
            Возвращаются шаблоны для последнего сохраненного состояния объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrototypeObject._OtherClassTemplates">
            <summary>
            Доступ к дополнительным шаблонам-классам объекта (те шаблоны, что расширяют поведение и атрибуты экземпляра объекта).
            Возвращаются шаблоны для последнего сохраненного состояния объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrototypeObject.Owner">
            <summary>
            Объект-владелец прототипа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrototypeObject.NameKey">
            <summary>
            NameKey не определен для прототипа
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PropertyBeforeChangeEventHandler">
            <summary>
            Обработчик события о готовящемся изменении атрибута
            </summary>
            <param name="sender"></param>
            <param name="newValue">Новое присваемоме значения атрибута</param>
            <param name="errorText">Сообщение об ошибке, повлекшей откат изменения</param>
            <param name="attribute">Атрибут, которому собираемся присвоить новое значение</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PropertyAsyncOperationEventHandler">
            <summary>
            Обработчик события об изменении асинхронного режима вычисления атрибута
            </summary>
            <param name="sender"></param>
            <param name="attribute">Атрибут, асинхронная операция с которым начата или завершена</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributableObjectEventsContainer">
            <summary>
            Контейнер для событий объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CopyAttributeDelegate">
            <summary>
            Сигнатура функции копирования одиночного атрибута, опционально передаваемая в 
            <see cref="!:AttributableObject.CopyAttributesFrom(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.Template,bool,ProgramSoyuz.PLM.Scripting.CopyAttributeDelegate,object)"/>
            </summary>
            <param name="sourceAttr">Атрибут объекта-оригинала</param>
            <param name="destinationAttr">Атрибут создаваемого объекта</param>
            <param name="incremental">Установлен в true в случае "накопительного" копирования атрибутов, которое применяется
            при инициализации объектов атрибутами заданными в прототипах шаблонов</param>
            <param name="data">Параметр, переданный в функцию копирования атрибутов объекта</param>
            <returns>true если обработчик сам выполнил сообразное копирование данного атрибута и стандартный код копирования выполняться не должен.
            false если следует выполнить копирование значения атрибута стандартным способом</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CopyContainerDelegate">
            <summary>
            Сигнатура функции копирования контейнера, опционально передаваемая в 
            <see cref="M:ProgramSoyuz.PLM.Scripting.DataContainer.CreateCopy(System.Boolean,System.Boolean,System.Boolean,ProgramSoyuz.PLM.Scripting.CopyContainerDelegate,ProgramSoyuz.PLM.Scripting.CopyInfoObjectDelegate,System.Object)"/>
            </summary>
            <param name="source">Объект-оригинал</param>
            <param name="result">На выходе копия создаваемого объекта (если метод вернул true)</param>
            <param name="originalToCopyMap">Ассоциативный список (словарь) исходный объект в целевой объект. 
            Новые объекты, если создается, должны быть помещены в этот словарь для последующего обновления ссылок</param>
            <param name="data">Параметр, переданный в функцию копирования объекта</param>
            <returns>true если обработчик сам выполнил сообразное копирование объекта и стандартный код копирования выполняться не должен.
            false если следует выполнить копирование значения атрибута стандартным способом. Если result содержит не null, то он и считается
            непосредственной копией объекта. Если result равен null, то копия создается стандартным способом.</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CopyInfoObjectDelegate">
            <summary>
            Сигнатура функции копирования ИО, опционально передаваемая в 
            <see cref="M:ProgramSoyuz.PLM.Scripting.InfoObject.CreateCopy(System.Boolean,System.Boolean,ProgramSoyuz.PLM.Scripting.CopyInfoObjectDelegate,System.Object)"/>
            </summary>
            <param name="source">Объект-оригинал</param>
            <param name="result">На выходе копия создаваемого объекта (если метод вернул true)</param>
            <param name="originalToCopyMap">Ассоциативный список (словарь) исходный объект в целевой объект. 
            Новые объекты, если создается, должны быть помещены в этот словарь для последующего обновления ссылок</param>
            <param name="data">Параметр, переданный в функцию копирования объекта</param>
            <returns>true если обработчик сам выполнил сообразное копирование объекта и стандартный код копирования выполняться не должен.
            false если следует выполнить копирование значения атрибута стандартным способом. Если result содержит не null, то он и считается
            непосредственной копией объекта. Если result равен null, то копия создается стандартным способом.</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.BlobDesc">
            <summary>
            Дескриптор бинарного объекта, хранимого в PLM
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.BlobDesc.m_OwnerObject">
            <summary>
            Объект-владелец данного описателя бинарного объекта.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.BlobDesc.m_Data">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.BlobDesc.m_RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.BlobDesc.m_OriginalDataClone">
            <summary>
            Копия бинарного объекта, существующего в кеше для выдачи "наружу"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BlobDesc.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BlobDesc.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BlobDesc.#ctor(ProgramSoyuz.DataModel.BlobDescBase,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="fileDesc">Реальный объект</param>
            <param name="owner">Владелец дескриптора бинарного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BlobDesc.#ctor(System.Byte[])">
            <summary>
            Конструктор нового бинарного объекта
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BlobDesc.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BlobDesc.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BlobDesc.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BlobDesc.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.BlobDesc.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.OwnerObject">
            <summary>
            Объект-владелец данного описателя бинарного объекта.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.BinaryData">
            <summary>
            Тело бинарного объекта в байтах. В случае неизмененного объекта возвращается 
            копия массива из клиентского кеша
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.Data">
            <summary>
            Тело бинарного объекта в байтах
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.Length">
            <summary>
            Размер бинарного объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.Size">
            <summary>
            Размер бинарного объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.DataAsStream">
            <summary>
            Тело бинарного объекта в виде потока. Если сущесутвующий объект не редактировался, то возвращается поток с
            разрешением только читать данные
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.DataAsRawStream">
            <summary>
            Тело бинарного объекта в виде потока. Если сущесутвующий объект не редактировался, то возвращается поток с
            разрешением только читать данные
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.DataAsImage">
            <summary>
            Тело бинарного объекта в виде изображения.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.IsBinaryDataModified">
            <summary>
            Возвращает true, если бинарные данные объекта были изменены и требуют сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BlobDesc.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.BlobDesc.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.BlobDesc.CreationData.BinaryData">
            <summary>
            Тело бинарного объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.BlobDesc.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeDragAndDrop.GetDropEffects(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.DragDropOperationContext)">
            <summary>
            Формирует массив описателей доступных DND операций
            </summary>
            <param name="dest">Целевой объект</param>
            <param name="context">Контекст DND операции</param>
            <returns>Список описателей возможных DND операций</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeDragAndDrop.InsertData(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.DragDropOperationContext,System.Windows.Forms.DragDropEffects)">
            <summary>
            Собственно выполнение операции DND
            </summary>
            <param name="dest">Целевой объект</param>
            <param name="context">Контекст DND операции</param>
            <param name="dropEffect">Выполняемая операция</param>
            <returns>true если операцию следует продолжить с оставшимися объектами, false - пользователь затребовал завершение операции</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImportExport.TemplateExporter">
            <summary>
            Вспомогательный класс для экспорта шаблонов в пакет
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.TemplateExporter.m_TargetTemplates">
            <summary>
            Список шаблонов, добавляемых в пакет целиком
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.TemplateExporter.Add(ProgramSoyuz.PLM.Scripting.Template,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Добавляет в пакет указанный шаблон
            </summary>
            <param name="template">Добавляемый шаблон</param>
            <param name="withAncestors">true если следует добавить все родительские шаблоны</param>
            <param name="withChildren">true если следует добавить всю ветвь шаблонов по прямому наследованию</param>
            <param name="withRelatedTemplates">true если следует включить в пакет шаблоны, используемые в данном</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.TemplateExporter.Add(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Template},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Добавляет в пакет указанные шаблоны
            </summary>
            <param name="templates">Добавляемые шаблоны</param>
            <param name="withAncestors">true если следует добавить все родительские шаблоны</param>
            <param name="withChildren">true если следует добавить всю ветвь шаблонов по прямому наследованию</param>
            <param name="withRelatedTemplates">true если следует включить в пакет шаблоны, используемые внутри указанных</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.TemplateExporter.CalcObjectsToExport(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Template},System.Boolean,System.Boolean)">
            <summary>
            Формирует набор объектов, подлежащих экспорту
            </summary>
            <param name = "templates">Добавляемые объекты</param>
            <param name = "withAncestors">true если следует добавить все родительские объекты</param>
            <param name = "withChildren">true если следует добавить всю ветвь дочерних объектов по прямому наследованию</param>
            <returns>Множество объектов для экспорта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.TemplateExporter.AddTemplate(ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Добавляет объекты в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="additionQueue">Очередь для объектов на добавление в пакет</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.TemplateExporter.AddGenericObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject},System.Boolean)">
            <summary>
            Добавляет объекты в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="additionQueue">Очередь для объектов на добавление в пакет</param>
            <param name="withRelatedTemplates">true если следует включить в пакет образующие объекты, не включенные в конфигурацию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.TemplateExporter.AddObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Добавляет объект в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="withRelatedTemplates">true если следует включить в пакет образующие шаблоны</param>
            <returns>Возвращает true, если объект добавлен в пакет, false, если добавлен только линк</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.TemplateExporter.TargetTemplates">
            <summary>
            Список шаблонов, добавляемых в пакет целиком
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem">
            <summary>
            Класс для уточнения диапазона контейнеров, в которых ищем объекты
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.m_Containers">
            <summary>
            Список контейнеров, среди которых ищем
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.GetQueryExpression(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует поисковое SQL выражение для себя и своих детей
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>SQL строку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.GetContainersRange(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder)">
            <summary>
            Формирует список контейнеров поисковой операции с учетом прав доступа
            </summary>
            <param name="searchQueryBuilder">Построитель запросов, в контексте которого работает метод</param>
            <returns>Список контейнеров, среди которых надо искать объекты, либо null, если среди всех</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.GenerateCode(System.Text.StringBuilder,System.String,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по созданию данного элемента. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="parentItemName">Имя родительского элемента (может быть null)</param>
            <param name="offset">Текущий сдвиг кода в табах</param>
            <param name="usedTemplates"></param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.ContainerTemplate">
            <summary>
            Шаблон, фильтрующий используемые контейнеры
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.Containers">
            <summary>
            Список контейнеров, среди которых ищем
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.IncludeInheritedContainerTemplates">
            <summary>
            Возвращает true если ищем контейнеры указанного шаблона и дочерних шаблонов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchDataContainerRangeFilterItem.IncludeInheritedContainers">
            <summary>
            Ищем ИО в указанных контейнерах и дочерних к ним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLinkStyle.IsDashed">
            <summary>
            Пунктир
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLinkStyle.IsTreatAsLoopCreationColor">
            <summary>
            Цвет принудительной возвратной линии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLinkStyle.IsTreatAsDirectColor">
            <summary>
            Цвет принудительной прямой линии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLinkStyle.EndCap">
            <summary>
            Тип окончания линии 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLinkStyle.EndCapFillColor">
            <summary>
            Цвет заполнения окончания линии, если требуется заполнение
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IClientCallback">
            <summary>
            Интерфейс для клиентского модуля конфигурации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SetMainWindowStatus(System.String)">
            <summary>
            Установка текста в строку статуса основного окна приложения.
            </summary>
            <remarks>Текст может быть перекрыт по ближайшему Idle событию, либо отправкой сетевого пакета, либо файловой операцией</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.Search(ProgramSoyuz.DataModel.EntityIdentifier,System.String,System.Boolean)">
            <summary>
            Открывает закладку с поисковым запросом
            </summary>
            <param name="entity">тип сущности искомого объекта</param>
            <param name="query">сериализованный в XML запрос</param>
            <param name="autoRun">запускать ли сразу после открытия запрос на выполнение?</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.Search(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Открывает закладку с поисковым запросом
            </summary>
            <param name="queryObject">ИО типа "поисковый запрос" (InfoObjects\BASIC\StoredQuery)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.ShowObjectProperties(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Открывает окно редактора объекта, показывает указанный объект в текущем его состоянии,
            включая измененные атрибуты
            </summary>
            <param name="obj">объект, чьи свойства нужно отобразить</param>
            <param name="readOnly">true - показ в режиме чтения</param>
            <returns>Возвращает true, если произошло сохранение изменений</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.ShowObjectPropertiesModeless(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Открывает окно редактора объекта в режиме modeless, показывает
            указанный объект в текущем его состоянии, включая измененные атрибуты
            </summary>
            <param name="obj">объект, чьи свойства нужно отобразить</param>
            <param name="readOnly">true - показ в режиме чтения</param>
            <returns>Возвращает интерфейс формы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.ShowInteractiveDocumentForm(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.DocumentPageDesc[],System.Int32,System.Boolean)">
            <summary>
            Создает окно интерактивного печатного документа
            </summary>
            <param name="document">объект документа</param>
            <param name="pages"></param>
            <param name="initialPage"></param>
            <param name="readOnly">true - показ в режиме чтения</param>
            <returns>Возвращает интерфейс формы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.ShowInteractiveDocumentForm(ProgramSoyuz.PLM.Scripting.ShowInteractiveDocumentParams)">
            <summary>
            Создает окно интерактивного печатного документа
            </summary>
            <param name="showParams">параметры показа</param>
            <returns>Возвращает интерфейс формы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.ShowVirtualTreeEditorForm(ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.PLM.Scripting.InfoObject,System.Boolean,System.Boolean)">
            <summary>
            Создает окно виртуального дерева информационных объектов
            </summary>
            <param name="root">корневой объект дерева</param>
            <param name="selectedItem">Выделенный элемент</param>
            <param name="readOnly">Режим показа "только для чтения"</param>
            <param name="modal"></param>
            <returns>Возвращает интерфейс формы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.ShowVirtualTreeEditorForm(ProgramSoyuz.PLM.Scripting.ShowVirtualTreeEditorParams)">
            <summary>
            Создает окно виртуального дерева информационных объектов
            </summary>
            <param name="showParams">параметры показа</param>
            <returns>Возвращает интерфейс формы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.OpenInNewTabPage(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Открывает объект в отдельной вкладке
            </summary>
            <param name="obj">Объект PLM</param>
            <param name="startFromRoot">Выбирать объект в новой вкладке в дереве начиная с корня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.OpenPropertiesPane(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Открывает панель св-в объекта в отдельной вкладке
            </summary>
            <param name="obj">Объект PLM</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.GetBrowserSelectedObject">
            <summary>
            Возвращает объект PLM, выбранный в активном дереве проектов
            </summary>
            <returns>Выбранный объект</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectObjectInBrowser(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Выбирает объект в главном дереве клиентского приложения
            </summary>
            <param name="obj">объект, который нужно выделить в дереве/списках</param>
            <returns>Возвращает true, если выбор состоялся</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectObjectInBrowser(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Выбирает объект в главном дереве клиентского приложения
            </summary>
            <param name="path">путь к объекту, который нужно выделить в дереве/списках</param>
            <returns>Возвращает true, если выбор состоялся</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectUserItem(ProgramSoyuz.PLM.Scripting.SelectUserItemParams)">
            <summary>
            Открывает окно выбора одиночного элемента рабочей среды
            </summary>
            <param name="selectionParams">параметры выбора</param>
            <returns>Возвращает выбранный пользователем элемент рабочей среды или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTemplate(ProgramSoyuz.PLM.Scripting.SelectTemplateParams)">
            <summary>
            Открывает окно выбора одиночного шаблона
            </summary>
            <param name="selectionParams">параметры выбора</param>
            <returns>Возвращает выбранный пользователем шаблон или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTemplate(ProgramSoyuz.PLM.Scripting.Template[],ProgramSoyuz.PLM.Scripting.Template,System.Predicate{ProgramSoyuz.PLM.Scripting.Template},System.Predicate{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Открывает окно выбора одиночного шаблона
            </summary>
            <param name="rootTemplates">шаблоны, начиная с которых строить дерево шаблонов</param>
            <param name="selectedTemplate">шаблон, выбранный в дереве по умолчанию</param>
            <param name="filter">фильтр шаблонов</param>
            <param name="validator">Функция, проверяющая пригодность выбранного шаблона</param>
            <returns>Возвращает выбранный пользователем шаблон или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTemplate(ProgramSoyuz.DataModel.AttributableEntityIdentifier[],ProgramSoyuz.PLM.Scripting.Template,System.Predicate{ProgramSoyuz.PLM.Scripting.Template},System.Predicate{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Открывает окно выбора одиночного шаблона
            </summary>
            <param name="kinds">типы шаблонов, которые включать в дерево шаблонов для выбора</param>
            <param name="selectedTemplate">шаблон, выбранный в дереве по умолчанию</param>
            <param name="filter">фильтр шаблонов</param>
            <param name="validator">Функция, проверяющая пригодность выбранного шаблона</param>
            <returns>Возвращает выбранный пользователем шаблон или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectDataContainer(ProgramSoyuz.PLM.Scripting.SelectDataContainerParams)">
            <summary>
            Открывает окно выбора одиночного контейнера
            </summary>
            <param name="selectionParams">параметры выбора контейнера</param>
            <returns>Возвращает выбранный пользователем контейнер или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectDataContainer(System.UInt32,System.Predicate{ProgramSoyuz.PLM.Scripting.DataContainer})">
            <summary>
            Открывает окно выбора одиночного контейнера
            </summary>
            <param name="defaultContainerId">контейнер, выбранный по умолчанию</param>
            <param name="validator">валидатор выбора</param>
            <returns>Возвращает выбранный пользователем контейнер или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectDataContainer(ProgramSoyuz.PLM.Scripting.SelectDataContainerFromListParams)">
            <summary>
            Открывает окно выбора одиночного контейнера из предопреденного списка
            </summary>
            <param name="selectionParams">параметры выбора контейнера</param>
            <returns>Возвращает выбранный пользователем контейнер или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectDataContainer(ProgramSoyuz.PLM.Scripting.DataContainer[])">
            <summary>
            Открывает окно выбора одиночного контейнера из предопреденного списка
            </summary>
            <param name="containerList">список контейнеров из которых выбирать</param>
            <returns>Возвращает выбранный пользователем контейнер или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectDataContainers(ProgramSoyuz.PLM.Scripting.SelectDataContainerFromListParams)">
            <summary>
            Открывает окно выбора одного или нескольких контейнеров из предопреденного списка
            </summary>
            <param name="selectionParams">параметры выбора контейнеров</param>
            <returns>Возвращает выбранные пользователем контейнеры или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectDataContainers(ProgramSoyuz.PLM.Scripting.DataContainer[])">
            <summary>
            Открывает окно выбора одного или нескольких контейнеров из предопреденного списка
            </summary>
            <param name="containerList">список контейнеров из которых выбирать</param>
            <returns>Возвращает выбранные пользователем контейнеры или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectCollaborator(System.Boolean,System.Predicate{ProgramSoyuz.PLM.Scripting.User})">
            <summary>
            Открывает окно выбора одиночного сотрудника или группы сотрудников
            </summary>
            <param name="showEmptyGroups">указывает, показывать ли пустые группы</param>
            <param name="validator">валидатор выбора</param>
            <returns>Возвращает выбранный пользователем сотрудника или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectCollaborators(System.Boolean,System.Predicate{System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.User}})">
            <summary>
            Открывает окно выбора одного или нескольких сотрудников или групп сотрудников
            </summary>
            <param name="showEmptyGroups">указывает, показывать ли пустые группы</param>
            <param name="validator">валидатор выбора</param>
            <returns>Возвращает выбранных пользователем сотрудников или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectUser(ProgramSoyuz.PLM.Scripting.User[],System.Boolean)">
            <summary>
            Открывает окно выбора одиночного пользователя или группы из предопреденного списка
            </summary>
            <param name="userList">список пользователей и групп из которых выбирать</param>
            <param name="showSearchButton">Если true, то отображает кнопку поиска в диалоге выбора пользователя</param>
            <returns>Возвращает выбранного пользователем пользователя или группу или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectUsers(ProgramSoyuz.PLM.Scripting.User[],System.Boolean)">
            <summary>
            Открывает окно выбора одного или нескольких пользователей и/или групп из предопреденного списка
            </summary>
            <param name="userList">список пользователей и групп из которых выбирать</param>
            <param name="showSearchButton">Если true, то отображает кнопку поиска в диалоге выбора пользователя</param>
            <returns>Возвращает выбранных пользователем пользователей и/или группы или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectInfoObject(ProgramSoyuz.PLM.Scripting.SelectInfoObjectParams)">
            <summary>
            Открывает окно выбора одиночного ИО (клиентский поиск)
            </summary>
            <param name="selectionParams">Настройки поиска ИО</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectInfoObject(System.UInt32,System.Boolean,System.UInt32)">
            <summary>
            Открывает окно выбора одиночного ИО (клиентский поиск)
            </summary>
            <param name="templateId">шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="defaultContainerId">контейнер, в котором осуществлять поиск ИО</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectInfoObject(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора одиночного ИО (клиентский поиск)
            </summary>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров,
            поиск в которых должен быть включен по умолчанию. Может быть null.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectInfoObject(System.Boolean,System.UInt32,System.Boolean,System.UInt32)">
            <summary>
            Открывает окно выбора одиночного ИО с указанием использования клиентского или серверного поиска
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="templateId">шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="defaultContainerId">контейнер, в котором осуществлять поиск ИО</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectInfoObject(System.Boolean,ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора одиночного ИО с возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров,
            поиск в которых должен быть включен по умолчанию. Может быть null.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectInfoObject(ProgramSoyuz.PLM.Scripting.InfoObject[])">
            <summary>
            Открывает окно выбора одиночного ИО из предопределенного списка
            </summary>
            <param name="infoObjectList">Список ИО из которого можно выбирать</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.BrowseForInfoObject(ProgramSoyuz.PLM.Scripting.BrowseForInfoObjectParams)">
            <summary>
            Открывает окно выбора одиночного ИО путем выбора из имеющихся в контейнерах с опциональной возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="browseParams">Настройки выбора ИО</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.BrowseForInfoObject(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.InfoObject})">
            <summary>
            Открывает окно выбора одиночного ИО путем выбора из имеющихся в контейнерах с опциональной возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="rootContainers">Список корневых контейнеров, отображаемых в дереве для выбора ИО.
                Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="useServerSearch">true если следует использовать серверный поиск (при выходе из браузера в поиск)</param>
            <param name="converter">Функция для преобразования выбранного в дереве объекта в объект требуемого шаблона.
            Если возвращает null, то объект считается неподходящим для выбора</param>
            <returns>Возвращает выбранный пользователем ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectInfoObjects(System.UInt32,System.Boolean,System.UInt32)">
            <summary>
            Открывает окно выбора ИО с возможностью выбора нескольких объектов (клиентский поиск)
            </summary>
            <param name="templateId">шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="defaultContainerId">контейнер, в котором осуществлять поиск ИО</param>
            <returns>Возвращает выбранные пользователем объекты ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectInfoObjects(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора ИО с возможностью выбора нескольких объектов (клиентский поиск)
            </summary>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров,
            поиск в которых должен быть включен по умолчанию. Может быть null.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <returns>Возвращает выбранные пользователем объекты ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectInfoObjects(System.Boolean,System.UInt32,System.Boolean,System.UInt32)">
            <summary>
            Открывает окно выбора ИО с возможностью выбора нескольких объектов и с возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="templateId">шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="defaultContainerId">контейнер, в котором осуществлять поиск ИО</param>
            <returns>Возвращает выбранные пользователем объекты ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectInfoObjects(System.Boolean,ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора ИО с возможностью выбора нескольких объектов и с указанием 
            использования клиентского или серверного поиска
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров,
            поиск в которых должен быть включен по умолчанию. Может быть null.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <returns>Возвращает выбранные пользователем объекты ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectInfoObjects(ProgramSoyuz.PLM.Scripting.InfoObject[])">
            <summary>
            Открывает окно выбора нескольких ИО из предопределенного списка
            </summary>
            <param name="infoObjectList">Список ИО из которого можно выбирать</param>
            <returns>Возвращает выбранные пользователем объекты ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.BrowseForInfoObjects(System.String,ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.InfoObject},System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.InfoObject})">
            <summary>
            Открывает окно выбора нескольких ИО путем выбора из имеющихся в контейнерах с опциональной возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="title">Заголовок окна для выбора объектов</param>
            <param name="rootContainers">Список корневых контейнеров, отображаемых в дереве для выбора ИО.
                Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="template">Шаблон ИО</param>
            <param name="includeInheritedTemplates">true - если допускаются ИО дочерних шаблонов</param>
            <param name="useServerSearch">true если следует использовать серверный поиск (при выходе из браузера в поиск)</param>
            <param name="preselectedObjects">Набор объектов для начального формирования списка выбранных</param>
            <param name="converter">Функция для преобразования выбранного в дереве объекта в объект требуемого шаблона.
            Если возвращает null, то объект считается неподходящим для выбора</param>
            <returns>Возвращает выбранные пользователем объекты ИО, или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTask(System.UInt32,System.Boolean,System.UInt32)">
            <summary>
            Открывает окно выбора одиночного рабочего процесса (клиентский поиск)
            </summary>
            <param name="templateId">шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <param name="defaultContainerId">контейнер, в котором осуществлять поиск</param>
            <returns>Возвращает выбранный пользователем рабочий процесс или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTask(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора одиночного рабочего процесса (клиентский поиск)
            </summary>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров,
            поиск в которых должен быть включен по умолчанию. Может быть null.</param>
            <param name="template">Шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <returns>Возвращает выбранный пользователем рабочий процесс или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTask(System.Boolean,System.UInt32,System.Boolean,System.UInt32)">
            <summary>
            Открывает окно выбора одиночного рабочего процесса с указанием использования клиентского или серверного поиска
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="templateId">шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <param name="defaultContainerId">контейнер, в котором осуществлять поиск</param>
            <returns>Возвращает выбранный пользователем рабочий процесс или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTask(System.Boolean,ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора одиночного рабочего процесса с возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров,
            поиск в которых должен быть включен по умолчанию. Может быть null.</param>
            <param name="template">Шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <returns>Возвращает выбранный пользователем рабочий процесс или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTask(ProgramSoyuz.PLM.Scripting.Task[])">
            <summary>
            Открывает окно выбора одиночного рабочего процесса из предопределенного списка
            </summary>
            <param name="taskList">Список рабочих процессов из которого можно выбирать</param>
            <returns>Возвращает выбранный пользователем рабочий процесс или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTasks(System.UInt32,System.Boolean,System.UInt32)">
            <summary>
            Открывает окно выбора рабочего процесса с возможностью выбора нескольких объектов (клиентский поиск)
            </summary>
            <param name="templateId">шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <param name="defaultContainerId">контейнер, в котором осуществлять поиск</param>
            <returns>Возвращает выбранные пользователем рабочие процессы или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTasks(ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора рабочего процесса с возможностью выбора нескольких объектов (клиентский поиск)
            </summary>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров,
            поиск в которых должен быть включен по умолчанию. Может быть null.</param>
            <param name="template">Шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <returns>Возвращает выбранные пользователем рабочие процессы или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTasks(System.Boolean,System.UInt32,System.Boolean,System.UInt32)">
            <summary>
            Открывает окно выбора рабочего процесса с возможностью выбора нескольких объектов и с возможностью
            использования клиентского или серверного поиска
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="templateId">шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <param name="defaultContainerId">контейнер, в котором осуществлять поиск</param>
            <returns>Возвращает выбранные пользователем рабочие процессы или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTasks(System.Boolean,ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.DataContainer[],ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Открывает окно выбора рабочего процесса с возможностью выбора нескольких объектов и с указанием 
            использования клиентского или серверного поиска
            </summary>
            <param name="useServerSearch">true если следует использовать серверный поиск</param>
            <param name="сontainerRange">Список контейнеров, отображаемых в дереве контейнеров диалога.
            Может быть null, что означает возможность выбора во всех контейнерах без ограничений.</param>
            <param name="defaultContainersToSearchIn">Список контейнеров,
            поиск в которых должен быть включен по умолчанию. Может быть null.</param>
            <param name="template">Шаблон рабочего процесса</param>
            <param name="includeInheritedTemplates">true - если допускаются рабочие процессы дочерних шаблонов</param>
            <returns>Возвращает выбранные пользователем рабочие процессы или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.SelectTasks(ProgramSoyuz.PLM.Scripting.Task[])">
            <summary>
            Открывает окно выбора нескольких рабочих процессов из предопределенного списка
            </summary>
            <param name="taskList">Список ИО из которого можно выбирать</param>
            <returns>Возвращает выбранные пользователем рабочие процессы или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.InvokeServerMethod(System.String,System.String,System.Object)">
            <summary>
            Вызов серверной функции, реализованной серверным модулем конфигурации
            </summary>
            <param name="moduleId">Ключ (идентификатор) модуля. Если указан пустая строка, метод ищется среди всех имеющихся модулей</param>
            <param name="methodName">Имя метода</param>
            <param name="inputParam">Сериализуемый набор входных данных для метода</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.HandleException(System.Exception,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Обработчик исключений. Отчеты о неожидаемых исключениях отправляются на сервер.
            </summary>
            <param name="e">Эксепшион</param>
            <param name="errorCode">Код ошибки</param>
            <param name="titleMessage">Начало сообщения об ошибке для пользователя</param>
            <param name="framesToSkip">Число фреймов стека между пользовательским кодом и этим методом</param>
            <param name="advancedMode">Если false, то сообщение об ошибке не содержит кнопку доступа к техническим подробностям
            (кроме возникновения неожидаемых исключений)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.InvokeHostMethod(System.String,System.String,System.Object,System.Object@)">
            <summary>
            Вызов функции хоста, если работаем под АддИном.
            </summary>
            <remarks>Метод вызывается внутри обработки скриптового вызова функции. Аддин может 
            переопределить клиентскую реализацию этого метода, чтобы часть функций выполнять самостоятельно</remarks>
            <param name="target">Ключ (идентификатор) модуля. Если указан пустая строка, метод ищется среди всех имеющихся модулей</param>
            <param name="methodName">Имя метода</param>
            <param name="inputParams">Набор входных данных для метода</param>
            <param name="outputParams">Набор результатов работы метода</param>
            <returns>true если вызов был успешно обработан</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.ShowMessage(System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)">
            <summary>
            Отображение окошка с сообщением (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <param name="buttons">Набор кнопок</param>
            <param name="icon">Иконка</param>
            <param name="defaultButton">Кнопка по умолчанию</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.ShowMessage(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)">
            <summary>
            Отображение окошка с сообщением и кнопкой "Подробнее" (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <param name="details">Текст доступный по кнопке Подробнее</param>
            <param name="buttons">Набор кнопок</param>
            <param name="icon">Иконка</param>
            <param name="defaultButton">Кнопка по умолчанию</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.ShowMessage(System.String,System.Exception,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)">
            <summary>
            Отображение окошка с сообщением и кнопкой "Подробнее" (реализовано только на клиенте)
            </summary>
            <param name="text">Текст сообщения</param>
            <param name="exception">Исключение, описание которого доступно по кнопке Подробнее</param>
            <param name="buttons">Набор кнопок</param>
            <param name="icon">Иконка</param>
            <param name="defaultButton">Кнопка по умолчанию</param>
            <returns>Нажатая пользователем кнопка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.RenderDiagramImage(ProgramSoyuz.PLM.Scripting.TaskDiagram)">
            <summary>
            Рендеринг диаграммы в картинку
            </summary>
            <param name="diagram">Диаграмма для рендеринга</param>
            <returns>Картинка или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.ChangePassword(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Показ окна смены пароля
            </summary>
            <param name="user">Пользователь, чей пароль меняем</param>
            <returns>true, если пользователь выполнил операцию смены пароля; false, если закрыл окно, отменив операцию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.IsOptionalAppInstalled(System.String,System.Boolean,System.Boolean@)">
            <summary>
            Проверяет есть ли указанная папка внутри инсталляция\Configuration\Optional
            </summary>
            <param name="folderName">Имя проверяемой папки</param>
            <param name="checkIntegrity">True если требуется проверить идентичность инсталляции по сравнению с серверной версией</param>
            <param name="availableToDownload">На выходе true, если указанная папка есть на сервере доступная к скачиванию</param>
            <returns>true если есть</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientCallback.InstallOptionalApp(System.String,ProgramSoyuz.PLM.Scripting.Service.UI.InstallOptionalAppProgressDelegate)">
            <summary>
            Скачивает с сервера указанную папку внутри инсталляция\Configuration\Optional
            </summary>
            <param name="folderName">Имя запрошенной папки опционального приложения</param>
            <param name="progressCallback">Функция для уведомления о прогрессе операции</param>
            <returns>true если успешно, false, если нет приложения на сервере, или не запущен сервис автообновления</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IClientCallback.MainWindow">
            <summary>
            Доступ к основному окну приложения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IClientCallback.ImageListManager">
            <summary>
            Доступ к менеджеру иконок приложения
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.WorkItem">
            <summary>
            Нагрузка/Сообщение пользователю/WorkItem
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor">
            <summary>
            Конструктор с отладочным подсчетом числа объектов в памяти
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.Finalize">
            <summary>
            Деструктор с отладочным подсчетом числа объектов в памяти
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Сериализация объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.CreateWrapper(ProgramSoyuz.DataModel.WorkItemBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="workItem">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная (или кешированная) скриптовая оболочка объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(ProgramSoyuz.DataModel.WorkItemBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="workItem">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.CreateAsInacessible(System.UInt32)">
            <summary>
            Возвращает оболочку по реальному объекту, недоступному по правам доступа.
            </summary>
            <param name="id">Идентификатор объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(System.UInt32)">
            <summary>
            Конструктор оболочки по реальному объекту, недоступному по правам доступа.
            </summary>
            <param name="id">Идентификатор объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.WorkItem,ProgramSoyuz.DataModel.WorkItemBase.ParentRelationEnum)">
            <summary>
            Конструктор новой нагрузки создаваемой дочерней к существующей
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="parent">Родительская нагрузка, в ответ на которую создается эта</param>
            <param name="parentRelation">Тип связи создаваемой нагрузки с родительской</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.WorkItem,ProgramSoyuz.DataModel.WorkItemBase.ParentRelationEnum,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор новой нагрузки создаваемой дочерней к существующей
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="parent">Родительская нагрузка, в ответ на которую создается эта</param>
            <param name="parentRelation">Тип связи создаваемой нагрузки с родительской</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="recipientUser">Пользователь-получатель</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.User})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="recipientUsers">Пользователи-получатели рассылки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.User},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="recipientUsers">Пользователи-получатели рассылки</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(System.String,ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pathToTemplate">Шаблон объекта</param>
            <param name="recipientUser">Пользователь-получатель</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(System.String,ProgramSoyuz.PLM.Scripting.User,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pathToTemplate">Шаблон объекта</param>
            <param name="recipientUser">Пользователь-получатель</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(System.String,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.User})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pathToTemplate">Шаблон объекта</param>
            <param name="recipientUsers">Пользователи-получатели рассылки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(System.String,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.User},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pathToTemplate">Шаблон объекта</param>
            <param name="recipientUsers">Пользователи-получатели рассылки</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(ProgramSoyuz.PLM.Scripting.WorkItem.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(ProgramSoyuz.PLM.Scripting.WorkItem.CreationData,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.Task)">
            <summary>
            Конструктор новой нагрузки создаваемой дочерней к существующей
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="masterTask">Родительская задача, порождающая данную нагрузку</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.Task,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор новой нагрузки создаваемой дочерней к существующей
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="masterTask">Родительская задача, порождающая данную нагрузку</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.MakeUnsavedCopy">
            <summary>
              Создает новый объект - несохраненную копию данного
            </summary>
            <returns>Копию объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.Send">
            <summary>
            Отправка сообщения.
            Устанавливает статус отправки, соответствующий типу нагрузки и сохраняет объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.DoEraseChildrenOrRelated">
            <summary>
            Каскадное удаление дочерних объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.CheckWrappedObject(System.Boolean)">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.IsUserRecipient(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Проверяет, входит ли пользователь в число получателей данной нагрузки
            </summary>
            <param name="user">Проверяемый пользователь</param>
            <returns>true если входит</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.IsChildOf(ProgramSoyuz.PLM.Scripting.WorkItem)">
            <summary>
            Возвращает true, если объект является дочерним к указанному
            </summary>
            <remarks>Считается что объект дочерний сам к себе</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.MarkAsViewedByCurrentUser">
            <summary>
            Сбрасывает флаг новизны данной нагрузки для текущего пользователя
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.MarkAsViewedBy(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Сбрасывает флаг новизны данной нагрузки для указанного пользователя. Работает только на сервере.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.MarkAsUnviewedByCurrentUser">
            <summary>
            Сбрасывает флаг новизны данной нагрузки для текущего пользователя
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.MarkAsUnviewedBy(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Сбрасывает флаг новизны данной нагрузки для указанного пользователя. Работает только на сервере.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.ValidateStatusTransition(ProgramSoyuz.DataModel.WorkItemBase.StatusEnum)">
            <summary>
            Проверяет разрешен ли перевод статуса из одного состояния в другое. 
            Если не разрешен, выдает эксепшион
            </summary>
            <param name="newStatus">Новое статус нагрузки</param>
            <exception cref="T:ProgramSoyuz.PLM.Scripting.InvalidRequestException">Запрошенный переход заблокирован</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.RealObject">
            <summary>
            Доступ к атрибутируемому "реальному" объекту. 
            Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.IsLightWeight">
            <summary>
            Возвращает true если этот объект "легковесный". То есть атрибуты для него не загружены
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.Kind">
            <summary>
            Тип нагрузки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.ActivationCriterion">
            <summary>
            Дополнительное поле для параметров активации этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.Params">
            <summary>
            Дополнительное поле для параметров активации этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.CloseParams">
            <summary>
            Дополнительное поле для параметров закрытия этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.Status">
            <summary>
            Возвращает актуальный статус объекта в кеше.
            Смотри так же <seealso cref="P:ProgramSoyuz.PLM.Scripting.WorkItem.StatusOperation"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.StatusOperation">
            <summary>
            Новый статус объекта после сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.IsAlive">
            <summary>
            true если нагрузка активирована или предактивирована
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.IsActiveOrPaused">
            <summary>
            true если нагрузка активирована
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.IsPreActive">
            <summary>
            true если нагрузка отправлена, но не активирована у адресата
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.IsDraft">
            <summary>
            true если нагрузка сохранена как черновик - еще не отправлена
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.IsClosedOrCanceled">
            <summary>
            true если нагрузка завершена
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.IsErasedStub">
            <summary>
            Возвращает true если этот объект является заглушкой удалённого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.ParentRelationKind">
            <summary>
            Взаимоотношение данной нагрузки с родительской 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.DateCreated">
            <summary>
            Локальное Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.DateModified">
            <summary>
            Локальное Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.ModifiedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.DateActivated">
            <summary>
            Локальное Локальное дата/время активации объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.ActivatedByUser">
            <summary>
            Пользователь, активировавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.DateClosed">
            <summary>
            Локальное Локальное дата/время закрытия объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.ClosedByUser">
            <summary>
            Пользователь, закрывший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.DateContentModified">
            <summary>
            Локальная дата/время последнего изменения содержательной части объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.ContentModifiedByUser">
            <summary>
            Ссылка на пользователя, изменившего содержательную часть этого объекта последним.
            Если реального пользователя нет, возвращается экземпляр системного псевдопользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.Template">
            <summary>
            Доступ к шаблону объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.Templates">
            <summary>
            Перечисляет все шаблоны объекта, начиная с основного.
            Из дополнительных перечисляются только те, что расширяют поведение и атрибуты экземпляра объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.OtherTemplates">
            <summary>
            Доступ к дополнительным шаблонам объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.OtherClassTemplates">
            <summary>
            Доступ к дополнительным шаблонам-классам объекта (те шаблоны, что расширяют поведение и атрибута экземпляра объекта).
            Возвращаются шаблоны для последнего сохраненного состояния объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem._OtherClassTemplates">
            <summary>
            Доступ к дополнительным шаблонам-классам объекта (те шаблоны, что расширяют поведение и атрибуты экземпляра объекта).
            Возвращаются шаблоны для последнего сохраненного состояния объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.RecipientUser">
            <summary>
            Доступ к пользователю-получателю нагрузки (если он единственный)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.RecipientUsers">
            <summary>
            Доступ к пользователям-получателям нагрузки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.Parent">
            <summary>
            Доступ к родительской нагрузке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.Root">
            <summary>
            Ссылка на корневую нагрузку, от которой была порождена данная нагрузка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.BranchRoot">
            <summary>
            Возвращает корень ветви объектов своего типа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.MasterTask">
            <summary>
            Доступ к родительской задаче - той, что породила данную нагрузку
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem._Children">
            <summary>
            Возвращает перечислитель дочерних нагрузок
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem._AllChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.Children">
            <summary>
            Возвращает массив дочерних нагрузок
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.AllChildren">
            <summary>
            Возвращает массив всех дочерних нагрузок на все уровни.
            (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.NameKey">
            <summary>
            NameKey не определен для нагрузки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#WorkItem}#DirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#WorkItem}#AllDirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.Bindings">
            <summary>
            Список привязок к этому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.ParentBindings">
            <summary>
            Возвращает перечислитель унаследованных от родителей привязок к этому объекту/с использованием этой роли
            </summary>
            <returns>Перечислитель унаследованных от родителей привязок к этому объекту/с использованием этой роли</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.IsNewForCurrentUser">
            <summary>
            Возвращает true если нагрузка является новой для пользователя (непросмотренной)
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.ActivationCriterion">
            <summary>
            Дополнительное поле для параметров активации этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.Status">
            <summary>
            Статус 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.Params">
            <summary>
            Дополнительное поле для параметров этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.CloseParams">
            <summary>
            Дополнительное поле для параметров закрытия этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.ParentRelationKind">
            <summary>
            Взаимоотношение данной нагрузки с родительской 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.m_RecipientUsers">
            <summary>
            Список пользователей - получателей групповой рассылки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.m_Template">
            <summary>
            Шаблон объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.m_Parent">
            <summary>
            Родительская нагрузка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.m_MasterTask">
            <summary>
            Родительская задача - та, что породила данную нагрузку
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.WriteTo(ProgramSoyuz.DataModel.WorkItemBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.RecipientUsers">
            <summary>
            Пользователь, которому адресована нагрузка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.Template">
            <summary>
            Шаблон объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.Parent">
            <summary>
            Родительская нагрузка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.MasterTask">
            <summary>
            Родительская задача - та, что породила данную нагрузку
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WorkItem.CreationData.IsModified">
            <summary>
            Возвращает true если изменено любое поле, кроме статуса
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributeValue">
            <summary>
            Значение атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeValue.m_pOwner">
            <summary>
            Атрибут-владелец данного значения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeValue.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.OnOwnerUpdated(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            При обновлении основного объекта сбрасывает кешированные значения атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeValue.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeValue.m_Value">
            <summary>
            Новое или измененное значение этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeValue._setValueTicks">
            <summary>
            Тики момента присвоения значения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeValue.m_CachedValueWrapper">
            <summary>
            Кешированное скриптовое значений (BlobDesc, FileDesc и т.п.)
            </summary>
            <remarks>Здесь может лежать <see cref="T:System.WeakReference"/>"/&gt; на объект</remarks>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeValue._operation">
            <summary>
            Операция, которую следует произвести с объектом.
            Это поле используется при обработке сервером команды сохранения атрибутов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кеш оболочек использоваться не должен</param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.#ctor(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.DataModel.AttributeValueBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="pOwner">Атрибут-владелец данного значения</param>
            <param name="AttributeValue">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.#ctor(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Конструктор оболочки для нового объекта
            </summary>
            <param name="pOwner">Атрибут-владелец данного значения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.InitFrom(ProgramSoyuz.PLM.Scripting.AttributeValue)">
            <summary>
            Инициализирует эту оболочку низкоуровневым способом по другой оболочке
            </summary>
            <param name="src"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.Erase">
            <summary>
            Удаление объекта (для итерируемых атрибутов, создается очередная итерация значения с флагом "удалено")
            </summary>
            <remarks>Фактическое удаление происходит по последующей операции сохранения.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.ErasePhysicaly">
            <summary>
            Физическое стирание значения атрибута 
            (новая итерация итерируемого атрибута не создается, вместо этого значение физически стирается)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.DoRawCancelChanges">
            <summary>
            Возвращает объект в начальное состояние
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.GetScriptingFriendlyValue(System.Object,System.Boolean)">
            <summary>
            Преобразует ссылки в реальные объекты
            </summary>
            <param name="val">"сырое" значение</param>
            <param name="needRevisionProxy"></param>
            <returns>преобразованное значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.GetScriptingRawValue(System.Object,System.Boolean)">
            <summary>
            Преобразует реальные объекты в идентификаторы
            </summary>
            <param name="val">"скриптовое" значение</param>
            <param name="needRevisionProxy">true если требуется учет ревизии целевого ИО</param>
            <returns>преобразованное значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.rawReplaceValue(System.Object)">
            <summary>
            Используется серверной логикой сохранения для замены пользовательского значения на серверное.
            Например бинарный массив на BlobDesc
            </summary>
            <param name="value">Новое значение</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.GetValue(System.Boolean)">
            <summary>
            Возвращает скриптовое значение атрибута
            </summary>
            <param name="needRevisionProxy"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.GetCachedWrapper(System.Object)">
            <summary>
            Для скриптовых объектов возвращает кешированную скриптовую оболочку, если есть таковая, вместо неизмененной редактируемой
            </summary>
            <param name="val">Значение атрибута</param>
            <returns>Скорректирвоанное значение атрибута</returns>
            <remarks>Коррекция нужна для предотвращения появления ошибок о второй редактируемой оболочке в сейвсете</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.SetValue(System.Object,System.Boolean)">
            <summary>
            Устанавливает собственно значение
            </summary>
            <param name="value">новое значение</param>
            <param name="notifyOwner">true, если метод не должен оповещать владельца об изменении объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.GetExportableValue">
            <summary>
            Создает объект со значеним атрибута, подготовленный для отчуждения в экпортируемый пакет
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.GetValueAsString(System.Int32,System.Boolean)">
            <summary>
            Возвращает строковое представление значения, ограниченное по длине
            </summary>
            <param name="maxChars">Максимальное число символов</param>
            <param name="replaceLineBreaksToSpace">Производит поиск замену разрывов строки (\r\n и \n) на пробелы</param>
            <returns>Значение в виде строки ограниченное по длине и подготовленное для показа в одной строке</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.GetValue``1">
            <summary>
            Возвращает значение атрибута указанного типа. 
            При отсутствии такового возвращается значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <returns>Значение приведенное к указанному типу</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.IsValueEquals(System.Object)">
            <summary>
            Возвращает true, если переданное значение совпадает с текущим значением атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.IsValueEqual(System.Object)">
            <summary>
            Возвращает true, если переданное значение совпадает с текущим значением атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.UploadFile(System.String)">
            <summary>
            Инициализирует значение атрибута структурой, описывающей файл
            </summary>
            <param name="path">Путь к файлу для отправки на сервер</param>
            <remarks>Фактическая отправка файла происходит по последующей операции сохранения.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.UploadFile(System.IO.Stream,System.String)">
            <summary>
            Инициализирует значение атрибута структурой, описывающей файл
            </summary>
            <param name="stream">Стрим с телом файла для отправки на сервер</param>
            <param name="fileName">Исходное имя файла</param>
            <remarks>Стрим по файлу может быть открыт например так:
            <code>var stream = new FileStream( path, FileMode.Open, FileAccess.Read, FileShare.ReadWrite );</code>
            Вызывающий код ответственнен за освобождение стрима после завершения операции сохранения.
            Фактическая отправка файла происходит по последующей операции сохранения.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.UploadFile(System.IO.Stream,System.String,System.DateTime,System.DateTime)">
            <summary>
            Инициализирует значение атрибута структурой, описывающей файл
            </summary>
            <param name="stream">Стрим с телом файла для отправки на сервер</param>
            <param name="fileName">Исходное имя файла</param>
            <param name="fileCreatedDate">Дата создания файла</param>
            <param name="fileModifiedDate">Дата изменения файла</param>
            <remarks>Стрим по файлу может быть открыт например так:
            <code>var stream = new FileStream( path, FileMode.Open, FileAccess.Read, FileShare.ReadWrite );</code>
            Вызывающий код ответственнен за освобождение стрима после завершения операции сохранения.
            Фактическая отправка файла происходит по последующей операции сохранения.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.UploadFile(System.IO.Stream,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            Инициализирует значение атрибута структурой, описывающей файл
            </summary>
            <param name="stream">Стрим с телом файла для отправки на сервер</param>
            <param name="fileName">Исходное имя файла</param>
            <param name="fileCreatedDate">Дата создания файла</param>
            <param name="fileModifiedDate">Дата изменения файла</param>
            <param name="plainText">Текстовое содержимое файла для полнотекстовой индексации</param>
            <remarks>Стрим по файлу может быть открыт например так:
            <code>var stream = new FileStream( path, FileMode.Open, FileAccess.Read, FileShare.ReadWrite );</code>
            Вызывающий код ответственнен за освобождение стрима после завершения операции сохранения.
            Фактическая отправка файла происходит по последующей операции сохранения.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.ReUploadFile(System.String)">
            <summary>
            Повторная попытка загрузки файла по уже имеющемуся файловому дескриптору без тела файла. 
            Если имеющийся файловый дескриптор содержит тело файла, то для загружаемого файла создается новый 
            дескриптор аналогично <see cref="M:ProgramSoyuz.PLM.Scripting.AttributeValue.UploadFile(System.IO.Stream,System.String,System.DateTime,System.DateTime)"/>.
            Для итерируемых атрибутов для перезаливки файлов в уже существующих ревизиях следует выставить операцию <see cref="F:ProgramSoyuz.DataModel.AttributeBase.OperationEnum.PhysicalUpdate"/>
            </summary>
            <param name="path">Исходное имя файла (с путем)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.ReUploadFile(System.IO.Stream,System.String,System.DateTime,System.DateTime)">
            <summary>
            Повторная попытка загрузки файла по уже имеющемуся файловому дескриптору без тела файла. 
            Если имеющийся файловый дескриптор содержит тело файла, то для загружаемого файла создается новый 
            дескриптор аналогично <see cref="M:ProgramSoyuz.PLM.Scripting.AttributeValue.UploadFile(System.IO.Stream,System.String,System.DateTime,System.DateTime)"/>.
            Для итерируемых атрибутов для перезаливки файлов в уже существующих ревизиях следует выставить операцию <see cref="F:ProgramSoyuz.DataModel.AttributeBase.OperationEnum.PhysicalUpdate"/>
            </summary>
            <param name="stream">Стрим с телом файла для отправки на сервер</param>
            <param name="fileName">Исходное имя файла</param>
            <param name="fileCreatedDate">Дата создания файла</param>
            <param name="fileModifiedDate">Дата изменения файла</param>
            <remarks>Стрим по файлу может быть открыт например так:
            <code>var stream = new FileStream( path, FileMode.Open, FileAccess.Read, FileShare.ReadWrite );</code>
            Вызывающий код ответственнен за освобождение стрима после завершения операции сохранения.
            Фактическая отправка файла происходит по последующей операции сохранения.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.ReUploadFile(System.IO.Stream,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            Повторная попытка загрузки файла по уже имеющемуся файловому дескриптору без тела файла. 
            Если имеющийся файловый дескриптор содержит тело файла, то для загружаемого файла создается новый 
            дескриптор аналогично <see cref="M:ProgramSoyuz.PLM.Scripting.AttributeValue.UploadFile(System.IO.Stream,System.String,System.DateTime,System.DateTime)"/>.
            Для итерируемых атрибутов для перезаливки файлов в уже существующих ревизиях следует выставить операцию <see cref="F:ProgramSoyuz.DataModel.AttributeBase.OperationEnum.PhysicalUpdate"/>
            </summary>
            <param name="stream">Стрим с телом файла для отправки на сервер</param>
            <param name="fileName">Исходное имя файла</param>
            <param name="fileCreatedDate">Дата создания файла</param>
            <param name="fileModifiedDate">Дата изменения файла</param>
            <param name="plainText">Текстовое содержимое файла для полнотекстовой индексации</param>
            <remarks>Стрим по файлу может быть открыт например так:
            <code>var stream = new FileStream( path, FileMode.Open, FileAccess.Read, FileShare.ReadWrite );</code>
            Вызывающий код ответственнен за освобождение стрима после завершения операции сохранения.
            Фактическая отправка файла происходит по последующей операции сохранения.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.FixRawFileData(System.String)">
            <summary>
            Низкоуровневое исправление данных файла. Следует вызывать после внешнего обновления тела файла в каталогах файлового сервера
            </summary>
            <param name="path">Путь к файлу, с которого вычисляется хеш и берётся размер</param>
            <remarks>Фактическое сохранение происходит по последующей операции сохранения.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.FixRawFileData(System.Byte[],System.Int64)">
            <summary>
            Низкоуровневое исправление данных файла. Следует вызывать после внешнего обновления тела файла в каталогах файлового сервера
            </summary>
            <param name="hash">Хеш тела файла вычисленный при помощи <see cref="M:ProgramSoyuz.PLM.Scripting.FileDesc.ComputeFileHash(System.IO.Stream)"/></param>
            <param name="size">Размер файла</param>
            <remarks>Фактическое сохранение происходит по последующей операции сохранения.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.FixRawPlainText(System.String)">
            <summary>
            Низкоуровневое исправление данных файла. Следует вызывать после внешнего обновления тела файла в каталогах файлового сервера
            </summary>
            <param name="plainText">Текстовое содержимое файла для полнотекстовой индексации</param>
            <remarks>Фактическое сохранение происходит по последующей операции сохранения.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.DownloadFile">
            <summary>
            Соединяется с файловым сервером и открывает поток для скачивания тела файла.
            </summary>
            <returns>Стрим с телом файла для скачивания</returns>
            <remarks>Реализация потока автоматически запрашивает очередной блок данных файла по мере поглощения
            данных клиентом потока.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.WriteFileTo(System.String,System.String)">
            <summary>
            Соединяется с файловым сервером, открывает поток для скачивания тела файла.
            Скачивает файл и записывает его по указанному пути.
            </summary>
            <param name="folder">Путь к существующему каталогу, куда сохранить файл</param>
            <param name="fileName">Имя файла (с расширением или без)</param>
            <remarks>Если <paramref name="fileName"/> не указан или без расширения, то используется
            исходное имя или расширение файла</remarks>
            <returns>Получившийся путь к файлу</returns>
            <remarks>Если файл уже существует и его хеш и размер совпадает с требуемым, то фактического скачивания не происходит</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.WriteFileTo(System.String)">
            <summary>
            Соединяется с файловым сервером, открывает поток для скачивания тела файла.
            Скачивает файл и записывает его по указанному пути.
            </summary>
            <param name="path">Полный путь к файлу</param>
            <remarks>Если файл уже существует и его хеш и размер совпадает с требуемым, то фактического скачивания не происходит</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.WriteFileAsyncTo(System.String,System.Action{ProgramSoyuz.PLM.Scripting.IAsyncFileOperation},ProgramSoyuz.PLM.Scripting.IAsyncFileOperation@)">
            <summary>
            Асинхронно скачивает файл и записывает его по указанному пути. По завершении операции вызывается обработчик <paramref name="callback"/>
            </summary>
            <param name="path">Полный путь к файлу</param>
            <param name="callback">Обработчик вызываемый при завершении операции скачивания</param>
            <param name="fileOperation">Объект асинхронной файловой операции</param>
            <returns>true, если операция поставлена в очередь. В этом случае по её завершении будет вызван <paramref name="callback"/>
            false, если скачивание файла не требуется и операция завершена синхронно.</returns>
            <remarks>Если файл уже существует и его хеш и размер совпадает с требуемым, то фактического скачивания не происходит</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.GetLoadingFileStream">
            <summary>
            Соединяется с файловым сервером, открывает поток для скачивания тела файла и
            его и возвращает
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.IsRecalculateTimeoutPassed(System.Int32)">
            <summary>
            Возвращает true если с момента присвоения значения атрибуту прошло больше чем указанное число секунд
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.BuildDefaultUniquenessValue(System.Object)">
            <summary>
            Формирует представление значения для сохранения в таблице уникальности
            </summary>
            <param name="value">Исходное значение</param>
            <returns>Представление для хранения в таблице уникальности</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.DebuggerDisplayString">
            <summary>
            Формирует представление объекта для дебаггера
            </summary>
            <returns>Строка, которую отображает дебаггер для этого объекта</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.Owner">
            <summary>
            Атрибут-владелец данного значения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.RealObject">
            <summary>
            Доступ к атрибутируемому "реальному" объекту. 
            Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.Operation">
            <summary>
            Операция, которую следует произвести с объектом.
            Это поле используется при обработке сервером команды сохранения атрибутов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.RevisionNumber">
            <summary>
            Номер ревизии (итерации, среза значений) информационного объекта, в которой объект был создан
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.DateModified">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.IsCachedValueValid">
            <summary>
            Возвращает true если кешированное или вычисленное значение
            содержится в m_Value. В этом случае оно и является текущим значением
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.Value">
            <summary>
            Возвращает собственно значение: существующее в базе или измененное
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.RawValue">
            <summary>
            Возвращает собственно значение как есть: существующее в базе или измененное
            Для ссылочных типов возвращается DataObjectIdentifier
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.ValueAsString">
            <summary>
            Возвращает собственно значение: существующее в базе или измененное
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.IsErased">
            <summary>
            Флаг, обозначающий, что значение атрибута в этой ревизии отсутствует
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.IsPersistedCalculated">
            <summary>
            Флаг, обозначающий, что сохраненное в базе значение атрибута является вычисленным
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.IsCalculated">
            <summary>
            Флаг, обозначающий, что значение атрибута является вычисленным
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.IsBLOB">
            <summary>
            Флаг, обозначающий, что значение атрибута - БЛОБ (бинарные данные, картинки, рич тексты)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.IsRichText">
            <summary>
            Флаг, обозначающий, что значение атрибута - БЛОБ с форматированным текстом
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.IsXml">
            <summary>
            Возвращает true если значение атрибута является XML объектом
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.ModifiedByUser">
            <summary>
            Идентификатор пользователя, создавшего этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.IsFile">
            <summary>
            Возвращает true если значение атрибута является файлом
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.UniquenessValue">
            <summary>
            Значение атрибута, подготовленное для сохранения в пространство уникальности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AttributeValue.IdentityName">
            <summary>
            Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributeValue.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeValue.CreationData.RevisionNumber">
            <summary>
            Номер ревизии создания объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeValue.CreationData.IsErased">
            <summary>
            Флаг обозначающий создание "удаленного" значения для итерируемого атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeValue.CreationData.replaceValuePhysicaly">
            <summary>
            Флаг означает, что физическое низкоуровневое изменение подразумевает и изменение собственно значения этого объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeValue.CreationData.IsRevisionDataChanged">
            <summary>
            Возвращает true, если есть низкоуровневые изменения у значения атрибута
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeClientTrigger.OnAttributeChanged(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
              Вызывает обработчик нотификации об изменении какого-либо атрибута объекта
            </summary>
            <param name = "obj">Объект, чей атрибут изменился</param>
            <param name = "attr">Собственно изменившийся атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeClientTrigger.OnAttributeChanged(ProgramSoyuz.PLM.Scripting.CollectionElement,ProgramSoyuz.PLM.Scripting.SubItemAttribute)">
            <summary>
              Вызывает обработчик нотификации об изменении какого-либо атрибута объекта
            </summary>
            <param name = "obj">Объект, чей атрибут изменился</param>
            <param name = "attr">Собственно изменившийся атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeClientTrigger.OnUpdated(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean)">
            <summary>
              Вызывает обработчики OnUpdated из кода кастомизации и модулей
            </summary>
            <param name = "obj">Объект для которого обновляется UI представление</param>
            <param name = "isFirst">true, если объект впервые появился в клиентском кеше</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeClientTrigger.OnChildrenUpdated(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
              Вызывает обработчики OnChildrenUpdated из кода кастомизации и модулей
            </summary>
            <param name = "obj">Объект для которого обновляется UI представление</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeClientTrigger.OnBeforeSendChangesToServer(ProgramSoyuz.PLM.Scripting.IAttributableObject)">
            <summary>
              Вызывает обработчики OnBeforeSendChangesToServer из кода кастомизации и модулей
            </summary>
            <param name = "obj">Объект который собираемся сохранить на сервере</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeClientTrigger.OnBeforeSendEraseToServer(ProgramSoyuz.PLM.Scripting.IAttributableObject)">
            <summary>
              Вызывает обработчики OnBeforeSendEraseToServer из кода кастомизации и модулей
            </summary>
            <param name = "obj">Объект который собираемся сохранить на сервере</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeClientTrigger.OnBeforeDisplayInUI(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.IPropertySheetCallback)">
            <summary>
              Вызывает обработчики OnBeforeDisplayInUI из кода кастомизации
            </summary>
            <param name = "obj">Объект, чью карточку собираемся показать</param>
            <param name = "propertySheet">Ссылка на интерфейс доступа к штатной карточке атрибутируемого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeClientTrigger.OnAttributeControlCreated(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.Attribute,System.Windows.Forms.Control,ProgramSoyuz.PLM.Scripting.IPropertyPanel)">
            <summary>
            Вызывается клиентским кодом UI перед показом редактора атрибута на карточке объекта.
            </summary>
            <param name="obj">Объект, чья карточка показывается</param>
            <param name="attr">Атрибут, для которого показывается редактор</param>
            <param name="control">Созданный редактор для атрибута</param>
            <param name="panel">Ссылка на интерфейс доступа к панели карточки объекта, на которой создается редактор атрибута.
            Используйте panel.PageDef для доступа к определению текущей панели.</param>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeClientTrigger.InitSession(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
              Вызывает обработчик InitSession из кода кастомизации
            </summary>
            <param name = "obj">Пользователь, чья сессия инициализируется</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeClientTrigger.OnFileSavedToVault(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.AttributeValue,ProgramSoyuz.PLM.Scripting.FileDesc,ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Вызывается на клиенте сразу после успешной отправки всех тел файлов, вовлеченных в операцию сохранения
            </summary>
            <param name="obj">Объект, чей файл сохранен</param>
            <param name="attributeValue">Значение атрибута</param>
            <param name="file">Описатель сохраненного файла</param>
            <param name="vault">Файловое хранилище, подтвердившее принятие тела файла</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeClientTrigger.CanConvertInput(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.Attribute,System.Object)">
            <summary>
            Вызывает обработчики CanConvertInput
            Вызывается на клиенте для проверки пригодности значения для присваивания атрибуту.
            Используется для проверки возможности операции вставки из буфера
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>true, если значение <paramref name="newValue"/> пригодно для атрибута, false если не пригодно</returns>
            <remarks>Все исключения перехватываются (репорт на сервер)</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeClientTrigger.ConvertInput(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.Attribute,System.Object@)">
            <summary>
            Вызывает обработчики конвертации вводимого значения перед присвоением его атрибуту.
            Вызывается на клиенте перед сменой значения атрибута (включая операции вставки из буфера)
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>true, если конвертация произошла и/или значение <paramref name="newValue"/> пригодно для атрибута.
            false означает, что следует вызвать обработчик предшественника</returns>
            <remarks>Исключения НЕ перехватываются</remarks>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IIndexDef">
            <summary>
            Интерфейс для скриптового индекса, реализуемого модулем 
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IIndexDef.GetImageKey(ProgramSoyuz.PLM.Scripting.IImageListManager)">
            <summary>
            Иконка индекса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IIndexDef.NameKey">
            <summary>
            Ключ, идентифицирующий индекс
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IIndexDef.NameUI">
            <summary>
            Название индекса для пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IIndexDef.Notes">
            <summary>
            Описание индекса
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchOperationBase">
            <summary>
            Поисковый запрос
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.m_eventContainer">
            <summary>
            Обертка для события (чтобы можно было использовать сериализацию по умолчанию)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Session">
            <summary>
            Ссылка на клиентскую сессию (используется серверным поисковым потоком при обработке клиентских запросов)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.IsSynkMode">
            <summary>
            Признак необходимости синхронного выполнения поискового запроса (без распределения по разным потокам)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.m_ObjectPacks">
            <summary>
            Поступившие пакеты объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.m_AttributeNameKeyPacks">
            <summary>
            Поступившие ключи атрибутов, по которым объекты были найдены
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase._isStarted">
            <summary>
            Флаг устанавливается при запуске поиска на выполнение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.m_Complete">
            <summary>
            Флаг устанавливается при поступлении последнего пакета с результатами поиска
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase._hasMoreData">
            <summary>
            Флаг устанавливается при поступлении последнего пакета с результатами поиска в случае если поиск может быть продолжен.
            Для получения следующей порции данных
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.m_Cancelled">
            <summary>
            Флаг устанавливается при отмене поискового запроса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.m_CompleteEvent">
            <summary>
            Событие используемое для синхронизации при ожидании завершения поиска
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.m_OperationId">
            <summary>
            Идентификатор поискового запроса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.m_OperationName">
            <summary>
            Пользовательское название поисковой операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.m_Priority">
            <summary>
            Приоритет потока выполнения поисковой операции на сервере
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.m_RetrieveObjectsWithAttributes">
            <summary>
            Если true то результат поиска приходит в виде объектов с атрибутами, false - легковесные
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.DoValidate">
            <summary>
            Валидация запроса перед отправкой на выполнение
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Execute(System.Boolean)">
            <summary>
            Запуск поисковой операции на исполнение
            </summary>
            <param name="asynchronous">true для асинхронного поиска</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Continue(System.Boolean)">
            <summary>
            Возобновление поисковой операции для получения очередной порции данных
            </summary>
            <param name="asynchronous">true для асинхронного поиска</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.CancelSearch">
            <summary>
            Отмена асинхронной поисковой операции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.PrepareAsynchronousExecution(System.Int32)">
            <summary>
            Подготовка объекта к асинхронному поисковому запросу
            </summary>
            <param name="id">Идентификатор поисковой операции</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Prepare">
            <summary>
            Подготовка операции к выполнению запроса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.m_ObjectsSentToClientCount">
            <summary>
            Число объектов, отправленных в клиентскую сессию. Используется внутренней логикой сервера
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Subscribe(ProgramSoyuz.PLM.Scripting.SearchOperationBase.SearchResultNotification)">
            <summary>
            Подписка на событие о получении очередной пачки результатов поиска
            </summary>
            <param name="handler">обработчик события</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Unsubscribe(ProgramSoyuz.PLM.Scripting.SearchOperationBase.SearchResultNotification)">
            <summary>
            Отписка от события о получении очередной пачки результатов поиска
            </summary>
            <param name="handler">обработчик события</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.FinalizeWithError(System.Exception)">
            <summary>
            Вызывается при поступлении с сервера очередной пачки найденных объектов
            </summary>
            <param name="exception">Ошибка, произошедшая во время выполнения поиска</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.AddToResults(System.Collections.Generic.IList{System.UInt32},System.Collections.Generic.IList{System.String},System.Boolean,System.Boolean)">
            <summary>
            Вызывается при поступлении с сервера очередной пачки найденных объектов
            </summary>
            <param name="objects">Найденные объекты</param>
            <param name="attributeNameKeys">атрибуты по которым объекты найдены (для некоторых запросов)</param>
            <param name="final">true означает, что операция завершена и больше результатов не будет</param>
            <param name="hasMoreData">true означает, что поиск может быть возобновлен для получения следующей порции данных</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.DoCancel">
            <summary>
            Отмена выполнения поисковой операции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.DoUnblock">
            <summary>
            Разблокировка выполнения поисковой операции, на случай, когда основной поток ждет событие о завершении
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Dispose">
            <summary>
            Выполняет определяемые приложением задачи, связанные с удалением, высвобождением или сбросом неуправляемых ресурсов.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.m_ActualQuery">
            <summary>
            По получению результатов от сервера, содержит реальный поисковый SQL запрос
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.GetHelpInfo(ProgramSoyuz.DataModel.RelationalOperator,System.String@,System.String@)">
            <summary>
            Возвращает справочную информацию по поисковому оператору
            </summary>
            <param name="op">Поисковый оператор</param>
            <param name="title">Заголовок блока информации</param>
            <param name="description">Собственно справочная информация</param>
            <returns>true, если информация доступна</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.GetEnumHelpInfo``1(``0)">
            <summary>
            Вытаскивает атрибут HelpInfo у переданного енума
            </summary>
            <typeparam name="T">Перечисление</typeparam>
            <param name="val">Значение перечисления</param>
            <returns>Атрибут HelpInfoAttribute, если есть, либо null</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Handler">
            <summary>
            Серверный поисковый обработчки для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Name">
            <summary>
            Пользовательское название поисковой операции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Priority">
            <summary>
            Приоритет потока выполняющего поисковую операцию на сервере.
            По умолчанию асинхронные запросы выполняются с пониженным приоритетом.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.RetrieveObjectsWithAttributes">
            <summary>
            Если true то результат поиска приходит в виде объектов с атрибутами, false - легковесные
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.IsStarted">
            <summary>
            Возвращает true, если поисковый запрос в данный момент выполняется
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.IsComplete">
            <summary>
            Возвращает true, если поисковый запрос завершен
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.HasMoreData">
            <summary>
            Возвращает true, если завершенный поисковый запрос может быть возобновлен для получения следующей порции данных
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.IsCancelled">
            <summary>
            Флаг устанавливается при отмене поискового запроса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.ServerException">
            <summary>
            Исключение, переданное сервером как результат поиска
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.CompleteEvent">
            <summary>
            Событие используемое для синхронизации при ожидании завершения поиска
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.OperationId">
            <summary>
            Идентификатор поискового запроса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.ResultsCount">
            <summary>
            Число найденных объектов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.FoundObjects">
            <summary>
            Перечисляет результаты поиска
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.LastObjectsFound">
            <summary>
            Перечисляет последний пришедший пакет с результатами поиска
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Entity">
            <summary>
            Идентификатор искомой сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.MaxResultsCount">
            <summary>
            Максимальное число интересующих объектов в результате. 0 означает, что интересуют все
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.MaxSQLResultsCount">
            <summary>
            Максимальное число объектов, возвращаемое SQL запросом. 0 означает - без ограничения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.MaxQueryTimeout">
            <summary>
            Максимальное число миллисекунд, отводимое на фазу получения данных из базы. 0 означает - без ограничения
            </summary>
            <remarks>По умолчанию 15 секунд</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.IsResumable">
            <summary>
            True означает, что запрос будет автоматически приостанавливаться каждый раз по получению 
            <see cref="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.MaxResultsCount"/> найденных объектов. Для возобновления поисковой операции
            следует использовать метод <see cref="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Continue(System.Boolean)"/>. Для освобождения занятых ресурсов в этом случае 
            потребуется вызов <see cref="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.CancelSearch"/> или <see cref="M:ProgramSoyuz.PLM.Scripting.SearchOperationBase.Dispose"/>.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.IsCaseSensitive">
            <summary>
            Задает способ сравнения строк. null - использует настройку базы по умолчанию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.ObjectsSentToClientCount">
            <summary>
            Число объектов, отправленных в клиентскую сессию. Используется внутренней логикой сервера
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.IdentityName">
            <summary>
            Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.FriendlyIdentityName">
            <summary>
            Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.ProgramSoyuz#DataModel#IStrictlyNamedObject#ObjectIdentifier">
            <summary>
            Возвращает полный идентификатор объекта (тип сущности, id)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperationBase.ActualQuery">
            <summary>
            По получению результатов от сервера, содержит реальный поисковый SQL запрос
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchOperationBase.PriorityEnum">
            <summary>
            Приоритет выполнения поисковой операции на сервере
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchOperationBase.SearchResultNotification">
            <summary>
            Делегат для рассылки событий о поступлении очередной порции найденных объектов
            </summary>
            <param name="op"></param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchOperationBase.EventContainer">
            <summary>
            Обертка для события.
            </summary>
            <remarks>Этот наворот нужен чтобы работала сериализация по умолчанию, так как на 
            событие атрибут NonSerialized не ставится (v3.5)</remarks>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchOperation">
            <summary>
            Поисковый запрос
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperation.#ctor(ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Конструктор поисковой операции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperation.#ctor(ProgramSoyuz.DataModel.EntityIdentifier,System.String)">
            <summary>
            Конструктор поисковой операции
            </summary>
            <param name="entity">Тип сущности искомых объектов</param>
            <param name="operationName">Пользовательское название поисковой операции</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperation.#ctor(ProgramSoyuz.DataModel.EntityIdentifier,ProgramSoyuz.PLM.Scripting.SearchOperation,ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор вложенной поисковой операции
            </summary>
            <param name="entity">Тип сущности искомых объектов</param>
            <param name="parentOperation">Родительская поисковая операция</param>
            <param name="searchItem">Корень поискового дерева</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperation.GenerateCode">
            <summary>
            Генерация c# кода для данного поискового запроса
            </summary>
            <returns>Сгенерированный c# код</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperation.Prepare">
            <summary>
            Подготовка операции к выполнению запроса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchOperation.m_Containers">
            <summary>
            Список контейнеров, среди которых ищем
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperation.DoValidate">
            <summary>
            Валидация запроса перед отправкой на выполнение
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchOperation.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchOperation)">
            <summary>
            Возвращает true, если поисковые критерии этой и указанной операции совпадают
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperation.SearchExpressionTree">
            <summary>
            Корень дерева поискового запроса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperation.AllDirectSearchItems">
            <summary>
            Перечисляет рекурсивно всех прямых детей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperation.AllSearchItems">
            <summary>
            Перечисляет рекурсивно всех прямых и косвенных детей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperation.ContainerTemplate">
            <summary>
            Шаблон, фильтрующий используемые контейнеры
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperation.Containers">
            <summary>
            Список контейнеров, среди которых ищем
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperation.IncludeInheritedContainerTemplates">
            <summary>
            Возвращает true если ищем контейнеры указанного шаблона и дочерних шаблонов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchOperation.IncludeInheritedContainers">
            <summary>
            Ищем ИО в указанных контейнерах и дочерних к ним
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchReferencesOperation">
            <summary>
            Поисковый запрос ссылок (с атрибутами) на указанный ИО
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchReferencesOperation.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
            <param name="io">Объект, ссылки на который ищем</param>
            <param name="entityToSearch">Ищем ссылки среди объектов указанной сущности</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchReferencesOperation.DoValidate">
            <summary>
            Валидация запроса перед отправкой на выполнение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchReferencesOperation.TargetObject">
            <summary>
            Объект ссылки на который ищем в этом поисковом запросе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchReferencesOperation.FoundReferences">
            <summary>
            Перечисляет результаты поиска в виде пар [Объект,ключ атрибута]
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchInfoObjectFilterItem">
            <summary>
            Класс для поиска по системным свойствам ИО
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectFilterItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectFilterItem.DoValidate">
            <summary>
            Выполняет предварительную проверку корректности запроса.
            Генерирует исключение, если что-то не корректно
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectFilterItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField">
            <summary>
            Дополнительное поле для отображения на этапе диаграммы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField._name">
            <summary>
            Название поля для программиста
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField._value">
            <summary>
            Отображаемый текст поля
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField._fontSize">
            <summary>
            Размер шрифта для отображения поля
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField._includeInTooltip">
            <summary>
            true, если поле следует включить в всплывающую подсказку
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField.#ctor(System.String,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="name">Название поля для программиста</param>
            <param name="value">Отображаемый текст поля</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField.#ctor(System.String,System.String,System.Single)">
            <summary>
            Конструктор
            </summary>
            <param name="name">Название поля для программиста</param>
            <param name="value">Отображаемый текст поля</param>
            <param name="fontSize">Размер шрифта для отображения поля</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="name">Название поля для программиста</param>
            <param name="value">Отображаемый текст поля</param>
            <param name="includeInTooltip">true, если поле следует включить в всплывающую подсказку</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField.#ctor(System.String,System.String,System.Single,System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="name">Название поля для программиста</param>
            <param name="value">Отображаемый текст поля</param>
            <param name="fontSize">Размер шрифта для отображения поля</param>
            <param name="includeInTooltip">true, если поле следует включить в всплывающую подсказку</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField.Name">
            <summary>
            Название поля для программиста
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField.Value">
            <summary>
            Отображаемый текст поля
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField.FontSize">
            <summary>
            Размер шрифта для отображения поля
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramNodeField.IncludeInTooltip">
            <summary>
            true, если поле следует включить в всплывающую подсказку
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IPluginFileOwner">
            <summary>
            Интерфейс для взаимодействия с владельцами наблюдаемых менеджером файлов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPluginFileOwner.OnFileErased(ProgramSoyuz.PLM.Scripting.PluginFileDescriptor)">
            <summary>
            Вызывается при исчезновении файла из наблюдаемой папки
            </summary>
            <param name="pFile">Удаленный файл</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPluginFileOwner.OnFileChanged(ProgramSoyuz.PLM.Scripting.PluginFileDescriptor,ProgramSoyuz.PLM.Scripting.PluginFileDescriptor)">
            <summary>
            Вызывается при изменении файла в наблюдаемом каталоге
            </summary>
            <param name="pOldFile">Старый файл</param>
            <param name="pNewFile">Новый файл</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPluginFileOwner.IsRunning">
            <summary>
            Возвращает true если для этого модуля есть загруженные работающие объекты
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPluginFileOwner.IsValid">
            <summary>
            Возвращает true если для этого модуля есть все необходимые файлы
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor">
            <summary>
            Класс для хранения сведений о файле (например файлы модулей конфигурации)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.m_pFileInfo">
            <summary>
            Набор сведений о файле
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.m_SHA1Hash">
            <summary>
            SHA1 хеш этого файла
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.m_RelativePath">
            <summary>
            Относительный путь к файлу
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.m_pFileBody">
            <summary>
            Стрим для чтения содержимого файла
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.m_aOwners">
            <summary>
            Список объектов, зависящих от этого файла
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.AddOwner(ProgramSoyuz.PLM.Scripting.IPluginFileOwner)">
            <summary>
            Добавляет владельца, если его еще не было в списке
            </summary>
            <param name="pOwner">Объект, которому нужен этот файл</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.RemoveOwner(ProgramSoyuz.PLM.Scripting.IPluginFileOwner)">
            <summary>
            Удаляет владельца из списка
            </summary>
            <param name="pOwner">Объект, чей файл</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.#ctor(System.String,System.IO.FileInfo)">
            <summary>
            Конструктор
            </summary>
            <param name="relativePath">Относительный путь к файлу</param>
            <param name="fileInfo">Набор сведений о файле</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.TryLockFile">
            <summary>
            Блокирует файл от изменений. Возвращает false в случае IO эксепшиона
            </summary>
            <returns>true если все получилось</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.LockFile">
            <summary>
            Блокирует файл от изменений.
            </summary>
            <returns>true если все получилось</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.LockFile(System.Int32)">
            <summary>
            Блокирует файл от изменений.
            </summary>
            <param name="waitTimeout">промежуток времени в миллисекундах, в течение которого следует повторно пытаться заблокировать файл, если н оказался занят</param>
            <returns>true если все получилось</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.ReleaseFileLock">
            <summary>
            Освобождает открытый файл
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.System#IDisposable#Dispose">
            <summary>
            Освобождает открытый файл
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.DebuggerDisplayString">
            <summary>
            Возвращает строковое представление объекта для дебагера
            </summary>
            <returns>Представление объекта для дебагера</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.IsTheSameFile(ProgramSoyuz.PLM.Scripting.PluginFileDescriptor)">
            <summary>
            Возвращает true если у двух файлов совпадает хеш и размер
            </summary>
            <param name="pFile">Файл для сравнения</param>
            <returns>true если у двух файлов совпадает хеш и размер</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.Owners">
            <summary>
            Список объектов, зависящих от этого файла
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.HasOwner">
            <summary>
            Возвращает true, если этот файл используется кем-нибудь
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.RelativePath">
            <summary>
            Относительный путь к файлу
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.FullPath">
            <summary>
            Полный путь к файлу
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.FileBody">
            <summary>
            Стрим для чтения содержимого файла
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.IsPlugin">
            <summary>
            Возвращает true если этот dll файл является плагином
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.Targets">
            <summary>
            Ключи приложений, которые могут использовать этот плагин (только для dll файла сборки)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.EnvironmentKeys">
            <summary>
            Ключи окружения клиентского приложения, при наличии которых плагин может работать
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.DeployWithFiles">
            <summary>
            Файлы которые следует носить вместе с этим плагином (только для dll файла сборки)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.Title">
            <summary>
            Название сборки (только для dll файла сборки)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.Description">
            <summary>
            Описание сборки (только для dll файла сборки)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.Version">
            <summary>
            Версия сборки (только для dll файла сборки)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.Company">
            <summary>
            Производитель сборки (только для dll файла сборки)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.SHA1Hash">
            <summary>
            SHA1 хеш этого файла
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PluginFileDescriptor.FileInfo">
            <summary>
            Набор сведений о файле
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ObjectMultiCustomizatorsList">
            <summary>
            Индекс кастомизаторов объектов. Для каждого объекта хранится список его кастомизаторов (из компонентов конфигурации)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ObjectMultiCustomizatorsList.m_Objects">
            <summary>
            Массив словарей кастомизаторов для каждого типа сущности
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ObjectMultiCustomizatorsList.emptyList">
            <summary>
            Пустой массив для возврата заглушки при отсутствии кастомизаторов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ObjectMultiCustomizatorsList.Add(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32,ProgramSoyuz.PLM.Scripting.CustomizationBase)">
            <summary>
            Добавляет объект в индекс
            </summary>
            <param name="entity">Тип сущности</param>
            <param name="id">Идентификатор кастомизируемого объекта</param>
            <param name="customizator">Объект для добавления в индекс</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ObjectMultiCustomizatorsList.GetCustomizators(ProgramSoyuz.DataModel.EntityIdentifier,System.UInt32)">
            <summary>
            Ищет в индексе объект по идентификатору
            </summary>
            <param name="entity">Тип сущности запрашиваемого объекта</param>
            <param name="id">Идентификатор запрошенного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ObjectMultiCustomizatorsList.Clear">
            <summary>
            Сбрасывает все кастомизаторы из индекса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ObjectMultiCustomizatorsList.All">
            <summary>
            Перечисляет все объекты, имеющиеся в индексе
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagramLink">
            <summary>
            Связь между этапами на диаграмме шаблона задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.m_Data">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.m_RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreateWrapper(ProgramSoyuz.PLM.Scripting.TaskDiagram,ProgramSoyuz.DataModel.TaskDiagramLinkBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="owner">Владелец (диаграмма)</param>
            <param name="node">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.#ctor(ProgramSoyuz.PLM.Scripting.TaskDiagram,ProgramSoyuz.DataModel.TaskDiagramLinkBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="owner">Диаграмма-владелец данного объекта</param>
            <param name="link">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.#ctor(ProgramSoyuz.PLM.Scripting.TaskDiagram,ProgramSoyuz.PLM.Scripting.TaskDiagramNode,ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="owner">Диаграмма-владелец данного объекта</param>
            <param name="sourceNode">Стартовый этап</param>
            <param name="targetNode">Целевой этап</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.Erase">
            <summary>
            Удаление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.OnModified">
            <summary>
            Вызывается при изменениях внутри объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.m_Params">
            <summary>
            Кешированный набор десериализованных параметров объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.GetParams``1">
            <summary>
            Доступ к десериализованному набору параметров объекта
            </summary>
            <returns>Кешированный объект с набором параметров</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.SetParams``1(``0)">
            <summary>
            Сохранение сериализованных параметров объекта в соответствующем атрибуте
            </summary>
            <typeparam name="TParams"></typeparam>
            <param name="data"></param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.m_DisplayParams">
            <summary>
            Кешированный набор десериализованных параметров отображения объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.GetDisplayParams``1">
            <summary>
            Доступ к десериализованному набору параметров отображения объекта
            </summary>
            <returns>Кешированный объект с набором параметров</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.SetDisplayParams``1(``0)">
            <summary>
            Сохранение сериализованных параметров отображения объекта в соответствующем атрибуте
            </summary>
            <typeparam name="TDisplayParams"></typeparam>
            <param name="data"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.ToString">
            <summary>
            Возвращает основное название объекта по умолчанию
            </summary>
            <returns>Возвращает основное название объекта по умолчанию</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink._state">
            <summary>
            Текущее состояние этапа в ран-тайме
            Актуально только для несохраненных диаграмм
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink._isLoopCreationLink">
            <summary>
            Флаг, обозначающий, что эта связь является возвратной к более ранней точке графа блок-схеиы.
            Актуально только для несохраненных диаграмм
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.Owner">
            <summary>
            Жиаграмма-владелец данной связи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.Params">
            <summary>
            Дополнительное поле для параметров этого этапа на диаграмме задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.DisplayParams">
            <summary>
            Дополнительное поле для визуальных параметров этого этапа на диаграмме задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.IsTreatAsLoopCreation">
            <summary>
            true если Связь считается возвратной вне зависимости от реальной раскладки 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.IsTreatAsDirect">
            <summary>
            true если Связь считается прямой, если позволяет окружающая обстановка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.SourceNode">
            <summary>
            Ссылка на стартовый этап связи (связь исходит из этого этапа)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.TargetNode">
            <summary>
            Ссылка на целевой этап связи (связь входит в этот этап)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.IsLoopCreationLink">
            <summary>
            Флаг, обозначающий, что эта связь является возвратной к более ранней точке графа блок-схеиы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.State">
            <summary>
            Статус связи после предварительного анализа диаграммы (по версии в кеше)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.StateFixedAt">
            <summary>
            Дата-время фиксации данного статуса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.RevisionNumber">
            <summary>
            Номер ревизии (итерации, среза значений) диаграммы, в которой элемент был создан
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.IsErased">
            <summary>
            Флаг, обозначающий, что в этой ревизии объект отсутствует
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.ProgramSoyuz#DataModel#ITaskDiagramObject#State">
            <summary>
            Текущее состояние этапа в ран-тайме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.ProgramSoyuz#DataModel#ITaskDiagramLink{ProgramSoyuz#PLM#Scripting#TaskDiagramNode}#IsLoopCreationLink">
            <summary>
            Флаг, обозначающий, что эта связь является возвратной к более ранней точке графа блок-схеиы
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreationData.m_SourceNode">
            <summary>
            Ссылка на стартовый этап связи (связь исходит из этого этапа)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreationData.m_TargetNode">
            <summary>
            Ссылка на шаблон задачи, которую представляет этот этап на диаграмме
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreationData.Params">
            <summary>
            Дополнительное поле для параметров этого этапа на диаграмме задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreationData.DisplayParams">
            <summary>
            Дополнительное поле для визуальных параметров этого этапа на диаграмме задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreationData.RevisionNumber">
            <summary>
            Номер ревизии создания объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreationData.IsErased">
            <summary>
            Флаг обозначающий создание "удаленного" объекта в указанной ревизии
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreationData.WriteTo(ProgramSoyuz.DataModel.TaskDiagramLinkBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="body">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreationData.SourceNode">
            <summary>
            Родительская учетная запись
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramLink.CreationData.TargetNode">
            <summary>
            Родительская учетная запись
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.ViewerTaskShape">
            <summary>
            Фигура подзачачи для вьювера
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.ViewerTaskShape.CalculateSubTask">
            <summary>
            Вычисляет экземпляр подзадачи, связанной с текущим этапом
            </summary>
            <returns>Экземпляр подзачади или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.ViewerTaskShape.GetTaskActor">
            <summary>
            Исполинтель текущего этапа
            </summary>
            <returns>Пользователь или null</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.ModifySuspend">
            <summary>
            Глобальный признак приостановки пометки о необходимости сохранени
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.ModifySuspend.Suspend">
            <summary>
            true - внесенные изменения не требутеся сохранять и показыввать как измененные
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfHelper.GetLines(System.String,System.Single,System.Single@)">
            <summary>
            Метод получения разбивки строк при печати текста в рамках определенной ширины.
            </summary>
            <param name="rtf">Текст</param>
            <param name="width">Ограничение по ширине, мм.</param>
            <param name="height">Реальная высота нарисованного текста</param>
            <returns>Массив строк</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfHelper.GetLines(System.String,System.Single,ProgramSoyuz.Common.Win32.EditWordBreakProc,System.Single@)">
            <summary>
            Метод получения разбивки строк при печати текста в рамках определенной ширины.
            </summary>
            <param name="rtf">Текст</param>
            <param name="width">Ограничение по ширине, мм.</param>
            <param name="proc">Функция обратного вызова для определения переносов</param>
            <param name="height">Реальная высота нарисованного текста</param>
            <returns>Массив строк</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfHelper.GetPage(System.String,System.Int32,System.Single,System.Single,ProgramSoyuz.Common.Win32.EditWordBreakProc,System.Single@,System.Int32@,System.Int32@)">
            <summary>
            Получение rtf текста фрагмента текста в рамках определенной ширины и высоты.
            </summary>
            <param name="rtf">Текст</param>
            <param name="startCharIndex">Индекс первого символа, помещаемого на страницу</param>
            <param name="pageWidth">Ограничение по ширине, мм.</param>
            <param name="pageHeight">Ограничение по высоте, мм.</param>
            <param name="proc">Функция обратного вызова для определения переносов</param>
            <param name="height">Реальная высота нарисованного текста</param>
            <param name="charsCount">Число символов, поместившихся на страницу</param>
            <param name="totalCharsCount">Общее число символов во всем тексте</param>
            <returns>Ртф текст запрошенного фрагмента страницы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfHelper.GetRange(System.String,System.Int32,System.Int32)">
            <summary>
            Получение rtf фрагмента текста в указанном диапазоне.
            </summary>
            <param name="rtf">Текст</param>
            <param name="startCharIndex">Индекс первого символа, помещаемого на страницу</param>
            <param name="charsCount">Число запрошенных символов</param>
            <returns>Ртф текст запрошенного фрагмента страницы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfHelper.GetHeight(System.String,System.Single,ProgramSoyuz.Common.Win32.EditWordBreakProc)">
            <summary>
            Метод определения высоты текста, вписанного в фиксированную ширину
            </summary>
            <param name="rtf">Текст</param>
            <param name="pageWidth">Ограничение по ширине, мм.</param>
            <param name="proc">Функция обратного вызова для определения переносов</param>
            <returns>Высоту в мм</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfHelper.PageToEmf(System.String,System.Int32,System.Single,System.Single,ProgramSoyuz.Common.Win32.EditWordBreakProc,System.Drawing.RectangleF,System.Drawing.SizeF@,System.Drawing.PointF@)">
            <summary>
            Создает метафайл, в котором нарисована строка текста RTF.
            </summary>
            <param name="rtf">Строчка текста, который нужно нарисовать</param>
            <param name="startCharIndex">Индекс первого символа, помещаемого на страницу</param>
            <param name="pageWidth">Ограничение по ширине, мм.</param>
            <param name="pageHeight">Ограничение по высоте, мм.</param>
            <param name="proc">Функция обратного вызова для определения переносов</param>
            <param name="metafileBounds">Рамки для метафайла (с запасом на вынос фрагментов символов за пределы требуемой ширины-высоты страницы)</param>
            <param name="actualSize">Реальный размер нарисованного текста</param>
            <param name="scale">Масштаб, на который надо скорректировать размер метафайла при рисовании</param>
            <returns>Метафайл с изображением строки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfHelper.LineToEmf(System.String,System.Drawing.RectangleF,System.Drawing.SizeF@,System.Drawing.PointF@)">
            <summary>
            Создает метафайл, в котором нарисована строка текста RTF.
            </summary>
            <param name="rtf">Строчка текста, который нужно нарисовать</param>
            <param name="bounds">Максимальный допустимый размер метафайл</param>
            <param name="actualSize">Реальный размер нарисованного текста</param>
            <param name="scale">Масштаб, на который надо скорректировать размер метафайла при рисовании</param>
            <returns>Метафайл с изображением строки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfHelper.GetLineSize(System.String)">
            <summary>
            Возвращает размер строки текста RTF.
            </summary>
            <param name="rtf">Строчка текста, который нужно нарисовать</param>
            <returns>Размер строки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfHelper.SetDefaultFont(System.String,System.Single,System.Drawing.FontStyle)">
            <summary>
            Установка шрифта по умолчанию для RTF.
            </summary>
            <param name="familyName">Семейство шрифта</param>
            <param name="size">Размер</param>
            <param name="style">Стиль</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfHelper.IsRTF(System.String)">
            <summary>
            Возвращает true, если переданный текст является RTF текстом ( начинается с {\\rtf1 )
            </summary>
            <param name="text">Проверяемый текст</param>
            <returns>true, если текст является RTF текстом</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfHelper.RTFToPlainText(System.String)">
            <summary>
            Перевод Rtf текста в простой текст через RichTextControl.
            Потокобезопасен
            </summary>
            <param name="richText">RTF текст</param>
            <returns>Простой текст</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfHelper.CombineRTF(System.String,System.String,System.Boolean)">
            <summary>
            Складывает два rtf текста.
            Потокобезопасен
            </summary>
            <param name="richText1">RTF текст 1</param>
            <param name="richText2">RTF текст 2</param>
            <param name="lineBetween">true если следует добавить перевод строки между двумя текстами</param>
            <returns>Объединенный RTF текст</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RtfHelper.Rtb">
            <summary>
            RichTextBox, с которым работаю все методы данного класса
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.DisplayElement">
            <summary>
            Элемент содержимого страницы печатного документа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DisplayElement._element">
            <summary>
            Объект отображаемый данным графическим элементом
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DisplayElement._boundingBox">
            <summary>
            Обрамляющий прямоугольник области, занимаемой элементом
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DisplayElement.Element">
            <summary>
            Объект отображаемый данным графическим элементом
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DisplayElement.BoundingBox">
            <summary>
            Обрамляющий прямоугольник области, занимаемой элементом
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DisplayElement.CmdTarget">
            <summary>
            Ссылка на внутренний объект элемента страницы
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.DisplayElementsList">
            <summary>
              Класс оболочка для списка элементов содержимого страницы печатного документа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DisplayElementsList._elements">
            <summary>
              Список элементов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DisplayElementsList.#ctor">
            <summary>
              Конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DisplayElementsList.Add(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Drawing.RectangleF)">
            <summary>
              Adds an item to the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name = "item">The object to add to the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <param name="boundingBox">Обрамляющий прямоугольник элемента</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DisplayElementsList.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref = "T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DisplayElementsList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              An <see cref = "T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DisplayElementsList.Add(ProgramSoyuz.PLM.Scripting.DisplayElement)">
            <summary>
              Adds an item to the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name = "item">The object to add to the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DisplayElementsList.Clear">
            <summary>
              Removes all items from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DisplayElementsList.Contains(ProgramSoyuz.PLM.Scripting.DisplayElement)">
            <summary>
              Determines whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
              true if <paramref name = "item" /> is found in the <see cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name = "item">The object to locate in the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DisplayElementsList.CopyTo(ProgramSoyuz.PLM.Scripting.DisplayElement[],System.Int32)">
            <summary>
              Copies the elements of the <see cref = "T:System.Collections.Generic.ICollection`1" /> to an <see
               cref = "T:System.Array" />, starting at a particular <see cref = "T:System.Array" /> index.
            </summary>
            <param name = "array">The one-dimensional <see cref = "T:System.Array" /> that is the destination of the elements copied from <see
               cref = "T:System.Collections.Generic.ICollection`1" />. The <see cref = "T:System.Array" /> must have zero-based indexing.</param>
            <param name = "arrayIndex">The zero-based index in <paramref name = "array" /> at which copying begins.</param>
            <exception cref = "T:System.ArgumentNullException"><paramref name = "array" /> is null.</exception>
            <exception cref = "T:System.ArgumentOutOfRangeException"><paramref name = "arrayIndex" /> is less than 0.</exception>
            <exception cref = "T:System.ArgumentException"><paramref name = "array" /> is multidimensional.-or-<paramref
              name = "arrayIndex" /> is equal to or greater than the length of <paramref name = "array" />.-or-The number of elements in the source <see
               cref = "T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref
               name = "arrayIndex" /> to the end of the destination <paramref name = "array" />.-or-Type cannot be cast automatically to the type of the destination <paramref
               name = "array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DisplayElementsList.Remove(ProgramSoyuz.PLM.Scripting.DisplayElement)">
            <summary>
              Removes the first occurrence of a specific object from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              true if <paramref name = "item" /> was successfully removed from the <see
               cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref
               name = "item" /> is not found in the original <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name = "item">The object to remove from the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DisplayElementsList.IndexOf(ProgramSoyuz.PLM.Scripting.DisplayElement)">
            <summary>
            Определяет индекс заданного элемента коллекции <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            Индекс <paramref name="item"/> если он найден в списке; в противном случае его значение равно -1.
            </returns>
            <param name="item">Объект, который требуется найти в <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DisplayElementsList.Insert(System.Int32,ProgramSoyuz.PLM.Scripting.DisplayElement)">
            <summary>
            Вставляет элемент в список <see cref="T:System.Collections.Generic.IList`1"/> по указанному индексу.
            </summary>
            <param name="index">Индекс (с нуля), по которому следует вставить параметр <paramref name="item"/>.</param><param name="item">Объект, вставляемый в <see cref="T:System.Collections.Generic.IList`1"/>.</param><exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index"/> не является допустимым индексом в <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IList`1"/> доступен только для чтения.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DisplayElementsList.RemoveAt(System.Int32)">
            <summary>
            Удаляет элемент <see cref="T:System.Collections.Generic.IList`1"/> по указанному индексу.
            </summary>
            <param name="index">Индекс (с нуля) удаляемого элемента.</param><exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index"/> не является допустимым индексом в <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IList`1"/> доступен только для чтения.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DisplayElementsList.Count">
            <summary>
              Gets the number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              The number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DisplayElementsList.IsReadOnly">
            <summary>
              Gets a value indicating whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
              true if the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DisplayElementsList.Item(System.Int32)">
            <summary>
            Получает или задает элемент по указанному индексу.
            </summary>
            <returns>
            Элемент с указанным индексом.
            </returns>
            <param name="index">Индекс (с нуля) элемента, который необходимо получить или задать.</param><exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index"/> не является допустимым индексом в <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">Свойство задано, и объект <see cref="T:System.Collections.Generic.IList`1"/> доступен только для чтения.</exception>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TemplateParentLink">
            <summary>
              Ссылка на дополнительный родительский шаблон
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.m_pOwner">
            <summary>
              Шаблон-владелец данного атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.m_pData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.PrepareModification">
            <summary>
              Подготовка объекта к внесению изменений
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.m_pRealObject">
            <summary>
              Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
              При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreateWrapper(ProgramSoyuz.DataModel.TemplateParentLinkBase,System.Boolean)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "constraint">Реальный объект</param>
            <param name = "original">false, если предполагается возможность редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
              Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.Uninitialized">
            <summary>
              Значение для обозначения неицициализированной ссылки на предшественника по наследованию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.#ctor">
            <summary>
              Конструктор для значения Uninitialized
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.#ctor(ProgramSoyuz.DataModel.TemplateParentLinkBase,System.Boolean)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "templateParentLink">Реальный объект</param>
            <param name = "original">false, если предполагается возможность редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "template">Шаблон к которому относится ограничение</param>
            <param name = "linkedTemplate">Шаблон с которым это ограничение устанавливает связь</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.#ctor(ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.MakeUnsavedCopy(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Создает новый объект - несохраненную копию данного
            </summary>
            <param name="newParent">Новый родительский шаблон, для которого делается копия объекта</param>
            <returns>Копию объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
              Инициализирует этот объект по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
              Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name = "objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.IdAssigned(System.UInt32)">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name = "id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.SaveCompleted">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
              что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.MoveTo(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Перенос объекта к другому родителю.
            </summary>
            <param name="newParent">Новый родительский объект для оганичения шаблона</param>
            <exception cref="T:ProgramSoyuz.PLM.Scripting.InvalidRequestException">Объект еще не создан</exception>
            <remarks>
              Происходит только перенос к другому родителю. 
              Какого-либо сохранения общих свойств этим методом не осуществляется
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.DoCancelChanges(System.Boolean)">
            <summary>
              Отмена измений, сделанных в объекте
            </summary>
            <param name = "sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
              Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name = "range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CheckWrappedObject">
            <summary>
              Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
              Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.m_Predecessor">
            <summary>
              Предшественник по наследованию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.PrepareForAnotherKind(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Сбрасывает неактуальные атрибуты после создания копии объекта для шаблона другого типа.
            Вызывается в коде сеттера родительского шаблона
            </summary>
            <param name="oldKind">Старый тип шаблона</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.ToString">
            <summary>
              Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.Entity">
            <summary>
              Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.Owner">
            <summary>
              Шаблон-владелец данного атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.ChangedData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.RealObject">
            <summary>
              Доступ к "реальному" объекту.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.WrappedObject">
            <summary>
              Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.IsDirtySelf">
            <summary>
              Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.ParentConfigurationId">
            <summary>
              Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.ParentConfigurationInEffect">
            <summary>
              Конфигурация, к которой относится этот объект с учётом возможного наследования
              конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CodeOrder">
            <summary>
            Значение, определяющее порядок вызова кода кастомизации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CodeOrderNonModified">
            <summary>
              Числовой параметр ограничения на всякий случай (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.IsErasedByInheritance">
            <summary>
              Возвращает true если этот объект является удалённой заглушкой
              для исключения предшественника из иерархии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.FlagsNonModified">
            <summary>
              Набор битовых флагов объекта (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.DateCreated">
            <summary>
              Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreatedByUser">
            <summary>
              Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.DateModified">
            <summary>
              Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.ModifiedByUser">
            <summary>
              Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.LinkedTemplate">
            <summary>
              Целевой шаблон, по отношению к которому установлено правило вложения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.LinkedTemplateId">
            <summary>
              Целевой шаблон, по отношению к которому установлено правило вложения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.Parent">
            <summary>
              Доступ к родительскому шаблону
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.ParentMaster">
            <summary>
              Родительский шаблон (или его мастер, если родитель является модификатором)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.Predecessor">
            <summary>
              Предшественник по наследованию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.ModifiedClone">
            <summary>
              Модифицированная версия этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.HasCustomChanges">
            <summary>
            Возвращает true если в объекте что-либо кроме ссылки на шаблон было изменено.
            В этом случае ссылка подлежит экпорту в пакет
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.IdentityName">
            <summary>
              Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData">
            <summary>
              Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData.CodeOrder">
            <summary>
              Поле для сортировки, определяющее порядок вызова скриптов кастомизации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData.m_Parent">
            <summary>
              Родительский шаблон, к которому относится закладка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData.m_LinkedTemplate">
            <summary>
              Шаблон с которым это ограничение устанавливает связь
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData.m_ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData.WriteTo(ProgramSoyuz.DataModel.TemplateParentLinkBase.Body)">
            <summary>
              Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name = "pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData.MakeCopy(ProgramSoyuz.DataModel.TemplateParentLinkBase.Body)">
            <summary>
              Создает копию этого класса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData.Parent">
            <summary>
              Родительский шаблон
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData.LinkedTemplate">
            <summary>
              Шаблон с которым это ограничение устанавливает связь
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateParentLink.CreationData.ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TemplateParentLink.DistinctKeyEqualityComparer">
            <summary>
              Сравнивающий объект для реализации словарей разных с точки зрения наследования объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateParentLink.DistinctKeyEqualityComparer.Default">
            <summary>
              Сравнивающий объект для сортировки объектов по ключу
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PageDef">
            <summary>
              Определение закладки. 
              Закладка существует в контексте шаблона и обозначает группу атрибутов с интерфейсной точки зрения.
              Основное применение = это настройка закладки tab-controlа, включающая название, иконку, всплывающее описание.
              Атрибуты привязываются к закладке по ее ключу <see cref="P:ProgramSoyuz.PLM.Scripting.PageDef.NameKey"/>. Привязка "мягкая". При отображении объекта, 
              клиентское приложение отображает все страницы-закладки, на каждую из которых попадают атрибуты с соответствующим
              ключом закладки.
            </summary>
            <remarks>
              Привязка атрибута к несуществующей странице является штатной ситуацией.
            </remarks>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.m_pData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.PrepareModification">
            <summary>
              Подготовка объекта к внесению изменений
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.m_pRealObject">
            <summary>
              Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
              При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.CreateWrapper(ProgramSoyuz.DataModel.PageDefBase,System.Boolean)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "pageDef">Реальный объект</param>
            <param name = "original">false, если предполагается возможность редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
              Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.Uninitialized">
            <summary>
              Значение для обозначения неицициализированной ссылки на предшественника по наследованию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.#ctor">
            <summary>
              Конструктор для значения Uninitialized
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.#ctor(ProgramSoyuz.DataModel.PageDefBase,System.Boolean)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "pageDef">Реальный объект</param>
            <param name = "original">false, если предполагается возможность редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.#ctor(ProgramSoyuz.PLM.Scripting.Template,System.String)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "template">Шаблон к которому относится закладка</param>
            <param name = "nameKey">Программное название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.#ctor(ProgramSoyuz.PLM.Scripting.PageDef.CreationData)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.MakeUnsavedCopy(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Создает новый объект - несохраненную копию данного
            </summary>
            <param name="newParent">Новый родительский шаблон, для которого делается копия объекта</param>
            <returns>Копию объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
              Инициализирует этот объект по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
              Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name = "objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.IdAssigned(System.UInt32)">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name = "id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.SaveCompleted">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
              что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.MoveTo(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Перенос объекта к другому родителю.
            </summary>
            <param name="newParent">Новый родительский объект для закладки</param>
            <exception cref="T:ProgramSoyuz.PLM.Scripting.InvalidRequestException">Объект еще не создан</exception>
            <remarks>
              Происходит только перенос к другому родителю. 
              Какого-либо сохранения общих свойств этим методом не осуществляется
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.DoCancelChanges(System.Boolean)">
            <summary>
              Отмена измений, сделанных в объекте
            </summary>
            <param name = "sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.CheckWrappedObject">
            <summary>
              Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
              Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.GetNameUILocalizedNonModified(System.String)">
            <summary>
              Пользовательское название объекта (без применения модификаторов) (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.GetNotesLocalizedNonModified(System.String)">
            <summary>
              Пользовательские заметки об объекте (всплывающая подсказка) (без применения модификаторов) (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.GetHiddenInUIForObject(ProgramSoyuz.PLM.Scripting.IAttributableObject)">
            <summary>
              Вычисляет является ли данная закладка скрытой для данного объекта в текущем окружениии
            </summary>
            <param name = "obj">Отображаемый в UI объект </param>
            <returns>true означает что объект скрыт</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.m_Predecessor">
            <summary>
              Предшественник по наследованию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.PrepareForAnotherKind(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Сбрасывает неактуальные атрибуты после создания копии объекта для шаблона другого типа.
            Вызывается в коде сеттера родительского шаблона
            </summary>
            <param name="oldKind">Старый тип шаблона</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.MergeWith(ProgramSoyuz.PLM.Scripting.PageDef)">
            <summary>
            Склеивает текущий создаваемый объект с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.ToString">
            <summary>
              Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.Entity">
            <summary>
              Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.ChangedData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.RealObject">
            <summary>
              Доступ к "реальному" объекту.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.WrappedObject">
            <summary>
              Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.IsDirtySelf">
            <summary>
              Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.GenerativeObjects">
            <summary>
              Перечислитель объектов, образующих для данного
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef._GenerativeObjects">
            <summary>
              Перечислитель объектов, образующих для данного
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.ParentConfigurationId">
            <summary>
              Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.ParentConfigurationInEffect">
            <summary>
              Конфигурация, к которой относится этот объект с учётом возможного наследования
              конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.NameKey">
            <summary>
              Программное название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.NameUILocalized">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.NameUILocalizedNonModified">
            <summary>
              Пользовательское название объекта (без применения модификаторов) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.NameUI">
            <summary>
              Пользовательское название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.NameUINonModified">
            <summary>
              Пользовательское название объекта (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.NotesLocalized">
            <summary>
             Пользовательские заметки об объекте (всплывающая подсказка) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.NotesLocalizedNonModified">
            <summary>
              Пользовательские заметки об объекте (всплывающая подсказка) (без применения модификаторов) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.Notes">
            <summary>
            Пользовательские заметки об объекте (всплывающая подсказка)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.NotesNonModified">
            <summary>
            Пользовательские заметки об объекте (всплывающая подсказка) (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.Params">
            <summary>
              Пользовательские дополнительные параметры закладки, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.ParamsNonModified">
            <summary>
              Пользовательские дополнительные параметры закладки, возможно определяющие 
            программное поведение (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.GroupKey">
            <summary>
              Строка, определяющая порядок закладок, используется для сортировки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.GroupKeyNonModified">
            <summary>
              Строка, определяющая порядок закладок, используется для сортировки (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.LayoutDef">
            <summary>
              Описание размещения контролов на форме
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.LayoutDefNonModified">
            <summary>
              Описание размещения контролов на форме (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.IsErasedByInheritance">
            <summary>
              Возвращает true если этот объект является удалённой заглушкой
              для исключения предшественника из иерархии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.FlagsNonModified">
            <summary>
              Набор битовых флагов объекта (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.HiddenInTree">
            <summary>
              Возвращает true если объекты по этой закладке-фильтру в дереве не показываются
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.IsHiddenInTree">
            <summary>
              Возвращает true если объекты по этой закладке-фильтру в дереве не показываются
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.IsDefaultContents">
            <summary>
            Если true, то эта закладка-фильтр определяет закладку по умолчанию. Сюда попадают все дети, которые не попали
            ни в какую другую закладку
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.IsInitiallyHidden">
            <summary>
              Возвращает true если эта закладка при первом показе скрыта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.TargetTemplateKind">
            <summary>
              Тип шаблонируемой сущности, которая может попадать в эту закладку
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.SortColumnDefinition">
            <summary>
              Ключ атрибута, к которому применяется сортировка по умолчанию.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.SortColumnDefinitionNonModified">
            <summary>
              Ключ атрибута, к которому применяется сортировка по умолчанию (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.SortColumnFlags">
            <summary>
              Флаги, определяющие параметры сортировки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.SortColumnFlagsNonModified">
            <summary>
              Флаги, определяющие параметры сортировки (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.DefaultFocusAttributeNameKey">
            <summary>
              Ключ атрибута, на который ставится фокус при активации закладки.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.DefaultFocusAttributeNameKeyNonModified">
            <summary>
              Ключ атрибута, на который ставится фокус при активации закладки (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.DisplayType">
            <summary>
              Вариант отображения закладки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.DateCreated">
            <summary>
              Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.CreatedByUser">
            <summary>
              Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.DateModified">
            <summary>
              Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.ModifiedByUser">
            <summary>
              Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.Icon">
            <summary>
              Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.IconNonModified">
            <summary>
              Иконка, установленная для этого объекта (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.DisplayIcon">
            <summary>
              Иконка, показываемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.Parent">
            <summary>
              Доступ к родительскому шаблону
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.ParentMaster">
            <summary>
              Родительский шаблон (или его мастер, если родитель является модификатором)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.Predecessor">
            <summary>
              Предшественник по наследованию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.ModifiedClone">
            <summary>
              Модифицированная версия этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.IdentityName">
            <summary>
              Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PageDef.CreationData">
            <summary>
              Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.PrepareDefaults">
            <summary>
            Установка значений по умолчанию для новых объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.NameKey">
            <summary>
              Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.NameUI">
            <summary>
              Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.Notes">
            <summary>
              Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.Params">
            <summary>
              Пользовательские дополнительные параметры закладки, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.DisplayType">
            <summary>
              Вариант отображения закладки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.GroupKey">
            <summary>
              Строка, определяющая порядок закладок, используется для сортировки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.LayoutDef">
            <summary>
              Описание размещения контролов на форме
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.TargetTemplateKind">
            <summary>
              Тип шаблонируемой сущности, которая может попадать в эту закладку
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.SortColumnDefinition">
            <summary>
              Ключ атрибута, к которому применяется сортировка по умолчанию.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.SortColumnFlags">
            <summary>
              Флаги, определяющие параметры сортировки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.DefaultFocusAttributeNameKey">
            <summary>
              Ключ атрибута, на который ставится фокус при активации закладки.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.m_Parent">
            <summary>
              Родительский шаблон, к которому относится закладка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.m_Icon">
            <summary>
              Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.m_ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.WriteTo(ProgramSoyuz.DataModel.PageDefBase.Body)">
            <summary>
              Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name = "pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.MakeCopy(ProgramSoyuz.DataModel.PageDefBase.Body)">
            <summary>
              Создает копию этого класса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.Parent">
            <summary>
              Родительский шаблон
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.Icon">
            <summary>
              Иконка для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PageDef.CreationData.ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PageDef.DistinctKeyEqualityComparer">
            <summary>
              Сравнивающий объект для реализации словаря различных по ключевым свойствам объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PageDef.DistinctKeyEqualityComparer.Default">
            <summary>
              Сравнивающий объект для реализации словаря различных по ключевым свойствам объектов
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TemplateConstraint">
            <summary>
              Ограничение на использование объектов по шаблону.
              При помощи ограничений шаблонов определяются правила вложения объектов:
              кто кому может или не может быть дочерним
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.m_pOwner">
            <summary>
              Шаблон-владелец данного атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.m_pData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.PrepareModification">
            <summary>
              Подготовка объекта к внесению изменений
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.m_pRealObject">
            <summary>
              Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
              При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreateWrapper(ProgramSoyuz.DataModel.TemplateConstraintBase,System.Boolean)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "constraint">Реальный объект</param>
            <param name = "original">false, если предполагается возможность редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
              Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.Uninitialized">
            <summary>
              Значение для обозначения неицициализированной ссылки на предшественника по наследованию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.#ctor">
            <summary>
              Конструктор для значения Uninitialized
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.#ctor(ProgramSoyuz.DataModel.TemplateConstraintBase,System.Boolean)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "templateConstraint">Реальный объект</param>
            <param name = "original">false, если предполагается возможность редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.DataModel.TemplateConstraintBase.KindEnum,ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "template">Шаблон к которому относится ограничение</param>
            <param name = "eKind">Тип ограничения</param>
            <param name = "linkedTemplate">Шаблон с которым это ограничение устанавливает связь</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.#ctor(ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.MakeUnsavedCopy(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Создает новый объект - несохраненную копию данного
            </summary>
            <param name="newParent">Новый родительский шаблон, для которого делается копия объекта</param>
            <returns>Копию объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
              Инициализирует этот объект по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
              Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name = "objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.IdAssigned(System.UInt32)">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name = "id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.SaveCompleted">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
              что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.MoveTo(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Перенос объекта к другому родителю.
            </summary>
            <param name="newParent">Новый родительский объект для оганичения шаблона</param>
            <exception cref="T:ProgramSoyuz.PLM.Scripting.InvalidRequestException">Объект еще не создан</exception>
            <remarks>
              Происходит только перенос к другому родителю. 
              Какого-либо сохранения общих свойств этим методом не осуществляется
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.DoCancelChanges(System.Boolean)">
            <summary>
              Отмена измений, сделанных в объекте
            </summary>
            <param name = "sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
              Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name = "range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CheckWrappedObject">
            <summary>
              Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
              Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.MatchFamily(System.String,System.String)">
            <summary>
              Проверяет соответствие указанного семейства тому, что определено в правиле вложения
            </summary>
            <param name = "thisFamilyKey">Ключ семейства шаблона, использующего правило вложения</param>
            <param name = "targetFamilyKey">Ключ семейства проверяемого шаблона</param>
            <returns>true если семейство подходит</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.m_Predecessor">
            <summary>
              Предшественник по наследованию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.PrepareForAnotherKind(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
            Сбрасывает неактуальные атрибуты после создания копии объекта для шаблона другого типа.
            Вызывается в коде сеттера родительского шаблона
            </summary>
            <param name="oldKind">Старый тип шаблона</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.ToString">
            <summary>
              Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.Entity">
            <summary>
              Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.Owner">
            <summary>
              Шаблон-владелец данного атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.ChangedData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.RealObject">
            <summary>
              Доступ к "реальному" объекту.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.WrappedObject">
            <summary>
              Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.IsDirtySelf">
            <summary>
              Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.ParentConfigurationId">
            <summary>
              Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.ParentConfigurationInEffect">
            <summary>
              Конфигурация, к которой относится этот объект с учётом возможного наследования
              конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.ApplyToTemplateFamilies">
            <summary>
              Список через запятую разрешенных семейств шаблонов, к которым применяется правило
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.ApplyToTemplateFamiliesNonModified">
            <summary>
              Список через запятую разрешенных семейств шаблонов, к которым применяется правило (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.IsApplyToTheSameFamily">
            <summary>
              Наличие флага означает, что правило применяется только к тем целевым шаблонам,
              которые принадлежат к тому же смемейству шаблонов, что и основной шаблон
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.IsFilteredByFamily">
            <summary>
              Возвращает true, если правило использует логика фильтра шаблонов по семейству
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.NumericParam">
            <summary>
              Числовой параметр ограничения на всякий случай
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.NumericParamNonModified">
            <summary>
              Числовой параметр ограничения на всякий случай (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.IsErasedByInheritance">
            <summary>
              Возвращает true если этот объект является удалённой заглушкой
              для исключения предшественника из иерархии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.FlagsNonModified">
            <summary>
              Набор битовых флагов объекта (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.Kind">
            <summary>
              Тип ограничения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.TargetPageDef">
            <summary>
            Ключ закладки целевого шаблона, в которую должны попадать объекты этого шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.TargetPageDefNonModified">
            <summary>
            Ключ закладки целевого шаблона, в которую должны попадать объекты этого шаблона (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.IsAllowInheritance">
            <summary>
              Возвращает true если ограничение наследуется дочерними шаблонами
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.IsIncludeInherited">
            <summary>
              Возвращает true если ограничение распространяется на шаблоны унаследованные от LinkedTemplate
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.DateCreated">
            <summary>
              Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreatedByUser">
            <summary>
              Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.DateModified">
            <summary>
              Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.ModifiedByUser">
            <summary>
              Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.LinkedTemplate">
            <summary>
              Целевой шаблон, по отношению к которому установлено правило вложения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.LinkedTemplateId">
            <summary>
              Целевой шаблон, по отношению к которому установлено правило вложения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.Parent">
            <summary>
              Доступ к родительскому шаблону
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.ParentMaster">
            <summary>
              Родительский шаблон (или его мастер, если родитель является модификатором)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.Predecessor">
            <summary>
              Предшественник по наследованию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.ModifiedClone">
            <summary>
              Модифицированная версия этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.IdentityName">
            <summary>
              Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData">
            <summary>
              Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.Kind">
            <summary>
              Тип ограничения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.NumericParam">
            <summary>
              Числовой параметр ограничения на всякий случай
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.TargetPageDef">
            <summary>
              Ключ списковой закладки целевого шаблона, в которую должны попадать объекты этого шаблона
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.ApplyToTemplateFamilies">
            <summary>
              Список через запятую разрешенных семейств шаблонов, к которым применяется правило
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.m_Parent">
            <summary>
              Родительский шаблон, к которому относится закладка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.m_LinkedTemplate">
            <summary>
              Шаблон с которым это ограничение устанавливает связь
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.m_ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.WriteTo(ProgramSoyuz.DataModel.TemplateConstraintBase.Body)">
            <summary>
              Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name = "pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.MakeCopy(ProgramSoyuz.DataModel.TemplateConstraintBase.Body)">
            <summary>
              Создает копию этого класса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.Parent">
            <summary>
              Родительский шаблон
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.LinkedTemplate">
            <summary>
              Шаблон с которым это ограничение устанавливает связь
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TemplateConstraint.CreationData.ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TemplateConstraint.DistinctKeyEqualityComparer">
            <summary>
              Сравнивающий объект для реализации словарей разных с точки зрения наследования объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TemplateConstraint.DistinctKeyEqualityComparer.Default">
            <summary>
              Сравнивающий объект для сортировки объектов по ключу
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ITemplateCustomization">
            <summary>
            Интерфейс кастомизации шаблонов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ITemplateCustomization.CanHandle(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Проверка может ли модуль обслуживать указанный шаблон. Вызывается хостом сразу после загрузки модулей
            </summary>
            <param name="template">Проверяемый шаблон</param>
            <returns>true если модуль применим к указанному шаблону</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IObjectTemplateCustomization">
            <summary>
            Интерфейс кастомизации шаблонов атрибутируемых объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectTemplateCustomization.OnInitialize(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Инициализация вновь созданного объекта.
            Вызывается на клиенте сразу после установки значений по умолчанию в атрибутах
            </summary>
            <param name="obj">Только что созданный еще не сохраненный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectTemplateCustomization.Validate(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Проверка объекта перед сохранением. Вызывается на сервере
            </summary>
            <returns>сообщение об ошибке либо null, если все хорошо</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectTemplateCustomization.CalculateAttribute(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Подготовка вычисленного значения атрибута
            </summary>
            <returns>true если значение успешно вычислено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectTemplateCustomization.OnAttributeChanged(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Нотификация об изменении какого-либо атрибута объекта
            </summary>
            <param name="obj">Объект, чей атрибут изменился</param>
            <param name="attr">Собственно изменившийся атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectTemplateCustomization.OnBeforeErase(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Вызывается на сервере непосредственно перед удалением объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectTemplateCustomization.OnBeforeSave(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Вызывается на сервере непосредственно перед сохранением объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectTemplateCustomization.OnBeforeCommit(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Вызывается после сохранением в базу перед коммитом транзакции базы
            В этот момент уже известен ID нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectTemplateCustomization.OnAfterCommit(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Вызывается на сервере после фиксации транзакции в базе и после обновления серверного кеша
            Операция сохранения в этот момент считается завершенной. Действия внутри этого обработчика
            похожи на серверный процесс, выполняющийся однако тем же потоком и в той же эксклюзивной блокировке,
            что и основная операция сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectTemplateCustomization.CheckOperation(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Проверка возможности выполнения указанной операции с атрибутом данного объекта.
            </summary>
            <param name="user">Пользователь, чья операция проверяется</param>
            <param name="obj">Объект, с которым производится операция</param>
            <param name="target">Объект, параметр операции (создание/перенос)</param>
            <param name="op">Код операции</param>
            <param name="attrNameKey">Ключ атрибута для проверки операции с атрибутом</param>
            <param name="element">Элемент коллекции, с атрибутом которого производится операция</param>
            <returns>Возвращает true если операция разрешена</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectTemplateCustomization.GetUIData(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает запрошенное представление объекта в UI
            </summary>
            <param name="obj">Объект для которого требуется UI представление</param>
            <param name="dataKind">Запрашиваемый вид данных (название, иконки, превью)</param>
            <returns>null если следует использовать вариант по умолчанию,
            String для названий объекта (форматированный HTML тэгами для всего кроме просто названия),
            CustomIcon (или строковый ключ инконки в общем ImageListе) и CustomIcon[] (или массив ключей) для иконок,
            Image (или BlobDesc) для превью</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IObjectTemplateCustomization.OnUpdated(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean)">
            <summary>
            Вызывается на клиенте непосредственно после встраивания обновлённого объекта
            в клиентский кеш
            </summary>
            <param name="obj">Объект, обновлённый в клиентском кеше</param>
            <param name="isFirst">true, если объект впервые появился в клиентском кеше</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ICollectionTemplateCustomization">
            <summary>
            Интерфейс кастомизации шаблонов элементов коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ICollectionTemplateCustomization.OnInitialize(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Инициализация вновь созданного элемента коллекции.
            Вызывается на клиенте сразу после установки значений по умолчанию в атрибутах
            </summary>
            <param name="obj">Только что созданный еще не сохраненный элемент коллекции</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ICollectionTemplateCustomization.Validate(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Проверка элемента коллекции перед сохранением. Вызывается на сервере
            </summary>
            <returns>сообщение об ошибке либо null, если все хорошо</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ICollectionTemplateCustomization.CalculateAttribute(ProgramSoyuz.PLM.Scripting.CollectionElement,ProgramSoyuz.PLM.Scripting.SubItemAttribute)">
            <summary>
            Подготовка вычисленного значения атрибута
            </summary>
            <returns>true если значение успешно вычислено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ICollectionTemplateCustomization.OnAttributeChanged(ProgramSoyuz.PLM.Scripting.CollectionElement,ProgramSoyuz.PLM.Scripting.SubItemAttribute)">
            <summary>
            Нотификация об изменении какого-либо атрибута объекта
            </summary>
            <param name="obj">Объект, чей атрибут изменился</param>
            <param name="attr">Собственно изменившийся атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ICollectionTemplateCustomization.OnBeforeErase(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Вызывается на сервере непосредственно перед удалением элемента коллекции
            </summary>
            <remarks>Вызывается лишь при удалении непосредственно элемента коллекции. 
            При удалении объекта целиком или атрибута целиком этот метод не вызывается.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ICollectionTemplateCustomization.OnBeforeSave(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Вызывается на сервере непосредственно перед сохранением элемента коллекции
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IRoleCustomization">
            <summary>
            Интерфейс кастомизации ролей
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IRoleCustomization.CanHandle(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Проверка может ли модуль обслуживать указанную роль. Вызывается хостом сразу после загрузки модулей
            </summary>
            <param name="role">Проверяемая роль</param>
            <returns>true если модуль применим к указанной роли</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IRoleCustomization.Check(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.Role,System.Boolean,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Проверка возможности выполнения операции пользователем
            </summary>
            <param name="user">Пользователь, выполняющий операцию</param>
            <param name="role">Роль, для которой производится проверка</param>
            <param name="userToTarget">true если проверяется прямое действие роли от <paramref name="user"/> к <paramref name="obj"/></param>
            <param name="obj">Объект, с которым выполняется операция</param>
            <param name="target">Целевой родительский объект (для операций создания и переноса)</param>
            <param name="op">Собственно операция</param>
            <param name="attrNameKey">Атрибут, с которым выполняется операция</param>
            <param name="element">Проверяемый элемент коллекции</param>
            <returns>true если операцию можно выполнить</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ICustomModuleFunction">
            <summary>
            Интерфейс для модуля, реализующего специализированные функции, доступные из скриптового кода
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ICustomModuleFunction.Invoke(System.String,System.Object,System.Object@)">
            <summary>
            Вызов метода, реализованного серверным модулем
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="inputParams">Сериализуемые входные данные для метода</param>
            <param name="outputParams">Сериализуемый результат работы метода</param>
            <returns>true если этот модуль взялся выполнять указанный метод</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ItemResolverCache`1">
            <summary>
            Кеш для хранения найденных по путям скриптовых объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ItemResolverCache`1._locker">
            <summary>
            Объект-блокировщик для кешированных данных
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ItemResolverCache`1._objectsByPath">
            <summary>
            Кеш запрошенных объектов по пути
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ItemResolverCache`1.Lookup(System.String)">
            <summary>
            Поиск кешированного значения по пути
            </summary>
            <param name="path">Поисковый путь</param>
            <returns>Найденное кешированное значение или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ItemResolverCache`1.Lookup(System.String,System.Boolean@)">
            <summary>
            Поиск кешированного значения по пути
            </summary>
            <param name="path">Поисковый путь</param>
            <param name="keyFound">На выходе true если в словаре зарегистрирован указанный поисковый путь </param>
            <returns>Найденное кешированное значение или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ItemResolverCache`1.Add(System.String,`0)">
            <summary>
            Поиск кешированного значения по пути
            </summary>
            <param name="path">Поисковый путь</param>
            <param name="item">Объект для добавления в кеш</param>
            <returns>Найденное кешированное значение или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ItemResolverCache`1.Clear">
            <summary>
            Сброс кеша
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IUIPlugin">
            <summary>
            Интерфейс плагина пользовательского интерфейса PLM клиента
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IUIPlugin.NameKey">
            <summary>
            Ключ, идентифицирующий схему
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IUIPlugin.NameUI">
            <summary>
            Название схемы для пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IUIPlugin.Notes">
            <summary>
            Описание схемы
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserItem">
            <summary>
            Элемент рабочей среды пользователя. Объект хранится в базе. 
            При этом некоторые объекты в зависимости от типа могут быть развернуты
            в виртуальное представление информации посредством схем рабочей среды <see cref="T:ProgramSoyuz.DataModel.WorkSpaceSchemeBase"/>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.CreateWrapper(ProgramSoyuz.DataModel.UserItemBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="userItem">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.#ctor(ProgramSoyuz.DataModel.UserItemBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="userItem">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.#ctor(ProgramSoyuz.DataModel.UserItemBase.KindEnum,ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserItem,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="kind">Тип элемента пользовательского стола</param>
            <param name="user">Пользователь, чей элемент рабочего стола создаем</param>
            <param name="parent">Родительское объект</param>
            <param name="nameKey">Программное название</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.#ctor(ProgramSoyuz.PLM.Scripting.UserItem.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.PrepareToSave">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для подготовки операции сохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.MoveTo(ProgramSoyuz.PLM.Scripting.UserItem)">
            <summary>
            Перенос объекта к другому родителю.
            </summary>
            <param name="parent">Новый родительский объект для именованного значения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.DoEraseChildrenOrRelated">
            <summary>
            Каскадное удаление дочерних объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.GetShortcuts(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Возвращает перечислитель дочерних шорткатов ПРС для этого элемента
            </summary>
            <param name="user">Пользователь, для которого запрашиваем шорткаты</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem._GetShortcuts(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Возвращает перечислитель дочерних шорткатов ПРС для этого элемента
            </summary>
            <param name="user">Пользователь, для которого запрашиваем шорткаты</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.GetShortcuts(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает перечислитель дочерних шорткатов ПРС для этого элемента
            </summary>
            <param name="user">Пользователь, для которого запрашиваем шорткаты</param>
            <param name="target">Целевой объект искомых шорткатов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem._GetShortcuts(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает перечислитель дочерних шорткатов ПРС для этого элемента
            </summary>
            <param name="user">Пользователь, для которого запрашиваем шорткаты</param>
            <param name="target">Целевой объект искомых шорткатов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.GetChild(System.String)">
            <summary>
            Доступ к дочернему именованному значению по пути rootNameKey\NameKey1\..\NameKeyN
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.IsChildOf(ProgramSoyuz.PLM.Scripting.UserItem)">
            <summary>
            Возвращает true, если ИЗ является унаследованным от указанного
            </summary>
            <remarks>Считается что ИЗ наследует самого себя</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.IsDirtySelf">
            <summary>
            Возвращает true, если объект (или рекурсивно объекты, от которых этот объект зависит) 
            был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.NameKey">
            <summary>
            Программное название именованного значения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.NameUI">
            <summary>
            Пользовательское название иконки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.Notes">
            <summary>
            Пользовательские заметки об именованном значении
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.ParamsXML">
            <summary>
            Дополнительные параметры объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.Kind">
            <summary>
            Тип элемента пользовательского стола
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.IsReadOnlyInUI">
            <summary>
              Возвращает true если для пользователя атрибут должен выглядеть как доступный только для чтения.
              Скрипт с таким атрибутов работает как с обычным.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.DateModified">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.ModifiedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.Icon">
            <summary>
            Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.DisplayIcon">
            <summary>
            Иконка, показываемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.User">
            <summary>
            Пользователь-владелец объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.Parent">
            <summary>
            Доступ к родительскому именованному значению
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.Root">
            <summary>
            Ссылка на корневой элемент ПРС
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.IsSystemItem">
            <summary>
            Возвращает true если этот элемент является одной из предопределенных папок
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.SystemItemId">
            <summary>
            Код системной папки (только если этот элемент корневой)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.Shortcuts">
            <summary>
            Возвращает перечислитель дочерних элементов пользовательского рабочего стола (ПРС).
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem._Children">
            <summary>
            Возвращает перечислитель дочерних элементов ПРС
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem._AllChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.Children">
            <summary>
            Возвращает перечислитель дочерних элементов рабочей среды (ЭРС).
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.AllChildren">
            <summary>
            Возвращает перечислитель дочерних ЭРС.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#UserItem}#DirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#UserItem}#AllDirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.Params">
            <summary>
            Дополнительные параметры объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserItem.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.Params">
            <summary>
            Дополнительное поле для параметров этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.Kind">
            <summary>
            Тип элемента пользовательского стола
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.m_Parent">
            <summary>
            Родительское именованное значение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.m_User">
            <summary>
            Пользователь-владелец
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.m_Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.WriteTo(ProgramSoyuz.DataModel.UserItemBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.Parent">
            <summary>
            Родительское именованное значение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.User">
            <summary>
            Пользователь-владелец
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.CreationData.Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.ParamsAccessor.m_pRealObject">
            <summary>
            Исходный набор параметров объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserItem.ParamsAccessor.m_ChangedParams">
            <summary>
            Модифицированный набор параметров 
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.ParamsAccessor.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.ParamsAccessor.#ctor(ProgramSoyuz.DataModel.UserItemBase)">
            <summary>
            Конструктор по существующему набору параметров
            </summary>
            <param name="pRealObject"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.ParamsAccessor.GetParam``1(System.String)">
            <summary>
            Возвращает запрошенный параметр указанного типа
            </summary>
            <param name="name">Ключ параметра</param>
            <returns>Найденный параметр</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.ParamsAccessor.GetObjectValue``1(System.String)">
            <summary>
            Возвращает значение параметра, приведя его к указанному типу
            </summary>
            <typeparam name="T">Ожидаемый тип значения</typeparam>
            <param name="name">Ключ параметра</param>
            <returns>Значение параметра</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.ParamsAccessor.GetValue``1(System.String)">
            <summary>
            Возвращает значение параметра, приведя его к указанному типу
            </summary>
            <typeparam name="T">Ожидаемый тип значения</typeparam>
            <param name="name">Ключ параметра</param>
            <returns>Значение параметра</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.ParamsAccessor.GetValue``1(System.String,``0)">
            <summary>
            Возвращает значение параметра, приведя его к указанному типу
            При отсутствии такового возвращается указанное значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="name">Ключ параметра</param>
            <param name="defaultValue">Значение, возвращаемое в случае пустого значения</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.ParamsAccessor.SetValue(System.String,System.Object)">
            <summary>
            Устанавливает значение параметра
            </summary>
            <param name="name">Ключ параметра</param>
            <param name="val">Значение параметра</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserItem.ParamsAccessor.SerializeToXML">
            <summary>
            Сериализация параметров в XML
            </summary>
            <returns>Сериализованный набор параметров</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserItem.ParamsAccessor.IsDirty">
            <summary>
            Возвращает true, если параметры были изменены
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.VirtualUserItem">
            <summary>
            Виртуальный вычисленный элемент пользовательского рабочего стола (базовый класс)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.VirtualUserItem.#ctor(ProgramSoyuz.PLM.Scripting.UserItem,System.String)">
            <summary>
            Конструктор корневого элемента
            </summary>
            <param name="pMasterItem">Ссылка на родительский элемент рабочего пространства, породивший данный</param>
            <param name="logicalControlId">Логический идентификатор данного элемента для сохранения каких-либо интерфейсных настроек</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.VirtualUserItem.#ctor(ProgramSoyuz.PLM.Scripting.VirtualUserItem,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="pParentItem">Ссылка на родительский виртуальный элемент (если есть), породивший данный</param>
            <param name="logicalControlId">Логический идентификатор данного элемента для сохранения каких-либо интерфейсных настроек</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.VirtualUserItem.m_pMasterUserItem">
            <summary>
            Ссылка на родительский элемент рабочего пространства, породивший данный
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.VirtualUserItem.m_pVirtualParentItem">
            <summary>
            Ссылка на родительский виртуальный элемент (если есть), породивший данный
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.VirtualUserItem.m_LogicalControlId">
            <summary>
            Логический идентификатор данного элемента для сохранения каких-либо интерфейсных настроек
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.VirtualUserItem.ToString">
            <summary>
            Строковое представление объекта
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.VirtualUserItem.HasTreeChildren">
            <summary>
            Возвращает true если у указанного элемента есть дети в дереве
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.VirtualUserItem.CalcTreeChildren">
            <summary>
            Вычисляет детей для дерева для указанного элемента
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.VirtualUserItem.CalcListTabs">
            <summary>
            Вычисляет набор закладок для указанного элемента в дереве
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.VirtualUserItem.CalcListChildren">
            <summary>
            Вычисляет детей для списка для указанной закладки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.VirtualUserItem.Root">
            <summary>
            Корневой элемент данной схемы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.VirtualUserItem.Parent">
            <summary>
            Родительский элемент
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.VirtualUserItem.LogicalControlId">
            <summary>
            Логический идентификатор данного элемента для сохранения каких-либо интерфейсных настроек
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.VirtualUserItem.DisplayIcon">
            <summary>
            Иконка для этого элемента
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.VirtualUserItem.Target">
            <summary>
            Объект (если есть), представленный этим виртуальным элементом
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.VirtualStaticUserItem">
            <summary>
            Виртуальный статический вычисленный элемент пользовательского рабочего стола
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.VirtualStaticUserItem.m_csName">
            <summary>
            Имя статического элемента
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.VirtualStaticUserItem.m_pIcon">
            <summary>
            Иконка статического элемента
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.VirtualStaticUserItem.#ctor(System.String,ProgramSoyuz.PLM.Scripting.CustomIcon,ProgramSoyuz.PLM.Scripting.VirtualUserItem,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="csName">Имя статического элемента</param>
            <param name="pIcon">Иконка статического элемента</param>
            <param name="pParentItem">Ссылка на родительский виртуальный элемент (если есть), породивший данный</param>
            <param name="LogicalControlId">Логический идентификатор данного элемента для сохранения каких-либо интерфейсных настроек</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.VirtualStaticUserItem.#ctor(System.String,ProgramSoyuz.PLM.Scripting.CustomIcon,ProgramSoyuz.PLM.Scripting.UserItem,System.String)">
            <summary>
            Конструктор корневого элемента
            </summary>
            <param name="csName">Имя статического элемента</param>
            <param name="pIcon">Иконка статического элемента</param>
            <param name="pMasterItem">Ссылка на родительский элемент рабочего пространства, породивший данный</param>
            <param name="LogicalControlId">Логический идентификатор данного элемента для сохранения каких-либо интерфейсных настроек</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.VirtualStaticUserItem.ToString">
            <summary>
            Строковое представление объекта
            </summary>
            <returns></returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.VirtualStaticUserItem.Name">
            <summary>
            Имя статического элемента
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.VirtualStaticUserItem.DisplayIcon">
            <summary>
            Иконка статического элемента
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.VirtualShortcutUserItem">
            <summary>
            Виртуальная вычисленная ссылка на PLM объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.VirtualShortcutUserItem.m_pTarget">
            <summary>
            Объект на который указывает эта ссылка
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.VirtualShortcutUserItem.#ctor(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.VirtualUserItem,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="pTarget">Объект на который указывает эта ссылка</param>
            <param name="pParentItem">Ссылка на родительский виртуальный элемент (если есть), породивший данный</param>
            <param name="LogicalControlId">Логический идентификатор данного элемента для сохранения каких-либо интерфейсных настроек</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.VirtualShortcutUserItem.#ctor(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.UserItem,System.String)">
            <summary>
            Конструктор корневого элемента
            </summary>
            <param name="pTarget">Объект на который указывает эта ссылка</param>
            <param name="pMasterItem">Ссылка на родительский элемент рабочей среды, породивший данный</param>
            <param name="LogicalControlId">Логический идентификатор данного элемента для сохранения каких-либо интерфейсных настроек</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.VirtualShortcutUserItem.Target">
            <summary>
            Объект на который указывает эта ссылка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.VirtualShortcutUserItem.DisplayIcon">
            <summary>
            Иконка статического элемента
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserSession">
            <summary>
            Пользовательская сессия
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSession.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSession.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSession.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSession.#ctor(ProgramSoyuz.Connectivity.SessionBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="userSession">Сокетное соединение</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSession.Erase">
            <exception cref="T:ProgramSoyuz.PLM.Scripting.InvalidRequestException">Объект еще не создан</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSession.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSession.Drop">
            <summary>
            Отключает сессию от сервера
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSession.Drop(System.String)">
            <summary>
            Отключает сессию от сервера
            </summary>
            <param name="message">Сообщение пользователю о причине отключения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSession.Invoke(System.String,System.Object)">
            <summary>
            Вызов метода, реализованного клиентской сессией
            </summary>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSession.Invoke(System.String,System.Object,System.Int32)">
            <summary>
            Вызов метода, реализованного клиентской сессией
            </summary>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <param name="maxTimeout">Максимальное время ожидания ответа от внешнего сервера</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSession.InvokeOneWay(System.String,System.Object)">
            <summary>
            Вызов метода, реализованного клиентской сессией, без ожидания результата выполнения
            </summary>
            <param name="method">Имя запрос</param>
            <param name="data">Данные запроса</param>
            <returns>Результат обработки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSession.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.IsAlive">
            <summary>
            Проверят жива ли сессия и ее сокетное соединение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.RemoteEndPoint">
            <summary>
            IP адрес и порт клиентской стороны соединения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.DateCreated">
            <summary>
            Локальное дата/время фиксации сессии объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.DateOfLastUserActivity">
            <summary>
            Дата-время последней замеченной активности пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.IsUserInactive">
            <summary>
            Индикатор текущего состояния активности пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.SessionName">
            <summary>
            Название сессии, например, "Client", "SWAddIn" и т.п.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.RemoteComputerName">
            <summary>
            Имя компьютера клиентской стороны
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.ProcessName">
            <summary>
            Имя процесса на клиентской стороне
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.User">
            <summary>
            Идентификатор пользователя, создавшего этот элемент коллекции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.FrameWorkVersion">
            <summary>
            Версия бинарников фреймворка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.StationId">
            <summary>
            Идентификатор рабочей станции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.TerminalSessionId">
            <summary>
            Идентификатор терминальной сессии на клиентской стороне
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.StationKey">
            <summary>
            Идентификатор терминальной сессии на клиентской стороне
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.Language">
            <summary>
            Язык локализации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.IsAdminOnly">
            <summary>
            Флаг означает, что сессия используется лишь для целей администрирования
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSession.OSVersion">
            <summary>
            Сведения о версии ОС, .NET и пр.
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.WebUserSession">
            <summary>
            Экземплря сессии веб пользователя
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WebUserSession._id">
            <summary>
            Идентификатор сессии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WebUserSession._user">
            <summary>
            Пользователь, чья сессия
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.WebUserSession._data">
            <summary>
            Набор данных сессии
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WebUserSession.#ctor(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Конструктор сессии пользователя
            </summary>
            <param name="user">ПОльзователь, чья сессия</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WebUserSession.Data">
            <summary>
            Набор данных сессии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WebUserSession.User">
            <summary>
            Пользователь, чья сессия
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.WebUserSession.Id">
            <summary>
            Идентификатор сессии
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Template">
            <summary>
            Шаблон атрибутируемого объекта. Шаблон объекта определяет в первую очередь интерфейсные конструкции для редактирования атрибутов 
            объектов, которым назначен данный шаблон.
            </summary>
            <remarks>
            В отличие от "класса" шаблон лишь косвенно определяет, какие атрибуты у объекта могут появиться посредством
            этого шаблона. Наличие у объекта атрибутов, которых нет в шаблоне рассматривается как штатная ситуация.
            Допускается любое редактирование шаблонов "на-лету", даже при существующих объектах, основанных на шаблоне
            Шаблоны построены в строгое дерево по основному наследованию. Кроме того, шаблон дополнительно может наследовать
            от одного или нескольких "дополнительных родительских шаблонов. Дочерний шаблон наследует все определения страниц-закладок и
            все определения атрибутов от всех своих родительских шаблонов на все уровни.
            </remarks>
            <summary>
              Шаблон атрибутируемого объекта. Шаблон объекта определяет в первую очередь интерфейсные конструкции для редактирования атрибутов 
              объектов, которым назначен данный шаблон.
            </summary>
            <remarks>
              В отличие от класса языков программирования шаблон лишь косвенно определяет, какие атрибуты у объекта могут появиться посредством
              этого шаблона. Наличие у объекта атрибутов, которых нет в шаблоне рассматривается как штатная ситуация.
              Допускается любое редактирование шаблонов "на-лету", даже при существующих объектах, основанных на шаблоне
              Шаблоны построены в строгое дерево по основному наследованию. Кроме того, шаблон дополнительно может наследовать
              от одного или нескольких "дополнительных родительских шаблонов. Дочерний шаблон наследует все определения страниц-закладок и
              все определения атрибутов от всех своих родительских шаблонов на все уровни.
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetAllPageDefs(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает перечислитель всех определений страниц-закладок из дополнительных шаблонов и данного в порядке от дополнительных к детям и к родителям
            </summary>
            <param name="obj">Объект, для которого формируем список</param>
            <returns>Перечислитель определений страниц-закладок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetAllPageDefs(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Возвращает перечислитель всех определений страниц-закладок из дополнительных шаблонов и данного в порядке от дополнительных к детям и к родителям
            </summary>
            <param name="otherTemplates">Список дополнительных шаблонов, чьи страницы-закладки перекрывают таковые данного шаблона</param>
            <returns>Перечислитель определений страниц-закладок</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetPageDef(System.String)">
            <summary>
            Возвращает определение закладки по ключу
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetPredecessor(ProgramSoyuz.PLM.Scripting.PageDef)">
            <summary>
            Возвращает объект-предшественник указанного (в плане наследования)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetAllUICommands(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает перечислитель всех определений команд из дополнительных шаблонов и данного в порядке от дополнительных к детям и к родителям
            </summary>
            <param name="obj">Объект, для которого формируем список</param>
            <returns>Перечислитель определений команд</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetAllObjectEvents(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает перечислитель всех определений объектных событий из дополнительных шаблонов и данного в порядке от дополнительных к детям и к родителям
            </summary>
            <param name="obj">Объект, для которого формируем список</param>
            <returns>Перечислитель определений объектных событий</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetAllUICommands(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Возвращает перечислитель всех определений команд из дополнительных шаблонов и данного в порядке от дополнительных к детям и к родителям
            </summary>
            <param name="otherTemplates">Список дополнительных шаблонов, чьи команды перекрывают к командам данного</param>
            <returns>Перечислитель определений команд</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetUICommand(System.String)">
            <summary>
            Возвращает определение команды по ключу
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetPredecessor(ProgramSoyuz.PLM.Scripting.UICommand)">
            <summary>
            Возвращает объект-предшественник указанного (в плане наследования)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetAllAttributeDefs(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает перечислитель всех определений атрибутов (с примененными модификаторами из дополнительных шаблонов и данного в порядке от дополнительных к детям и к родителям
            </summary>
            <param name="obj">Объект, для которого формируем список</param>
            <returns>Перечислитель определений атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetAllAttributeDefs(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Возвращает перечислитель всех определений атрибутов (с примененными модификаторами) из дополнительных шаблонов и данного в порядке от дополнительных к детям и к родителям
            </summary>
            <param name="otherTemplates">Список дополнительных шаблонов, чьи атрибуты перекрывают атрибуты данного</param>
            <returns>Перечислитель определений атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetAttributeDef(System.String)">
            <summary>
            Возвращает модифицированное определение атрибута по ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetPredecessor(ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Возвращает объект-предшественник указанного (в плане наследования)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetPredecessor(ProgramSoyuz.PLM.Scripting.TemplateConstraint)">
            <summary>
            Возвращает объект-предшественник указанного (в плане наследования)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetPredecessor(ProgramSoyuz.PLM.Scripting.TemplateParentLink)">
            <summary>
            Возвращает объект-предшественник указанного (в плане наследования)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template._WorkFlowProcess">
            <summary>
            Шаблон для корня ветви с шаблонами WF процессов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template._StoredQuery">
            <summary>
            Шаблон для ИО поискового запроса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.m_pData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.PrepareModification">
            <summary>
              Подготовка объекта к внесению изменений
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.m_pRealObject">
            <summary>
              Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
              При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.CreateWrapper(ProgramSoyuz.DataModel.TemplateBase,System.Boolean)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "template">Реальный объект</param>
            <param name = "original">false, если предполагается возможность редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
              Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.#ctor(ProgramSoyuz.DataModel.TemplateBase,System.Boolean)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "template">Реальный объект</param>
            <param name = "original">false, если предполагается возможность редактирования объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.#ctor(ProgramSoyuz.DataModel.AttributableEntityIdentifier,ProgramSoyuz.PLM.Scripting.Template,System.String)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "kind">Тип атрибутируемой сущности</param>
            <param name = "parent">Родительский шаблон</param>
            <param name = "nameKey">Программное название шаблона</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.#ctor(ProgramSoyuz.PLM.Scripting.Template.CreationData)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
              Инициализирует этот объект по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
              Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name = "objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.#ctor(ProgramSoyuz.PLM.Scripting.ExternalLink)">
            <summary>
              Конструктор новой заглушки объекта для сохранения в PLM
            </summary>
            <param name = "data">Набор данных для создания объекта заглушки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetDifferencesReport(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.RtfFormatter)">
            <summary>
            Формирует подробный отчет о различии между двумя объектами одного типа
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.IncludeInDifferencesReport(System.String)">
            <summary>
            Возвращает true если свойство следует включить в отчет об изменениях
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.IdAssigned(System.UInt32)">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name = "id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.SaveCompleted">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
              что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.OnPrototypeModified">
            <summary>
              Вызывается при изменении прототипа шаблона
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.MoveTo(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Перенос объекта к другому родителю.
            </summary>
            <param name = "parent">Новый родительский объект</param>
            <remarks>
              Происходит только перенос к другому родителю. 
              Какого-либо сохранения общих свойств этим методом не осуществляется
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.DoCancelChanges(System.Boolean)">
            <summary>
              Отмена измений, сделанных в объекте
            </summary>
            <param name = "sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.DoEraseChildrenOrRelated">
            <summary>
              Каскадное удаление дочерних объектов, 
              а так же малозначимых объектов, ссылающихся на данный
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
              Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name = "range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.CheckWrappedObject">
            <summary>
              Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
              Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetNameUILocalizedNonModified(System.String)">
            <summary>
              Пользовательское название шаблона (без применения модификаторов) (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.IsUIFeatureVisible(ProgramSoyuz.DataModel.TemplateBase.UIFeaturesVisibilityFlags)">
            <summary>
              Возвращает true если указанные в <paramref name = "mask" /> UI элементы все видимы
            </summary>
            <param name = "mask">Проверяемые UI элементы</param>
            <returns>true если все указанные UI элементы видимы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.SetUIFeatureVisibility(ProgramSoyuz.DataModel.TemplateBase.UIFeaturesVisibilityFlags,System.Boolean)">
            <summary>
              Устанавливает видимость указанных UI элементов
            </summary>
            <param name = "mask">Набор UI элементов, для которых устанавливается видимость/невидимость </param>
            <param name = "visible">true - видимый, false - невидимый</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.IsCreatableFromUIAsChildOf(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Вызывает обработчики в коде кастомизации, определяющие может ли объект быть создан через UI
            для данного родительского объекта
            </summary>
            <param name="parent">Родительский объект, в котором проверяем возможность создать дочерний по данному шаблону</param>
            <returns>true если можно, false, если нельзя</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.m_PrototypeWrapper">
            <summary>
              Прототип объекта (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.CreatePrototype">
            <summary>
              Создаёт новый объект-прототип (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта
              и присваивает его этому шаблону
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.DropPrototype">
            <summary>
              Сбрасывает объект-прототип (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта
              у этого шаблона
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetChild(System.String)">
            <summary>
              Доступ к дочернему шаблону по основному пути наследования rootNameKey\NameKey1\..\NameKeyN
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.m_pOtherParentList">
            <summary>
              Оболочка для работы со списком дополнительных родителей
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.AddOtherParent(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Добавление дополнительного родителя к шаблону
            </summary>
            <param name = "template">Дополнительный родитель</param>
            <returns>true если такого родителя еще не было</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.RemoveOtherParent(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Удаление дополнительного родителя шаблона
            </summary>
            <param name = "template">Дополнительный родитель</param>
            <returns>true если такого родитель был и исключен из списка дополнительных</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.m_ModificatorsList">
            <summary>
              Оболочка для работы со списком модификаторов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.AddModificator(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Добавление модификатора к шаблону
            </summary>
            <param name = "template">Шаблон-модификатор</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.RemoveModificator(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Удаление модификатора шаблона
            </summary>
            <param name = "template">Шаблон-модификатор</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.m_DiagramWrapper">
            <summary>
            Ссылка на скриптовую оболочку для диаграммы задачи
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.OnDiagramModified(ProgramSoyuz.PLM.Scripting.TaskDiagram)">
            <summary>
            Вызывается при изменениях внутри диаграммы
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetDiagramFromRevision(System.Int32)">
            <summary>
              Диаграмма задачи по указанной ревизии шаблона
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetCreatableTemplates(ProgramSoyuz.DataModel.AttributableEntityIdentifier)">
            <summary>
              Возвращает перечислитель шаблонов указанного типа, объекты по которым можно создавать 
              дочерними к данному
            </summary>
            <param name = "kind">Тип шаблонируемой сущности</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetCreatableTemplates(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Возвращает перечислитель шаблонов производных от указанного, объекты по которым можно создавать 
              дочерними к данному
            </summary>
            <param name = "targetTemplate">Шаблон, производные от которого интересуют</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.IsBasedOn(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Возвращает true, если шаблон является унаследованным от указанного
            </summary>
            <param name = "template">Шаблон, проверяемый на то, что он является родительским к данному</param>
            <remarks>
              Считается что шаблон наследует самого себя.
            Проверка производится с учетом доп. шаблоной активных модификаторов
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.IsBasedOn(ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
              Возвращает true, если шаблон является унаследованным от указанного
            </summary>
            <param name = "template">Шаблон, проверяемый на то, что он является родительским к данному</param>
            <param name="applyAllModificators">Если false то проверка производится по доп. родителям
            только активных модификаторов, если true, то по всем</param>
            <remarks>
              Считается что шаблон наследует самого себя
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.IsChildOf(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Проверяет является ли этот шаблон дочерним по отношению к pTemplate. 
              Проверка производится с учетом множественного наследования.
            </summary>
            <param name = "template">Шаблон, проверяемый на то, что он является родительским к данному</param>
            <returns>true если этот шаблон является дочерним по отношению к pTemplate или совпадает с ним</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.IsChildOf(ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
              Проверяет является ли этот шаблон дочерним по отношению к pTemplate. 
              Проверка производится с учетом множественного наследования.
            </summary>
            <param name = "template">Шаблон, проверяемый на то, что он является родительским к данному</param>
            <param name="applyAllModificators">Если false то проверка производится по доп. родителям
            только активных модификаторов, если true, то по всем</param>
            <returns>true если этот шаблон является дочерним по отношению к pTemplate или совпадает с ним</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetAllParents">
            <summary>
              Формирует список всех родительских шаблонов и себя в порядке от старших к младшим
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.DoGetAllParents(System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
              Формирует список всех родительских шаблонов и себя в порядке от старших к младшим
            </summary>
            <param name = "parents">Список родительских шаблонов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.IsApplicableConstraint(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.TemplateConstraint)">
            <summary>
              Возвращает true, если указанный шаблон соответствует указанному правилу вложения
            </summary>
            <param name = "template">Проверяемый шаблон</param>
            <param name = "constraint">Правило вложения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetCanBeChildConstraint(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Находит ограничение этого шаблона, разрешающее ему быть дочерним к указанному
            </summary>
            <param name = "template">Родительский шаблон</param>
            <returns>Возвращает разрешающий Constraint, если объекты данного шаблоны могут быть дочерними к объектам указанного шаблона </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.IsCreatableFrom(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Проверяет могут ли объекты данного шаблоны быть дочерними к объектам указанного шаблона
            </summary>
            <param name = "template">Родительский шаблон</param>
            <returns>Возвращает true если объекты данного шаблоны могут быть дочерними к объектам указанного шаблона </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.Invoke(System.String,System.Object)">
            <summary>
            Вызов пользовательского метода шаблона. В вызываемый метод в качестве объекта передается прототип этого шаблона (если есть)
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.Invoke(System.String,System.Object,System.Boolean)">
            <summary>
            Вызов пользовательского метода шаблона. В вызываемый метод в качестве объекта передается прототип этого шаблона (если есть)
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
            <param name="thisTemplateOnly">Если true, то вызывается лишь метод, определенный в кастомизаторе данного шаблона (и его модификаторах)</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.InvokeOnServer(System.String,System.Object,System.Boolean)">
            <summary>
            Вызов пользовательского метода шаблона на сервере.
            В вызываемый метод в качестве объекта передается прототип этого шаблона (если есть)
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
            <param name="thisTemplateOnly">Если true, то вызывается лишь метод определенный в кастомизаторе данного шаблона (и его модификаторах)</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetPrototypeAttribute(System.String)">
            <summary>
            Возвращает существующий, вычисленный или новый атрибут по указанному ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <returns>Атрибут прототипа, либо null, если значение в прототипе не задано</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetPrototypeAttribute(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
            <returns>Атрибут прототипа, либо null, если значение в прототипе не задано</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetPrototypeAttribute(ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="def">Определение атрибута</param>
            <returns>Атрибут прототипа, либо null, если значение в прототипе не задано</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetPrototypeAttribute(ProgramSoyuz.PLM.Scripting.AttributeDef,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Возвращает атрибут прототипа этого шаблона, модификаторов или родительских
            </summary>
            <param name="def">Определение атрибута (если оно уже известно)</param>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
            <returns>Атрибут прототипа, либо null, если значение в прототипе не задано</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetPrototypeValue``1(System.String)">
            <summary>
            Возвращает значение атрибута прототипа указанного типа. 
            При отсутствии такового возвращается значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Ключ атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.GetPrototypeValue``1(System.String,``0)">
            <summary>
            Возвращает значение атрибута прототипа указанного типа. 
            При отсутствии такового возвращается указанное значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Ключ атрибута</param>
            <param name="defaultValue">Значение, возвращаемое в случае отсутствия атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#Template}#SetParent(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#Template}#MergeWith(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Склеивает текущий создаваемый объект с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#Template}#ReplaceWith(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Склеивает текущий создаваемый объект с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ToString">
            <summary>
              Возвращает основное название объекта по умолчанию
            </summary>
            <returns>Возвращает основное название объекта по умолчанию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ToString(System.Boolean)">
            <summary>
            Возвращает строковое представление объекта (модифицированное или оригинальное)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ToString(ProgramSoyuz.Common.WordFormEnum)">
            <summary>
              Возвращает основное название объекта по умолчанию
            </summary>
            <returns>Возвращает основное название объекта по умолчанию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ProgramSoyuz#PLM#Scripting#IPrototypeContainer#OnPrototypeModified(ProgramSoyuz.PLM.Scripting.PrototypeObject)">
            <summary>
            Нотификация об изменении свойств прототипа
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.NativePageDefs">
            <summary>
            Возвращает массив закладок, определенных в этом шаблоне
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.PageDefs">
            <summary>
            Возвращает массив закладок (без применения модификации), 
            определенных в этом шаблоне и во всех родительских шаблонах
            Сначала идут объекты этого шаблона, потом родительских
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.PageDefsModified">
            <summary>
            Возвращает массив закладок (с примененными модификаторами), определенных в этом шаблоне и во всех родительских шаблонах
            Сначала идут объекты этого шаблона, потом родительских
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllPageDefs">
            <summary>
            Возвращает перечислитель всех закладок, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllRawPageDefs">
            <summary>
            Возвращает перечислитель всех закладок, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllRawInheritedPageDefs">
            <summary>
            Возвращает перечислитель всех закладок, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.NativeUICommands">
            <summary>
            Возвращает массив команд, определенных в этом шаблоне
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.UICommands">
            <summary>
            Возвращает массив УИ команд (без применения модификации), 
            определенных в этом шаблоне и во всех родительских шаблонах
            Сначала идут объекты этого шаблона, потом родительских
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.UICommandsModified">
            <summary>
            Возвращает массив УИ команд (с примененными модификаторами), определенных в этом шаблоне и во всех родительских шаблонах
            Сначала идут объекты этого шаблона, потом родительских
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllUICommands">
            <summary>
            Возвращает перечислитель всех УИ команд, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllRawUICommands">
            <summary>
            Возвращает перечислитель всех УИ команд, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllRawInheritedUICommands">
            <summary>
            Возвращает перечислитель всех УИ команд, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.NativeAttributeDefs">
            <summary>
            Возвращает массив определений атрибутов, определенных в этом шаблоне
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.AttributeDefs">
            <summary>
            Возвращает массив определений атрибутов (без применения модификации), 
            определенных в этом шаблоне и во всех родительских шаблонах
            Сначала идут объекты этого шаблона, потом родительских
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.AttributeDefsModified">
            <summary>
            Возвращает массив определений атрибутов (с примененными модификаторами), определенных в этом шаблоне и во всех родительских шаблонах
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ClassAttributeDefs">
            <summary>
            Возвращает определения атрибутов (с учетом модификаторов), формирующих дополнительные шаблоны-классы объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllAttributeDefs">
            <summary>
            Возвращает перечислитель всех определений атрибутов, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllRawAttributeDefs">
            <summary>
            Возвращает перечислитель всех определений атрибутов, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllRawInheritedAttributeDefs">
            <summary>
            Возвращает перечислитель всех определений атрибутов, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.NativeConstraints">
            <summary>
            Возвращает массив ограничений шаблона, определенных в этом шаблоне
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Constraints">
            <summary>
            Возвращает массив правил вложения (без применения модификации), 
            определенных в этом шаблоне и во всех родительских шаблонах
            Сначала идут объекты этого шаблона, потом родительских
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ConstraintsModified">
            <summary>
            Возвращает массив правил вложения (с примененными модификаторами), определенных в этом шаблоне и во всех родительских шаблонах
            Сначала идут объекты этого шаблона, потом родительских
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllConstraints">
            <summary>
            Возвращает перечислитель всех правил вложения, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllRawConstraints">
            <summary>
            Возвращает перечислитель всех правил вложения, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllRawInheritedConstraints">
            <summary>
            Возвращает перечислитель всех правил вложения, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.NativeParentLinks">
            <summary>
            Возвращает массив ограничений шаблона, определенных в этом шаблоне
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ParentLinks">
            <summary>
            Возвращает массив ссылок на доп. родителей (без применения модификации), 
            определенных в этом шаблоне и во всех родительских шаблонах
            Сначала идут объекты этого шаблона, потом родительских
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ParentLinksModified">
            <summary>
            Возвращает массив ссылок на доп. родителей (с примененными модификаторами), определенных в этом шаблоне и во всех родительских шаблонах
            Сначала идут объекты этого шаблона, потом родительских
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllParentLinks">
            <summary>
            Возвращает перечислитель всех ссылок на доп. родителей, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllRawParentLinks">
            <summary>
            Возвращает перечислитель всех ссылок на доп. родителей, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllRawInheritedParentLinks">
            <summary>
            Возвращает перечислитель всех ссылок на доп. родителей, определенных в этом шаблоне и во всех родительских шаблонах
            в порядке от детей к родителям
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.WorkFlowProcess">
            <summary>
            Шаблон для корня ветви с шаблонами WF процессов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.StoredQuery">
            <summary>
            Шаблон для ИО поискового запроса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Entity">
            <summary>
              Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ChangedData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.RealObject">
            <summary>
              Доступ к атрибутируемому "реальному" объекту. 
              Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.WrappedObject">
            <summary>
              Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ExternalLinkAdditionalData">
            <summary>
              Дополнительные данные при создании линка в пакете конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsDirtySelf">
            <summary>
              Возвращает true, если объект (или рекурсивно объекты, от которых этот объект зависит) 
              был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ParentConfigurationId">
            <summary>
              Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ParentConfigurationInEffect">
            <summary>
              Конфигурация, к которой относится этот объект с учётом возможного наследования
              конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsInActiveConfiguration">
            <summary>
              Возвращает true если шаблон принадлежит активной в данном продукте конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.NameKey">
            <summary>
              Программное название шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.NameUILocalized">
            <summary>
              Пользовательское название шаблона (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.NameUILocalizedNonModified">
            <summary>
              Пользовательское название шаблона (без применения модификаторов) (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.NameUI">
            <summary>
              Пользовательское название шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.NameUINonModified">
            <summary>
              Пользовательское название шаблона (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Notes">
            <summary>
              Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Params">
            <summary>
              Пользовательские дополнительные параметры шаблона, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ParamsNonModified">
            <summary>
              Пользовательские дополнительные параметры шаблона, возможно определяющие программное поведение (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.DisplayParams">
            <summary>
              Дополнительное поле для параметров отображения карточки объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.DisplayParamsNonModified">
            <summary>
              Дополнительное поле для параметров отображения карточки объекта (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Tags">
            <summary>
              Строка с тэгами атрибута, для использования логикой конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.TagsNonModified">
            <summary>
              Строка с тэгами атрибута, для использования логикой конфигурации (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ProgramSoyuz#PLM#Scripting#IObjectWithCustomizationCode#CustomizationCode">
            <summary>
              Код скрипта кастомизации объектов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.CustomizationCode">
            <summary>
              Код скрипта кастомизации объектов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.HasCustomizationCode">
            <summary>
              Возвращает true если у raw объекта есть код кастомизации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ContextMenuCode">
            <summary>
              XML описание контекстного меню объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.FamilyKey">
            <summary>
              Строка, определяющая принадлежность шаблона к некоторому семейству (например изделие-версия-конфигурация)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Kind">
            <summary>
              Тип атрибутируемой сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.SubKind">
            <summary>
            Дополнительный подтип сущности, определяемой этим шаблоном <see cref="T:ProgramSoyuz.DataModel.WorkItemKind"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.WorkItemSubKind">
            <summary>
            Дополнительный подтип сущности, определяемой этим шаблоном <see cref="T:ProgramSoyuz.DataModel.WorkItemKind"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.SortColumnDefinition">
            <summary>
              Ключ атрибута, к которому применяется сортировка по умолчанию.
              (В основном для шаблонов элементов коллекций)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.SortColumnDefinitionNonModified">
            <summary>
              Ключ атрибута, к которому применяется сортировка по умолчанию. (без применения модификаторов)
              (В основном для шаблонов элементов коллекций)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.SortColumnFlags">
            <summary>
              Флаги, определяющие параметры сортировки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.SortColumnFlagsNonModified">
            <summary>
              Флаги, определяющие параметры сортировки (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.GroupKey">
            <summary>
              Строка, определяющая порядок сортировки шаблонов между собой и группирования производных объектов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.GroupKeyNonModified">
            <summary>
            Строка, определяющая порядок сортировки шаблонов между собой и группирования производных объектов (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.MenuLayoutDef">
            <summary>
              Описание размещения управляющих элементов UI (меню, тулбары)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.UIFeaturesVisibility">
            <summary>
              Набор битовых флагов, определяющих видимость различных UI элементов для объектов этого шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.UIFeaturesVisibilityNonModified">
            <summary>
              Набор битовых флагов, определяющих видимость различных UI элементов для объектов этого шаблона (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.FlagsNonModified">
            <summary>
              Набор битовых флагов объекта (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsAbstract">
            <summary>
              Возвращает true если шаблон является абстрактным
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsVirtual">
            <summary>
              Возвращает true если шаблон является виртуальным
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsHidden">
            <summary>
              Возвращает true если этот шаблон должен быть скрыт от пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsLogicalSort">
            <summary>
            Возвращает true если объекты этого шаблона следует сортировать с учётом выделения чисел в названии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsSafeEraseMode">
            <summary>
            Режим мягкого удаления - объект остается в базе в состоянии удалённой заглушки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsSaveChildrenHistory">
            <summary>
            Режим итерирования списка дочерних объектов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsCreatableFromUI">
            <summary>
              Если true, то объекты этого шаблона могут создаваться непосредственно пользователем (иначе только скриптом)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsServiceObject">
            <summary>
              Установленный флаг означает, что объекты по этому шаблону являются служебными 
              и относятся к конфигурации (к той, к которой относится сам шаблон)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsTargetSystemObject">
            <summary>
            Установленный флаг означает, что объекты по этому шаблону являются служебными 
            но значения их атрибутов относятся к конечной системе и не перезаписываются при импорте.
            Кроме того на конечной системе разрешается добавлять свои объекты этого шаблона. При импорте они не будут удаляться.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsClassDefinition">
            <summary>
              Установленный флаг означает, что этот шаблон является определением корня или элемента дерева классификации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsFrequentlySearched">
            <summary>
              Установленный флаг означает, что объекты этого шаблона могут часто использоваться пользователем для поиска.
              Галочка влияет на попадание  шаблона вверх выкидушки "что ищем" в окне поиска
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsShowRevisionsInTree">
            <summary>
              Установленный флаг означает, что для объектов по этому шаблону в дереве отображаются ревизии объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsRevisionsOnCardHidden">
            <summary>
            Установленный флаг означает, что для объектов по этому шаблону ревизии объекта не отображаются на карточке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsAllowRevisions">
            <summary>
              Возвращает true, если шаблон предполагает использование ревизий объекта
            </summary>
            <remarks>
              Если флаг установлен у кого-то из родителей, возвращает true
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsAllowPersistentLock">
            <summary>
              Возвращает true, если шаблон предполагает использование долговременных блокировок (CheckIn/CheckOut)
            </summary>
            <remarks>
              Если флаг установлен у кого-то из родителей, возвращает true
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsAllowPersistentLockNonModified">
            <summary>
              Возвращает true, если шаблон предполагает использование долговременных блокировок (CheckIn/CheckOut) (собственное значение без учета наследования)
            </summary>
            <remarks>
              Если флаг установлен у кого-то из родителей, возвращает true
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.UseWorkloadControl">
            <summary>
              Установленный флаг означает, что нагрузка этого шаблона должна быть 
              активирована линейным начальником (если такой определен ролями), прежде чем попадет к получателю
            </summary>
            <remarks>
              Если флаг установлен у кого-то из родителей, возвращает true
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsWorkflowContext">
            <summary>
            Установленный флаг означает, что контейнеры по этому шаблону являются контекстными для рабочих процессов (собственное значение без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsStub">
            <summary>
              Возвращает true если объект является заглушкой для обновления при последующем импорте.
            </summary>
            <remarks>
              В пользовательском интерфейсе такой объект показывается только при необходимости.
              Фактически он не используется.
              Объект "оживает" при импорте пакета, содержащем полную версию объекта
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.DateCreated">
            <summary>
              Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.CreatedByUser">
            <summary>
              Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.DateModified">
            <summary>
              Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ModifiedByUser">
            <summary>
              Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.UIChangesSummaryCounter">
            <summary>
              Суммарный счетчик изменений шаблона и всех его атрибутов, влияющих на отображение атрибутов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.TaskDiagramRevision">
            <summary>
            Номер ревизии диаграммы, используемого для запуска новых рабочих процессов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Icon">
            <summary>
              Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IconNonModified">
            <summary>
              Иконка, установленная для этого объекта (без применения модификаторов)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.DisplayIcon">
            <summary>
              Иконка, показываемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.PrototypeRaw">
            <summary>
              Прототип объекта (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта.
              Возвращается прототип кешированный в клиентском или серверном кеше
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Prototype">
            <summary>
              Прототип объекта (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Parent">
            <summary>
              Доступ к родительскому шаблону по прямой ветке наследования
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Root">
            <summary>
            Возвращает корневой объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.MasterOrThis">
            <summary>
              Доступ к шаблону, для которого данный является модификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.MasterTemplate">
            <summary>
              Доступ к шаблону, для которого данный является модификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.IsModificator">
            <summary>
              Возвращает true если этот шаблон является модификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._Children">
            <summary>
              Возвращает перечислитель дочерних (по прямой ветке наследования) шаблонов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllChildren">
            <summary>
              Перечисляет рекурсивно всех детей (по прямой ветке наследования) (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllDescendants">
            <summary>
            Возвращает перечислитель дочерних (по прямой и дополнительной веткам наследования на все уровни) шаблонов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Children">
            <summary>
              Возвращает перечислитель дочерних (по прямой ветке наследования) шаблонов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.AllChildren">
            <summary>
              Возвращает перечислитель дочерних (по прямой ветке наследования на все уровни) шаблонов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.AllDescendants">
            <summary>
            Возвращает перечислитель дочерних (по прямой и дополнительной веткам наследования на все уровни) шаблонов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.OtherChildLinks">
            <summary>
              Возвращает массив дочерних (по дополнительной ветке наследования) шаблонов в виде обектов-ссылок.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._OtherChildLinks">
            <summary>
              Возвращает массив дочерних (по дополнительной ветке наследования) шаблонов в виде обектов-ссылок.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.OtherChildren">
            <summary>
              Возвращает массив дочерних (по дополнительной ветке наследования) шаблонов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._OtherChildren">
            <summary>
              Возвращает массив дочерних (по дополнительной ветке наследования) шаблонов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ExistingOtherParents">
            <summary>
              Возвращает перечислитель существующих дополнительных родителей шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.OtherParentsWithModificatorsApplied">
            <summary>
              Возвращает перечислитель дополнительных родительских шаблонов с учетом примененных модификаторов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.OtherParentsWithAllModificatorsApplied">
            <summary>
              Возвращает перечислитель дополнительных родительских шаблонов с учетом примененных модификаторов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.OtherParents">
            <summary>
              Возвращает перечислитель дополнительных родительских шаблонов (без модификаторов).
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ExistingModificators">
            <summary>
              Возвращает перечислитель существующих модификаторов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Modificators">
            <summary>
              Возвращает перечислитель модификаторов шаблона, существующих в базе.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ActiveModificators">
            <summary>
              Возвращает коллекцию шаблонов модификаторов. Если таковых нет, возвращается пустая коллекция
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.Diagram">
            <summary>
              Диаграмма задачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.HasDiagram">
            <summary>
            Возвращает true, если у этого шаблона задачи определена диаграмма процесса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template._AllParents">
            <summary>
              Перечисляет все родительские шаблоны, начиная c себя (включая) в порядке от детей к родителям от дополнительных к основным
            </summary>
            <remarks>
              Порядок перечисления обратный к <see cref="M:ProgramSoyuz.PLM.Scripting.Template.GetAllParents"/>
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#Template}#DirectChildren">
            <summary>
              Перечисляет рекурсивно всех прямых детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#Template}#AllDirectChildren">
            <summary>
              Перечисляет рекурсивно всех прямых детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#Template}#ReplacedByItem">
            <summary>
            В ходе сохранения, если создается второй такой же объект, то ему прописывается ссылка
            на реально создаваемый объект, а операция сбрасывается
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#Template}#BrotherItems">
            <summary>
            Перечисляет соседние элементы, включая себя (дети своего родителя)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ProgramSoyuz#PLM#Scripting#IPrototypeContainer#Template">
            <summary>
            Шаблон прототипирумеого объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Template.CreationData">
            <summary>
              Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.CreationData.PrepareDefaults">
            <summary>
            Установка значений по умолчанию для новых объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.NameKey">
            <summary>
              Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.NameUI">
            <summary>
              Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.Notes">
            <summary>
              Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.Params">
            <summary>
              Пользовательские дополнительные параметры шаблона, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.DisplayParams">
            <summary>
              Дополнительное поле для параметров отображения карточки объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.Tags">
            <summary>
              Строка с тэгами шаблона, для использования логикой конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.CustomizationCode">
            <summary>
              Код скрипта кастомизации объектов шаблона
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.ContextMenuCode">
            <summary>
              XML описание контекстного меню объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.Kind">
            <summary>
              Тип шаблонируемой сущности
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.SubKind">
            <summary>
            Дополнительный подтип сущности, определяемой этим шаблоном <see cref="T:ProgramSoyuz.DataModel.WorkItemKind"/>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.FamilyKey">
            <summary>
              Строка, определяющая принадлежность шаблона к некоторому семейству (например изделие-версия-конфигурация)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.SortColumnDefinition">
            <summary>
              Ключ атрибута, к которому применяется сортировка по умолчанию.
              (В основном для шаблонов элементов коллекций)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.SortColumnFlags">
            <summary>
              Флаги, определяющие параметры сортировки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.UIFeaturesVisibility">
            <summary>
              Набор битовых флагов, определяющих видимость различных UI элементов для объектов этого шаблона
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.GroupKey">
            <summary>
              Строка, определяющая порядок сортировки шаблонов между собой и группирования производных объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.MenuLayoutDef">
            <summary>
              Описание размещения управляющих элементов UI (меню, тулбары)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.m_Prototype">
            <summary>
              Прототип объекта (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.m_Parent">
            <summary>
              Родительский (по прямой ветке наследования) шаблон
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.m_MasterTemplate">
            <summary>
              Шаблон, для которого данный служит модификатором
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.ModificatorsToAdd">
            <summary>
              Шаблоны-модификаторы для добавления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.ModificatorsToRemove">
            <summary>
              Шаблоны-модификаторы для удаления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.OtherParentsToAdd">
            <summary>
              Дополнительные родительские шаблоны для добавления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.OtherParentsToRemove">
            <summary>
              Дополнительные родительские шаблоны для удаления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.m_Icon">
            <summary>
              Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.m_ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.Diagram">
            <summary>
              Диаграмма задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.TaskDiagramRevision">
            <summary>
            Номер ревизии диаграммы, используемого для запуска новых рабочих процессов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.CreationData.ReplacedByItem">
            <summary>
            В ходе сохранения, если создается второй такой же объект, то ему прописывается ссылка
            на реально создаваемый объект, а операция сбрасывается
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.CreationData.GetChangesLevel(System.Type)">
            <summary>
            Определяет уровень изменений, накопленных в этом объекте: данные или скин
            </summary>
            <param name="dataType">Тип данных для сохранения объекта в пакете, производный от <see cref="T:ProgramSoyuz.DataModel.ObjectPackDataBase"/></param>
            <returns>Флаги, характеризующие имеющиеся изменения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.CreationData.WriteTo(ProgramSoyuz.DataModel.TemplateBase.Body)">
            <summary>
              Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name = "pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.CreationData.Prototype">
            <summary>
              Прототип объекта (набор значений атрибутов по умолчанию) для инициализации новых экземпляров объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.CreationData.PrototypeData">
            <summary>
              Сериализованные данные прототипа объекта (значения атрибутов по умолчанию)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.CreationData.Parent">
            <summary>
              Родительский шаблон
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.CreationData.MasterTemplate">
            <summary>
              Шаблон, для которого данный служит модификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.CreationData.Icon">
            <summary>
              Иконка для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.CreationData.ParentConfiguration">
            <summary>
              Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Template.OtherParentList">
            <summary>
              Класс оболочка для операций со списком дополнительных родителей
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.OtherParentList.m_pOwner">
            <summary>
              Шаблон, чья коллекция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.OtherParentList.m_ExistingOtherParents">
            <summary>
              Список существующих элементов коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.OtherParentList.#ctor(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Конструктор
            </summary>
            <param name = "pOwner">Шаблон, чья коллекция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.OtherParentList.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref = "T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.OtherParentList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              An <see cref = "T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.OtherParentList.Add(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Adds an item to the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name = "item">The object to add to the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.OtherParentList.Clear">
            <summary>
              Removes all items from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.OtherParentList.Contains(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Determines whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
              true if <paramref name = "item" /> is found in the <see cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name = "item">The object to locate in the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.OtherParentList.CopyTo(ProgramSoyuz.PLM.Scripting.Template[],System.Int32)">
            <summary>
              Copies the elements of the <see cref = "T:System.Collections.Generic.ICollection`1" /> to an <see
               cref = "T:System.Array" />, starting at a particular <see cref = "T:System.Array" /> index.
            </summary>
            <param name = "array">The one-dimensional <see cref = "T:System.Array" /> that is the destination of the elements copied from <see
               cref = "T:System.Collections.Generic.ICollection`1" />. The <see cref = "T:System.Array" /> must have zero-based indexing.</param>
            <param name = "arrayIndex">The zero-based index in <paramref name = "array" /> at which copying begins.</param>
            <exception cref = "T:System.ArgumentNullException"><paramref name = "array" /> is null.</exception>
            <exception cref = "T:System.ArgumentOutOfRangeException"><paramref name = "arrayIndex" /> is less than 0.</exception>
            <exception cref = "T:System.ArgumentException"><paramref name = "array" /> is multidimensional.-or-<paramref
              name = "arrayIndex" /> is equal to or greater than the length of <paramref name = "array" />.-or-The number of elements in the source <see
               cref = "T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref
               name = "arrayIndex" /> to the end of the destination <paramref name = "array" />.-or-Type cannot be cast automatically to the type of the destination <paramref
               name = "array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.OtherParentList.Remove(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Removes the first occurrence of a specific object from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              true if <paramref name = "item" /> was successfully removed from the <see
               cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref
               name = "item" /> is not found in the original <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name = "item">The object to remove from the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.OtherParentList.Count">
            <summary>
              Gets the number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              The number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.OtherParentList.IsReadOnly">
            <summary>
              Gets a value indicating whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
              true if the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList">
            <summary>
              Класс оболочка для операций со списком модификаторов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList.m_pOwner">
            <summary>
              Шаблон, чья коллекция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList.m_ExistingModificators">
            <summary>
              Список существующих модификаторов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList.#ctor(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Конструктор
            </summary>
            <param name = "pOwner">Шаблон, чья коллекция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref = "T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              An <see cref = "T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList.Add(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Adds an item to the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name = "item">The object to add to the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList.Clear">
            <summary>
              Removes all items from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList.Contains(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Determines whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
              true if <paramref name = "item" /> is found in the <see cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name = "item">The object to locate in the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList.CopyTo(ProgramSoyuz.PLM.Scripting.Template[],System.Int32)">
            <summary>
              Copies the elements of the <see cref = "T:System.Collections.Generic.ICollection`1" /> to an <see
               cref = "T:System.Array" />, starting at a particular <see cref = "T:System.Array" /> index.
            </summary>
            <param name = "array">The one-dimensional <see cref = "T:System.Array" /> that is the destination of the elements copied from <see
               cref = "T:System.Collections.Generic.ICollection`1" />. The <see cref = "T:System.Array" /> must have zero-based indexing.</param>
            <param name = "arrayIndex">The zero-based index in <paramref name = "array" /> at which copying begins.</param>
            <exception cref = "T:System.ArgumentNullException"><paramref name = "array" /> is null.</exception>
            <exception cref = "T:System.ArgumentOutOfRangeException"><paramref name = "arrayIndex" /> is less than 0.</exception>
            <exception cref = "T:System.ArgumentException"><paramref name = "array" /> is multidimensional.-or-<paramref
              name = "arrayIndex" /> is equal to or greater than the length of <paramref name = "array" />.-or-The number of elements in the source <see
               cref = "T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref
               name = "arrayIndex" /> to the end of the destination <paramref name = "array" />.-or-Type cannot be cast automatically to the type of the destination <paramref
               name = "array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList.Remove(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
              Removes the first occurrence of a specific object from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              true if <paramref name = "item" /> was successfully removed from the <see
               cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref
               name = "item" /> is not found in the original <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name = "item">The object to remove from the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList.Count">
            <summary>
              Gets the number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              The number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Template.ModificatorsList.IsReadOnly">
            <summary>
              Gets a value indicating whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
              true if the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem">
            <summary>
            Класс для элемента-условия на атрибут
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem.DoPrepare(ProgramSoyuz.PLM.Scripting.SearchOperation)">
            <summary>
            Выполняет предварительную подготовку элементов поискового запроса к выполнению операции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem.DoValidate">
            <summary>
            Выполняет предварительную проверку корректности запроса.
            Генерирует исключение, если что-то не корректно
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32,System.String@)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции</param>
            <param name="searchColumn">На выходе получает имя столбца, по которому осуществляется запрос</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem.GetQueryExpression(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует поисковое SQL выражение для себя и своих детей
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>SQL строку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem.GenerateCode(System.Text.StringBuilder,System.String,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по созданию данного элемента. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="parentItemName">Имя родительского элемента (может быть null)</param>
            <param name="offset">Текущий сдвиг кода в табах</param>
            <param name="usedTemplates"></param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem.AdditionalCondition">
            <summary>
            Дополнительная ветка условия в контексте значения атрибута.
            Допускаются логические операции и SearchAttributeValueFilterItem
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchCriterionItem">
            <summary>
            Базовый класс для элемента-условия в дереве поискового запроса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCriterionItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchCriterionItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchDataContainerFilterItem">
            <summary>
            Класс для поиска по системным свойствам контейнеров
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerFilterItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerFilterItem.DoValidate">
            <summary>
            Выполняет предварительную проверку корректности запроса.
            Генерирует исключение, если что-то не корректно
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerFilterItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchDataContainerFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchUserFilterItem">
            <summary>
            Класс для поиска по системным свойствам пользователей
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchUserFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchUserFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchUserFilterItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchUserFilterItem.DoValidate">
            <summary>
            Выполняет предварительную проверку корректности запроса.
            Генерирует исключение, если что-то не корректно
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchUserFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchUserFilterItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchUserFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IndexDef">
            <summary>
            Поисковый индекс.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexDef.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexDef.m_RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.CreateWrapper(ProgramSoyuz.DataModel.IndexDefBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="indexDef">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.#ctor(ProgramSoyuz.DataModel.IndexDefBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="uniquenessSpace">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.#ctor(ProgramSoyuz.DataModel.IndexDefBase.KindEnum,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="kind">Тело объекта</param>
            <param name="nameKey">Программное название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.#ctor(ProgramSoyuz.PLM.Scripting.IndexDef.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags">Флаги определяющие, какие данные объектов копировать (данные или скин)</param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags">Флаги определяющие, какие данные объектов копировать (данные или скин)</param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexDef._changedRecords">
            <summary>
            Текущий список добавленных, измененных или удаленных записей индекса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.OnChildModified(ProgramSoyuz.PLM.Scripting.IndexRecord)">
            <summary>
            Вызывается ребенком в случае изменения кого-либо из его дочерних сущностей
            </summary>
            <param name="attribute">Дочерний атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.OnChildCancelled(ProgramSoyuz.PLM.Scripting.IndexRecord)">
            <summary>
            Вызывается ребенком в случае отмены его изменения или создания
            </summary>
            <param name="record">Дочерний атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.EraseRecord(ProgramSoyuz.PLM.Scripting.IndexRecord)">
            <summary>
            Добавляет запись об удалении существующей записи
            </summary>
            <param name="record">Удаляемая существующая запись в индексе</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.OnModified">
            <summary>
            Вызывается при изменении этого объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.ContainsKey(System.String)">
            <summary>
            Проверка наличия ключа в индексе
            </summary>
            <param name="indexedKey">Ключ, по которому производится поиск</param>
            <returns>true если в индексе есть запись с таким ключом</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.GetAllKeys">
            <summary>
            Возвращает все ключи имеющиеся в индексе
            </summary>
            <returns>Массив имеющихся  в индексе ключей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.GetAllKeys(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Возвращает все ключи имеющиеся в индексе
            </summary>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
            <returns>Массив имеющихся  в индексе ключей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.GetIndexedRecords(System.String)">
            <summary>
            Выполнение поиска по индексу
            </summary>
            <param name="indexedKey">Ключ, по которому производится поиск</param>
            <returns>Набор записей индекса по указанному ключу</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.GetIndexedRecords(System.String,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Выполнение поиска по индексу
            </summary>
            <param name="indexedKey">Ключ, по которому производится поиск</param>
            <param name="integerNumber">Если не null, то возвращаются записи, у которых установлено указанное значение</param>
            <param name="needAll">true если нужны все записи, false  если нужна только одна запись</param>
            <returns>Набор записей индекса по указанному ключу</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.GetIndexedRecords(ProgramSoyuz.PLM.Scripting.User,System.String)">
            <summary>
            Выполнение поиска по индексу
            </summary>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
            <param name="indexedKey">Ключ, по которому производится поиск</param>
            <returns>Набор записей индекса по указанному ключу</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.GetIndexedRecords(ProgramSoyuz.PLM.Scripting.User,System.String,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Выполнение поиска по индексу
            </summary>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
            <param name="indexedKey">Ключ, по которому производится поиск</param>
            <param name="integerNumber">Если не null, то возвращаются записи, у которых установлено указанное значение</param>
            <param name="needAll">true если нужны все записи, false  если нужна только одна запись</param>
            <returns>Набор записей индекса по указанному ключу</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.Add(ProgramSoyuz.PLM.Scripting.IndexRecord,System.Boolean)">
            <summary>
            Добавляет запись к индексу
            </summary>
            <param name="item">Запись для добавления в индекс</param>
            <param name="replaceIfKeyExists">Определяет происходит ли замена или добавление записей к существующему ключу,
            если указанный ключ уже есть в индексе</param>
            <returns>true, если индекс уже содержал запись с таким ключом.
            В этом случае для уникальных индексов новая запись замещает старую.</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.Add(ProgramSoyuz.PLM.Scripting.User,System.String,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.IndexRecord},System.Boolean)">
            <summary>
            Добавляет запись к индексу
            </summary>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
            <param name="indexedKey">Индексируемый ключ</param>
            <param name="items">Набор данных для добавления в индекс по указанному ключу</param>
            <param name="replaceIfKeyExists">Определяет происходит ли замена или добавление записей к существующему ключу,
            если указанный ключ уже есть в индексе</param>
            <returns>true, если индекс уже содержал запись с таким ключом. 
            В этом случае для уникальных индексов новая запись замещает старую</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.Remove(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.IndexRecord})">
            <summary>
            Удаляет из индекса данные по указанному ключу
            </summary>
            <param name="records">Записи индекса, которые следует удалить</param>
            <returns>true, если что-нибудь было удалено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.RemoveKey(System.String)">
            <summary>
            Удаляет из индекса данные по указанному ключу
            </summary>
            <param name="indexedKey">Ключ для удаления из индекса</param>
            <returns>true, если что-нибудь было удалено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.RemoveKey(ProgramSoyuz.PLM.Scripting.User,System.String)">
            <summary>
            Удаляет из индекса данные по указанному ключу
            </summary>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
            <param name="indexedKey">Ключ для удаления из индекса</param>
            <returns>true, если что-нибудь было удалено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.RemoveAllKeys(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Удаление всех записей для указаннго подмножества индекса.
            </summary>
            <param name="user">Пользователь чьё подмножество индекса интересует</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.Clear">
            <summary>
            Удаление всех записей индекса (для всех пользователей (если есть))
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.Rebuild">
            <summary>
            Вызов кода кастомизации для перестроения индекса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.GetNameUILocalized(System.String)">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.HasChangedRecords">
            <summary>
            Возвращает true если есть подлежащие сохранению записи индекса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.ChangedRecords">
            <summary>
            Текущий список добавленных, измененных или удаленных записей индекса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.HasChangesInConfigurations">
            <summary>
            Возвращает true, если изменения затрагивают конфигурацию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.CountKeys">
            <summary>
            Возвращает число ключей, хранимых в индексе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.CountValues">
            <summary>
            Возвращает число значений, хранимых в индексе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.Count">
            <summary>
            Возвращает число значений, хранимых в индексе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.NameUILocalized">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.ProgramSoyuz#PLM#Scripting#IObjectWithCustomizationCode#CustomizationCode">
            <summary>
            Код скрипта кастомизации объектов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.CustomizationCode">
            <summary>
            Код скрипта кастомизации объектов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.Kind">
            <summary>
            Тип объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.IsCacheInServerMemory">
            <summary>
            Возвращает true, если индексированные данные кешируются в памяти сервера
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.IsCacheInClientMemory">
            <summary>
            Возвращает true, если индексированные данные кешируются в памяти клиента
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.IsPreloadOnStart">
            <summary>
            Возвращает true, если индексированные данные загружаются в память при запуске сервера и/или клиента
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.DateModified">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.ModifiedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IndexDef.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexDef.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexDef.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexDef.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexDef.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexDef.CreationData.Kind">
            <summary>
            размерность объекта 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexDef.CreationData.CustomizationCode">
            <summary>
            Код скрипта кастомизации схемы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexDef.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexDef.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexDef.CreationData.WriteTo(ProgramSoyuz.DataModel.IndexDefBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexDef.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IndexRecord">
            <summary>
            Запись индекса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexRecord.m_OwnerObject">
            <summary>
            Объект-владелец данной записи индекса.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexRecord.m_Data">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexRecord._operation">
            <summary>
            Операция, которую следует произвести с объектом.
            Это поле используется при обработке сервером команды сохранени
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexRecord.m_RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexRecord.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexRecord.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexRecord.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexRecord.#ctor(ProgramSoyuz.DataModel.IndexRecordBase,ProgramSoyuz.PLM.Scripting.IndexDef)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="indexRecord">Реальный объект</param>
            <param name="owner">Владелец записи</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexRecord.#ctor(ProgramSoyuz.PLM.Scripting.User,System.String)">
            <summary>
            Конструктор нового объекта
            </summary>
            <param name="user">Пользователь, чье подпространство индекса интересует</param>
            <param name="key">Индексируемый ключ записи</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexRecord.#ctor(ProgramSoyuz.PLM.Scripting.IndexDef,ProgramSoyuz.PLM.Scripting.User,System.String)">
            <summary>
            Конструктор нового объекта
            </summary>
            <param name="owner">Объект владелец записи</param>
            <param name="user">Пользователь, чье подпространство индекса интересует</param>
            <param name="key">Индексируемый ключ записи</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexRecord.Erase">
            <summary>
            Удаление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexRecord.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexRecord.DoRawCancelChanges(System.Boolean)">
            <summary>
            Возвращает объект в начальное состояние
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexRecord.OnModified">
            <summary>
            Вызывается сеттерами свойств этого объекта при изменении объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IndexRecord.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.OwnerObject">
            <summary>
            Объект-владелец данной записи индекса.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.Operation">
            <summary>
            Операция, которую следует произвести с объектом.
            Это поле используется при обработке сервером команды сохранени
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.TargetUserId">
            <summary>
            Идентификатор пользователя, к которому относится запись
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.TargetUser">
            <summary>
            Идентификатор пользователя, к которому относится запись
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.IndexedKey">
            <summary>
            Индексированный ключ
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.LargeTextValue">
            <summary>
            Дополнительные данные
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.BinaryValue">
            <summary>
            Дополнительные бинарные данные
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.IntegerValue">
            <summary>
            Целочисленное поле данных
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.IntegerValue2">
            <summary>
            Целочисленное поле данных 2
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.FloatValue">
            <summary>
            Вещественное поле данных
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.ShortTextValue">
            <summary>
            Данные в виде короткой строки
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IndexRecord.RecordOperationEnum">
            <summary>
            Набор операций выполняемых с записями индекса
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IndexRecord.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexRecord.CreationData.m_TargetUser">
            <summary>
            Пользователь, к которому относится запись
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexRecord.CreationData.IndexedKey">
            <summary>
            Индексированный ключ
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexRecord.CreationData.IntegerValue">
            <summary>
            Целочисленное поле данных
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexRecord.CreationData.IntegerValue2">
            <summary>
            Целочисленное поле данных
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexRecord.CreationData.FloatValue">
            <summary>
            Вещественное поле данных
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexRecord.CreationData.ShortTextValue">
            <summary>
            Данные в виде короткой строки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexRecord.CreationData.LargeTextValue">
            <summary>
            Дополнительные данные
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.IndexRecord.CreationData.BinaryValue">
            <summary>
            Дополнительные бинарные данные
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IndexRecord.CreationData.TargetUser">
            <summary>
            Пользователь, к которому относится запись
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor">
            <summary>
            Интерфейс окна просмотра редактора виртуального дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.EnsureVisibility(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Делает указанный элемент видимым в дереве структуры
            </summary>
            <param name="treeItem"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.SuspendEventHandling">
            <summary>
            Приостанавливает обработку событий об изменении объектов в дереве
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.ResumeEventHandling">
            <summary>
            Возобнавляет обработку событий об изменении объектов в дереве
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.RebuildTree">
            <summary>
            Полностью перестраивает дерево
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.Document">
            <summary>
            Корневой объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.SelectedTreeItem">
            <summary>
            Выделенный в данный момент объект в дереве структуры
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.ReadOnly">
            <summary>
            Режим "только для чтения"
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.Modal">
            <summary>
            Модальный режим показа диалога
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.Dirty">
            <summary>
            Признак того, что виртуальное дерево или какой-либо из его объектов были изменены
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.BeforeCreateVirtualObject">
            <summary>
            Событие, вызываемое перед тем, как будет создан дочерний объект
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.AfterCreateVirtualObject">
            <summary>
            Событие, вызываемое после того, как был создан дочерний объект
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.BeforeDeleteVirtualObject">
            <summary>
            Событие, вызываемое перед тем, как будет удален объект
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.AfterDeleteVirtualObject">
            <summary>
            Событие, вызываемое после того, как объект был удален
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.Load">
            <summary>
            Событие о готовности карточки к показу
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.Closed">
            <summary>
            Событие о закрытии карточки
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.Saving">
            <summary>
            Событие о сохранении объекта с возможностью отмены
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IVirtualTreeEditor.Saved">
            <summary>
            Событие о завершении сохранения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BeforeCreateVirtualObjectEventArgs.Obj">
            <summary>
            Родительсикий объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BeforeCreateVirtualObjectEventArgs.Template">
            <summary>
            Шаблон дочернего объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AfterCreateVirtualObjectEventArgs.Obj">
            <summary>
            Созданный объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BeforeDeleteVirtualObjectEventArgs.Obj">
            <summary>
            Удаляемый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AfterDeleteVirtualObjectEventArgs.Obj">
            <summary>
            Удаленный объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImportExport.LocalizationExporter">
            <summary>
              Вспомогательный класс для экспорта пакета локализации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.LocalizationExporter.m_TargetLocalizations">
            <summary>
              Список локализаций, объекты которых добавляются в пакет целиком
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.LocalizationExporter.Add(ProgramSoyuz.PLM.Scripting.Configuration,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
              Добавляет в пакет указанную конфигурацию или подветвь конфигураций вместе
              со всеми относящимися к ней объектами
            </summary>
            <param name = "configuration">Добавляемая конфигурация</param>
            <param name = "withAncestors">true если следует добавить все объекты родительских конфигураций</param>
            <param name = "withChildren">true если следует добавить всю ветвь конфигураций по прямому наследованию</param>
            <param name = "withRelatedObjects">true если следует включить в пакет образующие объекты, не включенные в конфигурацию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.LocalizationExporter.Add(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Configuration},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
              Добавляет в пакет указанные конфигурации или подветви конфигураций вместе
              со всеми относящимися к ним объектами
            </summary>
            <param name = "configurations">Добавляемые конфигурации</param>
            <param name = "withAncestors">true если следует добавить все объекты родительских конфигураций</param>
            <param name = "withChildren">true если следует добавить всю ветвь конфигураций по прямому наследованию</param>
            <param name = "withRelatedObjects">true если следует включить в пакет образующие объекты, не включенные в конфигурацию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.LocalizationExporter.CalcLocalizationsToExport(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Configuration},System.Boolean,System.Boolean)">
            <summary>
            Формирует набор конфигураций, подлежащих экспорту
            </summary>
            <param name = "configurations">Добавляемые конфигурации</param>
            <param name = "withAncestors">true если следует добавить все объекты родительских конфигураций</param>
            <param name = "withChildren">true если следует добавить всю ветвь конфигураций по прямому наследованию</param>
            <returns>Множество конфигураций</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.LocalizationExporter.AddObject(ProgramSoyuz.PLM.Scripting.LocalizedString)">
            <summary>
              Добавляет объект в пакет.
            </summary>
            <param name = "obj">Объект для добавления в пакет</param>
            <returns>Возвращает true, если объект добавлен в пакет, false, если добавлен только линк</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.LocalizationExporter.TargetLocalizations">
            <summary>
              Список конфигураций, объекты которых добавляются в пакет целиком
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Strings.Operations">
            <summary>
              Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Strings.Operations.ResourceManager">
            <summary>
              Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Strings.Operations.Culture">
            <summary>
              Перезаписывает свойство CurrentUICulture текущего потока для всех
              обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Strings.Operations.EditObject">
            <summary>
              Ищет локализованную строку, похожую на Редактирование объекта.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTaskExecutor.#ctor">
            <summary>
            Запрещает создание экземпляра пользователем класса
            Также используется для создания экземпляра междоменных функций
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTaskExecutor.ExecuteScriptingTaskAndUnload(System.String,System.String,ProgramSoyuz.PLM.Scripting.IScriptingHost)">
            <summary>
            Создает домен, в котором выполняет скриптовую задачу
            </summary>
            <param name="csModuleName">Сборка со скриптовой задачей</param>
            <param name="csClassName">Класс скриптовой задачи</param>
            <param name="pScriptingHost">Скриптовой провайдер основного приложения</param>
            <returns>Код ошибки</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTaskExecutor.ExecuteScriptingTask(System.String,System.String,ProgramSoyuz.PLM.Scripting.IScriptingHost)">
            <summary>
            Создает домен, в котором выполняет скриптовую задачу
            </summary>
            <param name="csModuleName">Сборка со скриптовой задачей</param>
            <param name="csClassName">Класс скриптовой задачи</param>
            <param name="pScriptingHost">Скриптовой провайдер основного приложения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ScriptingTaskExecutor.DoExecuteScriptingTask(System.String,System.String,ProgramSoyuz.PLM.Scripting.IScriptingHost)">
            <summary>
            Ищет все сборки, содержащие расширение определенного типа, по заданному пути 
            </summary>
            <param name="csModuleName">Сборка со скриптовой задачей</param>
            <param name="csClassName">Класс скриптовой задачи</param>
            <param name="pScriptingHost">Скриптовой провайдер основного приложения</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IClientModule">
            <summary>
            Интерфейс для клиентского модуля конфигурации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientModule.OnLoad(ProgramSoyuz.PLM.Scripting.IClientCallback)">
            <summary>
            Вызывается непосредственно после создания основного окна клиента
            </summary>
            <param name="client">Интерфейс для доступа к пользовательскому интерфейсу</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IClientInterfaceHelper">
            <summary>
            Интерфейс для клиентского модуля конфигурации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientInterfaceHelper.GetIconHandler(System.String)">
            <summary>
            Вызывается для получения обработчика иконок элемента UI
            </summary>
            <param name="itemName">Имя элемента UI</param>
            <returns>Обработчик иконок для заданного элемента UI</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientInterfaceHelper.GetDataHandler(System.String)">
            <summary>
            Вызывается для получения обработчика данных для DnD
            </summary>
            <param name="context">Название контекст, в котором происходит DnD</param>
            <returns>Обработчик данных для DnD</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientInterfaceHelper.GetDropHandler(System.String)">
            <summary>
            Вызывается для получения обработчика операции 'drop'
            </summary>
            <param name="context">Название контекст, в котором происходит drop</param>
            <returns>Обработчик drop'а</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientInterfaceHelper.GetPropertySheetHandler(System.String)">
            <summary>
            Вызывается для обработчика диалога свойств
            </summary>
            <param name="propertySheetName">Название диалога свойств</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientInterfaceHelper.GetToolStrips">
            <summary>
            Вызывается для добавления панелей инструментов модулем конфигурации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IClientInterfaceHelper.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Вызывается, чтобы дать возможность модулю обработать нажатия шорткатов
            </summary>
            <param name="msg">Сообщение Windows</param>
            <param name="keyData">Нажатые клавиши</param>
            <returns>true если нажатие обработано</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IScriptingObject">
            <summary>
            Интерфейс элемента UI, связанного с DataObject
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IInitializeIconHandler">
            <summary>
            Интерфейс инициализации обработчика иконок
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IInitializeDataHandler">
            <summary>
            Интерфейс инициализации обработчика drag-n-drop'а
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IInitializeDropHandler">
            <summary>
            Интерфейс инициализации обработчика drop'а
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IExtractIcon">
            <summary>
            Интерфейс получения иконки для элемента UI, отличной от дефолтной.
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IInitializePropertySheetHandler">
            <summary>
            Интерфейс инициализации обработчика диалога свойств
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback">
            <summary>
            Интерфейс обработчика диалога свойств
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.AddToolStrip(System.Windows.Forms.ToolStrip)">
            <summary>
            Добавление собственной панели кнопок
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.RemoveToolStrip(System.Windows.Forms.ToolStrip)">
            <summary>
            Удаление собственной панели кнопок
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.AddButton(System.Windows.Forms.Button)">
            <summary>
            Добавление дополнительной кнопки в нижний ряд (рядом с Ok, Cancel)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.RemoveButton(System.Windows.Forms.Button)">
            <summary>
            Удаление дополнительной кнопки из нижнего ряда (рядом с Ok, Cancel)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.Close">
            <summary>
            Закрытие диалога с подтверждением от пользователя, если есть несохраненные данные
            </summary>
            <returns>True, если диалог был успешно закрыт</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.Save(System.Boolean)">
            <summary>
            Соханение данных
            </summary>
            <param name="close">Закрывать диалог или в случае успешного сохранения</param>
            <returns>True, в случае успеха</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.Cancel(System.Boolean)">
            <summary>
            Отмена редактирования
            </summary>
            <param name="close">Закрывать диалог после отмены</param>
            <returns>True, в случае успеха</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.IsDialog">
            <summary>
            Признак, что св-ва показываются в отдельном диалоге, а не в панели св-в
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.Modal">
            <summary>
            True если диалог модальный
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.Revision">
            <summary>
            Оторажаемая ревизия объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.ReadOnly">
            <summary>
            True если объект отображается в режиме ReadOnly
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.SelectedPageName">
            <summary>
            Внутреннее имя текущей закладки. Для страниц атрибутов имя формируется как приведенный к строке идентификатор соответствующего 
            определения страницы (PageDef). Для служебных страниц используются следующие имена:
            Properties - страница системных свойств объекта,
            ExtraProperties - страница дополнительных свойств объекта,
            Diagram - страница диаграммы процесса WF.
            Пользовательские UI компоненты могут добавлять собственные страницы со своими именами
            Определение отображаемой страницы можно достать через <code>CurrentPanel.PageDef</code>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.SelectedPage">
            <summary>
            Доступ к текущей странице карточки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.ObjectBeingEdited">
            <summary>
            Исходный объект, редактирование которого в данный момент осуществляется
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.IsNewlyCreatedObject">
            <summary>
            Признак того, что в карточке показан только что созданный объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.SaveButtonText">
            <summary>
            Текст кнопки "Сохранить"
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.OkButtonText">
            <summary>
            Текст кнопки "OK"
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.CancelButtonText">
            <summary>
            Текст кнопки "Отмена"
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.Load">
            <summary>
            Событие о готовности карточки к показу
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.Closed">
            <summary>
            Событие о закрытии карточки
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.Saving">
            <summary>
            Событие о сохранении объекта с возможностью отмены
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.Saved">
            <summary>
            Событие о завершении сохранения объекта
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.Cancelling">
            <summary>
            Событие об отмене редактирования с возможностью отмены
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.Cancelled">
            <summary>
            Событие об отменене редактирования
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.CmdKey">
            <summary>
            Событие о нажатии клавиши
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.SelectedPageChanged">
            <summary>
            Событие о смене текущей страницы карточки объекта
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPropertySheetCallback.RevisionChanged">
            <summary>
            Событие о смене отображаемой ревизии объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CmdKeyEventArgs">
            <summary>
            Аргумент обработчика события CmdKey интерфейса IPropertySheetCallback
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.User">
            <summary>
            Учетная запись (пользователь, группа пользователей)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Сериализация объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CreateWrapper(ProgramSoyuz.DataModel.UserBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="user">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная (или кешированная) скриптовая оболочка объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.#ctor(ProgramSoyuz.DataModel.UserBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="user">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CreateAsInacessible(System.UInt32)">
            <summary>
            Возвращает оболочку по реальному объекту, недоступному по правам доступа.
            </summary>
            <param name="id">Идентификатор объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.#ctor(System.UInt32)">
            <summary>
            Конструктор оболочки по реальному объекту, недоступному по правам доступа.
            </summary>
            <param name="id">Идентификатор объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.#ctor(ProgramSoyuz.PLM.Scripting.Template,System.String,System.String)">
            <summary>
            Конструктор нового пользователя для сохранения в PLM
            </summary>
            <param name="template">Шаблон объекта</param>
            <param name="accountId">Логин</param>
            <param name="password">Пароль</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.#ctor(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Конструктор новой группы пользователей для сохранения в PLM
            </summary>
            <param name="template">Шаблон объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.#ctor(System.String,System.String,System.String)">
            <summary>
            Конструктор нового пользователя для сохранения в PLM
            </summary>
            <param name="pathToTemplate">Шаблон объекта</param>
            <param name="accountId">Логин</param>
            <param name="password">Пароль</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.#ctor(System.String)">
            <summary>
            Конструктор новой группы пользователей для сохранения в PLM
            </summary>
            <param name="pathToTemplate">Шаблон объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.#ctor(ProgramSoyuz.PLM.Scripting.User.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.#ctor(ProgramSoyuz.PLM.Scripting.User.CreationData,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.GetDifferencesReport(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.RtfFormatter)">
            <summary>
            Формирует подробный отчет о различии между двумя объектами одного типа
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.DoEraseChildrenOrRelated">
            <summary>
            Каскадное удаление дочерних объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckWrappedObject(System.Boolean)">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.NTAccountFromSid(System.String)">
            <summary>
            Преобразует SID в отображаемое имя учетной записи ActiveDirectory, либо null, если сервер AD не доступен
            </summary>
            <returns>Имя учетной записи ActiveDirectory, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.m_ParentGroupList">
            <summary>
            Оболочка для работы со списком элементов коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.GetFamilyTree">
            <summary>
            Формирует список "поколений" родительских групп. Каждое поколение представлено списком групп,
            родительских к данному на этом уровне наследования. Сам объект образует 0-е поколение.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.DoBuildFamilyTree(System.Collections.Generic.List{System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.User}},Wintellect.PowerCollections.Set{System.UInt32})">
            <summary>
            Формирует список родительских групп на один уровень относительно последнего этажа в списке
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcAllParentGroups(Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.User})">
            <summary>
            Список учетных записей (групп), в которые входит данная учетная запись
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.EnumAllParents(System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean})">
            <summary>
            Перечисляет все родительские объекты
            </summary>
            <param name="recursive">True если требуется перечислить родителей на все уровни</param>
            <param name="includeOtherParents">Если true то доп родители попадают в перечисление. False - только прямые родители</param>
            <param name="continueHandler">Обработчик возвращает false, если указанный объект уже был обработан и дальнейшее продвижение по его родителям не требуется</param>
            <returns>Перечислитель родительских объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.EnumAllChildren(System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean})">
            <summary>
            Перечисляет все дочерние объекты
            </summary>
            <param name="recursive">True если требуется перечислить детей на все уровни</param>
            <param name="includeOtherChildren">Если true то доп дочерние попадают в перечисление. False - только прямые дочерние</param>
            <param name="continueHandler">Обработчик возвращает true, если дальнейшее продвижение по дочернием указанного объекта уже не требуется</param>
            <returns>Перечислитель дочерних объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.IsChildOf(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Возвращает true, если объект является дочерним к указанному
            </summary>
            <remarks>Считается что объект является дочерним к самому себе</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.IsChildOf(ProgramSoyuz.PLM.Scripting.User,System.Int32@)">
            <summary>
            Проверяет входит ли этот объект в указанную группу. 
            </summary>
            <param name="user">Пользователь-группа, проверяемый на то, что он является родительским к данному</param>
            <param name="distanceMetric">Вычисленная метрика растояния между учетными записями в иерархии наследования</param>
            <returns>true если этот пользователь является дочерним по отношению к user,
            false в противном случае. Метрика при этом равна <code>Int32.MaxValue</code></returns>
            <remarks>Считается что объект является дочерним к самому себе</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.IsOneOf(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.User})">
            <summary>
            Возвращаеn true если данный пользователь является одним из указанных
            или дочерним к ним
            </summary>
            <param name="usersAndGroups">Список пользователей и групп для проверки</param>
            <returns>true если пользователь входит или является дочерним к указанному списку пользователей и груgg</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.AddParentGroup(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Добавление объекта в группу
            </summary>
            <param name="parent">Группа</param>
            <returns>true если такой группы еще не было</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.RemoveParentGroup(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Удаление дополнительного родителя шаблона
            </summary>
            <param name="parent">Дополнительный родитель</param>
            <returns>true если такого родитель был и исключен из списка дополнительных</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.IsHiddenInUI(ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Возвращает true, если объект должен быть скрыт в пользовательском интерфейсе.
            Например по причине отсутствия доступа на просмотр объекта
            </summary>
            <param name="cache">Кеш привязок для проверки прав доступа. Может быть null при одиночной проверке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.IsHiddenInUI(ProgramSoyuz.PLM.Scripting.BindingsCache,System.Boolean)">
            <summary>
            Возвращает true, если объект должен быть скрыт в пользовательском интерфейсе.
            Например по причине отсутствия доступа на просмотр объекта
            </summary>
            <param name="cache">Кеш привязок для проверки прав доступа. Может быть null при одиночной проверке</param>
            <param name="ignoreGlobalPermissions">Если true то глобальные разрешения администратору не учитываются</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcIsHiddenInUI(ProgramSoyuz.PLM.Scripting.BindingsCache,System.Boolean)">
            <summary>
            Возвращает true, если объект должен быть скрыт в пользовательском интерфейсе.
            Например по причине отсутствия доступа на просмотр объекта
            </summary>
            <param name="cache">Кеш привязок для проверки прав доступа. Может быть null при одиночной проверке</param>
            <param name="ignoreGlobalPermissions">Если true то глобальные разрешения администратору не учитываются</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.HasVisibleChildren(ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Вовзращает true, если в группе есть хотя бы один видимый текущим пользователем юзер
            </summary>
            <param name="cache">Кеш привязок для проверки прав доступа. Может быть null при одиночной проверке</param>
            <returns>true если есть хобя один</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.GetBindingsFor(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Возвращает перечислитель привязок к конкретному объекту
            </summary>
            <returns>Перечислитель привязок к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.DoScanBindingsForRoles(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.UserBinding},Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.Role},Wintellect.PowerCollections.Set{ProgramSoyuz.PLM.Scripting.Role})">
            <summary>
            Просмотр привязок и выдача тех из них, что формируют действующую или экранирующую роль
            </summary>
            <param name="selfBindings">Привязки прав доступа</param>
            <param name="screenedRoles">Пополняемый список ролей, на которые уже есть экран. </param>
            <param name="usedRoles">Список уже выданных ролей</param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveRoles(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Вычисляет список ролей, посредством которых указанный пользователь относится к указанному объекту
            </summary>
            <param name="obj">Проверяемый объект</param>
            <returns>Список ролей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveRoles(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Вычисляет список ролей, посредством которых указанный пользователь относится к указанному объекту
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>Список ролей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveUserBindings(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean)">
            <summary>
            Вычисляет список привязок ролей к объекту, посредством которых этот пользователь (и его группы) относится к указанному объекту
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="effectiveOnly">true - возвращает только действующие на объект привязки, false - будут найдены все собственные привязки к объекту 
            (в том числе и действующие лишь на детей)</param>
            <returns>Список ролей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveBindings(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Вычисляет список привязок, посредством которых указанный пользователь относится к указанному объекту
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>Список действующих привязок (включая экранирующие)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveBindings(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.BindingsCache,System.Boolean)">
            <summary>
            Вычисляет список привязок, посредством которых указанный пользователь относится к указанному объекту
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <param name="effectiveOnly">true - возвращает только действующие на объект привязки, false - будут найдены все собственные привязки к объекту 
            (в том числе и действующие лишь на детей)</param>
            <returns>Список действующих привязок (включая экранирующие)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveRoles(ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Вычисляет список ролей, посредством которых указанный пользователь относится к указанному объекту
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>Перечислитель ролей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveBindings(ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.PLM.Scripting.BindingsCache,System.Boolean)">
            <summary>
            Вычисляет список привязок, посредством которых указанный пользователь относится к указанному объекту
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <param name="effectiveOnly">true - возвращает только действующие на объект привязки, false - будут найдены все собственные привязки к объекту 
            (в том числе и действующие лишь на детей)</param>
            <returns>Перечислитель действующих привязок (включая экранирующие)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveRoles(ProgramSoyuz.PLM.Scripting.DataContainer,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Вычисляет список ролей, посредством которых указанный пользователь относится к указанному объекту
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>Перечислитель ролей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveBindings(ProgramSoyuz.PLM.Scripting.DataContainer,ProgramSoyuz.PLM.Scripting.BindingsCache,System.Boolean)">
            <summary>
            Вычисляет список привязок, посредством которых указанный пользователь относится к указанному объекту
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <param name="effectiveOnly">true - возвращает только действующие на объект привязки, false - будут найдены все собственные привязки к объекту 
            (в том числе и действующие лишь на детей)</param>
            <returns>Перечислитель действующих привязок (включая экранирующие)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveRoles(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Вычисляет список ролей, посредством которых пользователь относится к указанному пользователю
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>Перечислитель ролей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveBindings(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.BindingsCache,System.Boolean)">
            <summary>
            Вычисляет список привязок, посредством которых пользователь относится к указанному пользователю
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <param name="effectiveOnly">true - возвращает только действующие на объект привязки, false - будут найдены все собственные привязки к объекту 
            (в том числе и действующие лишь на детей)</param>
            <returns>Перечислитель действующих привязок (включая экранирующие)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.BuildOwnedBindingsByTargetUser(ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Формирует индекс собственных и унаследованных привязок пользователя по целевой учетке
            </summary>
            <returns>Сформированный индекс</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.GetEffectiveBindingsToUsers(ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Формирует список действующих привязок этой учетки к другим учеткам в порядке поколений от этого объекта к родительским группам
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveRoles(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Вычисляет список ролей, посредством которых указанный пользователь относится к указанному объекту
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>Перечислитель ролей</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CalcEffectiveBindings(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.PLM.Scripting.BindingsCache,System.Boolean)">
            <summary>
            Вычисляет список привязок, посредством которых указанный пользователь относится к указанному объекту
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <param name="effectiveOnly">true - возвращает только действующие на объект привязки, false - будут найдены все собственные привязки к объекту 
            (в том числе и действующие лишь на детей)</param>
            <returns>Перечислитель действующих привязок (включая экранирующие)</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckOperation(ProgramSoyuz.PLM.Scripting.DataContainer,ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения операций над указанным объектом указанным юзером
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="op">Проверяемая операция</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckOperation(ProgramSoyuz.PLM.Scripting.InfoObject,ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения операций над указанным объектом указанным юзером
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="op">Проверяемая операция</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckOperation(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения операций над указанным объектом указанным юзером
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="op">Проверяемая операция</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckOperation(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.BindingsCache,System.Boolean)">
            <summary>
            Проверяет возможность выполнения операций над указанным объектом указанным юзером
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="op">Проверяемая операция</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <param name="ignoreGlobalPermissions">Если true то глобальные разрешения администратору не учитываются</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckOperation(ProgramSoyuz.PLM.Scripting.WorkItem,ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения операций над указанным объектом указанным юзером
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="op">Проверяемая операция</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckOperation(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения операций над указанным объектом указанным юзером
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="op">Проверяемая операция</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения операций над указанным объектом указанным юзером
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="op">Проверяемая операция</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.DoCheckOperation(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject,System.UInt32[],Wintellect.PowerCollections.Set{System.UInt32},System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AccessRule},ProgramSoyuz.DataModel.OperationIdentifier)">
            <summary>
            Проверка наличия указанной операции в списке правил контроля доступа
            </summary>
            <param name="user"> </param>
            <param name="obj">Проверяемый объект</param>
            <param name="templateIds">Список собственных шаблонов объекта</param>
            <param name="allTemplateIds">Множество собственных и унаследованных шаблонов объекта</param>
            <param name="rules">Список проверяемых правил контроля доступа</param>
            <param name="op">Проверяемая операция</param>
            <returns>true если операция разрешена</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.DoCheckOperation(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject,System.UInt32[],Wintellect.PowerCollections.Set{System.UInt32},System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AccessRule},ProgramSoyuz.PLM.Scripting.NamedValue,System.Boolean)">
            <summary>
            Проверка наличия указанной пользовательской операции в списке правил контроля доступа
            </summary>
            <param name="user">Пользователь, для которого проверяем привязки</param>
            <param name="obj">Проверяемый объект</param>
            <param name="templateIds">Список собственных шаблонов объекта</param>
            <param name="allTemplateIds">Множество собственных и унаследованных шаблонов объекта</param>
            <param name="rules">Список проверяемых правил контроля доступа</param>
            <param name="op">Проверяемая операция</param>
            <param name="matchChildren">true если дети от кастом операции тоже годятся</param>
            <returns>true если операция разрешена</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckGlobalPermissions(ProgramSoyuz.DataModel.OperationIdentifier)">
            <summary>
            Проверка разрешений уровня пользователя
            </summary>
            <param name="op">Проверяемая операция</param>
            <returns>true, если можно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckChildOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения пользователем операции с дочерним объектом
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="target">Целевой родительский объект (для операций создания и переноса)</param>
            <param name="op">Проверяемая операция</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckChildOperation(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения пользователем операции с дочерним объектом
            </summary>
            <param name="template">Шаблон проверяемого объекта</param>
            <param name="target">Целевой родительский объект (для операций создания и переноса)</param>
            <param name="op">Проверяемая операция</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckCreateOperationOnGroup(ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},ProgramSoyuz.PLM.Scripting.BindingsCache,System.String@)">
            <summary>
            Проверяет возможность выполнения пользователем операции создания дочернего объекта указанного шаблона по выбранной группе объектов.
            </summary>
            <param name="template">Шаблон создаваемого объекта</param>
            <param name="selectedObjects">Группа выбранных объектов, по которым создается экземпляр шаблона <paramref name="template"/></param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <param name="grayTooltip">На выходе содержит сообщение для показа пользователю, с подсказкой почему создание не возможно</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckCreateOperation(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения пользователем операции создания дочернего объекта указанного шаблона
            </summary>
            <param name="template">Шаблон создаваемого объекта</param>
            <param name="target">Целевой родительский объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckCreateOperation(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.BindingsCache,System.String@)">
            <summary>
            Проверяет возможность выполнения пользователем операции создания дочернего объекта указанного шаблона
            </summary>
            <param name="template">Шаблон создаваемого объекта</param>
            <param name="target">Целевой родительский объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <param name="grayTooltip">На выходе содержит сообщение для показа пользователю, с подсказкой почему создание не возможно</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckEraseOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения пользователем операции удаления указанного объекта
            </summary>
            <param name="obj">проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckEraseOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.BindingsCache,System.String@)">
            <summary>
            Проверяет возможность выполнения пользователем операции удаления указанного объекта
            </summary>
            <param name="obj">проверяемый объект</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <param name="grayTooltip">На выходе содержит сообщение для показа пользователю, с подсказкой почему удаление не возможно</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckAttributeOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement,ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения пользователем операции с указанным атрибутом
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="attrNameKey">Проверяемый атрибут</param>
            <param name="element">Проверяемый элемент коллекции</param>
            <param name="op">Проверяемая операция</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckAttributeOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement,ProgramSoyuz.DataModel.OperationIdentifier,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Role},System.Boolean)">
            <summary>
            Проверяет возможность выполнения пользователем операции с указанным атрибутом.
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="attrNameKey">Проверяемый атрибут</param>
            <param name="element">Проверяемый элемент коллекции</param>
            <param name="op">Проверяемая операция</param>
            <param name="roles">Список ролей, действующих на объект</param>
            <param name="userToTarget">true если проверяется прямое действие роли от текущего пользователя к <paramref name="obj"/></param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckCustomOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.NamedValue,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения пользовательской операции над указанным объектом указанным юзером
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="op">Проверяемая операция в виде ссылки на ИЗ</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CheckCustomOperation(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.NamedValue,System.Boolean,ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Проверяет возможность выполнения пользовательской операции над указанным объектом указанным юзером
            </summary>
            <param name="obj">Проверяемый объект</param>
            <param name="op">Проверяемая операция в виде ссылки на ИЗ</param>
            <param name="matchChildren">Если true то метод проверяет наличие любой из дочерних пользовательских операций</param>
            <param name="cache">Кеш уже вычисленных привязок</param>
            <returns>true если хотя бы одна из ролей разрешает выполнение операции </returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.IsOnline">
            <summary>
            Возвращает true, если у пользователя есть хотя бы одна живая сессия
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.Disconnect(System.String)">
            <summary>
            Завершает все сессии данного пользователя
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.GetSystemName">
            <summary>
            Возвращает формальное системное строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.RealObject">
            <summary>
            Доступ к атрибутируемому "реальному" объекту. 
            Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.System">
            <summary>
            Оболочка для UserBase.System
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ExternalLinkAdditionalData">
            <summary>
              Дополнительные данные при создании линка в пакете конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.AccountId">
            <summary>
            Внутренний логин учетной записи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.SID">
            <summary>
            SID (идентификатор в Active Directory)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.Password">
            <summary>
            Пароль для встроенной учетной записи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.PasswordStrength">
            <summary>
            Оценка криптостойкости пароля (0-100), либо -1, если оценка ещё не известна
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.OldPassword">
            <summary>
            Текущий пароль для встроенной учетной записи,
            подтверждающий установку нового пароля
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.NameKey">
            <summary>
            Программное название учетной записи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.Notes">
            <summary>
            Пользовательские заметки об иконке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.Params">
            <summary>
            Пользовательские дополнительные параметры учетной записи, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.Kind">
            <summary>
            Тип учетной записи (внутренняя, ActiveDirectory)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.IsAdministrator">
            <summary>
            Возвращает true если пользователь является администратором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.IsConfigurator">
            <summary>
            Возвращает true если пользователь является конфигуратором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.IsDisabled">
            <summary>
            Возвращает true если учетная запись заблокирована (логин запрещен)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.IsErasedStub">
            <summary>
            Возвращает true если этот объект является заглушкой удалённого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.CanChangePassword">
            <summary>
            Возвращает true если пользователь может изменять себе пароль
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.IsInternalLoginDisabled">
            <summary>
            Возвращает true если вход по внутреннему паролю закрыт
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.IsActiveDirectoryLoginDisabled">
            <summary>
            Возвращает true если вход через ActiveDirectory закрыт
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.DateModified">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ModifiedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.DateContentModified">
            <summary>
            Локальная дата/время последнего изменения содержательной части объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ContentModifiedByUser">
            <summary>
            Ссылка на пользователя, изменившего содержательную часть этого объекта последним.
            Если реального пользователя нет, возвращается экземпляр системного псевдопользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.IsUser">
            <summary>
            Возвращает true если учетная запись является учетной записью пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.IsGroup">
            <summary>
            Возвращает true если учетная запись является учетной записью группы пользователей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.Icon">
            <summary>
            Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.DisplayIcon">
            <summary>
            Иконка, показываемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.Template">
            <summary>
            Доступ к шаблону объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User._Children">
            <summary>
            Возвращает перечислитель учетных записей (групп или пользователей), входящих в данную учетную запись
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User._AllChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.Children">
            <summary>
            Возвращает массив дочерних учетных записей.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.AllChildren">
            <summary>
            Возвращает массив дочерних учетных записей на все уровни.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#User}#DirectChildren">
            <summary>
            Перечисляет всех непосредственных детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#User}#AllDirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#User}#Parent">
            <summary>
            Доступ к родительскому объекту. Для учетной записи не реализован, так как входимость множественная
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#User}#Root">
            <summary>
            Возвращает корневой объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ExistingParentGroups">
            <summary>
            Возвращает перечислитель существующих дополнительных родителей шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ParentGroups">
            <summary>
            Возвращает перечислитель групп, в которые входит данная учетная запись
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.Depth">
            <summary>
            Уровень вложенности от корня (по кратчайшему пути).
            Корневые элементы - 0, и плюс единичка для каждого уровня вложенности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.AllParentGroups">
            <summary>
            Список всех учетных записей (групп), в которые входит данная учетная запись.
            Сама учетная запись в результат не входит.
            Ближайшие родители идут первыми.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.AllChildUsers">
            <summary>
            Перечислитель всех учетных записей - листиков-пользователей,
            входящих в эту группу.
            Если данный объект сам является пользователем, возвращает его самого
            </summary>
            <returns>Перечислитель пользователей</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.OwnedBindings">
            <summary>
            Перечислитель имеющихся привязок данного пользователя к другим объектам
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.OwnedBindingsToUsers">
            <summary>
            Перечислитель имеющихся привязок данного пользователя к другим учеткам
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.Bindings">
            <summary>
            Список привязок к этому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ParentBindings">
            <summary>
            Возвращает перечислитель унаследованных от родителей привязок к этому объекту/с использованием этой роли
            </summary>
            <returns>Перечислитель унаследованных от родителей привязок к этому объекту/с использованием этой роли</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.Sessions">
            <summary>
            Список сессий данного пользователя
            </summary>
            <remarks>Сессия в триггере SessionConnected не включается в этот список</remarks>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.User.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.Kind">
            <summary>
            Тип учетной записи (внутренняя, ActiveDirectory)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.AccountId">
            <summary>
            Внутренний логин учетной записи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.SID">
            <summary>
            SID (идентификатор в Active Directory)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.Password">
            <summary>
            Пароль для встроенной учетной записи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.PasswordHash">
            <summary>
            Хеш пароля
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.PasswordSaltValue">
            <summary>
            Соль хеша
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.PasswordStrength">
            <summary>
            Оценка сложности пароля
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.OldPassword">
            <summary>
            Текущий пароль встроенной учетной записи, 
            подтверждающий операцию смены пароля
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.OldPasswordHash">
            <summary>
            Хеш текущего пароля
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.Params">
            <summary>
            Дополнительное поле для параметров этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.m_Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.m_Template">
            <summary>
            Шаблон объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.ParentGroupsToAdd">
            <summary>
            Родительские группы для добавления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.ParentGroupsToRemove">
            <summary>
            Родительские группы для удаления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.CreationData.WriteTo(ProgramSoyuz.DataModel.UserBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.CreationData.Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.CreationData.Template">
            <summary>
            Шаблон объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.CreationData.AreSysPropsChanged">
            <summary>
            Возвращает true если есть изменения в системных атрибутах объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.CreationData.AreParentGroupsChanged">
            <summary>
            Возвращает true если есть изменения в системных атрибутах объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.User.ParentGroupList">
            <summary>
            Класс оболочка для операций со списком дополнительных родителей
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.ParentGroupList.m_pOwner">
            <summary>
            Юзер, чья коллекция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.User.ParentGroupList.m_ExistingParentGroups">
            <summary>
            Список существующих элементов коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.ParentGroupList.#ctor(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Конструктор
            </summary>
            <param name="pOwner">Шаблон, чья коллекция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.ParentGroupList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.ParentGroupList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.ParentGroupList.Add(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.ParentGroupList.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.ParentGroupList.Contains(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.ParentGroupList.CopyTo(ProgramSoyuz.PLM.Scripting.User[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional.-or-<paramref name="arrayIndex" /> is equal to or greater than the length of <paramref name="array" />.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.-or-Type cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.User.ParentGroupList.Remove(ProgramSoyuz.PLM.Scripting.User)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ParentGroupList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.User.ParentGroupList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CustomIcon">
            <summary>
            Иконка. Класс помимо собственно бинарного тела иконки содержит дополнительные описательные поля,
            такие как название, ключевые слова и пр. 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomIcon.m_BinaryData">
            <summary>
            Копия актуальных бинарных данных иконки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomIcon.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomIcon.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.CreateWrapper(ProgramSoyuz.DataModel.CustomIconBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="icon">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.#ctor(ProgramSoyuz.DataModel.CustomIconBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="icon">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.#ctor(System.String,System.Byte[])">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="name">Название иконки</param>
            <param name="data">Тело иконки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.#ctor(ProgramSoyuz.PLM.Scripting.CustomIcon.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.#ctor(ProgramSoyuz.PLM.Scripting.ExternalLink)">
            <summary>
            Конструктор новой заглушки объекта для сохранения в PLM
            </summary>
            <param name="data">Набор данных для создания объекта заглушки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.Name">
            <summary>
            Название иконки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.Notes">
            <summary>
            Пользовательские заметки об иконке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.Keywords">
            <summary>
            Список ключевых слов, описывающих иконку
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.IsStub">
            <summary>
            Возвращает true если объект является заглушкой для обновления при последующем импорте.
            </summary>
            <remarks>
            В пользовательском интерфейсе такой объект показывается только при необходимости.
            Фактически он не используется.
            Объект "оживает" при импорте пакета, содержащем полную версию объекта
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.BinaryData">
            <summary>
            Тело иконки. Если бинарные данные были изменены, они же и возвращаются.
            Для неизмененного объекта возвращается единственная копия реальных бинарных данных. 
            При появлении на клиенте обновленного объекта, копия бинарных данных формируется заново
            </summary>
            <exception cref="T:System.ArgumentNullException">Передан null в качестве массива для сохранения</exception>
            <remarks>Тело иконки для реального объекта копируется, чтобы исключить прямой доступ к данным объекта в кеше.
            В остальных случаях копируется ссылка на массив.</remarks>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CustomIcon.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomIcon.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomIcon.CreationData.Name">
            <summary>
            Название иконки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomIcon.CreationData.Notes">
            <summary>
            Пользовательские заметки об иконке
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomIcon.CreationData.Keywords">
            <summary>
            Список ключевых слов, описывающих иконку
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomIcon.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomIcon.CreationData.BinaryData">
            <summary>
            Тело иконки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CustomIcon.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CustomIcon.CreationData.WriteTo(ProgramSoyuz.DataModel.CustomIconBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CustomIcon.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:System.PluginTargetAttribute">
            <summary>
            Атрибут для указания ключа приложения, с которым плагин может работать
            </summary>
        </member>
        <member name="M:System.PluginTargetAttribute.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="pluginTarget">Ключ приложения, для работы с которым предназначен плагин</param>
        </member>
        <member name="F:System.PluginTargetAttribute.m_PluginTarget">
            <summary>
            Ключ приложения, для работы с которым предназначен плагин
            </summary>
        </member>
        <member name="P:System.PluginTargetAttribute.PluginTarget">
            <summary>
            Ключ приложения, для работы с которым предназначен плагин
            </summary>
        </member>
        <member name="T:System.RequiredClientEnvironmentAttribute">
            <summary>
            Атрибут для указания необходимых ключей окружения приложения, при наличии которых плагин может работать.
            Может использоваться для привязки плагина к конкретному аппаратному обеспечению на клиентской машине
            </summary>
        </member>
        <member name="M:System.RequiredClientEnvironmentAttribute.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="pluginRequiredEnvironment">Ключ окружения клиентского приложения, при наличии которого плагин может работать</param>
        </member>
        <member name="F:System.RequiredClientEnvironmentAttribute.m_RequiredEnvironment">
            <summary>
            Ключ окружения клиентского приложения, при наличии которого плагин может работать
            </summary>
        </member>
        <member name="P:System.RequiredClientEnvironmentAttribute.RequiredEnvironment">
            <summary>
            Ключ окружения клиентского приложения, при наличии которого плагин может работать
            </summary>
        </member>
        <member name="T:System.DeployWithAttribute">
            <summary>
            Атрибут для указания файла, который следует носить вместе с плагином
            </summary>
        </member>
        <member name="M:System.DeployWithAttribute.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="fileName">Имя файла, который следует носить вместе с данной сборкой</param>
        </member>
        <member name="F:System.DeployWithAttribute.m_FileName">
            <summary>
            Имя файла, который следует носить вместе с данной сборкой
            </summary>
        </member>
        <member name="P:System.DeployWithAttribute.FileName">
            <summary>
            Имя файла, который следует носить вместе с данной сборкой
            </summary>
        </member>
        <member name="T:System.PLMConfigurationModuleAttribute">
            <summary>
            Атрибут для указания класса, экземпляр которого следует создавать при загрузке модуля
            </summary>
        </member>
        <member name="T:System.PLMWorkSpaceSchemeAttribute">
            <summary>
            Атрибут для указания класса, экземпляр которого следует использовать в качестве схемы рабочего пространства
            </summary>
        </member>
        <member name="T:System.PLMUICommandAttribute">
            <summary>
            Атрибут для указания класса, экземпляр которого следует использовать в качестве UI команды
            </summary>
        </member>
        <member name="T:System.PLMUIPluginAttribute">
            <summary>
            Атрибут для указания класса, экземпляр которого следует использовать в качестве UI плагина
            </summary>
        </member>
        <member name="T:System.PLMUIClientComponent">
            <summary>
            Атрибут для указания класса, экземпляр которого следует использовать в качестве клиентского UI компонента
            </summary>
        </member>
        <member name="T:System.PLMConfigurationComponent">
            <summary>
            Атрибут для указания класса, экземпляр которого следует использовать в качестве серверного компонента
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IConfigurationComponent">
            <summary>
            Интерфейс плагина PLM сервера
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IConfigurationComponent.NameKey">
            <summary>
            Ключ, идентифицирующий компонент
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IConfigurationComponent.NameUI">
            <summary>
            Название компонента для пользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IConfigurationComponent.Notes">
            <summary>
            Описание компонента
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ICustomServerProtocol">
            <summary>
            Интерфейс серверного компонента, реализующего свой сетевой протокол общения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ICustomServerProtocol.HandlePacket(ProgramSoyuz.Connectivity.ServerPacket,System.IO.Stream)">
            <summary>
            Вызывается потоком обработчиком сетевых пакетов при получении пакета, адресованного этому компоненту
            </summary>
            <param name="packet">Сетевой пакет</param>
            <param name="readingStream">Поток чтения пакета. Текущая позиция потока на начале собственно данных</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ICustomizatorsProvider">
            <summary>
            Интерфейс компонента конфигурации, реализующего объекты кастомизаторы сущностей базы
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ICustomizatorsProvider.PrepareCustomizators(ProgramSoyuz.PLM.Scripting.ObjectMultiCustomizatorsList)">
            <summary>
            Вызывается при загрузке конфигурации в процессе подключения к серверу.
            </summary>
            <remarks>Компонент может добавить свои кастомизаторы в список <paramref name="componentCustomizators"/>,
            чтобы они использовались наряду с кодом кастомизации</remarks>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserSignature">
            <summary>
            Класс для значений типа подпись/виза
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSignature.Value">
            <summary>
            Значение, используемое как заглушка, обозначающая наличие подписи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSignature.OutdatedValue">
            <summary>
            Значение, используемое как заглушка, обозначающая наличие устаревшей подписи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSignature.m_DateCreated">
            <summary>
            Дата подписания
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserSignature.m_Signer">
            <summary>
            Подписавший пользователь
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSignature.#ctor(ProgramSoyuz.PLM.Scripting.User,System.DateTime)">
            <summary>
            Конструктор для внутреннего использования.
            Создание заглушки для отображения подписи
            </summary>
            <param name="user"></param>
            <param name="dateCreated"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSignature.#ctor(ProgramSoyuz.PLM.Scripting.User,System.DateTime,System.Boolean)">
            <summary>
            Конструктор для внутреннего использования.
            Создание заглушки для отображения подписи
            </summary>
            <param name="user"></param>
            <param name="dateCreated"></param>
            <param name="isOutdated"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSignature.#ctor(System.Boolean)">
            <summary>
            Конструктор для внутреннего использования.
            Создание пустой заглушки для установки значения подписи
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserSignature.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSignature.DateCreated">
            <summary>
            Дата подписания
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserSignature.Signer">
            <summary>
            Подписавший пользователь
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.WorkSpaceSchemeCustomizationBase">
            <summary>
            Базовый класс для кастомизаторов схем
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceSchemeCustomizationBase.CheckCustomizationCode(System.String,ProgramSoyuz.PLM.Scripting.CustomizationMethod[]@,System.CodeDom.Compiler.CompilerError[]@,System.Int32@)">
            <summary>
            Проверочная компиляция кода кастомизации объекта
            </summary>
            <param name="csCode">Текст одного или нескольких методов</param>
            <param name="missingHandlers">На выходе список методов, которые можно добавить к коду</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <param name="nHeaderLines">Число строк, вставленных перед переданным для компиляции кодом</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceSchemeCustomizationBase.GetDefaultImplementation(ProgramSoyuz.PLM.Scripting.CustomizationMethod[])">
            <summary>
            Формирует реализацию по умолчанию для запрошенных методов кастомизации
            </summary>
            <param name="handlers">массив идентификаторов интересующих методов кастомизации,
            либо null если интересуют все методы для этого объекта</param>
            <returns>Строку с кодом</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.WorkSpaceSchemeCustomization">
            <summary>
            Базовый класс для кастомизаторов определений атрибутов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceSchemeCustomization.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceSchemeCustomization.IsValidFor(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Проверка применимости схемы к объекту
            </summary>
            <param name="pObject">Проверяемый объект</param>
            <returns>Возвращает true, если данная схема может быть применена к указанному объекту</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceSchemeCustomization.OnEditSchemeParams(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.UserItem)">
            <summary>
            Инициализация/редактирование параметров схемы
            </summary>
            <param name="pObject">Объект, к которому применяется схема.</param>
            <param name="userItem">Элемент рабочей среды пользователя, заменяемый на виртуальный корень схемы.
            В этом элементе сохраняются настройки схемы/</param>
            <returns>true, если параметры следует сохранить</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.WorkSpaceSchemeCustomization.CalcSelf(ProgramSoyuz.PLM.Scripting.UserItem)">
            <summary>
            Формирует виртуальное представление корня схемы.
            </summary>
            <param name="userItem">Элемент рабочей среды пользователя, заменяемый на виртуальный корень схемы</param>
            <returns>Виртуальный элемент рабочей среды пользователя, являющийся корнем схемы</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.ForkShape">
            <summary>
            Переход
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.DocumentPageDesc">
            <summary>
            Описатель страницы печатного документа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DocumentPageDesc._pageObject">
            <summary>
            Объект отображаемый данной страницей
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DocumentPageDesc._boundingBox">
            <summary>
            Обрамляющий прямоугольник страницы
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDesc.#ctor(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Drawing.RectangleF)">
            <summary>
            Конструктор
            </summary>
            <param name="pageObject">Объект, отображаемый страницей</param>
            <param name="boundingBox">Размеры страницы</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DocumentPageDesc.PageNumber">
            <summary>
            Порядковый номер страницы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DocumentPageDesc.PageObject">
            <summary>
            Объект отображаемый данной страницей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DocumentPageDesc.BoundingBox">
            <summary>
            Обрамляющий прямоугольник области, занимаемой страницей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DocumentPageDesc.CmdTarget">
            <summary>
            Ссылка на внутренний объект 
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList">
            <summary>
              Класс оболочка для списка страниц печатного документа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList._pages">
            <summary>
              Список элементов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.#ctor">
            <summary>
              Конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.Add(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Добавляет очередную страницу по объекту. Размер страницы вычисляется автоматически по содержимому
            </summary>
            <param name="item">Объект, отображаемый страницей печатного документа</param>
            <returns>Вновь созданный описатель страницы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.Add(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Drawing.RectangleF)">
            <summary>
            Добавляет очередную страницу по объекту и его размерам
            </summary>
            <param name="item">Объект, отображаемый страницей печатного документа</param>
            <param name="boundingBox">Размеры страницы. По умолчанию вычисляются автоматически по содержимому</param>
            <returns>Вновь созданный описатель страницы</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.Renumber(System.Int32)">
            <summary>
            Простановка номеров страниц, начиная с указанного индекса
            </summary>
            <param name="startIndex">Стартовый индекс, начиная с которого страницам присваиваются порядковые номера</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref = "T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              An <see cref = "T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.AddRange(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.DocumentPageDesc})">
            <summary>
            Добавляет набор страниц к коллекции
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.Add(ProgramSoyuz.PLM.Scripting.DocumentPageDesc)">
            <summary>
              Adds an item to the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name = "item">The object to add to the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.Clear">
            <summary>
              Removes all items from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.Contains(ProgramSoyuz.PLM.Scripting.DocumentPageDesc)">
            <summary>
              Determines whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
              true if <paramref name = "item" /> is found in the <see cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name = "item">The object to locate in the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.CopyTo(ProgramSoyuz.PLM.Scripting.DocumentPageDesc[],System.Int32)">
            <summary>
              Copies the elements of the <see cref = "T:System.Collections.Generic.ICollection`1" /> to an <see
               cref = "T:System.Array" />, starting at a particular <see cref = "T:System.Array" /> index.
            </summary>
            <param name = "array">The one-dimensional <see cref = "T:System.Array" /> that is the destination of the elements copied from <see
               cref = "T:System.Collections.Generic.ICollection`1" />. The <see cref = "T:System.Array" /> must have zero-based indexing.</param>
            <param name = "arrayIndex">The zero-based index in <paramref name = "array" /> at which copying begins.</param>
            <exception cref = "T:System.ArgumentNullException"><paramref name = "array" /> is null.</exception>
            <exception cref = "T:System.ArgumentOutOfRangeException"><paramref name = "arrayIndex" /> is less than 0.</exception>
            <exception cref = "T:System.ArgumentException"><paramref name = "array" /> is multidimensional.-or-<paramref
              name = "arrayIndex" /> is equal to or greater than the length of <paramref name = "array" />.-or-The number of elements in the source <see
               cref = "T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref
               name = "arrayIndex" /> to the end of the destination <paramref name = "array" />.-or-Type cannot be cast automatically to the type of the destination <paramref
               name = "array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.Remove(ProgramSoyuz.PLM.Scripting.DocumentPageDesc)">
            <summary>
              Removes the first occurrence of a specific object from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              true if <paramref name = "item" /> was successfully removed from the <see
               cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref
               name = "item" /> is not found in the original <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name = "item">The object to remove from the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.IndexOf(ProgramSoyuz.PLM.Scripting.DocumentPageDesc)">
            <summary>
            Определяет индекс заданного элемента коллекции <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            Индекс <paramref name="item"/> если он найден в списке; в противном случае его значение равно -1.
            </returns>
            <param name="item">Объект, который требуется найти в <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.Insert(System.Int32,ProgramSoyuz.PLM.Scripting.DocumentPageDesc)">
            <summary>
            Вставляет элемент в список <see cref="T:System.Collections.Generic.IList`1"/> по указанному индексу.
            </summary>
            <param name="index">Индекс (с нуля), по которому следует вставить параметр <paramref name="item"/>.</param><param name="item">Объект, вставляемый в <see cref="T:System.Collections.Generic.IList`1"/>.</param><exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index"/> не является допустимым индексом в <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IList`1"/> доступен только для чтения.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.RemoveAt(System.Int32)">
            <summary>
            Удаляет элемент <see cref="T:System.Collections.Generic.IList`1"/> по указанному индексу.
            </summary>
            <param name="index">Индекс (с нуля) удаляемого элемента.</param><exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index"/> не является допустимым индексом в <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IList`1"/> доступен только для чтения.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.Count">
            <summary>
              Gets the number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              The number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.IsReadOnly">
            <summary>
              Gets a value indicating whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
              true if the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DocumentPageDescsList.Item(System.Int32)">
            <summary>
            Получает или задает элемент по указанному индексу.
            </summary>
            <returns>
            Элемент с указанным индексом.
            </returns>
            <param name="index">Индекс (с нуля) элемента, который необходимо получить или задать.</param><exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index"/> не является допустимым индексом в <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">Свойство задано, и объект <see cref="T:System.Collections.Generic.IList`1"/> доступен только для чтения.</exception>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor">
            <summary>
            Интерфейс окна просмотра интерактивных печатных документов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.RefreshCurrentPage">
            <summary>
            Перерисовывает текующую страницу
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.EnsureVisibility(ProgramSoyuz.PLM.Scripting.InfoObject)">
            <summary>
            Делает указанный элемент видимым в дереве структуры печатного документа
            </summary>
            <param name="treeItem"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.SuspendEventHandling">
            <summary>
            Приостанавливает обработку событий об изменении объектов в дереве печдока
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.ResumeEventHandling">
            <summary>
            Возобнавляет обработку событий об изменении объектов в дереве печдока
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.RebuildTree">
            <summary>
            Полностью перестраивает дерево печдока
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.ReadOnly">
            <summary>
            Режим "только для чтения"
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.Dirty">
            <summary>
            Признак того, что печатный документ был изменен
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.HotTrack">
            <summary>
            Режим подсветки ячейке, над которой находится курсор мыши
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.CurrentPageObject">
            <summary>
            Объект отображаемого документа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.Pages">
            <summary>
            Объекты страниц документа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.CurrentPageIndex">
            <summary>
            Индекс текущей страницы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.ShowStructure">
            <summary>
            Включение/выключение показа дерева структуры печатного документа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.SelectedTreeItem">
            <summary>
            Выделенный в данный момент объект в дереве структуры
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.SelectedCell">
            <summary>
            Выделенная отображаемая ячейка
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.BeforeCreateStructureElement">
            <summary>
            Событие, вызываемое перед тем, как будет создан дочерний объект
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.AfterCreateStructureElement">
            <summary>
            Событие, вызываемое после того, как был создан дочерний объект
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.BeforeDeleteStructureElement">
            <summary>
            Событие, вызываемое перед тем, как будет удален объект
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.AfterDeleteStructureElement">
            <summary>
            Событие, вызываемое после того, как объект был удален
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.Load">
            <summary>
            Событие о готовности карточки к показу
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.Closed">
            <summary>
            Событие о закрытии карточки
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.Saving">
            <summary>
            Событие о сохранении объекта с возможностью отмены
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.IPrintingDocumentEditor.Saved">
            <summary>
            Событие о завершении сохранения объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.IDrawingContext">
            <summary>
            Интерфейс контекста отображения объекта на поле интерактивного документа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IDrawingContext.Editor">
            <summary>
            Доступ к редактору, выполняющему операцию рисования
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.IDrawingContext.IsPrinting">
            <summary>
            True, если вывод идет на принтер, а не на экран
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BeforeCreateStructureElementEventArgs.Obj">
            <summary>
            Родительсикий объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BeforeCreateStructureElementEventArgs.Template">
            <summary>
            Шаблон дочернего объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AfterCreateStructureElementEventArgs.Obj">
            <summary>
            Созданный объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.BeforeDeleteStructureElementEventArgs.Obj">
            <summary>
            Удаляемый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AfterDeleteStructureElementEventArgs.Obj">
            <summary>
            Удаленный объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Transliteration">
            <summary>
            Вспомогательный класс с таблицами преобразования идентичных по написанию разноязыких символов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Transliteration._instance">
            <summary>
            Синглетон экземпляр
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Transliteration._identicalGroupsByChar">
            <summary>
            Словарь идентичных групп по исходному символу
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Transliteration._normalizedCharsByChar">
            <summary>
            Словарь идентичных групп по исходному символу
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Transliteration._normalizedCharsByCharCS">
            <summary>
            Словарь идентичных групп по исходному символу (с учетом регистра)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Transliteration._constructionTime">
            <summary>
            Время изменения опорного ключа реестра
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Transliteration._sourceItem">
            <summary>
            Регайтем, хранящий группы идентичных символов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Transliteration._refreshTimeout">
            <summary>
            Задержка для повторной проверки наличия элемента реестра
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Transliteration._rangesArray">
            <summary>
            Массив границ Unicode областей для бинарного поиска
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Transliteration._rangeColors">
            <summary>
            Массив цветов для разных Unicode областей для бинарного поиска
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Transliteration._unicodeRanges">
            <summary>
            Сортированный словарь код начала диапазона к коду диапазона
            </summary>
            <remarks>Табличка сделана на основе http://en.wikipedia.org/wiki/Unicode_block</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.GetUnicodeRange(System.Char)">
            <summary>
            Возвращает код поддиапазона уникода
            </summary>
            <param name="ch">Проверяемый символ</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.GetRange(System.Char)">
            <summary>
            Возвращает код поддиапазона уникода
            </summary>
            <param name="ch">Проверяемый символ</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.GetColor(ProgramSoyuz.PLM.Scripting.Transliteration.UnicodeLanguageRange)">
            <summary>
            Возвращает цвет, заданный в реестре для раскраски символов указанного Unicode диапазона
            </summary>
            <param name="range">Языковой диапазон</param>
            <returns>Цвет для диапазона в соотвествии с настройками</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.GetColorForRange(ProgramSoyuz.PLM.Scripting.Transliteration.UnicodeLanguageRange)">
            <summary>
            Возвращает цвет, заданный в реестре для раскраски символов указанного Unicode диапазона
            </summary>
            <param name="range">Языковой диапазон</param>
            <returns>Цвет для диапазона в соотвествии с настройками</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.GetColorizedRTF(System.String)">
            <summary>
            Возвращает RTF текст с раскрашенными символами в соответствии с языковыми диапазонами
            </summary>
            <param name="text">Исходный текст</param>
            <returns>RTF текст</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.GetColorizedRTFForText(System.String)">
            <summary>
            Возвращает RTF текст с раскрашенными символами в соответствии с языковыми диапазонами
            </summary>
            <param name="text">Исходный текст</param>
            <returns>RTF текст</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.Build">
            <summary>
            Формирует таблицы преобразования
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.Normalize(System.String)">
            <summary>
            Заменяет символы в строке на их нормализованный вариант по таблице нормализации
            </summary>
            <param name="text">Исходная строка</param>
            <returns>Преобразованная строка, либо исходная, если замен не требовалось</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.Normalize(System.String,System.Boolean)">
            <summary>
            Заменяет символы в строке на их нормализованный вариант по таблице нормализации
            </summary>
            <param name="text">Исходная строка</param>
            <param name="keepCase">Если true, то при нормализации сохраняется регистр символов</param>
            <returns>Преобразованная строка, либо исходная, если замен не требовалось</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.NormalizeText(System.String,System.Boolean)">
            <summary>
            Заменяет символы в строке на их нормализованный вариант по таблице нормализации
            </summary>
            <param name="text">Исходная строка</param>
            <param name="keepCase">Если true, то при нормализации сохраняется регистр символов</param>
            <returns>Преобразованная строка, либо исходная, если замен не требовалось</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.PrepareForWildcardSearch(System.String)">
            <summary>
            Заменяет символы из идентичных групп на поисковые конструкции вида ...[aAаА]...
            </summary>
            <param name="text">Исходная строка</param>
            <returns>Преобразованная строка, либо исходная, если замен не требовалось</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Transliteration.PrepareTextForWildcardSearch(System.String)">
            <summary>
            Заменяет символы из идентичных групп на поисковые конструкции вида ...[aAаА]...
            </summary>
            <param name="text">Исходная строка</param>
            <returns>Преобразованная строка, либо исходная, если замен не требовалось</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Transliteration.Instance">
            <summary>
            Синглетон экземпляр
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Transliteration.IsOutdated">
            <summary>
            Возвращает true, если следует пересоздать таблицы преобразования
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Transliteration.IdenticalGroupsByChar">
            <summary>
            Словарь идентичных групп по исходному символу
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Transliteration.NormalizedCharsByChar">
            <summary>
            Словарь идентичных групп по исходному символу (без учета регистра)
            </summary>
            <remarks>В качестве символа нормализации используется большой латинский символ, если нет, то маленький, если нет, то первый в группе</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Transliteration.NormalizedCharsByCharCS">
            <summary>
            Словарь идентичных групп по исходному символу (с учетом регистра)
            </summary>
            <remarks>В качестве символа нормализации используется первый в группе соответствующего регистра</remarks>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Transliteration.UnicodeLanguageRange">
            <summary>
            Набор языковых Unicode диапазонов
            </summary>
            <remarks>Табличка сделана на основе http://en.wikipedia.org/wiki/Unicode_block</remarks>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserBinding">
            <summary>
            Связка Пользователь - Контейнер/ИнфоОбъект/Пользователь - Роль.
            Посредством этих объектов осуществляется привязка пользователя к некоторым объектам 
            с указанием отношения (роли) пользователя к этим объектам
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserBinding.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserBinding.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.CreateWrapper(ProgramSoyuz.DataModel.UserBindingBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="binding">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.#ctor(ProgramSoyuz.DataModel.UserBindingBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="UserBinding">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.#ctor(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.Role,ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="user">Пользователь, чья привязка</param>
            <param name="role">Роль пользователя</param>
            <param name="target">Целевой объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.#ctor(ProgramSoyuz.PLM.Scripting.UserBinding.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserBinding.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.IsApplyToSelf">
            <summary>
            Возвращает true если эта привязка применяет роль к своему целевому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.IsApplyToChildren">
            <summary>
            Возвращает true если эта привязка применяет роль к детям своего целевого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.IsScreening">
            <summary>
            Возвращает true если эта привязка экранирует применение роли к целевому объекту.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.Role">
            <summary>
            Роль пользователя применяемая к целевому объекту.
            Возвращает Original объект, либо текущее значение, если оно изменено в данной оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.Target">
            <summary>
            Целевой объект данной связки
            Возвращает Original объект, либо текущее значение, если оно изменено в данной оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.TargetIdentifier">
            <summary>
            Идентификатор сущности, с которой связан пользователь (Контейнер, информационный объект)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.Parent">
            <summary>
            Доступ к родительскому объекту
            Возвращает Original объект, либо текущее значение, если оно изменено в данной оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserBinding.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserBinding.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserBinding.CreationData.m_Parent">
            <summary>
            Родительский объект, к которому относится связка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserBinding.CreationData.m_Role">
            <summary>
            Роль, используемая этой связкой
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserBinding.CreationData.m_Target">
            <summary>
            Роль, используемая этой связкой
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.CreationData.Parent">
            <summary>
            Родительская учетная запись
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.CreationData.Role">
            <summary>
            Роль, используемая этой связкой
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserBinding.CreationData.Target">
            <summary>
            Роль, используемая этой связкой
            </summary>
        </member>
        <member name="T:ProgramSoyuz.DataModel.Protocol.CmdIndex_AddRecordsBase">
            <summary>
            Запрос на добавление индексированных записей.
            В ответ приходит PackIndexedRecords либо PackErrorInfo в случае неудачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.DataModel.Protocol.CmdIndex_AddRecordsBase.m_IndexDefId">
            <summary>
            Идентификатор интересующего индекса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.DataModel.Protocol.CmdIndex_AddRecordsBase.m_UserId">
            <summary>
            Идентификатор пользователя, чье подмножество индекса интересует
            </summary>
        </member>
        <member name="F:ProgramSoyuz.DataModel.Protocol.CmdIndex_AddRecordsBase.m_IndexedKey">
            <summary>
            Индексированный ключ
            </summary>
        </member>
        <member name="F:ProgramSoyuz.DataModel.Protocol.CmdIndex_AddRecordsBase.m_ReplaceMode">
            <summary>
            true если в переданными записями следует заменить имеющиеся в индексе
            </summary>
        </member>
        <member name="F:ProgramSoyuz.DataModel.Protocol.CmdIndex_AddRecordsBase.m_Records">
            <summary>
            Строки для добавления в индекс
            </summary>
        </member>
        <member name="P:ProgramSoyuz.DataModel.Protocol.CmdIndex_AddRecordsBase.IsSimpleContents">
            <summary>
            Возвращает true, если пакет не содержит сложные объекты, требующие читающей блокировки
            при десериализации
            </summary>
        </member>
        <member name="T:ProgramSoyuz.DataModel.Protocol.CmdIndex_RemoveRecordsBase">
            <summary>
            Запрос на удаление индексированных записей.
            В ответ приходит PackIndexedRecords либо PackErrorInfo в случае неудачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.DataModel.Protocol.CmdIndex_RemoveRecordsBase.m_IndexDefId">
            <summary>
            Идентификатор интересующего индекса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.DataModel.Protocol.CmdIndex_RemoveRecordsBase.m_UserId">
            <summary>
            Идентификатор пользователя, чье подмножество индекса интересует
            </summary>
        </member>
        <member name="F:ProgramSoyuz.DataModel.Protocol.CmdIndex_RemoveRecordsBase.m_IndexedKey">
            <summary>
            Индексированный ключ
            </summary>
        </member>
        <member name="F:ProgramSoyuz.DataModel.Protocol.CmdIndex_RemoveRecordsBase.m_Records">
            <summary>
            Строки для удаления из индекса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.DataModel.Protocol.CmdIndex_RemoveRecordsBase.IsSimpleContents">
            <summary>
            Возвращает true, если пакет не содержит сложные объекты, требующие читающей блокировки
            при десериализации
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserLock">
            <summary>
            Долговременная (хранимая в базе) блокировка информационного объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserLock.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserLock.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserLock.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserLock.#ctor(ProgramSoyuz.DataModel.UserLockBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="UserLock">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserLock.Erase">
            <exception cref="T:ProgramSoyuz.PLM.Scripting.InvalidRequestException">Объект еще не создан</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserLock.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserLock.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserLock.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserLock.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserLock.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserLock.User">
            <summary>
            Номер ревизии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserLock.DateCreated">
            <summary>
            Локальное дата/время фиксации ревизии объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.NamedValue">
            <summary>
            Именованное значение.
            Используется для формирования дерева фиксированных именованных значений, используемых в качестве
            вариантов значений атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue._CustomSupervisorOperations">
            <summary>
            ИЗ для именованных назначений, определяющих супервизоров WF процессов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.CreateWrapper(ProgramSoyuz.DataModel.NamedValueBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="namedValue">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.#ctor(ProgramSoyuz.DataModel.NamedValueBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="namedValue">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.#ctor(ProgramSoyuz.PLM.Scripting.NamedValue,System.String,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительское именованное значение</param>
            <param name="nameKey">Программное название именованного значения</param>
            <param name="value">Собственно значение именованного значения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.#ctor(ProgramSoyuz.PLM.Scripting.NamedValue,System.String,System.Double)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительское именованное значение</param>
            <param name="nameKey">Программное название именованного значения</param>
            <param name="value">Собственно значение именованного значения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.#ctor(ProgramSoyuz.PLM.Scripting.NamedValue,System.String,System.Int32)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительское именованное значение</param>
            <param name="nameKey">Программное название именованного значения</param>
            <param name="value">Собственно значение именованного значения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.#ctor">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.#ctor(ProgramSoyuz.PLM.Scripting.NamedValue.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.CreateCopy">
            <summary>
            Создаёт новое ИЗ аналогичный данному
            Дочерние объекты тоже копируются
            </summary>
            <returns>Вновь созданное (несохранённое) ИЗ</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.CreateCopy(System.Boolean)">
            <summary>
            Создаёт новое ИЗ аналогичный данному
            </summary>
            <param name="recurseOnChildren">Рекурсия по дочерним ИЗ</param>
            <returns>Вновь созданное (несохранённое) ИЗ</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.DoCreateCopy(System.Boolean)">
            <summary>
            Создаёт новое ИЗ аналогичный данному
            </summary>
            <param name="recurseOnChildren">Рекурсия по дочерним ИЗ</param>
            <returns>Вновь созданное (несохранённое) ИЗ</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.#ctor(ProgramSoyuz.PLM.Scripting.ExternalLink)">
            <summary>
            Конструктор новой заглушки объекта для сохранения в PLM
            </summary>
            <param name="data">Набор данных для создания объекта заглушки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.MoveTo(ProgramSoyuz.PLM.Scripting.NamedValue)">
            <summary>
            Перенос объекта к другому родителю.
            </summary>
            <param name="parent">Новый родительский объект для именованного значения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.DoEraseChildrenOrRelated">
            <summary>
            Каскадное удаление дочерних объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.GetNameUILocalized(System.String)">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.GetChild(System.String)">
            <summary>
            Доступ к дочернему именованному значению по пути rootNameKey\NameKey1\..\NameKeyN
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.IsChildOf(ProgramSoyuz.PLM.Scripting.NamedValue)">
            <summary>
            Возвращает true, если ИЗ является унаследованным от указанного
            </summary>
            <remarks>Считается что ИЗ наследует самого себя</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.GetAllParents">
            <summary>
            Формирует список всех родительских объектов и себя в порядке от старших к младшим
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.DoGetAllParents(System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.NamedValue})">
            <summary>
            Формирует список всех родительских объектов и себя в порядке от старших к младшим
            </summary>
            <param name="parents">Список родительских объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.IsValueEquals(System.Object)">
            <summary>
            Возвращает true, если переданное значение совпадает с текущим значением объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.GetScriptingFriendlyValue(System.Object)">
            <summary>
            Преобразует ссылки в реальные объекты
            </summary>
            <param name="val">"сырое" значение</param>
            <returns>преобразованное значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.GetScriptingRawValue(System.Object)">
            <summary>
            Преобразует реальные объекты в идентификаторы
            </summary>
            <param name="val">"скриптовое" значение</param>
            <returns>преобразованное значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.GetValueAsString(System.Int32,System.Boolean)">
            <summary>
            Возвращает строковое представление значения ограниченное по длине
            </summary>
            <param name="maxChars">Максимальное число символов</param>
            <param name="replaceLineBreaksToSpace">Производит поиск замену разрывов строки на пробелы</param>
            <returns>Значение в виде строки ограниченное по длине и подготовленное для показа в одной строке</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.GetValue``1">
            <summary>
            Возвращает значение указанного типа. 
            При отсутствии такового возвращается значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <returns>Значение приведенное к указанному типу</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.GetDataType(System.Type,System.Object)">
            <summary>
            Определяет тип переданного значения в терминах типа данных элемента PLM реестра
            </summary>
            <param name="t">Тип значения на случай когда само значение null</param>
            <param name="val">Проверяемое значение</param>
            <returns>Тип значение в виде типа данных элемента реестра</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#NamedValue}#SetParent(ProgramSoyuz.PLM.Scripting.NamedValue)">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#NamedValue}#MergeWith(ProgramSoyuz.PLM.Scripting.NamedValue)">
            <summary>
            Склеивает текущий создаваемый объект с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#NamedValue}#ReplaceWith(ProgramSoyuz.PLM.Scripting.NamedValue)">
            <summary>
            Склеивает текущий создаваемый объект с указанным существующим
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.CustomSupervisorOperations">
            <summary>
            ИЗ для именованных назначений, определяющих супервизоров WF процессов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.ProgramSoyuz#DataModel#IObjectWithEndSystemSettings#HasChangesInConfigurations">
            <summary>
            Возвращает true, если изменения затрагивают конфигурацию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.IsDirtySelf">
            <summary>
            Возвращает true, если объект (или рекурсивно объекты, от которых этот объект зависит) 
            был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.NameKey">
            <summary>
            Программное название именованного значения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.GroupKey">
            <summary>
            Строка, определяющая порядок значений, используется для сортировки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.NameUILocalized">
            <summary>
              Пользовательское название объекта (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.Notes">
            <summary>
            Пользовательские заметки об именованном значении
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.DataType">
            <summary>
            Тип данных именованного значения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.IsDisplayValue">
            <summary>
            Возвращает true если реальное значение ИЗ должно отображаться в UI в названии объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.IsHiddenInUI">
            <summary>
            Возвращает true если ИЗ не отображается в UI (не доступно для выбора)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.IsStub">
            <summary>
            Возвращает true если объект является заглушкой для обновления при последующем импорте.
            </summary>
            <remarks>
            В пользовательском интерфейсе такой объект показывается только при необходимости.
            Фактически он не используется.
            Объект "оживает" при импорте пакета, содержащем полную версию объекта
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.TargetSystemPropsMask">
            <summary>
            Битовые флаги, определяющие свойства объекта, относящиеся к конечной системе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.DateModified">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.ModifiedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.Icon">
            <summary>
            Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.DisplayIcon">
            <summary>
            Иконка, показываемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.Parent">
            <summary>
            Доступ к родительскому именованному значению
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.Root">
            <summary>
            Возвращает корневой объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue._Children">
            <summary>
            Возвращает перечислитель дочерних именованных значений.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue._AllChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.Children">
            <summary>
            Возвращает перечислитель дочерних именованных значений.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.AllChildren">
            <summary>
            Возвращает перечислитель дочерних именованных значений.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#NamedValue}#DirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#NamedValue}#AllDirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.Value">
            <summary>
            Собственно значение объекта 'именованное значение'
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.RawValue">
            <summary>
            Возвращает собственно значение как есть: существующее в базе или измененное
            Для ссылочных типов возвращается DataObjectIdentifier
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.ValueAsString">
            <summary>
            Возвращает собственно значение: существующее в базе или измененное
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#NamedValue}#ReplacedByItem">
            <summary>
            В ходе сохранения, если создается второй такой же объект, то ему прописывается ссылка
            на реально создаваемый объект, а операция сбрасывается
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.ProgramSoyuz#PLM#Scripting#IMergeableByNameKey{ProgramSoyuz#PLM#Scripting#NamedValue}#BrotherItems">
            <summary>
            Перечисляет соседние элементы, включая себя (дети своего родителя)
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.GroupKey">
            <summary>
            Строка, определяющая порядок значений, используется для сортировки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.DataType">
            <summary>
            Тип данных именованного значения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.Value">
            <summary>
            Собственно значение объекта 'именованное значение'
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.TargetSystemPropsMask">
            <summary>
            Битовые флаги определяющие свойства объекта, относящиеся к конечной системе
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.m_Parent">
            <summary>
            Родительское именованное значение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.m_Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.ReplacedByItem">
            <summary>
            В ходе сохранения, если создается второй такой же объект, то ему прописывается ссылка
            на реально создаваемый объект, а операция сбрасывается
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.WriteTo(ProgramSoyuz.DataModel.NamedValueBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.Parent">
            <summary>
            Родительское именованное значение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.NamedValue.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.NamedVirtualValue">
            <summary>
            Класс для виртуальных несохраняемых в базу ИЗ
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedVirtualValue.#ctor">
            <summary>
            Конструктор нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedVirtualValue.#ctor(ProgramSoyuz.PLM.Scripting.NamedValue,System.String,System.String,System.String)">
            <summary>
            Конструктор нового объекта
            </summary>
            <param name="parent">Родительское именованное значение</param>
            <param name="nameKey">Программное название именованного значения</param>
            <param name="nameUI">Пользовательское название именованного значения</param>
            <param name="value">Собственно значение именованного значения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedVirtualValue.#ctor(ProgramSoyuz.PLM.Scripting.NamedValue,System.String,System.String,System.Double)">
            <summary>
            Конструктор нового объекта
            </summary>
            <param name="parent">Родительское именованное значение</param>
            <param name="nameKey">Программное название именованного значения</param>
            <param name="nameUI">Пользовательское название именованного значения</param>
            <param name="value">Собственно значение именованного значения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedVirtualValue.#ctor(ProgramSoyuz.PLM.Scripting.NamedValue,System.String,System.String,System.Int32)">
            <summary>
            Конструктор нового объекта
            </summary>
            <param name="parent">Родительское именованное значение</param>
            <param name="nameKey">Программное название именованного значения</param>
            <param name="nameUI">Пользовательское название именованного значения</param>
            <param name="value">Собственно значение именованного значения</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.NamedVirtualValue.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagram">
            <summary>
            Диаграмма шаблона задачи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.m_ownerTask">
            <summary>
            Задача-владелец данной диаграммы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.m_Data">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.m_RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.#ctor(ProgramSoyuz.PLM.Scripting.Template,ProgramSoyuz.DataModel.TaskDiagramBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="owner">Шаблон-владелец данного объекта</param>
            <param name="diagram">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.#ctor(ProgramSoyuz.PLM.Scripting.Task,ProgramSoyuz.DataModel.TaskDiagramBase)">
            <summary>
            Конструктор оболочки диаграммы для экземпляра задачи
            </summary>
            <param name="owner">Задача-владелец данного объекта</param>
            <param name="diagram">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.Erase">
            <summary>
            Удаление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.DoEraseChildrenOrRelated">
            <summary>
            Каскадное удаление дочерних объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.Validate">
            <summary>
            Проверяет валидность диаграммы процесса на предмет пригодности к запуску
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.m_pNodeList">
            <summary>
            Оболочка для работы со списком этапов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.m_ExistingNodeWrappers">
            <summary>
            Список оболочек-этапов, созданных этим объектом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.GetWrapperFor(ProgramSoyuz.DataModel.TaskDiagramNodeBase)">
            <summary>
            Находит ранее выданную или создает новую оболочку для существующего этапа
            </summary>
            <param name="node">Реальный атрибут</param>
            <returns>Найденную или вновь созданную оболочку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.AddNode(ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Добавление дополнительного родителя к объекту
            </summary>
            <param name="node">Дополнительный родитель</param>
            <returns>true если такого родителя еще не было</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.RemoveNode(ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Удаление дополнительного родителя объекта
            </summary>
            <param name="node">Дополнительный родитель</param>
            <returns>true если такого родитель был и исключен из списка дополнительных</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.GetNodeById(System.UInt32)">
            <summary>
            Возвращает этап по идентификатору
            </summary>
            <param name="id">Идентификатор этапа</param>
            <returns>Нвйденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.GetLinkById(System.UInt32)">
            <summary>
            Возвращает связь по идентификатору
            </summary>
            <param name="id">Идентификатор связи</param>
            <returns>Нвйденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.GetNodeByGlobalIdentifier(System.Guid)">
            <summary>
            Возвращает этап по глобальному идентификатору
            </summary>
            <param name="nodeGuid">Глобальный идентификатор этапа</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.GetLinkByGlobalIdentifier(System.Guid)">
            <summary>
            Возвращает связь по глобальному идентификатору
            </summary>
            <param name="linkGuid">Глобальный идентификатор связи</param>
            <returns>Нвйденный объект или null</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.m_pLinkList">
            <summary>
            Оболочка для работы со списком этапов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.m_ExistingLinkWrappers">
            <summary>
            Список оболочек-этапов, созданных этим объектом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.GetWrapperFor(ProgramSoyuz.DataModel.TaskDiagramLinkBase)">
            <summary>
            Находит ранее выданную или создает новую оболочку для существующей связи
            </summary>
            <param name="link">Реальный атрибут</param>
            <returns>Найденную или вновь созданную оболочку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.AddLink(ProgramSoyuz.PLM.Scripting.TaskDiagramLink)">
            <summary>
            Добавление дополнительного родителя к объекту
            </summary>
            <param name="node">Дополнительный родитель</param>
            <returns>true если такого родителя еще не было</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.RemoveLink(ProgramSoyuz.PLM.Scripting.TaskDiagramLink,System.Boolean)">
            <summary>
            Удаление дополнительного родителя объекта
            </summary>
            <param name="link">Дополнительный родитель</param>
            <param name="notifyOwner">true, если следует оповестить родителя</param>
            <returns>true если такого родитель был и исключен из списка дополнительных</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.GetRevisionByNumber(System.Int32)">
            <summary>
            Возвращает ревизию по ее номеру
            </summary>
            <param name="number">Требуемый номер ревизии</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.IsRevisionMarkedForErase(System.Int32)">
            <summary>
            Возвращает true если указанная ревизия была помечена к удалению
            </summary>
            <param name="number">Номер ревизий</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.OnChildModified(ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Вызывается при изменениях внутри дочерних объектов диаграммы
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.OnChildModified(ProgramSoyuz.PLM.Scripting.TaskDiagramLink)">
            <summary>
            Вызывается при изменениях внутри дочерних объектов диаграммы
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.m_eventContainer">
            <summary>
            Обертка для события (чтобы можно было использовать сериализацию по умолчанию)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.Subscribe(ProgramSoyuz.PLM.Scripting.TaskDiagram.SubObjectChangedHandler)">
            <summary>
            Подписка на событие об изменении этапа или связи на диаграмме
            </summary>
            <param name="handler">обработчик события</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.Unsubscribe(ProgramSoyuz.PLM.Scripting.TaskDiagram.SubObjectChangedHandler)">
            <summary>
            Отписка от события об изменении этапа или связи на диаграмме
            </summary>
            <param name="handler">обработчик события</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.NotifySubObjectChanged(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Рассылка события об изменении вложенного объекта
            </summary>
            <param name="subObject"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.ToString">
            <summary>
            Возвращает основное название объекта по умолчанию
            </summary>
            <returns>Возвращает основное название объекта по умолчанию</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.Owner">
            <summary>
            Шаблон-владелец данной диаграммы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.OwnerTask">
            <summary>
            Задача-владелец данной диаграммы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.IsValid">
            <summary>
            Возвращает true, если диаграмма пригодна для запуска
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.RevisionNumber">
            <summary>
            Номер ревизии диаграммы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.ChangedNodes">
            <summary>
            Перечисление измененных этапов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.ExistingNodes">
            <summary>
            Возвращает перечислитель существующих этапов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.Nodes">
            <summary>
            Возвращает перечислитель этапов диаграммы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.ChangedLinks">
            <summary>
            Перечисление измененных этапов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.ExistingLinks">
            <summary>
            Возвращает перечислитель существующих этапов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.Links">
            <summary>
            Возвращает перечислитель этапов спискового атрибута, существующих в базе.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.Revisions">
            <summary>
            Список ревизий объекта, сортированный по номеру ревизии
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagram.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.CreationData.NodesToAdd">
            <summary>
            Дополнительные родительские шаблоны для добавления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.CreationData.NodesToRemove">
            <summary>
            Дополнительные родительские шаблоны для удаления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.CreationData.LinksToAdd">
            <summary>
            Дополнительные родительские шаблоны для добавления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.CreationData.LinksToRemove">
            <summary>
            Дополнительные родительские шаблоны для удаления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.CreationData.RevisionsToRemove">
            <summary>
            Номера ревизий для удаления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.CreationData.NewRevision">
            <summary>
            Новая ревизия, создаваемая при очередном изменении диаграммы
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.CreationData.GetChangesLevel(System.Type)">
            <summary>
            Определяет уровень изменений, накопленных в этом объекте: данные или скин
            </summary>
            <param name="dataType">Тип данных для сохранения объекта в пакете, производный от <see cref="T:ProgramSoyuz.DataModel.ObjectPackDataBase"/></param>
            <returns>Флаги, характеризующие имеющиеся изменения</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList">
            <summary>
            Класс оболочка для операций со списком этапов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList.m_pOwner">
            <summary>
            Диаграмма, чья коллекция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList.m_ExistingNodes">
            <summary>
            Список существующих этапов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList.#ctor(ProgramSoyuz.PLM.Scripting.TaskDiagram)">
            <summary>
            Конструктор
            </summary>
            <param name="pOwner">Диаграмма, чья коллекция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList.Add(ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList.Contains(ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList.CopyTo(ProgramSoyuz.PLM.Scripting.TaskDiagramNode[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional.-or-<paramref name="arrayIndex" /> is equal to or greater than the length of <paramref name="array" />.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.-or-Type cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList.Remove(ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.NodeList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList">
            <summary>
            Класс оболочка для операций со списком этапов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList.m_pOwner">
            <summary>
            Диаграмма, чья коллекция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList.m_ExistingLinks">
            <summary>
            Список существующих этапов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList.#ctor(ProgramSoyuz.PLM.Scripting.TaskDiagram)">
            <summary>
            Конструктор
            </summary>
            <param name="pOwner">Диаграмма, чья коллекция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList.Add(ProgramSoyuz.PLM.Scripting.TaskDiagramLink)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList.Contains(ProgramSoyuz.PLM.Scripting.TaskDiagramLink)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList.CopyTo(ProgramSoyuz.PLM.Scripting.TaskDiagramLink[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional.-or-<paramref name="arrayIndex" /> is equal to or greater than the length of <paramref name="array" />.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.-or-Type cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList.Remove(ProgramSoyuz.PLM.Scripting.TaskDiagramLink)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagram.LinkList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagram.SubObjectChangedHandler">
            <summary>
            Делегат для события об изменении вложенного объекта диаграммы
            </summary>
            <param name="subObject">Измененный этап или связь этой диаграммы</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagram.EventContainer">
            <summary>
            Обертка для события.
            </summary>
            <remarks>Этот наворот нужен чтобы работала сериализация по умолчанию, так как на 
            событие атрибут NonSerialized не ставится (v3.5)</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagram.EventContainer.Notify(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Рассылка события об изменении вложенного объекта
            </summary>
            <param name="subObject"></param>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.TaskDiagram.EventContainer.SubObjectChanged">
            <summary>
            Событие об изменении этапа или связи на диаграмме
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImportExport.NamedValueExporter">
            <summary>
            Вспомогательный класс для экспорта ИЗ в пакет
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.NamedValueExporter.m_TargetNamedValues">
            <summary>
            Список именованных значений, добавляемых в пакет целиком
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.NamedValueExporter.Add(ProgramSoyuz.PLM.Scripting.NamedValue,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Добавляет в пакет указанное ИЗ
            </summary>
            <param name="role">Добавляемое ИЗ</param>
            <param name="withAncestors">true если следует добавить все родительские объекты</param>
            <param name="withChildren">true если следует включить дочерние объекты</param>
            <param name="withRelatedObjects">true если следует включить в пакет прочие объекты с неустановленной конфигурацией</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.NamedValueExporter.Add(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.NamedValue},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Добавляет в пакет указанные именованные значения
            </summary>
            <param name="objects">Добавляемые объекты</param>
            <param name="withAncestors">true если следует добавить все родительские объекты</param>
            <param name="withChildren">true если следует включить дочерние объекты</param>
            <param name="withRelatedObjects">true если следует включить в пакет прочие объекты с неустановленной конфигурацией</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.NamedValueExporter.CalcObjectsToExport(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.NamedValue},System.Boolean,System.Boolean)">
            <summary>
            Формирует набор объектов, подлежащих экспорту
            </summary>
            <param name = "objects">Добавляемые объекты</param>
            <param name = "withAncestors">true если следует добавить все родительские объекты</param>
            <param name = "withChildren">true если следует добавить всю ветвь дочерних объектов по прямому наследованию</param>
            <returns>Множество объектов для экспорта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.NamedValueExporter.AddNamedValue(ProgramSoyuz.PLM.Scripting.NamedValue,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Добавляет объекты в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="additionQueue">Очередь для объектов на добавление в пакет</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.NamedValueExporter.AddGenericObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject},System.Boolean)">
            <summary>
            Добавляет объекты в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="additionQueue">Очередь для объектов на добавление в пакет</param>
            <param name="withRelatedObjects">true если следует включить в пакет прочие объекты с неустановленной конфигурацией</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.NamedValueExporter.AddObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Добавляет объект в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="withRelatedObjects">true если следует включить в пакет прочие объекты с неустановленной конфигурацией</param>
            <returns>Возвращает true, если объект добавлен в пакет, false, если добавлен только линк</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.NamedValueExporter.TargetNamedValues">
            <summary>
            Список ролей, добавляемых в пакет целиком
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CollectionElementsDataGridView">
            <summary>
            Базовый класс табличного (DataGridView) редактора спискового атрибута.
            Реализует вспомогательные функции для скриптового доступа к редактору коллекции элементов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElementsDataGridView.AddCustomFilter(System.String,System.Predicate{ProgramSoyuz.PLM.Scripting.CollectionElement})">
            <summary>
            Задает функцию для фильтрации отображаемых элементов коллекции
            </summary>
            <param name="name">Ключ фильтра</param>
            <param name="filter">Фильтр</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElementsDataGridView.RemoveCustomFilter(System.String)">
            <summary>
            Удаляет фукнцию с заданным ключом из числа фильтров
            </summary>
            <param name="name">Ключ</param>
            <returns>True если фильтр был удален</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElementsDataGridView.HasCustomFilter(System.String)">
            <summary>
            Проверяет, задан ли фильтр с таким ключом
            </summary>
            <param name="name">Ключ</param>
            <returns>True если задан</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElementsDataGridView.AttributeFromCell(System.Windows.Forms.DataGridViewCell)">
            <summary>
            Возвращает атрибут по ячейке грида
            </summary>
            <param name="cell">Интересующая ячейка</param>
            <returns>Атрибут, чье значение отображает ячейка</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElementsDataGridView.AttributeDefFromColumn(System.Windows.Forms.DataGridViewColumn)">
            <summary>
            Возвращает определение атрибута по колонке грида
            </summary>
            <param name="column">Интересующая колонка</param>
            <returns>Определение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElementsDataGridView.CollectionElementFromRow(System.Windows.Forms.DataGridViewRow)">
            <summary>
            Возвращает элемент коллекции по строке грида
            </summary>
            <param name="row">Интересующая строка</param>
            <returns>Элемент коллекции</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElementsDataGridView.OwnerAttribute">
            <summary>
            Списковый атрибут, отображаемый или редактируемый данным UI компонентом
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElementsDataGridView.CurrentElement">
            <summary>
            Текущая выбранная строка (элемент коллекции)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElementsDataGridView.CurrentAttribute">
            <summary>
            Активная колонка (атрибут) внутри текущей выбранной строки (элемента коллекции)
            </summary>
        </member>
        <member name="E:ProgramSoyuz.PLM.Scripting.CollectionElementsDataGridView.CurrentSelectionChanged">
            <summary>
            Событие об изменение selection
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElementsDataGridView.ScriptingObject">
            <summary>
            Скриптовой объект, отображаемый или редактируемый данным UI компонентом
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AccessRule">
            <summary>
            Правило контроля доступа.
            Подчиненный объект в контексте роли <see cref="T:ProgramSoyuz.PLM.Scripting.Role"/>. Определяет возможные операции с объектами
            или атрибутами указанного шаблона.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.PrepareModification">
            <summary>
              Подготовка объекта к внесению изменений
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.CreateWrapper(ProgramSoyuz.DataModel.AccessRuleBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="accessRule">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.MakeUnsavedCopy(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
              Создает новый объект - несохраненную копию данного
            </summary>
            <param name="newParent">Новый родительский объект, для которого делается копия объекта</param>
            <returns>Копию объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.#ctor">
            <summary>
              Конструктор для значения Uninitialized
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.#ctor(ProgramSoyuz.DataModel.AccessRuleBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="accessRule">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.#ctor(ProgramSoyuz.PLM.Scripting.Role,ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="role">Роль к которой относится правило</param>
            <param name="eOperationsMask">Набор операций</param>
            <param name="template">Шаблон с которым это ограничение устанавливает связь</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.#ctor(ProgramSoyuz.PLM.Scripting.Role,ProgramSoyuz.DataModel.AccessRuleBase.KindEnum,ProgramSoyuz.DataModel.OperationIdentifier,ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="role">Роль к которой относится правило</param>
            <param name="kind">Тип сущности, к которой применяется правило</param>
            <param name="eOperationsMask">Набор операций</param>
            <param name="template">Шаблон с которым это ограничение устанавливает связь</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.#ctor(ProgramSoyuz.PLM.Scripting.AccessRule.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.MoveTo(ProgramSoyuz.PLM.Scripting.Role)">
            <summary>
            Перенос объекта к другому родителю.
            </summary>
            <param name="newParent">Новый родительский объект для оганичения шаблона</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.MatchAttribute(System.String)">
            <summary>
            Возвращает true если ключ атрибута подходит под спецификацию данного правила
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <returns>true если подходит</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.AttributeNameKey">
            <summary>
            Ключи атрибутов (через запятую), доступ к которым определяет это правило
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.AttributeNameKeyNonModified">
            <summary>
            Ключи атрибутов (через запятую), доступ к которым определяет это правило (собственное значение объекта без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.ProgramSoyuz#PLM#Scripting#IObjectWithCustomizationCode#CustomizationCode">
            <summary>
            Код скрипта кастомизации объектов шаблона
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.CustomizationCode">
            <summary>
            Код скрипта для сложной логики определения правил доступа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.CustomizationCodeNonModified">
            <summary>
            Код скрипта для сложной логики определения правил доступа (собственное значение объекта без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.HasCustomizationCode">
            <summary>
            Возвращает true если у raw объекта есть код кастомизации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.Kind">
            <summary>
            Тип контролируемой сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.IsErasedByInheritance">
            <summary>
              Возвращает true если этот объект является удалённой заглушкой
              для исключения предшественника из иерархии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.FlagsNonModified">
            <summary>
            Набор битовых флагов объекта (собственное значение объекта без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.IsRuleForAttribute">
            <summary>
            Возвращает true, если это правило действует только на уровне атрибутов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.IsIncludeInherited">
            <summary>
            Возвращает true если правило распространяется на шаблоны унаследованные от Template
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.IsAttributeLevel">
            <summary>
            Возвращает true, если правило применяется на уровне атрибутов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.IsAllAttributesButThis">
            <summary>
            Возвращает true если правило распространяется на все атрибуты, кроме указанных
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.IsReversedDirection">
            <summary>
            Возвращает true если правило доступа к пользователю действует в обратную сторону 
            (от пользователя Slave к пользователю Master)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.DoNotExcludeSubjectFromTargets">
            <summary>
            Наличие флага означает, что пользователь - держатель привязки не исключается из списка целевых пользователей, 
            к которым этим правилом определяется доступ
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.OperationsMask">
            <summary>
            Набор операций, которые разрешает или запрещает это правило
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.OperationsMaskNonModified">
            <summary>
            Набор операций, которые разрешает или запрещает это правило (собственное значение объекта без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.OperationTags">
            <summary>
            Список меток этого правила доступа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.OperationTagsNonModified">
            <summary>
            Список меток этого правила доступа (собственное значение объекта без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.Template">
            <summary>
            Шаблон, на объекты которого действует это правило
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.TemplateNonModified">
            <summary>
            Шаблон, на объекты которого действует это правило (собственное значение объекта без учета наследования)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.Parent">
            <summary>
            Доступ к родительскому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.ParentMaster">
            <summary>
              Родительская роль (или её мастер, если родитель является модификатором)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.CustomOperation">
            <summary>
            ИЗ пользовательской операции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.CustomOperationNonModified">
            <summary>
            ИЗ пользовательской операции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.Predecessor">
            <summary>
            Доступ к переопределенному объекту (к предшественнику)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.PredecessorId">
            <summary>
            Доступ к идентификатору корня предшественников
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.PredecessorRoot">
            <summary>
            Корень ветви предшественников по наследованию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.PredecessorRootId">
            <summary>
            Корень ветви предшественников по наследованию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.ModifiedClone">
            <summary>
              Модифицированная версия этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.IdentityName">
            <summary>
            Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.PrepareDefaults">
            <summary>
            Установка значений по умолчанию для новых объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.OperationsMask">
            <summary>
            Набор операций, которые разрешает или запрещает это правило
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.OperationTags">
            <summary>
            Строка с тэгами кастом операций, контролируемых этим правилом
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.AttributeNameKey">
            <summary>
            Ключ атрибута, доступ к которому определяет это правило
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.CustomizationCode">
            <summary>
            Код скрипта для сложной логики определения правил доступа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.Kind">
            <summary>
            Тип контролируемой сущности
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.InheritanceMask">
            <summary>
              Битовая маска, определяюшая поля, значения которых наследуются от предшественника
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.m_Parent">
            <summary>
            Родительская роль, к которой относится правило
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.m_Predecessor">
            <summary>
            Предшественник для данного правила
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.PredecessorId">
            <summary>
            Идентификатор корня предшественников
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.m_Template">
            <summary>
            Шаблон с которым это ограничение устанавливает связь
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.m_CustomOperation">
            <summary>
              ИЗ пользовательской операции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.WriteTo(ProgramSoyuz.DataModel.AccessRuleBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.MakeCopy(ProgramSoyuz.DataModel.AccessRuleBase.Body)">
            <summary>
              Создает копию этого класса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.Parent">
            <summary>
            Родительская роль
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.Predecessor">
            <summary>
            Родительская роль
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.Template">
            <summary>
            Шаблон, на объекты которого действует это правило
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AccessRule.CreationData.CustomOperation">
            <summary>
              ИЗ пользовательской операции
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FileDependancy">
            <summary>
            Связь файл-файл в рамках файлового контекста <see cref="T:ProgramSoyuz.PLM.Scripting.FileContext"/>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDependancy.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDependancy.m_pOwner">
            <summary>
            Объект-владелец данной связи
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDependancy.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDependancy.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDependancy.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDependancy.#ctor(ProgramSoyuz.PLM.Scripting.FileContext,ProgramSoyuz.DataModel.FileDependancyBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="pOwner">Объект-владелец данной ревизии</param>
            <param name="FileDependancy">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDependancy.#ctor(ProgramSoyuz.PLM.Scripting.FileContext,System.UInt32,System.UInt32,System.String,ProgramSoyuz.DataModel.FileDependancyBase.BitFlags)">
            <summary>
            Конструктор новой файловой зависимости
            </summary>
            <param name="pOwner">Объект-владелец данной ревизии</param>
            <param name="fileId">Идентификатор основного файла</param>
            <param name="targetFileId">Идентификатор образующего файла</param>
            <param name="relativePath">Путь от основного файла к образующему</param>
            <param name="flags">Набор флагов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDependancy.Erase">
            <exception cref="T:ProgramSoyuz.PLM.Scripting.InvalidRequestException">Объект еще не создан</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDependancy.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.FileDependancy.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.Owner">
            <summary>
            Ссылка на объект-владелец этой ревизии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.FileId">
            <summary>
            Идентификатор основного файла
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.TargetFileId">
            <summary>
            Идентификатор образующего файла
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.TargetFileOwnerId">
            <summary>
            Возвращает идентификатор объекта-владельца связанного файла.
            Если идентификатор неизвестен, возвращает DataObjectIdentifier.Zero
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.RelativePath">
            <summary>
            Путь от основного файла к образующему
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.AssemblyLinks">
            <summary>
            Список сборочных связей верхнего уровня между файлами, включенных в данный контекст. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.FileDependancy.ContextLinks">
            <summary>
            Список контекстных связей верхнего уровня между файлами, включенных в данный контекст. 
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.FileDependancy.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDependancy.CreationData.FileId">
            <summary>
            Идентификатор основного файла
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDependancy.CreationData.TargetFileId">
            <summary>
            Идентификатор образующего файла
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDependancy.CreationData.RelativePath">
            <summary>
            Путь от основного файла к образующему
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.FileDependancy.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAccessRule.Check(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.Role,System.Boolean,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
              Вызывает обработчик Check из кода модулей - расширителей ролей
            </summary>
            <param name = "user">Пользователь, выполняющий операцию</param>
            <param name = "role">Проверяемая</param>
            <param name = "userToTarget">true если проверяется прямое действие роли от <paramref name = "user" /> к <paramref
               name = "obj" /></param>
            <param name = "obj">Проверяемый объект</param>
            <param name = "target">Целевой родительский объект (для операций создания и переноса)</param>
            <param name = "op">Проверяемая операция</param>
            <param name = "attrNameKey">Атрибут, с которым выполняется операция</param>
            <param name = "element">Проверяемый элемент коллекции</param>
            <returns>true если можно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAccessRule.Check(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AccessRule,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.OperationIdentifier,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
              Вызывает обработчики Check из кода кастомизации
            </summary>
            <param name = "user">Пользователь, выполняющий операцию</param>
            <param name = "acr">Правило контроля доступа</param>
            <param name = "obj">Проверяемый объект</param>
            <param name = "target">Целевой родительский объект (для операций создания и переноса)</param>
            <param name = "op">Проверяемая операция</param>
            <param name = "attrNameKey">Проверяемый атрибут</param>
            <param name = "element">Проверяемый элемент коллекции</param>
            <returns>true если можно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeAccessRule.Check(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AccessRule,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.NamedValue,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
              Вызывает обработчики Check из кода кастомизации
            </summary>
            <param name = "user">Пользователь, выполняющий операцию</param>
            <param name = "acr">Правило контроля доступа</param>
            <param name = "obj">Проверяемый объект</param>
            <param name = "target">Целевой родительский объект (для операций создания и переноса)</param>
            <param name = "op">Проверяемая операция</param>
            <param name = "attrNameKey">Проверяемый атрибут</param>
            <param name = "element">Проверяемый элемент коллекции</param>
            <returns>true если можно</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder">
            <summary>
            Вспомогательный класс для построения поискового SQL выражения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.m_DataProvider">
            <summary>
            Провайдер данных, который будет исполнять поисковый запрос
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.m_Operation">
            <summary>
            Поисковая операция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.m_Parameters">
            <summary>
            Набор параметров получившегося запроса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.m_SQL">
            <summary>
            Билдер для SQL выражения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.m_depthLevel">
            <summary>
            Уровень вложенности этого подзапроса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.#ctor(ProgramSoyuz.DataModel.IDbProvider,ProgramSoyuz.PLM.Scripting.SearchOperation)">
            <summary>
            Конструктор
            </summary>
            <param name="dataProvider">Провайдер данных, который будет исполнять поисковый запрос</param>
            <param name="operation">Поисковая операция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.#ctor(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,ProgramSoyuz.PLM.Scripting.SearchOperation)">
            <summary>
            Конструктор
            </summary>
            <param name="parentQuery">Родительский конструктор поискового запроса</param>
            <param name="operation">Поисковая операция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.#ctor(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,ProgramSoyuz.PLM.Scripting.SearchOperation,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="parentQuery">Родительский конструктор поискового запроса</param>
            <param name="operation">Поисковая операция</param>
            <param name="condition">Дополнительное условие фильтрации</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.#ctor(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,ProgramSoyuz.PLM.Scripting.SearchOperation,System.String,System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="parentQuery">Родительский конструктор поискового запроса</param>
            <param name="operation">Поисковая операция</param>
            <param name="condition">Дополнительное условие фильтрации</param>
            <param name="needCount">Если True, то запрос выдает количество записей</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.BuildQuery(ProgramSoyuz.PLM.Scripting.SearchExpressionItem,System.String,System.Boolean)">
            <summary>
            Построение SQL запроса
            </summary>
            <param name="searchItem">Стартовый элемент, с которого начинаем строить запрос</param>
            <param name="condition">Дополнительное условие фильтрации</param>
            <param name="needCount">Если True, то запрос выдает количество записей</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.m_userRightsCache">
            <summary>
            Кеш привязок для вычисления прав доступа
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.ToString">
            <summary>
            Возвращает текст SQL запроса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.GetQuery">
            <summary>
            Возвращает текст SQL запроса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.GetResumableQuery(System.Int32,System.UInt32)">
            <summary>
            Возвращает текст возобновляемого SQL запроса
            </summary>
            <param name="recordsPerQuery">Максимальное число найденных объектов на один запрос</param>
            <param name="lastFoundObjectId">Последний найденный объект</param>
            <returns></returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.DataProvider">
            <summary>
            Провайдер данных, который будет исполнять поисковый запрос
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.Operation">
            <summary>
            Поисковая операция
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.Parameters">
            <summary>
            Набор параметров для запроса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.OperationUser">
            <summary>
            Возвращает пользователя, от имени которого выполняется поиск
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.UserRightsCache">
            <summary>
            Кеш привязок для вычисления прав доступа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchQueryBuilder.DepthLevel">
            <summary>
            Уровень вложенности этого подзапроса
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.RichTextProxy">
            <summary>
            Значение атрибута типа RichText
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RichTextProxy._rawProxy">
            <summary>
            Сохраненное в базе значение атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RichTextProxy._blob">
            <summary>
            Ссылка на сохраняемый BlobDesc для этого форматированного текста
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RichTextProxy._richText">
            <summary>
            Строка с текущим значением атрибута в виде форматированного текста
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RichTextProxy._richTextWeak">
            <summary>
            Строка с со слабой ссылкой на развернутый из блоба форматирванный текст
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RichTextProxy._plainText">
            <summary>
            Строка с текущим значением атрибута в виде простого текста без форматирования
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.RichTextProxy._richTextFormat">
            <summary>
            Формат рич текста (HTML, RTF)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RichTextProxy.#ctor(ProgramSoyuz.DataModel.RichTextProxyBase)">
            <summary>
            Конструктор объекта по raw значению атрибута
            </summary>
            <param name="rawProxy">Сохраненное в базе raw значение атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RichTextProxy.#ctor(System.String,System.String,ProgramSoyuz.PLM.Scripting.RichTextType)">
            <summary>
            Конструктор нового объекта для сохранения в базе
            </summary>
            <param name="richText">Строка с новым значением атрибута в виде форматированного текста</param>
            <param name="plainText">Строка с новым значением атрибута в виде простого текста без форматированbz</param>
            <param name="richTextFormat">Формат рич текста (HTML, RTF)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RichTextProxy.GetRawData">
            <summary>
            Создает массив с форматированным текстом для сохранения в блоб
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RichTextProxy.GetBlobSize(System.Int32@)">
            <summary>
            Размер бинарного объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RichTextProxy.RefreshRawProxy">
            <summary>
            Обновление внутренней ссылки на блоб после его сохранения и появления идентификатора
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RichTextProxy.IsEmpty">
            <summary>
            Возвращает true если этот объект пуст
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RichTextProxy.RichText">
            <summary>
            Строка с текущим значением атрибута в виде форматированного текста
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RichTextProxy.PlainText">
            <summary>
            Строка с текущим значением атрибута в виде простого текста без форматирования
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RichTextProxy.RawProxy">
            <summary>
            Сохраненное в базе значение атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RichTextProxy.Blob">
            <summary>
            Ссылка на сохраняемый BlobDesc для этого форматированного текста
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RichTextProxy.IsOriginal">
            <summary>
            Возвращает true, если эта оболочка создана по существующему в базе объекту RichTextProxyBase
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RichTextProxy.Entity">
            <summary>
            Идентификатор типа сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RichTextProxy.Id">
            <summary>
            Возвращает идентификатор объекта по базе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RichTextProxy.RichTextFormat">
            <summary>
            Формат рич текста (HTML, RTF)
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase">
            <summary>
            Базовый класс для кастомизаторов определений атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase._customizationMethodNames">
            <summary>
            Индекс списков обработчиков кастомизации для определения атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.GetCustomizationMethodNames">
            <summary>
            Возвращает список возможных обработчиков в виде словаря строка на id метода
            </summary>
            <returns>Массив идентификаторов методов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.CheckForReplacingHandlers">
            <summary>
            Проверяет данный экземпляр на наличие методов с атрибутом <see cref="T:ProgramSoyuz.PLM.Scripting.ReplaceMasterAttribute"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.IsHandlerReplaced(ProgramSoyuz.PLM.Scripting.CustomizationMethod)">
            <summary>
            Возвращает true если указанный обработчик мастер шаблона перекрыт модификатором и вызываться не должен
            </summary>
            <param name="methodId">Проверяемый идентификатор обработчика</param>
            <returns>true если обработчик перекрыт</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.CheckCustomizationCode(ProgramSoyuz.DataModel.AttributableEntityIdentifier,System.String,ProgramSoyuz.PLM.Scripting.CustomizationMethod[]@,System.CodeDom.Compiler.CompilerError[]@,System.Int32@)">
            <summary>
            Проверочная компиляция кода кастомизации объекта
            </summary>
            <param name="kind">Тип атрибутируемой сущности</param>
            <param name="csCode">Текст одного или нескольких методов</param>
            <param name="missingHandlers">На выходе список методов, которые можно добавить к коду</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <param name="nHeaderLines">Число строк, вставленных перед переданным для компиляции кодом</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.GetDefaultImplementation(ProgramSoyuz.DataModel.AttributableEntityIdentifier,ProgramSoyuz.PLM.Scripting.CustomizationMethod[])">
            <summary>
            Формирует реализацию по умолчанию для запрошенных методов кастомизации
            </summary>
            <param name="kind">Тип атрибутируемой сущности</param>
            <param name="handlers">массив идентификаторов интересующих методов кастомизации,
            либо null если интересуют все методы для этого объекта</param>
            <returns>Строку с кодом</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.CanConvertInput(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Object)">
            <summary>
            Вызывается на клиенте для проверки пригодности значения для присваивания атрибуту.
            Используется для проверки возможности операции вставки из буфера
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>true, если значение <paramref name="newValue"/> пригодно для атрибута, false если не пригодно, null если следует вызывать обработчик предшественника</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.ConvertInput(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Object@)">
            <summary>
            Конвертация вводимого значения перед присвоением его атрибуту.
            Вызывается на клиенте перед сменой значения атрибута (включая операции вставки из буфера)
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>true, если конвертация произошла и/или значение <paramref name="newValue"/> пригодно для атрибута.
            false означает, что следует вызвать обработчик предшественника</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.ValidateInput(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Object)">
            <summary>
            Проверка значения атрибута во время ввода. Возвращает сообщение об ошибке либо null.
            Вызывается на клиенте при редактировании карточки прототипа объекта (а также в клиентском серверном скрипте 
            по месту редактирования прототипа)
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>null, если все хорошо, либо сообщение об ошибке</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.ValidateInput(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Object@)">
            <summary>
            Проверка значения атрибута во время ввода. Возвращает сообщение об ошибке либо null.
            Вызывается на клиенте при редактировании карточки прототипа объекта (а также в клиентском серверном скрипте 
            по месту редактирования прототипа)
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>null, если все хорошо, либо сообщение об ошибке</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.Calculate(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Boolean)">
            <summary>
            Подготовка вычисленного атрибута. Возвращает true если значение успешно вычислено
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="attr">Собственно атрибут, чье значение может установить этот метод</param>
            <param name="allowAsync">true если вызывающая сторона готова к асинхронному вычислению атрибута. 
            В этом случае обработчику следует поставить attr.IsAsyncCalculationinProgress в true</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.CancelCalculate(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Отмена начатого асинхронного вычисления
            </summary>
            <param name="obj">Объект, чей атрибут асинхронно вычисляется</param>
            <param name="attr">Атрибут, вычисляемый асинхронно</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.Calculate(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Подготовка вычисленного атрибута. Возвращает true если значение успешно вычислено
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="attr">Собственно атрибут, чье значение может установить этот метод</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.GetSelectIORange(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,ProgramSoyuz.PLM.Scripting.DataContainer[]@,ProgramSoyuz.PLM.Scripting.DataContainer[]@)">
            <summary>
            Формирует списки контейнеров, определяющих диапазон поиска ИО, а так же
            список контейнеров, поиск в которых должен быть включен по умолчанию
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <param name="containerRange">На выходе получает список контейнеров, среди которых ищем ИО</param>
            <param name="defaultContainersToSearchIn">На выходе получает список контейнеров,
            поиск в которых должен быть включен по умолчанию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.GetSelectIOList(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Формирует список ИО, из которых можно выбрать значение ссылки на ИО
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <returns>Список ИО, либо null, если следует использовать обычный диалог поиска</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.GetSelectNamedValueRange(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,ProgramSoyuz.PLM.Scripting.NamedValue@,ProgramSoyuz.PLM.Scripting.NamedValue[]@)">
            <summary>
            Формирует корень ветки именованных значений, отображаемых
            в выпадающем списке атрибута "перечисление" либо список значений для показа
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <param name="namedValueRoot">На входе значение, установленное в определении атрибута.
            На выходе ожидается корень ветки ИЗ, которое следует использовать для формирования выпадающего списка значений</param>
            <param name="availableValues">На выходе список доступных значений, либо null, если используется <paramref name="namedValueRoot"/></param>
            <returns>true, если метод успешно вернул чего запрошено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.GetSelectNamedValueRange(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,ProgramSoyuz.PLM.Scripting.NamedValue@)">
            <summary>
            Формирует корень ветки именованных значений, отображаемых
            в выпадающем списке атрибута "перечисление"
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <param name="namedValueRoot">На входе значение, установленное в определении атрибута.
            На выходе ожидается корень ветки ИЗ, которое следует использовать для формирования выпадающего списка значений</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.GetSelectTemplateRange(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,ProgramSoyuz.PLM.Scripting.Template@,ProgramSoyuz.PLM.Scripting.Template[]@)">
            <summary>
            Формирует корень ветки шаблонов или список конкретных значений, отображаемых
            в выпадающем списке атрибута "ссылка на шаблон/доп класс"
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <param name="templateRoot">На входе значение, установленное в определении атрибута.
            На выходе ожидается корень ветки шаблонов, которое следует использовать для формирования выпадающего списка значений</param>
            <param name="availableValues">На выходе список доступных значений, либо null, если используется <paramref name="templateRoot"/></param>
            <returns>true, если метод успешно вернул чего запрошено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.GetSelectIconRange(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Формирует список значений, отображаемых
            в выпадающем списке атрибута "ссылка на иконку"
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <returns>Список доступных для выбора иконок, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.GetSearchableRange">
            <summary>
            Формирует список значений, отображаемых
            в выпадающем списке атрибута в конструкторе поисковых запросов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.GetAvailableLinkValues(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Формирует список объектов, из которых можно выбрать значение ссылки/элемента множества
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <returns>Список объектов, либо null, если следует использовать обычный диалог выбора/поиска</returns>
            <remarks>Вызывается на клиенте для ссылок и множеств всех атрибутируемых объектов для формирования короткого списка 
            возможных значений атрибута</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.IsReadOnlyInUI(ProgramSoyuz.PLM.Scripting.PrototypeObject)">
            <summary>
            Определяет является ли атрибут доступным только для чтения 
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <returns>true означает - только для чтения</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул true</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.IsHiddenInUI(ProgramSoyuz.PLM.Scripting.PrototypeObject)">
            <summary>
            Определяет является ли атрибут скрытым
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <returns>true означает, что атрибут скрыт</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул true</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.IsAttributeVisibleInUI(ProgramSoyuz.PLM.Scripting.PrototypeObject)">
            <summary>
            Определяет является ли атрибут скрытым (false) или видимым (true)
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <returns>true означает, что атрибут виден, false - скрыт, null - продолжить вызовы других кастомизаторов.
            Если ни один из кастомизаторов не вернул ни true, ни false - атрибут считается видимым</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул null</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.IsAttributeEditableInUI(ProgramSoyuz.PLM.Scripting.PrototypeObject)">
            <summary>
            Определяет является ли атрибут заблокированным (false) или редактируемым (true)
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <returns>true означает, что атрибут редактируемый, false - только для чтения, null - продолжить вызовы других кастомизаторов.
            Если ни один из кастомизаторов не вернул ни true, ни false - атрибут считается редактируемым</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул null.
            Этот метод вызывается лишь в том случае, когда атрибут разрешен к редактированию правами доступа и другими настройками конфигурации
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.OnAttributeChanged(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute)">
            <summary>
            Функция вызывается как нотификация об изменении атрибута прототипа объекта
            </summary>
            <param name="obj">Объект, чей атрибут изменился</param>
            <param name="attr">Собственно изменившийся атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.OnAttributeChanged(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.Boolean@)">
            <summary>
            Функция вызывается как нотификация об изменении атрибута прототипа объекта
            </summary>
            <param name="obj">Объект, чей атрибут изменился</param>
            <param name="attr">Собственно изменившийся атрибут</param>
            <param name="handled">Если на выходе true, то обработчики базовых классов не вызываются</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.PrepareDisplayParams(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.DataModel.AttributeDefBase.BaseParams)">
            <summary>
            Вызывается при подготовке параметров отображения атрибута при формировании карточки указанного объекта
            </summary>
            <param name="obj">Объект, в чьей карточке используется атрибут</param>
            <param name="displayParams">Параметры отображения атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.PrepareEditor(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.AttributeEditorProps)">
            <summary>
            Вызывается при подготовке редактора атрибута при формировании карточки указанного объекта
            </summary>
            <param name="obj">Объект, в чьей карточке используется атрибут</param>
            <param name="editorProps">Параметры редактора атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.OnHyperlink(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Обработчик нажатия на гиперссылку для HTML/RTF атрибутов
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут с гипертекстом</param>
            <param name="linkData">Строковый параметр гиперссылки (остаточная часть HREF)</param>
            <param name="control">true если нажата клавиша Control</param>
            <param name="alt">true если нажата клавиша Alt</param>
            <param name="shift">true если нажата клавиша Shift</param>
            <returns>true если действие обработано и вызов других обработчиков не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.OnHyperlink(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,ProgramSoyuz.PLM.Scripting.ScriptingObject,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Обработчик нажатия на гиперссылку для HTML/RTF атрибутов
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут с гипертекстом</param>
            <param name="target">Целевой объект (для ссылок на объекты PLM)</param>
            <param name="targetUrl">URL гиперссылки (содержимое тэга HREF)</param>
            <param name="control">true если нажата клавиша Control</param>
            <param name="alt">true если нажата клавиша Alt</param>
            <param name="shift">true если нажата клавиша Shift</param>
            <param name="editMode">true если установлен режим редактирования текста</param>
            <returns>true если действие обработано и вызов других обработчиков не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.OnHyperlinkTooltip(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.EntityAttribute,ProgramSoyuz.PLM.Scripting.ScriptingObject,System.String,System.Boolean,System.String@,System.String@)">
            <summary>
            Обработчик нажатия на гиперссылку для HTML/RTF атрибутов - формирование всплывающей подсказки для гиперссылки
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут с гипертекстом</param>
            <param name="target">Целевой объект (для ссылок на объекты PLM)</param>
            <param name="targetUrl">URL гиперссылки (содержимое тэга HREF)</param>
            <param name="editMode">true если установлен режим редактирования текста</param>
            <param name="linkText">На выходе текст всплывающей подсказки</param>
            <param name="hintText">На выходе подсказка о вариациях поведения с разными сдвиговыми клавишами.</param>
            <returns>Строка подсказки если этот объект готов обработать данную ссылку, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.GetValue(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.AttributeValue,System.Object@)">
            <summary>
            Вычисление значения вспомогательного атрибута. Вызывается при запросе значения простого вспомогательного атрибута.
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="valueWrapper">Объект-оболочка значения атрибута</param>
            <param name="value">На выходе значение атрибута</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.SetValue(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.AttributeValue,System.Object)">
            <summary>
            Установка значения вспомогательного атрибута. Вызывается при установке значения простого вспомогательного атрибута.
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="valueWrapper">Объект-оболочка значения атрибута</param>
            <param name="newValue">На выходе значение атрибута</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.GetUIData(ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает запрошенное представление объекта в UI
            </summary>
            <param name="obj">Объект для которого требуется UI представление</param>
            <param name="attr">Собственно атрибут, дяя которого вызван метод</param>
            <param name="dataKind">Запрашиваемый вид данных (название, иконки, превью)</param>
            <returns>null если следует использовать вариант по умолчанию,
            String для названий объекта (форматированный HTML тэгами для всего кроме просто названия),
            CustomIcon (или строковый ключ иконки в общем ImageListе) и 
            CustomIcon[] (или массив ключей, или массив KeyValuePair&lt;String, String|CustomIcon|Object&gt;) для иконок,
            Image (или BlobDesc) для превью,
            Color для раскраски элементов в дереве и списке,
            FontStyle для указания стиля шрифта в дереве и списке</returns>
            <remarks> Вызывается в основном клиентским UI кодом.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.Compare(ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.PrototypeObject,ProgramSoyuz.PLM.Scripting.PrototypeObject)">
            <summary>
            Сравнивает два объекта по данному атрибуту
            </summary>
            <param name="def">Определение атрибута, по которому производится сравнение</param>
            <param name="obj1">Первый объект для сравнения</param>
            <param name="obj2">Второй объект для сравнения</param>
            <returns>null, если следует использовать сравнение по умолчанию, 0 если значения равны, -1, если <paramref name="obj1"/> меньше <paramref name="obj2"/>, и 1 если больше</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.AttributeEditorProps">
            <summary>
            Набор параметров для редактора атрибута
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.AttributeEditorProps.LabelText">
            <summary>
            Текст метки редактора атрибута
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2">
            <summary>
            Базовый класс для кастомизаторов определений атрибутов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.CanConvertInput(`0,`1,System.Object)">
            <summary>
            Вызывается на клиенте для проверки пригодности значения для присваивания атрибуту.
            Используется для проверки возможности операции вставки из буфера
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>true, если значение <paramref name="newValue"/> пригодно для атрибута, false если не пригодно, null если следует вызывать обработчик предшественника</returns>
            <remarks>Метод может выдать исключение HumanFaultException для сообщения пользователю причины непригодности значения.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.ConvertInput(`0,`1,System.Object@)">
            <summary>
            Конвертация вводимого значения перед присвоением его атрибуту.
            Вызывается на клиенте перед сменой значения атрибута (включая операции вставки из буфера)
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>true, если конвертация произошла и/или значение <paramref name="newValue"/> пригодно для атрибута.
            false означает, что следует вызвать обработчик предшественника</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.Validate(`0,`1)">
            <summary>
            Проверка значения атрибута. Возвращает сообщение об ошибке либо null.
            Вызывается на сервере в ходе проверки группового сохранения
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <returns>null, если все хорошо, либо сообщение об ошибке</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.ValidateInput(`0,`1,System.Object)">
            <summary>
            Проверка значения атрибута во время ввода. Возвращает сообщение об ошибке либо null.
            Вызывается на клиенте (и на сервере внутри клиентских скриптов)
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>null, если все хорошо, либо сообщение об ошибке</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.ValidateInput(`0,`1,System.Object@)">
            <summary>
            Проверка значения атрибута во время ввода. Возвращает сообщение об ошибке либо null.
            Вызывается на клиенте (и на сервере внутри клиентских скриптов)
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <param name="attr">Собственно атрибут</param>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту (может быть исправлено этим методом)</param>
            <returns>null, если все хорошо, либо сообщение об ошибке</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.Calculate(`0,`1,System.Boolean)">
            <summary>
            Подготовка вычисленного атрибута. Возвращает true если значение успешно вычислено
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="attr">Собственно атрибут, чье значение может установить этот метод</param>
            <param name="allowAsync">true если вызывающая сторона готова к асинхронному вычислению атрибута. 
            В этом случае обработчику следует поставить attr.IsAsyncCalculationinProgress в true</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.CancelCalculate(`0,`1)">
            <summary>
            Отмена начатого асинхронного вычисления
            </summary>
            <param name="obj">Объект, чей атрибут асинхронно вычисляется</param>
            <param name="attr">Атрибут, вычисляемый асинхронно</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.Calculate(`0,`1)">
            <summary>
            Подготовка вычисленного атрибута. Возвращает true если значение успешно вычислено
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="attr">Собственно атрибут, чье значение может установить этот метод</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.BuildUniquenessValue(`0,`1,System.String@)">
            <summary>
            Подготовка значения атрибута для помещения в пространство уникальности. Возвращает true если значение успешно вычислено
            </summary>
            <param name="obj">Объект, чей атрибут готовим для уникальности</param>
            <param name="attr">Собственно атрибут, чье значение помещается в ПУ</param>
            <param name="uniqueValue">На входе - текущее значение, возможно уже преобразованное дочерними обработчиками.
            На выходе значение, помещаемое в пространство уникальности</param>
            <returns>true, если значение вычислено, false, если следует продолжить преобразование обработчиками предшественников</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.ResolveAttribute(`0,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Возвращает атрибут другого объекта для определения атрибута с типом "ссылка на другой атрибут"
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="attr">Определение атрибута-ссылки</param>
            <returns>Найденный атрибут другого объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.ResolveAttributeSearchItem(ProgramSoyuz.PLM.Scripting.AttributeDef,ProgramSoyuz.PLM.Scripting.SearchAttributeCriterionItem)">
            <summary>
            Модифицирует поисковое дерево для выполнения запроса по атрибуту с типом "ссылка на другой атрибут"
            </summary>
            <param name="attr">Определение атрибута-ссылки</param>
            <param name="searchItem">На сервере - элемент поискового дерева, который следует модифицировать в соответствии
            с определением ссылки на атрибут другого объекта. На клиенте - null</param>
            <returns>true если метод реализован и поиск поддерживается. Если метод возвращает false, то поиск
            по этому атрибуту считается нереализованным.</returns>
            <remarks>Обычно в этом методе следует вставить поисковый элемент на атрибут-ссылку на другой объект, а 
            существующий элемент переприцепить к нему в виде подзапроса</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.GetValue(`0,ProgramSoyuz.PLM.Scripting.AttributeValue,System.Object@)">
            <summary>
            Вычисление значения вспомогательного атрибута. Вызывается при запросе значения простого вспомогательного атрибута.
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="valueWrapper">Объект-оболочка значения атрибута</param>
            <param name="value">На выходе значение атрибута</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
            <remarks>При необходимости внутри обработчика можно запрашивать текущее значение valueWrapper.Value.
            Этот вызов защищен от повторного попадания в этот обработчик (а так же и в <see cref="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.SetValue(`0,ProgramSoyuz.PLM.Scripting.AttributeValue,System.Object)"/>).</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.SetValue(`0,ProgramSoyuz.PLM.Scripting.AttributeValue,System.Object)">
            <summary>
            Установка значения вспомогательного атрибута. Вызывается при установке значения простого вспомогательного атрибута.
            </summary>
            <param name="obj">Объект, чей атрибут вычисляем</param>
            <param name="valueWrapper">Объект-оболочка значения атрибута</param>
            <param name="newValue">Устанавливаемое значение атрибута</param>
            <returns>true, если значение вычислено, false, если следует поискать другой обработчик</returns>
            <remarks>При необходимости внутри обработчика можно установить значение valueWrapper.Value.
            Этот вызов защищен от повторного попадания в этот обработчик (а так же и в <see cref="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.GetValue(`0,ProgramSoyuz.PLM.Scripting.AttributeValue,System.Object@)"/>).</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.GetSelectIORange(`0,`1,ProgramSoyuz.PLM.Scripting.DataContainer[]@,ProgramSoyuz.PLM.Scripting.DataContainer[]@)">
            <summary>
            Формирует списки контейнеров, определяющих диапазон поиска ИО, а так же
            список контейнеров, поиск в которых должен быть включен по умолчанию
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <param name="containerRange">На выходе получает список контейнеров, среди которых ищем ИО</param>
            <param name="defaultContainersToSearchIn">На выходе получает список контейнеров,
            поиск в которых должен быть включен по умолчанию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.GetSelectIOList(`0,`1)">
            <summary>
            Формирует список ИО, из которых можно выбрать значение ссылки на ИО
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <returns>Список ИО, либо null, если следует использовать обычный диалог поиска</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.GetSelectNamedValueRange(`0,`1,ProgramSoyuz.PLM.Scripting.NamedValue@,ProgramSoyuz.PLM.Scripting.NamedValue[]@)">
            <summary>
            Формирует корень ветки именованных значений, отображаемых
            в выпадающем списке атрибута "перечисление" либо список значений для показа
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <param name="namedValueRoot">На входе значение, установленное в определении атрибута.
            На выходе ожидается корень ветки ИЗ, которое следует использовать для формирования выпадающего списка значений</param>
            <param name="availableValues">На выходе список доступных значений, либо null, если используется <paramref name="namedValueRoot"/></param>
            <returns>true, если метод успешно вернул чего запрошено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.GetSelectNamedValueRange(`0,`1,ProgramSoyuz.PLM.Scripting.NamedValue@)">
            <summary>
            Формирует корень ветки именованных значений, отображаемых
            в выпадающем списке атрибута "перечисление"
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <param name="namedValueRoot">На входе значение, установленное в определении атрибута.
            На выходе ожидается корень ветки ИЗ, которое следует использовать для формирования выпадающего списка значений</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.GetSelectTemplateRange(`0,`1,ProgramSoyuz.PLM.Scripting.Template@,ProgramSoyuz.PLM.Scripting.Template[]@)">
            <summary>
            Формирует корень ветки шаблонов или список конкретных значений, отображаемых
            в выпадающем списке атрибута "ссылка на шаблон/доп класс"
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут. Может быть null при вызове из конструктора запросов поиска</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать. Может быть null при вызове из конструктора запросов поиска</param>
            <param name="templateRoot">На входе значение, установленное в определении атрибута.
            На выходе ожидается корень ветки шаблонов, которое следует использовать для формирования выпадающего списка значений</param>
            <param name="availableValues">На выходе список доступных значений, либо null, если используется <paramref name="templateRoot"/></param>
            <returns>true, если метод успешно вернул чего запрошено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.GetSelectIconRange(`0,`1)">
            <summary>
            Формирует значений, отображаемых
            в выпадающем списке атрибута "ссылка на иконку"
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут. Может быть null при вызове из конструктора запросов поиска</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать. Может быть null при вызове из конструктора запросов поиска</param>
            <returns>Список доступных для выбора иконок, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.GetAvailableLinkValues(`0,`1)">
            <summary>
            Формирует список объектов, из которых можно выбрать значение ссылки/элемента множества
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут, чье ссылочное значение собираемся редактировать</param>
            <returns>Список объектов, либо null, если следует использовать обычный диалог выбора/поиска</returns>
            <remarks>Вызывается на клиенте для ссылок и множеств всех атрибутируемых объектов для формирования короткого списка 
            возможных значений атрибута</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.IsReadOnlyInUI(`0)">
            <summary>
            Определяет является ли атрибут доступным только для чтения 
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <returns>true означает - только для чтения</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул true</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.IsHiddenInUI(`0)">
            <summary>
            Определяет является ли атрибут скрытым
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <returns>true означает, что атрибут скрыт</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул true</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.IsAttributeVisibleInUI(`0)">
            <summary>
            Определяет является ли атрибут скрытым (false) или видимым (true)
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <returns>true означает, что атрибут виден, false - скрыт, null - продолжить вызовы других кастомизаторов.
            Если ни один из кастомизаторов не вернул ни true, ни false - атрибут считается видимым</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул null.
            Вначале вызываются аналогичный метод у шаблона, затем у определения атрибута.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.IsAttributeEditableInUI(`0)">
            <summary>
            Определяет является ли атрибут заблокированным (false) или редактируемым (true)
            в пользовательском интерфейсе стандартной карточки.
            Вызывается на клиенте при построении штатной карточки атрибутируемого объекта.
            </summary>
            <param name="obj">Объект, чей атрибут проверяем</param>
            <returns>true означает, что атрибут редактируемый, false - только для чтения, null - продолжить вызовы других кастомизаторов.
            Если ни один из кастомизаторов не вернул ни true, ни false - атрибут считается редактируемым</returns>
            <remarks>Вызывается на клиентской стороне при использовании штатных карточек атрибутируемых объектов.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.
            Наличие исключения трактуется, как если метод вернул null.
            Этот метод вызывается лишь в том случае, когда атрибут разрешен к редактированию правами доступа и другими настройками конфигурации.
            Вначале вызываются аналогичный метод у шаблона, затем у определения атрибута.
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.OnAttributeChanged(`0,`1)">
            <summary>
            Функция вызывается как нотификация об изменении атрибута объекта
            </summary>
            <param name="obj">Объект, чей атрибут изменился</param>
            <param name="attr">Собственно изменившийся атрибут</param>
            <remarks>Метод вызывается по месту изменения значения атрибута. Это может происходить как на клиенте,
            так и на сервере. В том числе внутри обработки операции сохранения, где вложенные вызовы сохранения
            заблокированы (приводят к исключению).
            Сначала вызывается этот метод для шаблонов, затем для определения атрибута</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.OnAttributeChanged(`0,`1,System.Boolean@)">
            <summary>
            Функция вызывается как нотификация об изменении атрибута объекта
            </summary>
            <param name="obj">Объект, чей атрибут изменился</param>
            <param name="attr">Собственно изменившийся атрибут</param>
            <param name="handled">Если на выходе true, то обработчики предшественников не вызываются</param>
            <remarks>Метод вызывается по месту изменения значения атрибута. Это может происходить как на клиенте,
            так и на сервере. В том числе внутри обработки операции сохранения, где вложенные вызовы сохранения
            заблокированы (приводят к исключению).
            Сначала вызывается этот метод для шаблонов, затем для определения атрибута</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.PrepareDisplayParams(`0,ProgramSoyuz.DataModel.AttributeDefBase.BaseParams)">
            <summary>
            Вызывается при подготовке параметров отображения атрибута при формировании карточки указанного объекта
            </summary>
            <param name="obj">Объект, в чьей карточке используется атрибут</param>
            <param name="displayParams">Параметры отображения атрибута</param>
            <returns>true если настройка завершена и дальнейшие обработчики вызывать не следует</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.PrepareEditor(`0,ProgramSoyuz.PLM.Scripting.AttributeDefCustomizationBase.AttributeEditorProps)">
            <summary>
            Вызывается при подготовке редактора атрибута при формировании карточки указанного объекта
            </summary>
            <param name="obj">Объект, в чьей карточке используется атрибут</param>
            <param name="editorProps">Параметры редактора атрибута</param>
            <returns>true если настройка завершена и дальнейшие обработчики вызывать не следует</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.OnHyperlink(`0,`1,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Обработчик нажатия на гиперссылку для HTML/RTF атрибутов
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут с гипертекстом</param>
            <param name="linkData">Строковый параметр гиперссылки (остаточная часть HREF)</param>
            <param name="control">true если нажата клавиша Control</param>
            <param name="alt">true если нажата клавиша Alt</param>
            <param name="shift">true если нажата клавиша Shift</param>
            <returns>true если действие обработано и вызов других обработчиков не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.OnHyperlink(`0,`1,ProgramSoyuz.PLM.Scripting.ScriptingObject,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Обработчик нажатия на гиперссылку для HTML/RTF атрибутов
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут с гипертекстом</param>
            <param name="target">Целевой объект (для ссылок на объекты PLM)</param>
            <param name="targetUrl">URL гиперссылки (содержимое тэга HREF)</param>
            <param name="control">true если нажата клавиша Control</param>
            <param name="alt">true если нажата клавиша Alt</param>
            <param name="shift">true если нажата клавиша Shift</param>
            <param name="editMode">true если установлен режим редактирования текста</param>
            <returns>true если действие обработано и вызов других обработчиков не требуется</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.OnHyperlinkTooltip(`0,`1,ProgramSoyuz.PLM.Scripting.ScriptingObject,System.String,System.Boolean,System.String@,System.String@)">
            <summary>
            Обработчик нажатия на гиперссылку для HTML/RTF атрибутов - формирование всплывающей подсказки для гиперссылки
            </summary>
            <param name="obj">Объект, которому принадлежит атрибут</param>
            <param name="attr">Атрибут с гипертекстом</param>
            <param name="target">Целевой объект (для ссылок на объекты PLM)</param>
            <param name="targetUrl">URL гиперссылки (содержимое тэга HREF)</param>
            <param name="editMode">true если установлен режим редактирования текста</param>
            <param name="linkText">На выходе текст всплывающей подсказки</param>
            <param name="hintText">На выходе подсказка о вариациях поведения с разными сдвиговыми клавишами.</param>
            <returns>Строка подсказки если этот объект готов обработать данную ссылку, либо null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.GetUIData(`0,`1,ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает запрошенное представление объекта в UI
            </summary>
            <param name="obj">Объект для которого требуется UI представление</param>
            <param name="attr">Собственно атрибут, дяя которого вызван метод</param>
            <param name="dataKind">Запрашиваемый вид данных (название, иконки, превью)</param>
            <returns>null если следует использовать вариант по умолчанию,
            String для названий объекта (форматированный HTML тэгами для всего кроме просто названия),
            CustomIcon (или строковый ключ иконки в общем ImageListе) и 
            CustomIcon[] (или массив ключей, или массив KeyValuePair&lt;String, String|CustomIcon|Object&gt;) для иконок,
            Image (или BlobDesc) для превью,
            Color для раскраски элементов в дереве и списке,
            FontStyle для указания стиля шрифта в дереве и списке</returns>
            <remarks> Вызывается в основном клиентским UI кодом.
            Исключения, вышедшие их этого метода, отправляются в серверный отчет об ошибке без показа сообщения пользователю.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AttributeDefCustomization`2.Compare(ProgramSoyuz.PLM.Scripting.AttributeDef,`0,`0)">
            <summary>
            Сравнивает два объекта по данному атрибуту
            </summary>
            <param name="def">Определение атрибута, по которому производится сравнение</param>
            <param name="obj1">Первый объект для сравнения</param>
            <param name="obj2">Второй объект для сравнения</param>
            <returns>null, если следует использовать сравнение по умолчанию, 0 если значения равны, -1, если <paramref name="obj1"/> меньше <paramref name="obj2"/>, и 1 если больше</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeUserSession.Invoke(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserSession,System.String,System.Object,System.Object@)">
            <summary>
            Вызывает имеющиеся обработчики запросов к внешнему серверу
            </summary>
            <returns>true если обработчик нашелся и выполнил, что хотел</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeUserSession.OnBeforeInvoke(ProgramSoyuz.PLM.Scripting.UserSession,ProgramSoyuz.PLM.Scripting.UserSession,System.String,System.Object)">
            <summary>
            Вызывает имеющиеся предварительные обработчики перед отправкой запроса внешнему серверу. Вызывается на локальном сервере
            </summary>
            <returns>true если обработчик нашелся и выполнил, что хотел</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeUserSession.OnAfterInvoke(ProgramSoyuz.PLM.Scripting.UserSession,ProgramSoyuz.PLM.Scripting.UserSession,System.String,System.Object,System.Object@)">
            <summary>
            Вызывает имеющиеся обработчики запросов к внешнему серверу
            </summary>
            <returns>true если обработчик нашелся и выполнил, что хотел</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader">
            <summary>
            Вспомогательный класс для импорта пакетов конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._path">
            <summary>
            Путь к пакету (если известен)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._importTime">
            <summary>
            Фиксируем время создания экземпляра этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.m_UpdatedObjects">
            <summary>
            Индекс создаваемых или обновляемых объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._packData">
            <summary>
            Десериализованный пакет конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._exceptions">
            <summary>
            Список исключений, полученных при прочтении пакета
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._importFlags">
            <summary>
            Набор флагов с которыми происходит импортирование данных.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._attributableObjectsInPack">
            <summary>
            Множество упомянутых в пакете атрибутируемых объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._updateIfNewerMode">
            <summary>
            Режим обновления конфигураций (только более новые обновляются)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._updateLocalSystemItems">
            <summary>
            Если true то элементы локальной системы не сохраняются (обновляются импортируемыми значениями)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.#ctor(System.String)">
            <summary>
            Конструктор. Читает файл и десериализует прочитанные данные
            </summary>
            <param name="path">Путь к файлу пакета</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.#ctor(System.IO.Stream)">
            <summary>
            Конструктор. Читает поток и десериализует прочитанные данные
            </summary>
            <param name="stream">Поток с сохраненным пакетом конфигурации</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.#ctor(ProgramSoyuz.PLM.Scripting.ConfigurationPackData)">
            <summary>
            Конструктор по уже десериализованным данным пакета конфигурации
            </summary>
            <param name="packData">Набор данных пакета конфигурации</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.Prepair">
            <summary>
            Проверяет прочитанные объекты и генерирует GUIDы для тех объектов, у которых он совсем не задан.
            GUIDы используются для индексирования обновленных объектов и с пустыми работает некорректно
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._skippedConfigurationIds">
            <summary>
            Набор идентификаторов конфигураций, которые не подлежат обновлению
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._newerConfigurationIds">
            <summary>
            Набор идентификаторов конфигураций, которые не подлежат обновлению, так как на целевой системе они и так новее
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._currentImportPhase">
            <summary>
            Текущая фаза импорта для метода <see cref="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.SaveAll"/>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._hasConfigurationsToSynchronize">
            <summary>
            Индикатор наличия в пакете конфигураций для синхронизации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._hasCancelledConfigurations">
            <summary>
            Индикатор наличия в пакете конфигураций для синхронизации, изменения в которых были отменены в соответствии с режимом импорта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader._expectedFrameWorkVersion">
            <summary>
            Ожидаемая минимальная версия фреймворка, при которой возможен импорт всех конфигурации пакета
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.SaveAll">
            <summary>
            Выполняет импорт пакета с полным сохранением 
            </summary>
            <returns>true, если что-либо было изменено</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.CreateObjects(ProgramSoyuz.DataModel.ImportPacketPhaseEnum)">
            <summary>
            Создание объектов по данным из пакета для последующего сохранения.
            </summary>
            <param name="importPhase">Фаза сохранения объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.CreateObjects(ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ObjectsByGlobalIdentifier{ProgramSoyuz.DataModel.DataObject})">
            <summary>
            Создание объектов по данным из пакета для последующего сохранения.
            </summary>
            <param name="importPhase">Фаза сохранения объектов</param>
            <param name="existingObjects">Индекс существующих объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.CreateObjectsByEntity(ProgramSoyuz.DataModel.EntityIdentifier,System.Collections.Generic.IEnumerable{ProgramSoyuz.DataModel.ObjectPackDataBase},ProgramSoyuz.DataModel.ObjectsByGlobalIdentifier{ProgramSoyuz.DataModel.DataObject},ProgramSoyuz.DataModel.ImportPacketPhaseEnum)">
            <summary>
            Создает и инициализирует объекты указанной сущности по данным из пакета
            </summary>
            <param name="entity">Тип сущности создаваемых объектов </param>
            <param name="objectData">Данные из пакета для инициализации объектов</param>
            <param name="existingObjects">Индекс существующих объектов</param>
            <param name="importPhase">Фаза сохранения объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.MergeRegItems">
            <summary>
            Склеивание элементов реестра по идентичным путям
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.MergeObjects``1(ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
            Склеивание шаблонов по идентичным путям
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.IsEntityMatchesPhase(ProgramSoyuz.DataModel.EntityIdentifier,ProgramSoyuz.DataModel.ImportPacketPhaseEnum)">
            <summary>
            Возвращает true если тип сущности подходит для обработки на данной фазе
            </summary>
            <param name="entity">Тип сущности</param>
            <param name="importPhase">Фаза сохранения объектов</param>
            <returns>true если объект обрабатывается на указанной фазе импорта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.GetTrashConfiguration">
            <summary>
            Возвращает объект конфигурации для перемещения в нее неудаляемых объектов
            </summary>
            <returns>Объект конфигурации новый или уже имеющийся</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.DoSmartSaveChanges">
            <summary>
            Сохраняет изменения, отделив цдаляемые объектв во вторую фазу. 
            Если удалить не получилось, переносит их в "мусорную" конфигурацию
            </summary>
            <returns>true, если была задействована "мусорная" конфигурация</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.HasUnsupportedConfigurations">
            <summary>
            Возвращает true если в пакете есть конфигурации, не подлежащие импорту по причине старой версии платформы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.PackData">
            <summary>
            Десериализованный пакет конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.CustomData">
            <summary>
            Пользовательские данные сохраненные в пакете
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.ImportFlags">
            <summary>
            Набор флагов с которыми происходит импортирование данных.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.IsImportSkinOnly">
            <summary>
            Возвращает true, если происходит импорт лишь оформления
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.CurrentImportPhase">
            <summary>
            Текущая фаза импорта для метода <see cref="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.SaveAll"/>
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.UpdateIfNewerMode">
            <summary>
            Режим обновления конфигураций (только более новые обновляются)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.UpdateLocalSystemItems">
            <summary>
            Если true то элементы локальной системы не сохраняются (обновляются импортируемыми значениями)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.HasConfigurationsToSynchronize">
            <summary>
            Индикатор наличия в пакете конфигураций для синхронизации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.HasCancelledConfigurations">
            <summary>
            Индикатор наличия в пакете конфигураций для синхронизации, изменения в которых были отменены в соответствии с режимом импорта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.PackFilePath">
            <summary>
            Путь к пакету (если известен)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.ExpectedFrameWorkVersion">
            <summary>
            Ожидаемая минимальная версия фреймворка, при которой возможен импорт всех конфигурации пакета
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationPackReader.ReadTimeExceptions">
            <summary>
            Список исключений, полученных при прочтении пакета
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision">
            <summary>
            Ревизия диаграммы процесса.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision._Owner">
            <summary>
            Объект-владелец данной ревизии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision._RealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.CreateWrapper(ProgramSoyuz.DataModel.DataObjects.WorkItems.TaskDiagramRevisionBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="revision">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.#ctor(ProgramSoyuz.PLM.Scripting.TaskDiagram,ProgramSoyuz.DataModel.DataObjects.WorkItems.TaskDiagramRevisionBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="owner">Объект-владелец данной ревизии</param>
            <param name="revision">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.Erase">
            <summary>
            Удаление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.RealObject">
            <summary>
            Доступ к атрибутируемому "реальному" объекту. 
            Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.Owner">
            <summary>
            Ссылка на объект-владелец этой ревизии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.Number">
            <summary>
            Номер ревизии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.DateCreated">
            <summary>
            Локальное дата/время фиксации ревизии объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.CreatedByUser">
            <summary>
            Идентификатор пользователя, создавшего этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramRevision.HasInstances">
            <summary>
            true если по этой ревизии были созданы экземпляры процессов
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImportExport.RoleExporter">
            <summary>
            Вспомогательный класс для экспорта ролей в пакет
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.RoleExporter.m_TargetRoles">
            <summary>
            Список ролей, добавляемых в пакет целиком
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RoleExporter.Add(ProgramSoyuz.PLM.Scripting.Role,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Добавляет в пакет указанную роль
            </summary>
            <param name="role">Добавляемая роль</param>
            <param name="withAncestors">true если следует добавить все родительские объекты</param>
            <param name="withChildren">true если следует включить дочерние объекты</param>
            <param name="withRelatedObjects">true если следует включить в пакет прочие объекты с неустановленной конфигурацией</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RoleExporter.Add(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Role},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Добавляет в пакет указанные роли
            </summary>
            <param name="roles">Добавляемые роли</param>
            <param name="withAncestors">true если следует добавить все родительские объекты</param>
            <param name="withChildren">true если следует включить дочерние объекты</param>
            <param name="withRelatedObjects">true если следует включить в пакет прочие объекты с неустановленной конфигурацией</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RoleExporter.CalcObjectsToExport(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Role},System.Boolean,System.Boolean)">
            <summary>
            Формирует набор объектов, подлежащих экспорту
            </summary>
            <param name = "roles">Добавляемые объекты</param>
            <param name = "withAncestors">true если следует добавить все родительские объекты</param>
            <param name = "withChildren">true если следует добавить всю ветвь дочерних объектов по прямому наследованию</param>
            <returns>Множество объектов для экспорта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RoleExporter.AddRole(ProgramSoyuz.PLM.Scripting.Role,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Добавляет объекты в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="additionQueue">Очередь для объектов на добавление в пакет</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RoleExporter.AddGenericObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject},System.Boolean)">
            <summary>
            Добавляет объекты в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="additionQueue">Очередь для объектов на добавление в пакет</param>
            <param name="withRelatedObjects">true если следует включить в пакет образующие объекты, не включенные в конфигурацию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RoleExporter.AddObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Добавляет объект в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="withRelatedObjects">true если следует включить в пакет прочие объекты с неустановленной конфигурацией</param>
            <returns>Возвращает true, если объект добавлен в пакет, false, если добавлен только линк</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.RoleExporter.TargetRoles">
            <summary>
            Список ролей, добавляемых в пакет целиком
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationExporter">
            <summary>
              Вспомогательный класс для экспорта содержимого конфигураций в пакет
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationExporter._importFlags">
            <summary>
            Флаги определяющие, какие данные объектов копировать (данные или скин)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationExporter.#ctor(ProgramSoyuz.DataModel.ConfigurationImportFlags)">
            <summary>
            Конструктор
            </summary>
            <param name="importFlags">Флаги определяющие, какие данные объектов копировать (данные или скин)</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationExporter.m_TargetConfigurations">
            <summary>
              Список конфигураций, объекты которых добавляются в пакет целиком
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationExporter.Add(ProgramSoyuz.PLM.Scripting.Configuration,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
              Добавляет в пакет указанную конфигурацию или подветвь конфигураций вместе
              со всеми относящимися к ней объектами
            </summary>
            <param name = "configuration">Добавляемая конфигурация</param>
            <param name = "withAncestors">true если следует добавить все объекты родительских конфигураций</param>
            <param name = "withChildren">true если следует добавить всю ветвь конфигураций по прямому наследованию</param>
            <param name = "withRelatedObjects">true если следует включить в пакет образующие объекты, не включенные в конфигурацию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationExporter.Add(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Configuration},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
              Добавляет в пакет указанные конфигурации или подветви конфигураций вместе
              со всеми относящимися к ним объектами
            </summary>
            <param name = "configurations">Добавляемые конфигурации</param>
            <param name = "withAncestors">true если следует добавить все объекты родительских конфигураций</param>
            <param name = "withChildren">true если следует добавить всю ветвь конфигураций по прямому наследованию</param>
            <param name = "withRelatedObjects">true если следует включить в пакет образующие объекты, не включенные в конфигурацию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationExporter.CalcConfigurationsToExport(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.Configuration},System.Boolean,System.Boolean)">
            <summary>
            Формирует набор конфигураций, подлежащих экспорту
            </summary>
            <param name = "configurations">Добавляемые конфигурации</param>
            <param name = "withAncestors">true если следует добавить все объекты родительских конфигураций</param>
            <param name = "withChildren">true если следует добавить всю ветвь конфигураций по прямому наследованию</param>
            <returns>Множество конфигураций</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationExporter.AddConfiguration(ProgramSoyuz.PLM.Scripting.Configuration,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject},System.Boolean)">
            <summary>
              Добавляет объекты в пакет.
            </summary>
            <param name = "obj">Объект для добавления в пакет</param>
            <param name = "additionQueue">Очередь для объектов на добавление в пакет</param>
            <param name = "withRelatedObjects">true если следует включить в пакет образующие объекты, не включенные в конфигурацию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationExporter.AddGenericObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject},System.Boolean)">
            <summary>
              Добавляет объекты в пакет.
            </summary>
            <param name = "obj">Объект для добавления в пакет</param>
            <param name = "additionQueue">Очередь для объектов на добавление в пакет</param>
            <param name = "withRelatedObjects">true если следует включить в пакет образующие объекты, не включенные в конфигурацию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationExporter.AddObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
              Добавляет объект в пакет.
            </summary>
            <param name = "obj">Объект для добавления в пакет</param>
            <param name = "withRelatedObjects">true если следует включить в пакет образующие объекты, не включенные в конфигурацию</param>
            <returns>Возвращает true, если объект добавлен в пакет, false, если добавлен только линк</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.ConfigurationExporter.TargetConfigurations">
            <summary>
              Список конфигураций, объекты которых добавляются в пакет целиком
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchTemplateFilterItem">
            <summary>
            Класс для уточнения шаблона для дочерних элементов поискового запроса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTemplateFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTemplateFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTemplateFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTemplateFilterItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchTemplateFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTemplateFilterItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTemplateFilterItem.GenerateCode(System.Text.StringBuilder,System.String,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по созданию данного элемента. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="parentItemName">Имя родительского элемента (может быть null)</param>
            <param name="offset">Текущий сдвиг кода в табах</param>
            <param name="usedTemplates"></param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchTemplateFilterItem.FilterByTemplate">
            <summary>
            Шаблон,применяемый в дочерние элементах
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchTemplateFilterItem.IncludeInherited">
            <summary>
            Возвращает true если ищем ИО указанного шаблона и дочерних шаблонов
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation">
            <summary>
            Класс для хранения состояния при асинхронном вызове Invoke-операций
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation._nextOperationId">
            <summary>
            Счетчик запросов для генерации идентификаторов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.GetNextOperationId">
            <summary>
            Возвращает очередной идентификатор запроса к серверу
            </summary>
            <returns></returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.PendingOperations">
            <summary>
            Список запросов к внешнему серверу, ожидающих получения ответа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation._operationId">
            <summary>
            Идентификатор операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation._callback">
            <summary>
            Обработчик, который будет вызван по готовности
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation._availableEvent">
            <summary>
            Событие, которое будет установлено по готовности
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation._maxTimeout">
            <summary>
            Максимальное время ожидания ответа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation._creationTicks">
            <summary>
            Тики на момент создания операции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation._methodName">
            <summary>
            Имя запроса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation._data">
            <summary>
            Данные запроса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation._target">
            <summary>
            Объект, обозначающий место выполнения запроса
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.DefaultMaxTimeout">
            <summary>
            Интервал времени, при превышении которого асинхронный вызов сбрасывается с исключением
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.#ctor(System.String,System.Object)">
            <summary>
            Конструктор (с ожиданием по <see cref="P:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.AvailableEvent"/>)
            </summary>
            <param name="methodName">Имя запроса</param>
            <param name="data">Данные запроса</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.#ctor(System.String,System.Object,System.Int32)">
            <summary>
            Конструктор (с ожиданием по <see cref="P:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.AvailableEvent"/>)
            </summary>
            <param name="methodName">Имя запроса</param>
            <param name="data">Данные запроса</param>
            <param name="maxTimeout">Максимальное время ожидания (ms)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.#ctor(System.String,System.Object,System.Action{ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation})">
            <summary>
            Конструктор (с обратным вызовом по завершению)
            </summary>
            <param name="methodName">Имя запроса</param>
            <param name="data">Данные запроса</param>
            <param name="callback">Обработчик, который будет вызван по готовности</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.#ctor(System.String,System.Object,System.Action{ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation},System.Int32)">
            <summary>
            Конструктор (с обратным вызовом по завершению)
            </summary>
            <param name="methodName">Имя запроса</param>
            <param name="data">Данные запроса</param>
            <param name="callback">Обработчик, который будет вызван по готовности</param>
            <param name="maxTimeout">Максимальное время ожидания (ms)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.InvokeOn(ProgramSoyuz.PLM.Scripting.UserSession)">
            <summary>
            Вызов запроса на клиентском рабочем месте указанной сессии
            </summary>
            <param name="session">Клиентская сессия, которая выполнит запрос</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.InvokeOn(ProgramSoyuz.PLM.Scripting.ExternalServer)">
            <summary>
            Вызов запроса на внешнем сервере
            </summary>
            <param name="server">Внешний сервер, которому будет передан запрос</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.InvokeOnServer">
            <summary>
            Вызов запроса на основном "родном" сервере
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.InvokeOnServer(ProgramSoyuz.PLM.Scripting.ScriptingTask)">
            <summary>
            Вызов скриптового действия на основном "родном" сервере
            </summary>
            <param name="task">Скриптовая задача, которая должна быть выполнена на сервере</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.InvokeOnServer(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Вызов метода шаблона на основном "родном" сервере
            </summary>
            <param name="template">Шаблон, чей метод будет вызван на сервере</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.InvokeOnServer(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Вызов экземплярного метода шаблона на основном "родном" сервере
            </summary>
            <param name="target">Экземпляр объекта, с которым на сервере будет вызван метод</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.OnCompleted(System.Object,System.Exception)">
            <summary>
            Вызывается при получении результата запроса внешнего сервера
            </summary>
            <param name="result">Результат запроса</param>
            <param name="resultException">Исключение при обработке запроса</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.IsTimeoutExpired(System.Int32)">
            <summary>
            Возвращает true если выполнение задачи превысило отведённый интервал времени
            </summary>
            <param name="ticks">Текущее время в тиках</param>
            <returns>true если ответа нет слишком долго</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.ToString">
            <summary>
            Строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.Result">
            <summary>
            Результат работы метода
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.ResultException">
            <summary>
            Результат работы метода (исключение)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.IsCompleted">
            <summary>
            True если операция завершена
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.Id">
            <summary>
            Идентификатор операции внешнего сервера
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.CreationTicks">
            <summary>
            Тики на момент создания операции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.AvailableEvent">
            <summary>
            Событие, которое будет установлено по готовности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.MethodName">
            <summary>
            Имя запроса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.Data">
            <summary>
            Данные запроса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.Target">
            <summary>
            Объект, обозначающий место выполнения запроса
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.AsyncInvokeOperation.MaxTimeout">
            <summary>
            Максимальное время ожидания ответа
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ApplicationInfo">
            <summary>
            Сведения о продукте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ApplicationInfo.NullImage">
            <summary>
            Пустая картинка для обозначения отсутствующего изображения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ApplicationInfo._realObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ApplicationInfo.#ctor(ProgramSoyuz.DataModel.ProductInfo)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="data">Сокетное соединение</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ApplicationInfo.m_ProductIcon">
            <summary>
            Иконка продукта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ApplicationInfo.m_IconCached">
            <summary>
            Флаг установлен, если попытка прочитать иконку уже была выполнена
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ApplicationInfo.m_Images">
            <summary>
            Набор изображений продукта (логотипы и пр.)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ApplicationInfo.GetImage(ProgramSoyuz.DataModel.ProductInfo.ImageKindEnum)">
            <summary>
            Возвращает изображение продукта указанного типа
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ApplicationInfo._productLicense">
            <summary>
            Лицензия на продукт
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ApplicationInfo.GetLicenseInfo(System.String)">
            <summary>
            Возвращает сведения об указанной лицензии 
            </summary>
            <param name="key">"Product", "Framework" и т.д.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ApplicationInfo.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.ProductId">
            <summary>
            Идентификатор продукта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.ShortName">
            <summary>
            Короткое название продукта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.FullName">
            <summary>
            Полное название продукта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.Designation">
            <summary>
            Обозначение продукта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.Copyright">
            <summary>
            Владелец копирайта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.DevelopedBy">
            <summary>
            Разработчик продукта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.LicenseForFramework">
            <summary>
            На кого лицензирован фреймворк
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.SupportMail">
            <summary>
            Почтовый адрес поддержки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.WebURL">
            <summary>
            URL сайта программы
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.Description">
            <summary>
            Текст о программе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.Params">
            <summary>
            Дополнительные параметры (для использования в коде конфигурации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.ProductIcon">
            <summary>
            Иконка продукта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ApplicationInfo.LicenseForProduct">
            <summary>
            Лицензия на продукт
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Strings.Errors">
            <summary>
              Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Strings.Errors.ResourceManager">
            <summary>
              Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Strings.Errors.Culture">
            <summary>
              Перезаписывает свойство CurrentUICulture текущего потока для всех
              обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Strings.Errors.WrongTemplateKindForThisObject">
            <summary>
              Ищет локализованную строку, похожую на Тип шаблона не соответствует объекту.
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.RtfFormatter">
            <summary>
            Вспомогательный класс для формирования RTF текста
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Clear">
            <summary>
            Сбрасывает содержимое
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.SetFirstLineIndent(System.Single)">
            <summary>
            Задает отступ первой строки параграфа слева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.SetLeftIndent(System.Single)">
            <summary>
            Задает отступ строк параграфа слева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.SetRightIndent(System.Single)">
            <summary>
            Задает отступ строк параграфа справа
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.SetAlignment(ProgramSoyuz.PLM.Scripting.RtfFormatter.ParagraphAlignment)">
            <summary>
            Задает выравнивание абзаца
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.NewParagraph">
            <summary>
            Новый абзац
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.ResetParagraphProperties">
            <summary>
            Сбрасывает св-ва абзаца в значения по умолчанию. При использовании настроек абзаца с этого метода надо начинать.
            Конец абзаца должен быть отмечен тэгом <see cref="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.NewParagraph"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendRaw(System.String)">
            <summary>
            Добавляет указанный текст as is в буфер форматирования
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendLine">
            <summary>
            Добавляет перевод строки
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(System.String)">
            <summary>
            Добавляет указанный текст
            </summary>
            <param name="text">Текст</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendFormat(System.String,System.Object[])">
            <summary>
            Добавляет строку с использованием форматирования <see cref="M:System.String.Format(System.String,System.Object[])"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(System.String,System.Drawing.Color)">
            <summary>
            Добавляет указанный текст нужного цвета
            </summary>
            <param name="text">Текст</param>
            <param name="color">Цвет</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(System.String,System.Drawing.FontStyle)">
            <summary>
            Добавляет указанный текст нужного стиля
            </summary>
            <param name="text">Текст</param>
            <param name="fontStyle">Стиль шрифта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(System.String,System.Drawing.Color,System.Drawing.FontStyle)">
            <summary>
            Добавляет указанный текст нужного цвета и стиля
            </summary>
            <param name="text">Текст</param>
            <param name="color">Цвет текста</param>
            <param name="fontStyle">Стиль шрифта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.FontStyle)">
            <summary>
            Добавляет указанный текст нужного цвета и стиля
            </summary>
            <param name="text">Текст</param>
            <param name="color">Цвет текста</param>
            <param name="background">Цвет фона</param>
            <param name="fontStyle">Стиль шрифта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendSub(System.String)">
            <summary>
            Добавляет указанный subscript текст нужного цвета и стиля
            </summary>
            <param name="text">Текст</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendSub(System.String,System.Drawing.FontStyle)">
            <summary>
            Добавляет указанный subscript текст нужного цвета и стиля
            </summary>
            <param name="text">Текст</param>
            <param name="fontStyle">Стиль шрифта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendSub(System.String,System.Drawing.Color)">
            <summary>
            Добавляет указанный subscript текст нужного цвета и стиля
            </summary>
            <param name="text">Текст</param>
            <param name="color">Цвет текста</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendSub(System.String,System.Drawing.Color,System.Drawing.FontStyle)">
            <summary>
            Добавляет указанный subscript текст нужного цвета и стиля
            </summary>
            <param name="text">Текст</param>
            <param name="color">Цвет текста</param>
            <param name="fontStyle">Стиль шрифта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendSub(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.FontStyle)">
            <summary>
            Добавляет указанный subscript текст нужного цвета и стиля
            </summary>
            <param name="text">Текст</param>
            <param name="color">Цвет текста</param>
            <param name="background">Цвет фона</param>
            <param name="fontStyle">Стиль шрифта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendSuper(System.String)">
            <summary>
            Добавляет указанный superscript текст нужного цвета и стиля
            </summary>
            <param name="text">Текст</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendSuper(System.String,System.Drawing.FontStyle)">
            <summary>
            Добавляет указанный superscript текст нужного цвета и стиля
            </summary>
            <param name="text">Текст</param>
            <param name="fontStyle">Стиль шрифта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendSuper(System.String,System.Drawing.Color)">
            <summary>
            Добавляет указанный superscript текст нужного цвета и стиля
            </summary>
            <param name="text">Текст</param>
            <param name="color">Цвет текста</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendSuper(System.String,System.Drawing.Color,System.Drawing.FontStyle)">
            <summary>
            Добавляет указанный superscript текст нужного цвета и стиля
            </summary>
            <param name="text">Текст</param>
            <param name="color">Цвет текста</param>
            <param name="fontStyle">Стиль шрифта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendSuper(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.FontStyle)">
            <summary>
            Добавляет указанный superscript текст нужного цвета и стиля
            </summary>
            <param name="text">Текст</param>
            <param name="color">Цвет текста</param>
            <param name="background">Цвет фона</param>
            <param name="fontStyle">Стиль шрифта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(ProgramSoyuz.DataModel.IStrictlyNamedObject)">
            <summary>
            Добавляет гиперссылку на указанный объект, используя цвет и стиль шрифта по умолчанию
            </summary>
            <param name="target">Целевой объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(ProgramSoyuz.DataModel.IStrictlyNamedObject,System.Boolean)">
            <summary>
            Добавляет гиперссылку на указанный объект, используя цвет и стиль шрифта по умолчанию
            </summary>
            <param name="target">Целевой объект</param>
            <param name="withImage">Показывать ли иконку целевого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String)">
            <summary>
            Добавляет гиперссылку на указанный объект, используя цвет и стиль шрифта по умолчанию
            </summary>
            <param name="target">Целевой объект</param>
            <param name="visibleText">Отображаемый текст гиперссылки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String,System.Boolean)">
            <summary>
            Добавляет гиперссылку на указанный объект, используя цвет и стиль шрифта по умолчанию
            </summary>
            <param name="target">Целевой объект</param>
            <param name="visibleText">Отображаемый текст гиперссылки</param>
            <param name="withImage">Показывать ли иконку целевого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String,System.Drawing.Color,System.Drawing.FontStyle)">
            <summary>
            Добавляет гиперссылку на объект, используя указанный цвет и стиль шрифта
            </summary>
            <param name="target">Целевой объект</param>
            <param name="visibleText">Отображаемый текст гиперссылки</param>
            <param name="color">Цвет</param>
            <param name="fontStyle">Стиль шрифта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(ProgramSoyuz.DataModel.IStrictlyNamedObject,System.String,System.Drawing.Color,System.Drawing.FontStyle,System.Boolean)">
            <summary>
            Добавляет гиперссылку на объект, используя указанный цвет и стиль шрифта
            </summary>
            <param name="target">Целевой объект</param>
            <param name="visibleText">Отображаемый текст гиперссылки</param>
            <param name="color">Цвет</param>
            <param name="fontStyle">Стиль шрифта</param>
            <param name="withImage">Показывать ли иконку целевого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(ProgramSoyuz.DataModel.DataObjectIdentifier,System.String)">
            <summary>
            Добавляет гиперссылку на объект, используя указанный цвет и стиль шрифта
            </summary>
            <param name="target">Целевой объект</param>
            <param name="visibleText">Отображаемый текст гиперссылки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(ProgramSoyuz.DataModel.DataObjectIdentifier,System.String,System.Boolean)">
            <summary>
            Добавляет гиперссылку на объект, используя указанный цвет и стиль шрифта
            </summary>
            <param name="target">Целевой объект</param>
            <param name="visibleText">Отображаемый текст гиперссылки</param>
            <param name="withImage">Показывать ли иконку целевого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendImage(ProgramSoyuz.DataModel.DataObjectIdentifier)">
            <summary>
            Добавляет иконку объекта
            </summary>
            <param name="target">Целевой объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendImage(ProgramSoyuz.DataModel.DataObjectIdentifier,System.Boolean)">
            <summary>
            Добавляет иконку объекта
            </summary>
            <param name="target">Целевой объект</param>
            <param name="compound">Показывать ли только основную иконку или с доп. иконками</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendImage(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Добавляет иконку объекта
            </summary>
            <param name="target">Целевой объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.AppendImage(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Добавляет иконку объекта
            </summary>
            <param name="target">Целевой объект</param>
            <param name="compound">Показывать ли только основную иконку или с доп. иконками</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(ProgramSoyuz.DataModel.DataObjectIdentifier,System.String,System.Drawing.Color,System.Drawing.FontStyle)">
            <summary>
            Добавляет гиперссылку на объект, используя указанный цвет и стиль шрифта
            </summary>
            <param name="target">Целевой объект</param>
            <param name="visibleText">Отображаемый текст гиперссылки</param>
            <param name="color">Цвет</param>
            <param name="fontStyle">Стиль шрифта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(ProgramSoyuz.DataModel.DataObjectIdentifier,System.String,System.Drawing.Color,System.Drawing.FontStyle,System.Boolean)">
            <summary>
            Добавляет гиперссылку на объект, используя указанный цвет и стиль шрифта
            </summary>
            <param name="target">Целевой объект</param>
            <param name="visibleText">Отображаемый текст гиперссылки</param>
            <param name="color">Цвет</param>
            <param name="fontStyle">Стиль шрифта</param>
            <param name="withImage">Показывать ли иконку целевого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.String,System.Drawing.Color,System.Drawing.FontStyle,System.Boolean)">
            <summary>
            Добавляет гиперссылку на объект, используя указанный цвет и стиль шрифта
            </summary>
            <param name="target">Целевой объект</param>
            <param name="visibleText">Отображаемый текст гиперссылки</param>
            <param name="color">Цвет</param>
            <param name="fontStyle">Стиль шрифта</param>
            <param name="withImage">Показывать ли иконку целевого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(System.String,System.String)">
            <summary>
            Добавляет гиперссылку на указанный объект, используя цвет и стиль шрифта по умолчанию
            </summary>
            <param name="targetURL">Целевая ссылка в виде URL</param>
            <param name="visibleText">Отображаемый текст гиперссылки</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Append(System.String,System.String,System.Drawing.Color,System.Drawing.FontStyle)">
            <summary>
            Добавляет гиперссылку на объект, используя указанный цвет и стиль шрифта
            </summary>
            <param name="targetURL">Целевая ссылка в виде URL</param>
            <param name="visibleText">Отображаемый текст гиперссылки</param>
            <param name="color">Цвет</param>
            <param name="fontStyle">Стиль шрифта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Write(System.String)">
            <summary>
            Добавляет указанный текст
            </summary>
            <param name="text">Текст</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Write(System.String,System.Drawing.Color)">
            <summary>
            Добавляет указанный текст нужного цвета
            </summary>
            <param name="text">Текст</param>
            <param name="color">Цвет</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Write(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Добавляет гиперссылку на указанный объект, используя цвет и стиль шрифта по умолчанию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Write(ProgramSoyuz.DataModel.DataObject,System.Boolean)">
            <summary>
            Добавляет гиперссылку на указанный объект, используя цвет и стиль шрифта по умолчанию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Write(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Добавляет гиперссылку на указанный объект, используя цвет и стиль шрифта по умолчанию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.Write(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Добавляет гиперссылку на указанный объект, используя цвет и стиль шрифта по умолчанию
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.ToString">
            <summary>
            Возвращает сформированный RTF текст
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.EscapeRtf(System.String,System.Text.StringBuilder)">
            <summary>
            Добавляет преобразованный в RTF текст в указанный билдер
            </summary>
            <param name="plainText">Исходный текст</param>
            <param name="sb">Текст билдер, принимающий подготовленный к RTF текст</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.EscapeRtf(System.String)">
            <summary>
            Преобразует обычный текст в RTF вид
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.EscapeUrl(System.String)">
            <summary>
            Преобразует URL для использования в HYPERLINK
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.GetBitmapRtf(System.Drawing.Image)">
            <summary>
            Преобразует битмап в соответствующий RTF
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.GetBitmapRtf(System.Drawing.Image,System.Text.StringBuilder)">
            <summary>
            Преобразует битмап в соответствующий RTF
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.GetColorIndex(System.Drawing.Color)">
            <summary>
            Возвращает индекс указанного цвета (при необходимости добавляет цвет в таблицу цветов использованных в RTF)
            </summary>
            <param name="color">Цвет</param>
            <returns>Индекс в таблице цветов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.RtfFormatter.IsRTF(System.String)">
            <summary>
            Возвращает true, если переданный текст является RTF текстом ( начинается с {\\rtf1 )
            </summary>
            <param name="text">Проверяемый текст</param>
            <returns>true, если текст является RTF текстом</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RtfFormatter.IsEmpty">
            <summary>
            Возвращает true если объект пустой
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RtfFormatter.CurrentSize">
            <summary>
            Число символов, сохраненных в виде RTF (не включая заголовок и прочие атрибуты внешнего обрамления RTF формата) 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.RtfFormatter.DefaultLinkColor">
            <summary>
            Цвет гиперссылки по умолчанию
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.RtfFormatter.ParagraphAlignment">
            <summary>
            Выравнивание абзаца
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.DiagramRenderer">
            <summary>
            Рендер диаграммы со стилем просмотровщика
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Diagram.RemoveShape(ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Shape)">
            <summary>
            Удаляет этап с диаграммы и шаблона
            </summary>
            <param name="shape">Этап</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Diagram.UnbindAll">
            <summary>
            Отписывает этапы и соединения от событий и ссылок, и удаляет их из памяти
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Diagram.UnbindShape(ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Shape)">
            <summary>
            Отписывает этап от событий и ссылок, и удаляет этап из памяти
            </summary>
            <param name="shape">Этап</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Diagram.UnbindConnection(ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Connection)">
            <summary>
            Отписывает соединение от событий и ссылок, и удаляет соединени из памяти
            </summary>
            <param name="connection">Соединение</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Diagram.CreateTaskShape(ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Создает этап подзадачи
            </summary>
            <param name="node">Этап ядра</param>
            <returns>Этап</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Diagram.CreateNode(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Создает скриптовой объект этапа подзадачи <see cref="T:ProgramSoyuz.PLM.Scripting.TaskDiagramNode"/> для текущей диаграммы
            </summary>
            <param name="template">Шаблон подзадачи</param>
            <returns>Новый скриптовой объект этапа подзадачи</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Diagram.CreateNode(ProgramSoyuz.DataModel.TaskDiagramNodeBase.KindEnum)">
            <summary>
            Создает скриптовой объект этапа <see cref="T:ProgramSoyuz.PLM.Scripting.TaskDiagramNode"/> для текущей диаграммы
            </summary>
            <param name="kind">Тип объекта</param>
            <returns>Новый скриптовой объект этапа</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Diagram.CreateLink(ProgramSoyuz.PLM.Scripting.TaskDiagramNode,ProgramSoyuz.PLM.Scripting.TaskDiagramNode)">
            <summary>
            Создает скриптовой объект связи <see cref="T:ProgramSoyuz.PLM.Scripting.TaskDiagramLink"/> для текущей диаграммы
            </summary>
            <param name="startNode">Начальный этап</param>
            <param name="endNode">Конечный этап</param>
            <returns>Новый скриптовой объект связи</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Diagram.Load">
            <summary>
            Загружает диаграмму, предварительно удалив старые этапы и связи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Diagram.TaskDiagram">
            <summary>
            Ссылка на диаграмму
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.Diagram.IsAdvancedDiagramAutoLinkType">
            <summary>
            Если бит установлен, то метод PreAnalyzeGraph использует более интеллектуальный алгоритм вбыора типа связи
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeExternalServer.DoInvoke(ProgramSoyuz.PLM.Scripting.ExternalServer,System.String,System.Object,System.Exception@)">
            <summary>
            Запрос на выполнение операции внешним сервером
            </summary>
            <param name="server">Сервер, вызвавший метод</param>
            <param name="method">Имя запроса</param>
            <param name="data">Данные запроса</param>
            <param name="exception">На выходе возможное исключение при обработке запроса</param>
            <returns>Результат выполнения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeExternalServer.Invoke(ProgramSoyuz.PLM.Scripting.ExternalServer,System.String,System.Object,System.Object@)">
            <summary>
            Вызывает имеющиеся обработчики запросов к внешнему серверу
            </summary>
            <returns>true если обработчик нашелся и выполнил, что хотел</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeExternalServer.OnBeforeInvoke(ProgramSoyuz.PLM.Scripting.ExternalServer,ProgramSoyuz.PLM.Scripting.UserSession,System.String,System.Object)">
            <summary>
            Вызывает имеющиеся предварительные обработчики перед отправкой запроса внешнему серверу. Вызывается на локальном сервере
            </summary>
            <returns>true если обработчик нашелся и выполнил, что хотел</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeExternalServer.OnAfterInvoke(ProgramSoyuz.PLM.Scripting.ExternalServer,ProgramSoyuz.PLM.Scripting.UserSession,System.String,System.Object,System.Object@)">
            <summary>
            Вызывает имеющиеся обработчики запросов к внешнему серверу
            </summary>
            <returns>true если обработчик нашелся и выполнил, что хотел</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SubItemAttribute">
            <summary>
            Атрибут элемента коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.CreateCalculatedAttribute(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Создает экземпляр вычисленного атрибута
            </summary>
            <param name="nameKey">Ключ запрошенного атрибута</param>
            <param name="dataType">Тип запрошенного атрибута</param>
            <returns>Возвращает инициализированный экземпляр объекта для использования в качестве вычесленного атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.#ctor(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="nameKey">Ключ запрошенного атрибута</param>
            <param name="dataType">Тип запрошенного атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.#ctor(ProgramSoyuz.PLM.Scripting.CollectionElement,ProgramSoyuz.DataModel.AttributeBase,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="owner">Атрибутируемый объект-владелец данного атрибута</param>
            <param name="attribute">Реальный объект</param>
            <param name="attributeDef">Определение атрибута (если известно на момент создания объекта)</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.#ctor(ProgramSoyuz.PLM.Scripting.CollectionElement,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="owner">Атрибутируемый объект-владелец данного атрибута</param>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.#ctor(ProgramSoyuz.PLM.Scripting.CollectionElement,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="owner">Атрибутируемый объект-владелец данного атрибута</param>
            <param name="attributeDef">Определение атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.OnChildModified(ProgramSoyuz.PLM.Scripting.CollectionElement,System.Boolean,System.Boolean)">
            <summary>
            Добавляет указанный элемент к списку изменненных и оповещает родителя о том, что 
            произошло изменение.
            Вызывается в случае изменения кого-либо из дочерних сущностей
            </summary>
            <param name="collectionElement">Дочерний элемент коллекции</param>
            <param name="sendNotifications">Если true, то производится рассылка уведомление NotifyPropertyChanged с обновлением UI</param>
            <param name="isAuxilaryChange">Изменение порождено вспомогательным атрибутом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.OnChildModified(ProgramSoyuz.PLM.Scripting.AttributeValue,System.Boolean)">
            <summary>
            Вызывается ребенком в случае изменения кого-либо из его дочерних сущностей
            </summary>
            <param name="value">Дочернее значение атрибута</param>
            <param name="sendNotifications"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.OnModified(System.Boolean,System.Boolean)">
            <summary>
            Вызывается сеттерами свойств этого объекта при изменении объекта
            </summary>
            <param name="sendNotifications"></param>
            <param name="isAuxilaryChange"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.NotifyPropertyChanged(System.Boolean)">
            <summary>
            Сообщает владельцу о необходимости обновить UI
            </summary>
            <param name="fullNotification">Если true, то происходит вызов метода кастомизации</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.OnErrorTextModified">
            <summary>
            Вызывается при изменении текста ошибки для данного атрибута
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.RefreshUI">
            <summary>
            Рассылка уведомления о необходимости обновить элемент пользовательского интерфейса, отображающий данный атрибут
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.OnChildCancelled(ProgramSoyuz.PLM.Scripting.CollectionElement,System.Boolean,System.Boolean)">
            <summary>
            Вызывается ребенком в случае отмены его изменения или создания
            </summary>
            <param name="collectionElement">Дочерний элемент коллекции</param>
            <param name="sendNotifications">Если true, то производится рассылка уведомление NotifyPropertyChanged с обновлением UI</param>
            <param name="isAuxilaryChange">Изменение порождено вспомогательным атрибутом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.OnChildCancelled(ProgramSoyuz.PLM.Scripting.AttributeValue,System.Boolean)">
            <summary>
            Вызывается ребенком в случае отмены его изменения или создания
            </summary>
            <param name="value">Дочернее значение атрибута</param>
            <param name="sendNotifications">Если true, то производится рассылка уведомление NotifyPropertyChanged с обновлением UI</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.Erase">
            <summary>
            Удаление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.DoRawCancelChanges(System.Boolean)">
            <summary>
            Возвращает объект в начальное состояние
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.Validate">
            <summary>
            Проверяет значение атрибута на валидность
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.NotifyPropertyBeforeChange(System.Object,System.String@)">
            <summary>
            Рассылка нотификации о назревающем изменении
            </summary>
            <param name="newValue">Новое значение</param>
            <param name="errorText">Сообщение об ошибке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.IsReadOnlyInUI">
            <summary>
            Вычисляет является ли данный атрибут доступным только для чтения для данного объекта (или элемента коллекции).
            Вызывается код кастомизации.
            </summary>
            <returns>true означает только для чтения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.IsHiddenInUI">
            <summary>
              Вычисляет является ли данный атрибут скрытым для данного объекта (или элемента коллекции) в текущем окружениии
            </summary>
            <returns>true означает только для чтения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.CanConvertInput(System.Object)">
            <summary>
            Вызывает обработчики CanConvertInput из кода кастомизации.
            </summary>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <returns>true, если значение <paramref name="newValue"/> пригодно для атрибута, false если не пригодно</returns>
            <remarks>Вызывается на клиенте для проверки пригодности значения для присваивания атрибуту.
            Используется для проверки возможности операции вставки из буфера</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.ConvertInput(System.Object@)">
            <summary>
            Вызывает обработчики кода кастомизации для конвертации вводимого значения перед присвоением его атрибуту.
            </summary>
            <param name="newValue">Новое значение, которое собираемся присвоить атрибуту</param>
            <remarks>Вызывается на клиенте перед сменой значения атрибута (включая операции вставки из буфера)</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SubItemAttribute.GetFriendlyFullName">
            <summary>
            Возвращает строковое представление объекта для пользователя
            Начиная с атрибута верхнего уровня
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SubItemAttribute.Owner">
            <summary>
            Атрибутируемый объект-владелец данного атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SubItemAttribute.OwnerObject">
            <summary>
            Атрибутируемый объект-владелец атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SubItemAttribute.ProgramSoyuz#DataModel#IStrictlyNamedSubObject#OwnerObject">
            <summary>
            Атрибутируемый объект-владелец атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SubItemAttribute.OwnerEntityAttribute">
            <summary>
            Корневой списковый атрибут, внутри которого нахоится данный
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SubItemAttribute.IsCalculatedEffective">
            <summary>
            Возвращает true если атрибут является вычисленным или вложенным к вычисленному списковому атрибуту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SubItemAttribute.IsActual">
            <summary>
            Возвращает true, если объект относится к актуальным, а не устаревшим атрибутам объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SubItemAttribute.IsCalculationInProgress">
            <summary>
            Возвращает true если в данный момент происходит вычисление атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SubItemAttribute.IsAsyncOperationInProgress">
            <summary>
            Возвращает true если в данный момент происходит асинхронное вычисление атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SubItemAttribute.AttributeDef">
            <summary>
            Возвращает определение этого атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SubItemAttribute.IsChangeNotificationsSuspended">
            <summary>
            Если флаг установлен в true, то клиентский UI код не оповещается об изменениях в объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SubItemAttribute.IsAuxilaryEffective">
            <summary>
            true  если атрибут вспомогательный или находится во вспомогательном гриде
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SubItemAttribute.IdentityName">
            <summary>
            Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem">
            <summary>
            Класс для уточнения диапазона контейнеров, в которых ищем рабочие процессы
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.m_Containers">
            <summary>
            Список контейнеров, среди которых ищем
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.GetQueryExpression(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует поисковое SQL выражение для себя и своих детей
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>SQL строку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.GetContainersRange(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder)">
            <summary>
            Формирует список контейнеров поисковой операции с учетом прав доступа
            </summary>
            <param name="searchQueryBuilder">Построитель запросов, в контексте которого работает метод</param>
            <returns>Список контейнеров, среди которых надо искать объекты, либо null, если среди всех</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.GenerateCode(System.Text.StringBuilder,System.String,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по созданию данного элемента. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="parentItemName">Имя родительского элемента (может быть null)</param>
            <param name="offset">Текущий сдвиг кода в табах</param>
            <param name="usedTemplates"></param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.ContainerTemplate">
            <summary>
            Шаблон, фильтрующий используемые контейнеры
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.Containers">
            <summary>
            Список контейнеров, среди которых ищем
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.IncludeInheritedContainerTemplates">
            <summary>
            Возвращает true если ищем контейнеры указанного шаблона и дочерних шаблонов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchTaskRangeFilterItem.IncludeInheritedContainers">
            <summary>
            Ищем ИО в указанных контейнерах и дочерних к ним
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem">
            <summary>
            Класс для уточнения диапазона контейнеров, в которых ищем ИО
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.m_Containers">
            <summary>
            Список контейнеров, среди которых ищем
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.GetQueryExpression(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует поисковое SQL выражение для себя и своих детей
            </summary>
            <param name="searchQueryBuilder">Корневой объект - построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
            <returns>SQL строку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.GetContainersRange(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder)">
            <summary>
            Формирует список контейнеров поисковой операции с учетом прав доступа
            </summary>
            <param name="searchQueryBuilder">Построитель запросов, в контексте которого работает метод</param>
            <returns>Список контейнеров, среди которых надо искать объекты, либо null, если среди всех</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.GenerateCode(System.Text.StringBuilder,System.String,System.String,System.Int32,System.Collections.Generic.List{ProgramSoyuz.PLM.Scripting.Template})">
            <summary>
            Генерация c# кода по созданию данного элемента. Код добавляется к <paramref name="text"/>.
            </summary>
            <param name="text">Билдер для сгенерированного кода</param>
            <param name="itemName">Имя переменной, получающей экземпляр объекта в сгенерированном коде</param>
            <param name="parentItemName">Имя родительского элемента (может быть null)</param>
            <param name="offset">Текущий сдвиг кода в табах</param>
            <param name="usedTemplates"></param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.ContainerTemplate">
            <summary>
            Шаблон, фильтрующий используемые контейнеры
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.Containers">
            <summary>
            Список контейнеров, среди которых ищем
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.IncludeInheritedContainerTemplates">
            <summary>
            Возвращает true если ищем контейнеры указанного шаблона и дочерних шаблонов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.SearchInfoObjectRangeFilterItem.IncludeInheritedContainers">
            <summary>
            Ищем ИО в указанных контейнерах и дочерних к ним
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.TaskDiagramSubTaskNodeStyle">
            <summary>
            Параметры отрисовки этапа подзачачи
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramSubTaskNodeStyle.MemberColor">
            <summary>
            Цвет надписей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.TaskDiagramSubTaskNodeStyle.MemberFont">
            <summary>
            Шрифт надписей
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.DataContainer">
            <summary>
            Контейнер для хранения информационных объектов <see cref="T:ProgramSoyuz.PLM.Scripting.InfoObject"/>
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Сериализация объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.CreateWrapper(ProgramSoyuz.DataModel.DataContainerBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="container">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original">true если требуется оригинальная оболочка</param>
            <param name="doNotUseCache">true если кешированная оболочка не годится и должна быть создана новая</param>
            <returns>Вновь созданная (или кешированная) скриптовая оболочка объекта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.#ctor(ProgramSoyuz.DataModel.DataContainerBase,System.Boolean)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="dataContainer">Реальный объект</param>
            <param name="original">true если требуется оригинальная оболочка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.CreateAsInacessible(System.UInt32)">
            <summary>
            Возвращает оболочку по реальному объекту, недоступному по правам доступа.
            </summary>
            <param name="id">Идентификатор объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.#ctor(System.UInt32)">
            <summary>
            Конструктор оболочки по реальному объекту, недоступному по правам доступа.
            </summary>
            <param name="id">Идентификатор объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer,ProgramSoyuz.PLM.Scripting.Template,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский контейнер</param>
            <param name="template">Шаблон объекта</param>
            <param name="nameUI">Пользовательское название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer,ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский контейнер</param>
            <param name="template">Шаблон объекта</param>
            <param name="initializeObject">Если true, инициализация выполняется</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский контейнер</param>
            <param name="pathToTemplate">Шаблон объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer,System.String,System.String)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="parent">Родительский контейнер</param>
            <param name="pathToTemplate">Шаблон объекта</param>
            <param name="nameUI">Пользовательское название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer.CreationData)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer.CreationData,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer.CreationData,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name="pData">Набор данных для создания нового объекта. Передается по ссылке</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
            <param name="initializeObject">Если true, инициализация выполняется</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Конструктор копирования
            </summary>
            <param name="source">Оригинальный объект, по которому делаем копию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.CreateCopy(System.Boolean)">
            <summary>
            Создаёт новый контейнер аналогичный данному, заполняет его атрибуты значениями из данного объекта.
            Дочерние объекты тоже копируются, внутренние ссылки на контейнеры и ИО дублируемой ветви обновляются
            </summary>
            <param name="withInfoObjects">true, если ИО тоже следует сдублировать</param>
            <returns>Вновь созданный контейнер</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.CreateCopy(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Создаёт новый контейнер аналогичный данному, заполняет его атрибуты значениями из данного объекта.
            Дочерние объекты тоже копируются, внутренние ссылки на контейнеры и ИО дублируемой ветви обновляются
            </summary>
            <param name="withInfoObjects">true, если ИО тоже следует сдублировать</param>
            <param name="recurseOnChildren">Рекурсия по дочерним контейнерам</param>
            <param name="keepRelativeLinks">Обновление ссылок внутренних по отношению к дублируемой ветви</param>
            <returns>Вновь созданный объект</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.CreateCopy(System.Boolean,System.Boolean,System.Boolean,ProgramSoyuz.PLM.Scripting.CopyContainerDelegate,ProgramSoyuz.PLM.Scripting.CopyInfoObjectDelegate,System.Object)">
            <summary>
            Создаёт новый контейнер аналогичный данному, заполняет его атрибуты значениями из данного объекта.
            Дочерние объекты тоже копируются, внутренние ссылки на контейнеры и ИО дублируемой ветви обновляются
            </summary>
            <param name="withInfoObjects">true, если ИО тоже следует сдублировать</param>
            <param name="recurseOnChildren">Рекурсия по дочерним контейнерам</param>
            <param name="keepRelativeLinks">Обновление ссылок внутренних по отношению к дублируемой ветви</param>
            <param name="copyHandler">Обработчик, вызываемый для каждого копируемого контейнера, возвращает true, если копирование выполнено внутри обработчика</param>
            <param name="copyIOHandler">Обработчик, вызываемый для каждого копируемого ИО, возвращает true, если копирование выполнено внутри обработчика</param>
            <param name="data">Параметр, передаваемый в функцию копирования</param>
            <returns>Вновь созданный объект</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.DoCreateCopy(System.Boolean,System.Boolean,System.Boolean,ProgramSoyuz.PLM.Scripting.CopyContainerDelegate,ProgramSoyuz.PLM.Scripting.CopyInfoObjectDelegate,System.Object,System.Collections.Generic.Dictionary{ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Создаёт новый контейнер аналогичный данному, заполняет его атрибуты значениями из данного объекта.
            Дочерние объекты тоже копируются, внутренние ссылки на контейнеры и ИО дублируемой ветви обновляются
            </summary>
            <param name="withInfoObjects">true, если ИО тоже следует сдублировать</param>
            <param name="recurseOnChildren">Рекурсия по дочерним контейнерам</param>
            <param name="keepRelativeLinks">Обновление ссылок внутренних по отношению к дублируемой ветви</param>
            <param name="copyHandler">Обработчик, вызываемый для каждого копируемого контейнера, возвращает true, если копирование выполнено внутри обработчика</param>
            <param name="copyIOHandler">Обработчик, вызываемый для каждого копируемого ИО, возвращает true, если копирование выполнено внутри обработчика</param>
            <param name="data">Параметр, передаваемый в функцию копирования</param>
            <param name="originalToCopyMap">Ассоциативный список (словарь) исходный объект в целевой объект </param>
            <returns>Вновь созданный объект</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
            Инициализирует этот объект по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
            Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name="data">Набор свойств</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
            <param name="importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.DoEraseChildrenOrRelated">
            <summary>
            Каскадное удаление дочерних объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
            Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name="range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.CheckWrappedObject(System.Boolean)">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.MarkDirty">
            <summary>
            Помечает ообъект для пересохранения
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.CheckInfoObjectsIntegrity">
            <summary>
            Проверяет логическую целостность всех ИО в этом объекте и исправляет что возможно
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.CheckInfoObjectsIntegrity(System.Boolean,System.Boolean)">
            <summary>
            Проверяет логическую целостность всех ИО в этом объекте и исправляет что возможно
            </summary>
            <param name="fixIfPossible">true если следует попытаться исправить проблему</param>
            <param name="wait">true, если следует выполнить проверку синхронно, false если проверка ставится в 
            очередь на фоновую обработку</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.RebuildTreeInclusion(System.Char)">
            <summary>
            Рекурсивно обновляет ключи вхождения для себя и всех дочерних
            </summary>
            <param name="code">Символьный код для данного корня ветви</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.ParentByTemplate(System.String,System.Boolean)">
            <summary>
            Находит ближайший контейнер указанного шаблона в цепочке родителей, начиная с себя
            </summary>
            <param name="template">Путь к шаблону искомого объекта</param>
            <param name="includeInherited">Если true то объекты дочерних шаблонов тоже подходят</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.ParentByTemplate(ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Находит ближайший контейнер указанного шаблона в цепочке родителей, начиная с себя
            </summary>
            <param name="template">Шаблон искомого объекта</param>
            <param name="includeInherited">Если true то объекты дочерних шаблонов тоже подходят</param>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.EnumAllParents(System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean})">
            <summary>
            Перечисляет все родительские объекты
            </summary>
            <param name="recursive">True если требуется перечислить родителей на все уровни</param>
            <param name="includeOtherParents">Если true то доп родители попадают в перечисление. False - только прямые родители</param>
            <param name="continueHandler">Обработчик возвращает false, если указанный объект уже был обработан и дальнейшее продвижение по его родителям не требуется</param>
            <returns>Перечислитель родительских объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.EnumAllChildren(System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean})">
            <summary>
            Перечисляет все дочерние объекты
            </summary>
            <param name="recursive">True если требуется перечислить детей на все уровни</param>
            <param name="includeOtherChildren">Если true то доп дочерние попадают в перечисление. False - только прямые дочерние</param>
            <param name="continueHandler">Обработчик возвращает true, если дальнейшее продвижение по дочернием указанного объекта уже не требуется</param>
            <returns>Перечислитель дочерних объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.EnumAllNestedObjects(System.Boolean,System.Boolean,System.Func{ProgramSoyuz.PLM.Scripting.AttributableObject,System.Boolean})">
            <summary>
            Перечисляет все объекты, содержащиеся в данном (для контейнеров это ИО)
            </summary>
            <param name="recursive">True если требуется перечислить детей на все уровни</param>
            <param name="includeOtherChildren">Если true то доп дочерние попадают в перечисление. False - только прямые дочерние</param>
            <param name="continueHandler">Обработчик возвращает true, если дальнейшее продвижение по дочернием указанного объекта уже не требуется</param>
            <returns>Перечислитель дочерних объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.MoveTo(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Перенос объекта к другому родителю.
            </summary>
            <param name="parent">Новый родительский объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.EnumChildren(System.Boolean)">
            <summary>
            Список дочерних контейнеров
            </summary>
            <param name="withShortcuts"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.GetChild(System.String)">
            <summary>
            Доступ к дочернему контейнеру по пути rootNameKey\NameKey1\..\NameKeyN
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.IsChildOf(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Возвращает true, если контейнер является дочерним от указанного.
            При проверке учитываются и шорткаты на контейнер в других контейнерах
            </summary>
            <remarks>Считается что контейнер является дочерним к самому себе</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.IsChildOf(ProgramSoyuz.PLM.Scripting.DataContainer,System.Boolean)">
            <summary>
            Возвращает true, если контейнер является дочерним от указанного
            </summary>
            <param name="obj">Проверяемый потенциально родительский контейнер</param>
            <param name="withShortcuts">Если true то при проверке учитываются и шорткаты на контейнер в других контейнерах</param>
            <remarks>Считается что контейнер является дочерним к самому себе</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.MarkForLoadingInfoObjects">
            <summary>
            Помечает контейнер для загрузки его информационных объектов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.LoadInfoObjects(System.Boolean,System.Boolean)">
            <summary>
            Загружает информационные объекты контейнера и его детей (рекурсивно)
            с ожиданием загрузки или без такового.
            </summary>
            <param name="recursive">Рекурсивная загрузка контейнеров</param>
            <param name="wait">Если true то ждем пока все загрузится</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.IsHiddenInUI(ProgramSoyuz.PLM.Scripting.BindingsCache)">
            <summary>
            Возвращает true, если объект должен быть скрыт в пользовательском интерфейсе.
            Например по причине отсутствия доступа на просмотр объекта
            </summary>
            <param name="cache">Кеш привязок для проверки прав доступа. Может быть null при одиночной проверке</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.m_OtherParentList">
            <summary>
            Оболочка для работы со списком дополнительных родителей
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.GetExistingOtherParents">
            <summary>
            Возвращает перечислитель существующих дополнительных родительских контейнеров
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.IsParentNative(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Возвращает true если указанный контейнер является основным родительским контейнером объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.IsParentLinked(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Возвращает true если указанный контейнер является дополнительным родительским контейнером объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.AddOtherParentContainer(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Добавление дополнительного родителя к шаблону
            </summary>
            <param name="container">Дополнительный родитель</param>
            <returns>true если такого родителя еще не было</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.RemoveOtherParentContainer(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Удаление дополнительного родителя шаблона
            </summary>
            <param name="container">Дополнительный родитель</param>
            <returns>true если такого родитель был и исключен из списка дополнительных</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.GetSystemName">
            <summary>
            Возвращает формальное системное строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.RealObject">
            <summary>
            Доступ к атрибутируемому "реальному" объекту. 
            Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ParentConfigurationId">
            <summary>
            Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ParentConfigurationInEffect">
            <summary>
            Конфигурация, к которой относится этот объект с учётом возможного наследования
            конфигурации от родительского объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.NameKey">
            <summary>
            Программное название контейнера
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.NameUI">
            <summary>
            Пользовательское название контейнера
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.Params">
            <summary>
            Пользовательские дополнительные параметры объекта, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ServerPreloadMode">
            <summary>
            Режим предварительной загрузки содержимого контейнера в серверный кеш
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ClientPreloadMode">
            <summary>
            Режим предварительной загрузки содержимого контейнера в клиентский кеш
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ServerUnloadMode">
            <summary>
            Режим выгрузки содержимого контейнера из серверного кеша
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ClientUnloadMode">
            <summary>
            Режим выгрузки содержимого контейнера из клиентского кеша
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.PreloadModeParams">
            <summary>
            Дополнительное поле для параметров загрузки в кеш этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.IsErasedStub">
            <summary>
            Возвращает true если этот объект является заглушкой удалённого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.IsReferenceContainer">
            <summary>
            Возвращает true если контейнер является корнем справочника
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.IsLoadContentsLightweight">
            <summary>
            Если флаг установлен, то ИО этого контейнера загружается легковесно по команде загрузки всего контейнера
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ContentsLoaded">
            <summary>
            Возвращает true если все информационные объекты указанного контейнера загружены
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.HasLoadedInfoObjects">
            <summary>
            Возвращает true, если у контейнера есть загруженные в кеш дети (ИО)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ActivityMetric">
            <summary>
            Метрика активности использования контейнера
            Примерно соответствует числу загрузок содержимого контейнера в день
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.CreatedByUser">
            <summary>
            Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.DateModified">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ModifiedByUser">
            <summary>
            Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.DateContentModified">
            <summary>
            Локальная дата/время последнего изменения содержательной части объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ContentModifiedByUser">
            <summary>
            Ссылка на пользователя, изменившего содержательную часть этого объекта последним.
            Если реального пользователя нет, возвращается экземпляр системного псевдопользователя
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.PersistedName">
            <summary>
            Доступ к хранимому имени объекта. Используется при мягком удалении объекта для финальной записи имени удаленной заглушки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.TreeInclusion">
            <summary>
            Доступ к ключу индекса входимости в ветвь
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.TreeInclusionChar">
            <summary>
            Собственный символ в составном ключе вхождения (последний символ в строке ключа)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.Icon">
            <summary>
            Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.DisplayIcon">
            <summary>
            Иконка, показываемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.Template">
            <summary>
            Доступ к шаблону объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ParentOriginal">
            <summary>
            Доступ к родительскому контейнеру.
            Возвращает оригинальную оболочку если иная не установлена объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.Parent">
            <summary>
            Доступ к родительскому контейнеру
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.Root">
            <summary>
            Возвращает корневой контейнер
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.BranchRoot">
            <summary>
            Возвращает корень ветви объектов своего типа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.AllDirectParents">
            <summary>
            Перечисляет всех родительских контейнеров, начиная c себя (включая)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.AllParents">
            <summary>
            Перечисляет всех родительских контейнеров с учетом ссылок из других контейнеров, начиная c себя (включая)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer._AllChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.Children">
            <summary>
            Возвращает массив дочерних контейнеров.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.NativeChildren">
            <summary>
            Возвращает массив дочерних контейнеров.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.AllChildren">
            <summary>
            Возвращает массив всех дочерних контейнеров на все уровни.
            (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#DataContainer}#DirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#DataContainer}#AllDirectChildren">
            <summary>
            Перечисляет рекурсивно всех детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.OtherChildren">
            <summary>
              Возвращает массив ссылок (шорткатов) на другие дочерние контейнеры.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.RootInfoObjects">
            <summary>
            Возвращает перечислитель корневых информационных объектов в этом контейнере (включая шорткаты)
            </summary>
            <returns>Массив корневых контейнеров, обернутых для скриптинга</returns>
            <remarks>Запрос информационных объектов может заблокировать поток до тех пор пока объекты не будут загружены</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.NativeRootInfoObjects">
            <summary>
            Возвращает перечислитель родных корневых информационных объектов в этом контейнере (не включая шорткаты)
            </summary>
            <returns>Массив корневых контейнеров, обернутых для скриптинга</returns>
            <remarks>Запрос информационных объектов может заблокировать поток до тех пор пока объекты не будут загружены</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.AllInfoObjects">
            <summary>
            Возвращает перечислитель всех информационных объектов в этом контейнере
            </summary>
            <returns>Массив всех ИО, обернутых для скриптинга</returns>
            <remarks>Запрос информационных объектов может заблокировать поток до тех пор пока объекты не будут загружены</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ExistingOtherParents">
            <summary>
            Возвращает перечислитель существующих дополнительных родительских контейнеров
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParents">
            <summary>
            Возвращает перечислитель элементов коллекции спискового атрибута, существующих в базе.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.Bindings">
            <summary>
            Список привязок к этому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.ParentBindings">
            <summary>
            Возвращает перечислитель унаследованных от родителей привязок к этому объекту/с использованием этой роли
            </summary>
            <returns>Перечислитель унаследованных от родителей привязок к этому объекту/с использованием этой роли</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.UserRightsInheritanceParent">
            <summary>
            Возвращает родительский объект по цепочке наследования прав доступа
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.IsWorkflowContext">
            <summary>
            Установленный флаг означает, что контейнер является контекстными для рабочих процессов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.PathName">
            <summary>
            Путь к объекту по ключам
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.NameKey">
            <summary>
            Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.NameUI">
            <summary>
            Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.Notes">
            <summary>
            Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.Params">
            <summary>
            Дополнительное поле для параметров этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.ServerPreloadMode">
            <summary>
            Режим предварительной загрузки содержимого контейнера в серверный кеш
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.ClientPreloadMode">
            <summary>
            Режим предварительной загрузки содержимого контейнера в клиентский кеш
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.ServerUnloadMode">
            <summary>
            Режим выгрузки содержимого контейнера из серверного кеша
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.ClientUnloadMode">
            <summary>
            Режим выгрузки содержимого контейнера из клиентского кеша
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.PreloadModeParams">
            <summary>
            Дополнительное поле для параметров загрузки в кеш этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.Flags">
            <summary>
            Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.m_Parent">
            <summary>
            Родительский контейнер
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.OtherParentsToAdd">
            <summary>
            Дополнительные родительские контейнеры для добавления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.OtherParentsToRemove">
            <summary>
            Дополнительные родительские контейнеры для удаления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.m_Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.m_Template">
            <summary>
            Шаблон объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.m_ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.PersistedName">
            <summary>
            Доступ к хранимому имени объекта. Используется при мягком удалении объекта для финальной записи имени удаленной заглушки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.TreeInclusion">
            <summary>
            Доступ к ключу индекса входимости в ветвь
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.ResaveObject">
            <summary>
            Флаг обозначающий необходимость пересохранить объект как есть
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.WriteTo(ProgramSoyuz.DataModel.DataContainerBase.Body)">
            <summary>
            Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name="pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.Parent">
            <summary>
            Родительский контейнер
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.Icon">
            <summary>
            Иконка для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.Template">
            <summary>
            Шаблон объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.ParentConfiguration">
            <summary>
            Конфигурация, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.AreSysPropsChanged">
            <summary>
            Возвращает true если есть изменения в системных атрибутах объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.AreDataPropsChanged">
            <summary>
            Возвращает true если есть изменения в атрибутах объекта, относящихся к уровню модели данных
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.CreationData.AreSkinPropsChanged">
            <summary>
            Возвращает true если есть изменения в атрибутах объекта, относящихся к уровню скина
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList">
            <summary>
            Класс оболочка для операций со списком дополнительных родителей
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.m_pOwner">
            <summary>
            Объект, чья коллекция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.m_ExistingOtherContainers">
            <summary>
            Список существующих элементов коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.#ctor(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Конструктор
            </summary>
            <param name="pOwner">Объект, чья коллекция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.OnOwnerUpdated">
            <summary>
            Обновление списка при обновлении оболочки-владельца
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.Add(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.Contains(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.CopyTo(ProgramSoyuz.PLM.Scripting.DataContainer[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional.-or-<paramref name="arrayIndex" /> is equal to or greater than the length of <paramref name="array" />.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.-or-Type cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.Remove(ProgramSoyuz.PLM.Scripting.DataContainer)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.DataContainer.OtherParentList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CollectionElement">
            <summary>
            Элемент коллекции. Строка спискового атрибута.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.m_pOwner">
            <summary>
            Атрибут-владелец данного элемента коллекции
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.OnOwnerUpdated">
            <summary>
            При обновлении основного объекта сбрасывает кешированные значения атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement._ordinal">
            <summary>
            Порядковый номер для временной идентификации вновь добавленных элементов
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор для десериализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.InitFrom(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Инициализирует эту оболочку низкоуровневым способом по другой оболочке
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.CloneChangedAttributesFrom(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Копирует измененные значения из <paramref name="source"/>
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization routine
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement._operation">
            <summary>
            Операция, которую следует произвести с объектом.
            Это поле используется при обработке сервером команды сохранения атрибутов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.m_aChangedAttributes">
            <summary>
            Текущий список добавленных, измененных или удаленных атрибутов объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetChangedAttributes">
            <summary>
            Текущий список добавленных, измененных или удаленных атрибутов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.m_LinkedObject">
            <summary>
            Ссылка на объект (для атрибута "множество объектов"). Измененное значение ссылки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.m_LinkedObjectWrapper">
            <summary>
            Ссылка на объект (для атрибута "множество объектов"). Кешированная ссылка на объект для существующего в базе элемента
            </summary>
            <remarks>Здесь может лежать <see cref="T:System.WeakReference"/>"/&gt; на объект</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.#ctor(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.DataModel.CollectionElementBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="pOwner">Атрибут-владелец данного элемента коллекции</param>
            <param name="collectionElement">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.#ctor(ProgramSoyuz.PLM.Scripting.Attribute)">
            <summary>
            Конструктор для сохранения новых элементов коллекции
            </summary>
            <param name="pOwner">Атрибут-владелец данного элемента коллекции</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.#ctor(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Конструктор для сохранения новых элементов коллекции
            </summary>
            <param name="pOwner">Атрибут-владелец данного элемента коллекции</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.#ctor(ProgramSoyuz.PLM.Scripting.Attribute,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Конструктор для сохранения новых элементов коллекции
            </summary>
            <param name="owner">Атрибут-владелец данного элемента коллекции</param>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
            <param name="skipInitialization">true, если следует пропустить инициализацию атрибутов по умолчанию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.#ctor(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.PLM.Scripting.ScriptingBaseObject)">
            <summary>
            Конструктор для сохранения новых элементов коллекции для множества ИО
            </summary>
            <param name="pOwner">Атрибут-владелец данного элемента коллекции</param>
            <param name="linkedObject">Объект ссылку на который представляет новый элемент коллекции</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.#ctor(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Конструктор копирования
            </summary>
            <param name="owner">Атрибут-владелец данного элемента коллекции</param>
            <param name="source">Оригинальный объект, по которому делаем копию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.#ctor(ProgramSoyuz.PLM.Scripting.Attribute,ProgramSoyuz.PLM.Scripting.CollectionElement,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributeDef})">
            <summary>
            Конструктор копирования
            </summary>
            <param name="owner">Атрибут-владелец данного элемента коллекции</param>
            <param name="source">Оригинальный объект, по которому делаем копию</param>
            <param name="attributeDefs">Список копируемых атрибутов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.Erase">
            <summary>
            Удаление объекта (для итерируемых атрибутов, элемент помечается удаленным в очередной или текущей ревизии)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.ErasePhysicaly">
            <summary>
            Физическое стирание элемента коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.DoRawCancelChanges(System.Boolean)">
            <summary>
            Возвращает объект в начальное состояние
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetAttributeDef(System.String)">
            <summary>
            Возвращает определение атрибута по ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.RevertToRevision(System.Int32)">
            <summary>
            Отменяет текущие изменения атрибутов объекта. После чего производит рекурсивное копирование
            значений атрибутов в указанной ревизии в качестве текущих.
            После вызова этого 
            </summary>
            <param name="number">Номер ревизии</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.IsEmpty(System.String)">
            <summary>
            Возвращает true если указанный атрибут пустой
            </summary>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetValue``1(System.String)">
            <summary>
            Возвращает значение атрибута указанного типа. 
            При отсутствии такового возвращается значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetValue``1(System.String,``0)">
            <summary>
            Возвращает значение атрибута указанного типа. 
            При отсутствии такового возвращается указанное значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3</param>
            <param name="defaultValue">Значение, возвращаемое в случае отсутствия атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.TryGetValue``1(System.String,``0@)">
            <summary>
            Извлекает значение атрибута указанного типа. 
            Возвращает true если все получилось
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3</param>
            <param name="result">Значение атрибута</param>
            <returns>true, если есть непустое значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetValueAt``1(System.String,System.Int32)">
            <summary>
            Возвращает значение атрибута указанного типа в указанной ревизии. 
            При отсутствии такового возвращается значение по умолчанию требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Ключ атрибута</param>
            <param name="revision">Номер ревизии, для которой возвращается значение атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetValueAt``1(System.String,System.Int32,``0)">
            <summary>
            Возвращает значение атрибута указанного типа в указанной ревизии. 
            При отсутствии такового возвращается указанное значение требуемого типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Ключ атрибута</param>
            <param name="revision">Номер ревизии, для которой возвращается значение атрибута</param>
            <param name="defaultValue">Значение, возвращаемое в случае отсутствия атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.TryGetValueAt``1(System.String,System.Int32,``0@)">
            <summary>
            Извлекает значение атрибута указанного типа. 
            Возвращает true если все получилось
            </summary>
            <typeparam name="T">Тип значения</typeparam>
            <param name="nameKey">Ключ атрибута</param>
            <param name="revision">Номер ревизии, для которой возвращается значение атрибута</param>
            <param name="result">Значение атрибута</param>
            <returns>true, если есть непустое значение атрибута</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetAttribute(System.String)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetAttribute(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetAttribute(ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="def">Определение атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetAttribute(ProgramSoyuz.PLM.Scripting.AttributeDef,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="def">Определение атрибута (если оно уже известно)</param>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.ValidateAttributes">
            <summary>
            Проверяет все шаблонные атрибуты объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.IsEqualByAttributes(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Сравнивает атрибуты двух объектов на предмет равенства
            </summary>
            <param name="other"></param>
            <returns>true если значения и состав атрибутов совпадает</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.m_CalculationDepth">
            <summary>
            Счетчик вложенных вычислений атрибутов на случай потенциального зацикливания
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.DoCalculateAttribute(ProgramSoyuz.PLM.Scripting.SubItemAttribute,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Вызывает код кастомизации для вычисления атрибута
            </summary>
            <param name="attr">Атрибует чье значение вычисляем</param>
            <param name="def">Определение вычисляемого атрибута</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.OnChildModified(ProgramSoyuz.PLM.Scripting.SubItemAttribute,System.Boolean,System.Boolean)">
            <summary>
            Добавляет указанный атрибут к списку изменненных и оповещает родителя о том, что 
            произошло изменение.
            Вызывается в случае изменения кого-либо из дочерних сущностей
            </summary>
            <param name="attribute">Дочерний атрибут</param>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
            <param name="isAuxilaryChange">Изменение порождено вспомогательным атрибутом</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.OnChildCancelled(ProgramSoyuz.PLM.Scripting.SubItemAttribute,System.Boolean,System.Boolean)">
            <summary>
            Вызывается ребенком в случае отмены его изменения или создания
            </summary>
            <param name="attribute">Дочерний атрибут</param>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
            <param name="isAuxilaryChange">Изменение порождено вспомогательным атрибутом</param>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.m_aAttributeWrappers">
            <summary>
            Список оболочек-атрибутов, созданных этим объектом
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetWrapperFor(ProgramSoyuz.DataModel.AttributeBase,ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Находит ранее выданную или создает новую оболочку для существующего атрибута
            </summary>
            <param name="pAttribute">Реальный атрибут</param>
            <param name="attributeDef">Определение атрибута (если известно на момент создания объекта)</param>
            <returns>Найденную или вновь созданную оболочку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetWrapperFor(ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Находит ранее выданную или создает новую оболочку для атрибута с запрошенным ключом и типом
            </summary>
            <param name="attributeDef"></param>
            <returns>Найденную или вновь созданную оболочку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetWrapperFor(ProgramSoyuz.PLM.Scripting.AttributeDef,System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Находит ранее выданную или создает новую оболочку для атрибута с запрошенным ключом и типом
            </summary>
            <param name="attributeDef"></param>
            <param name="nameKey">Ключ атрибута</param>
            <param name="eType">Тип данных атрибута</param>
            <returns>Найденную или вновь созданную оболочку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.FindWrapperFor(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Находит ранее выданную оболочку для атрибута с запрошенным ключом и типом
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <param name="eType">Тип данных атрибута</param>
            <returns>Найденную оболочку</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.EraseAttribute(ProgramSoyuz.PLM.Scripting.SubItemAttribute)">
            <summary>
            Добавляет запись об удалении существующего атрибута
            </summary>
            <param name="attribute">Удаляемый существующий атрибут</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.CheckCachedAttributeDefs(ProgramSoyuz.PLM.Scripting.Template)">
            <summary>
            Обновляет у атрибутов ссылки на атрибут дефы
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.ProgramSoyuz#PLM#Scripting#IAttributableObject#GetAttribute(System.String)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.ProgramSoyuz#PLM#Scripting#IAttributableObject#GetAttribute(System.String,ProgramSoyuz.DataModel.AttributeDefBase.DataTypeEnum)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу
            </summary>
            <param name="nameKey">Ключ атрибута</param>
            <param name="dataType">Тип данных атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.ProgramSoyuz#PLM#Scripting#IAttributableObject#GetAttribute(ProgramSoyuz.PLM.Scripting.AttributeDef)">
            <summary>
            Возвращает существующий, вычисленный или новый объект по указанному ключу и типу данных
            </summary>
            <param name="attributeDef">Определение атрибута</param>
            <returns>Оболочку для существующего или вычисленного атрибута, либо новый объект для сохранения</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.IsValueEqual(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Сравнивает два элемента путем сравнения значений атрибутов, прописанных в шаблоне
            </summary>
            <param name="otherElement">Сравниваемый элемент</param>
            <returns>true если элементы содержат одинаковые значения шаблонных атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.InitDefaultAttributes(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Инициализирует атрибуты объекта (значение по умолчанию, вычисление, вызов OnInitialize и пр)
            </summary>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.InitDefaultAttributes(System.Collections.Generic.Dictionary{System.String,System.Object},Wintellect.PowerCollections.Set{System.String})">
            <summary>
            Инициализирует атрибуты объекта (значение по умолчанию, вычисление, вызов OnInitialize и пр)
            </summary>
            <param name="initialValues">Список значений для инициализации атрибутов объекта</param>
            <param name="initialized">Список ключей уже инициализированных атрибутов. Их этот метод трогать не будет</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.InitObjectAttributesFrom(ProgramSoyuz.PLM.Scripting.CollectionElement,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributeDef})">
            <summary>
            Инициализирует атрибуты объекта по оригинальному объекту
            </summary>
            <param name="source">Оригинальный объект, по которому делаем копию</param>
            <param name="attributeDefs">Список копируемых атрибутов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.MarkChangedAttributesAsPreinitialized">
            <summary>
            Ставит флаги для измененных атрибутов, говорящие о том, что значения атрибутов
            являются значениями, присвоенными при инициализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.MarkAttributesAsUnchanged">
            <summary>
            Ставит флаги для измененных атрибутов, говорящие о том, что значения атрибутов
            являются значениями, присвоенными при инициализации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.CopyAttributesFrom(ProgramSoyuz.PLM.Scripting.IAttributableObject)">
            <summary>
            Копирование значений атрибутов с другого объекта.
            Копируются только атрибуты, определенные в шаблоне этого объекта
            </summary>
            <param name="src">Объект, чьи атрибуты копируем в этот объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.CopyAttributesFrom(ProgramSoyuz.PLM.Scripting.IAttributableObject,System.Boolean)">
            <summary>
            Копирование значений атрибутов с другого объекта.
            Копируются только атрибуты, определенные в шаблоне этого объекта
            </summary>
            <param name="src">Объект, чьи атрибуты копируем в этот объект</param>
            <param name="incremental">Если true, то списковые атрибуты не очищаются перед копированием, 
            то есть копируемые элементы добавляются к текущим</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.CopyAttributesFrom(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.Template,System.Boolean)">
            <summary>
            Копирование значений атрибутов с другого объекта.
            Копируются только атрибуты, определенные в шаблоне этого объекта
            </summary>
            <param name="src">Объект, чьи атрибуты копируем в этот объект</param>
            <param name="template">Если указан, то копируются лишь атрибуты этого шаблона</param>
            <param name="incremental">Если true, то списковые атрибуты не очищаются перед копированием, 
            то есть копируемые элементы добавляются к текущим</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.CopyAttributesFrom(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.Template,System.Boolean,ProgramSoyuz.PLM.Scripting.CopyAttributeDelegate,System.Object)">
            <summary>
            Копирование значений атрибутов с другого объекта.
            Копируются только атрибуты, определенные в шаблоне этого объекта
            </summary>
            <param name="src">Объект, чьи атрибуты копируем в этот объект</param>
            <param name="template">Если указан, то копируются лишь атрибуты этого шаблона</param>
            <param name="incremental">Если true, то списковые атрибуты не очищаются перед копированием, 
            то есть копируемые элементы добавляются к текущим</param>
            <param name="copyHandler">Обработчик, вызываемый для каждого копируемого атрибута, возвращает true, если атрибут обработан этой функцией</param>
            <param name="data">Параметр, передаваемый в функцию копирования</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.CopyAttributesFrom(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.Template,System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributeDef},System.Boolean,ProgramSoyuz.PLM.Scripting.CopyAttributeDelegate,System.Object)">
            <summary>
            Копирование значений атрибутов с другого объекта.
            Копируются указанные атрибуты либо определенные в шаблоне этого объекта.
            </summary>
            <param name="src">Объект, чьи атрибуты копируем в этот объект</param>
            <param name="template">Если указан, то копируются лишь атрибуты этого шаблона</param>
            <param name="attributeDefs">Список копируемых атрибутов (если указан, то <paramref name="template"/> игнорируется)</param>
            <param name="incremental">Если true, то списковые атрибуты не очищаются перед копированием, 
            то есть копируемые элементы добавляются к текущим</param>
            <param name="copyHandler">Обработчик, вызываемый для каждого копируемого атрибута, возвращает true, если атрибут обработан этой функцией</param>
            <param name="data">Параметр, передаваемый в функцию копирования</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.InitAttributes(ProgramSoyuz.DataModel.AttributeData[],ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache)">
            <summary>
            Инициализирует атрибуты объекта по данным, сохраненным в пакете конфигурации
            </summary>
            <param name="attributes">набор данных об атрибутах</param>
            <param name="objectsCache">Индекс объектов по GUIDу</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.Invoke(System.String,System.Object)">
            <summary>
            Вызов пользовательского метода объекта
            </summary>
            <param name="methodName">Имя вызываемого метода</param>
            <param name="inputParams">Сериализуемые входные данные для метода (сериализуемость нужна для серверного вызова)</param>
            <returns>Результат работы метода</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetSystemAttribute(System.String)">
            <summary>
            Возвращает значение системного атрибута данного объекта.
            </summary>
            <param name="name">Имя системного атрибута</param>
            <returns>Значение. Null, если атрибут не найден</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetUIData(ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает запрошенное представление объекта в UI.
            </summary>
            <param name="dataKind">Запрашиваемый вид данных (название, иконки, превью)</param>
            <returns>null если следует использовать вариант по умолчанию,
            String для названий объекта (форматированный HTML тэгами для всего кроме просто названия),
            Icon (или CustomIcon) и Icon[](или CustomIcon[]) для иконок,
            Image (или BlobDesc) для превью</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetUIText(ProgramSoyuz.DataModel.AttributableDataObject.UIDataKind)">
            <summary>
            Возвращает запрошенный текст для представления объекта в UI
            </summary>
            <param name="dataKind">Тип запрошенных данных</param>
            <returns>Текстовое представление объекта указанного типа</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetPreview">
            <summary>
            Возвращает картинку предварительного просмотра объекта
            </summary>
            <remarks>На клиенте объект берется из кеша. Кеш остается владельцем объекта.
            На сервере кеширования не происходит. Полученный объект следует освободить.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetMainIcon">
            <summary>
            Возвращает основную иконку объекта (ее ключ в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetMainIconForHyperLink">
            <summary>
            Возвращает основную иконку объекта (ее ключ в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetMainOverlayIcon">
            <summary>
            Возвращает основную оверлейную иконку объекта (ее ключ в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetMainOverlayIconForHyperLink">
            <summary>
            Возвращает основную оверлейную иконку объекта (ее ключ в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetAdditionalIcons">
            <summary>
            Возвращает дополнительные иконки объекта (в виде массива строковых ключей в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetAdditionalIconsForListView">
            <summary>
            Возвращает дополнительные иконки объекта (в виде массива строковых ключей в основном ImageListе)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetAdditionalIcon(System.Int32)">
            <summary>
            Возвращает дополнительную иконку объекта (ее ключ в основном ImageListе) по индексу (0-based)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetAdditionalIconForListView(System.Int32)">
            <summary>
            Возвращает дополнительную иконку объекта (ее ключ в основном ImageListе) по индексу (0-based)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetAdditionalIconsForHyperLInk">
            <summary>
            Возвращает дополнительные иконки объекта (в виде массива строковых ключей в основном ImageListе)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.m_CalculationLocks">
            <summary>
            Множество объектов для которых в данный момент вычисляется GetFriendlyName()
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetFriendlyName">
            <summary>
            Возвращает строковое представление объекта для пользователя
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetFriendlyName(System.Boolean)">
            <summary>
            Возвращает строковое представление объекта для пользователя
            </summary>
            <param name="doNotUseUIData">true означает, что метод должен вернуть что-нибудь без обращения к UIData
            Флаг используется при вызове изнутри GetUIData</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.GetFriendlyFullName">
            <summary>
            Возвращает строковое представление объекта для пользователя
            Начиная с атрибута верхнего уровня
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.DebuggerDisplayString">
            <summary>
            Формирует представление объекта для дебаггера
            </summary>
            <returns>Строка, которую отображает дебаггер для этого объекта</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement._events">
            <summary>
            Контейнер для событий объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.m_NotificationLocker">
            <summary>
            Список атрибутов, для которых вызвана нотификация.
            Используется для предотвращения зацикливания
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.NotifyPropertyChanged(ProgramSoyuz.PLM.Scripting.SubItemAttribute)">
            <summary>
            Рассылка нотификации об изменении атрибута
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.NotifyPropertyChanged(ProgramSoyuz.PLM.Scripting.SubItemAttribute,System.Boolean)">
            <summary>
            Рассылка нотификации об изменении атрибута
            </summary>
            <param name="attribute">Изменившийся атрибут</param>
            <param name="fullNotification">Если true, то происходит вызов метода кастомизации</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.MarkAsCalculated">
            <summary>
            Рекурсивно ставит признак вычисленности всем дочерним атрибутам и их элементам/значениям
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.CollectionElement.DropHistory">
            <summary>
            Освобождает ссылки на оболочки устаревших элементов коллекций
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.Owner">
            <summary>
            Атрибут-владелец данного элемента коллекции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.OwnerObject">
            <summary>
            Атрибутируемый объект-владелец атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.OwnerList">
            <summary>
            Коллекция элементов, которой принадлежит данный элемент
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.ProgramSoyuz#DataModel#IStrictlyNamedSubObject#OwnerObject">
            <summary>
            Атрибутируемый объект-владелец атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.OwnerEntityAttribute">
            <summary>
            Корневой списковый атрибут, внутри которого нахоится данный
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.RootElement">
            <summary>
            Элемент корневого спискового атрибута, внутри которого нахоится данный
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.OwnerElements">
            <summary>
            Перечисление вышестоящих элементов от себя до элемента верхнего уровня
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.RealObject">
            <summary>
            Доступ к атрибутируемому "реальному" объекту. 
            Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.Ordinal">
            <summary>
            Порядковый номер для фиксирования порядка добавления элементов в коллекцию.
            Фиксация происходит в момент добавления элемента в колекцию.
            По умолчанию элементы коллекции сортируются в порядке, по этому полю.
            </summary>
            <remarks>Порядковые номера сохраняются в базу только при создании элемента коллекции.
            Последующие изменения номера сервер игнорирует.</remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.Operation">
            <summary>
            Операция, которую следует произвести с объектом.
            Это поле используется при обработке сервером команды сохранения атрибутов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.ChangedAttributes">
            <summary>
            Текущий список добавленных, измененных или удаленных атрибутов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.HasChangedAttributes">
            <summary>
            Возвращает true, если у элемента есть изменённые атрибуты
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.ProgramSoyuz#PLM#Scripting#IAttributableObject#ChangedAttributes">
            <summary>
            Возвращает перечислитель измененных атрибутов для данной скриптовой оболочки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.HasUserChangedAttributes">
            <summary>
            Возвращает true, если у объекта есть невычисляемые атрибуты, измененные после инициализации их в значения по умолчанию
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.HasDirtyAttributes">
            <summary>
            Возвращает true, если у объекта есть атрибуты, подлежащие сохранению
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.IsDirty">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.CreatedAtRevisionNumber">
            <summary>
            Номер ревизии (итерации, среза значений) информационного объекта, в которой элемент был создан
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.RemovedAtRevisionNumber">
            <summary>
            Номер ревизии (итерации, среза значений) информационного объекта, в которой элемент был удален
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.DateCreated">
            <summary>
            Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.CreatedByUser">
            <summary>
            Пользователь, создавший этот элемент коллекции
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.IdentificationHandle">
            <summary>
            Уникальный номер в рамках сохраняемого объекта для
            обратной идентификации атрибута, у которого возникла проблема на сервере
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.Template">
            <summary>
            Доступ к шаблону объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.Templates">
            <summary>
            Перечисляет все шаблоны объекта, начиная с основного.
            Шаблоны перечисляются те, что реально сохранены у объекта (без учета текущих изменений)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.AllChangedAttributes">
            <summary>
            Перебирает все измененные атрибуты на все уровни
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.AllChangedFileDescs">
            <summary>
            Рекусрсивное извлечение всех сохраняемых файловых дескрипторов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.AllAttributes">
            <summary>
            Рекурсивно перечисляет все атрибуты этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.Attributes">
            <summary>
            Возвращает перечислитель собственных атрибутов, существующих в базе.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.ProgramSoyuz#PLM#Scripting#IAttributableObject#Attributes">
            <summary>
            Возвращает перечислитель собственных атрибутов, существующих в базе.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.Item(System.String)">
            <summary>
            Возвращает значение атрибута по указанному ключу.
            Сеттер позволяет задавать значения атрибутам
            </summary>
            <param name="nameKey">Для геттера путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3.
            Для сеттера непосредственный ключ изменяемого атрибута данного объекта</param>
            <returns>Конечное значение атрибута</returns>
            <remarks>
            Если определение атрибута имеется, то возвращаемое значение для значимых типов и строк будет значением по умолчанию этого типа.
            В том числе и для пустых атрибутов.
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.Item(System.String,System.Object)">
            <summary>
            Возвращает значение атрибута по указанному ключу.
            </summary>
            <param name="nameKey">Путь по ключам атрибутов NameKey1.NameKey2.@CreatedBy.NameKey3.</param>
            <param name="defaultValue">Значение по умолчанию, возвращаемое, если найденный атрибут или значение пустое</param>
            <returns>Конечное значение атрибута</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.IsCalculationInProgress">
            <summary>
            Возвращает true если в данный момент происходит вычисление атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.AttributeWrappers">
            <summary>
            СОздает список для хранения выданных скриптовых оболочек атрибутов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.SyncRoot">
            <summary>
            Доступ к синхронизирующему объекту для внутреннего кеша оболочек атрибутов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.LinkedObject">
            <summary>
            Ссылка на объект (для атрибута "множество объектов")
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.Target">
            <summary>
            Ссылка на объект (для атрибута "множество объектов")
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.LinkedObjectId">
            <summary>
            Ссылка на объект (для атрибута "множество объектов")
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.CalculationLocks">
            <summary>
            Множество объектов для которых в данный момент вычисляется GetFriendlyName()
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.FriendlyIdentityName">
            <summary>
            Возвращает подробное название объекта без идентификатора (используется для показа в сообщениях  об ошибках и т.п.)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.IdentityName">
            <summary>
            Возвращает название объекта с идентификатором
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.IsCalculated">
            <summary>
            Возвращает true если элемент коллекции является непосредственно вычисленным или 
            дочерним от вычисленного атрибута
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.CollectionElement.Events">
            <summary>
            Контейнер для событий объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.CollectionElement.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.CreationData.CreatedAtRevisionNumber">
            <summary>
            Номер ревизии создания объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.CreationData.RemovedAtRevisionNumber">
            <summary>
            Номер ревизии удаления объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.CreationData.IdentificationHandle">
            <summary>
            Уникальный номер в рамках сохраняемого объекта для
            обратной идентификации элемента, у которого возникла проблема на сервере
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.CollectionElement.CreationData.GlobalIdentifier">
            <summary>
            Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeServerTrigger.OnBeforeErase(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
              Вызывает обработчики OnBeforeErase из кода кастомизации и модулей
            </summary>
            <param name = "obj">Удаляемый объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeServerTrigger.OnBeforeErase(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
              Вызывает обработчики OnBeforeErase из кода кастомизации и модулей
            </summary>
            <param name = "obj">Удаляемый элемент коллекции</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeServerTrigger.OnBeforeSave(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
              Вызывает обработчики OnBeforeSave из кода кастомизации и модулей
            </summary>
            <param name = "obj">Удаляемый объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeServerTrigger.OnBeforeSave(ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
              Вызывает обработчики OnBeforeSave из кода кастомизации и модулей
            </summary>
            <param name = "obj">Удаляемый элемент коллекции</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeServerTrigger.OnBeforeCommit(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
              Вызывает обработчики OnBeforeCommit из кода кастомизации и модулей
            </summary>
            <param name = "obj">Удаляемый объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeServerTrigger.OnAfterCommit(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
              Вызывает обработчики OnAfterCommit из кода кастомизации и модулей
            </summary>
            <param name = "obj">Удаляемый объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeServerTrigger.BeforeSessionConnected(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserSession,System.Int32,System.Collections.Generic.ICollection{ProgramSoyuz.DataModel.StationKeyStruct})">
            <summary>
            Вызывает триггер логина пользователя в систему.
            </summary>
            <param name="obj">Пользователь</param>
            <param name="session">Вновь инициализированная сессия</param>
            <param name="allowedConnections">Максимальное число подключенных рабочих мест (по условиям лицензии)</param>
            <param name="licensedStations">Подключенные в данный момент рабочие места без учета проверяемой сессии</param>
            <remarks>Исключение в этом методе означает неудавшийся логин пользователя. 
            Для передачи сообщения пользователю следует использовать <see cref="T:ProgramSoyuz.PLM.Scripting.HumanFaultException"/>.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeServerTrigger.SessionConnected(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserSession)">
            <summary>
            Вызывает триггер логина пользователя в систему.
            </summary>
            <param name="obj">Пользователь</param>
            <param name="session">Вновь инициализированная сессия</param>
            <remarks>Исключение в этом методе означает неудавшийся логин пользователя. 
            Для передачи сообщения пользователю следует использовать <see cref="T:ProgramSoyuz.PLM.Scripting.HumanFaultException"/>.</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeServerTrigger.SessionDisconnected(ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.UserSession)">
            <summary>
            Вызывает триггер выхода пользователя из системы.
            </summary>
            <param name="obj">Пользователь</param>
            <param name="session">Только что закрывшаяся сессия</param>
            <remarks>Исключения перекрыты с записью в репорты</remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.InvokeManager.InvokeServerTrigger.OnFileUploadConfirmed(ProgramSoyuz.PLM.Scripting.IAttributableObject,ProgramSoyuz.PLM.Scripting.AttributeValue,ProgramSoyuz.PLM.Scripting.FileDesc,ProgramSoyuz.PLM.Scripting.FileVault)">
            <summary>
            Вызывается на сервере сразу после фиксации сведений о сохраненном в файловом хранилище теле файла
            </summary>
            <param name="obj">Объект, чей файл сохранен</param>
            <param name="attributeValue">Значение атрибута</param>
            <param name="file">Описатель сохраненного файла</param>
            <param name="vault">Файловое хранилище, подтвердившее принятие тела файла</param>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserNotification">
            <summary>
            Связка Пользователь - Контейнер/ИнфоОбъект/Пользователь - Роль.
            Посредством этих объектов осуществляется привязка пользователя к некоторым оъектам 
            с указанием отношения (роли) пользователя к этим объектам
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserNotification.m_pData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserNotification.m_pRealObject">
            <summary>
            Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserNotification.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserNotification.CreateWrapper(ProgramSoyuz.DataModel.UserNotificationBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="userNotification">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserNotification.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
            Создает новый враппер по тому же объекту кеша
            </summary>
            <param name="original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserNotification.#ctor(ProgramSoyuz.DataModel.UserNotificationBase)">
            <summary>
            Конструктор оболочки по реальному объекту.
            </summary>
            <param name="UserNotification">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserNotification.#ctor(ProgramSoyuz.PLM.Scripting.UserSubscription,ProgramSoyuz.PLM.Scripting.User,ProgramSoyuz.PLM.Scripting.AttributableObject,System.String)">
            <summary>
            Конструктор нового уведомления
            </summary>
            <param name="subscription">Подписка, породившая уведомление</param>
            <param name="targetUser">Адресат уведомления</param>
            <param name="actualTarget">Объект, с которым произошло событие</param>
            <param name="eventData">Дополнительные данные по событию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserNotification.#ctor(ProgramSoyuz.PLM.Scripting.UserSubscription,ProgramSoyuz.PLM.Scripting.User,System.String,System.String)">
            <summary>
            Конструктор нового уведомления
            </summary>
            <param name="subscription">Подписка, породившая уведомление</param>
            <param name="targetUser">Адресат уведомления</param>
            <param name="actualTarget">Объект, с которым произошло событие</param>
            <param name="eventData">Дополнительные данные по событию</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserNotification.IdAssigned(System.UInt32)">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name="id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserNotification.SaveCompleted">
            <summary>
            Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
            что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserNotification.DoCancelChanges(System.Boolean)">
            <summary>
            Отмена измений, сделанных в объекте
            </summary>
            <param name="sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserNotification.CheckWrappedObject">
            <summary>
            Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
            Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserNotification.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.UserNotification.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.Entity">
            <summary>
            Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.ChangedData">
            <summary>
            Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.RealObject">
            <summary>
            Доступ к "реальному" объекту. 
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.WrappedObject">
            <summary>
            Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.IsDirtySelf">
            <summary>
            Возвращает true, если объект был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.Subscription">
            <summary>
            Доступ к родительскому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.Target">
            <summary>
            Доступ к целевому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.TargetUser">
            <summary>
            Доступ к целевому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.TargetIdentifier">
            <summary>
            Доступ к целевому объекту
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.TargetName">
            <summary>
            Имя целевого объекта. Используется для событий удаления объектов
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.EventData">
            <summary>
            Дополнительные данные события
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.DateCreated">
            <summary>
            Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.UserNotification.CreationData">
            <summary>
            Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserNotification.CreationData.EventData">
            <summary>
            Дополнительные данные события
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserNotification.CreationData.TargetName">
            <summary>
            Имя целевого объекта. Используется для событий удаления объектов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserNotification.CreationData.m_Parent">
            <summary>
            Пользователь, чья подписка
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserNotification.CreationData.m_TargetUser">
            <summary>
            Пользователь-адресат уведомления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.UserNotification.CreationData.m_TargetObject">
            <summary>
            Целевой объект подписки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.CreationData.Parent">
            <summary>
            Пользователь, чья подписка
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.CreationData.TargetUser">
            <summary>
            Пользователь-адресат уведомления
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.UserNotification.CreationData.TargetObject">
            <summary>
            Целевой объект подписки
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.SearchWorkItemFilterItem">
            <summary>
            Класс для уточнения диапазона нагрузок для дочерних элементов поискового запроса
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchWorkItemFilterItem.#ctor">
            <summary>
            Конструктор корневого элемента поискового дерева
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchWorkItemFilterItem.#ctor(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Конструктор дочернего элемента поискового дерева
            </summary>
            <param name="parent">Родительский элемент</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchWorkItemFilterItem.GetSQL(ProgramSoyuz.PLM.Scripting.SearchQueryBuilder,System.Int32)">
            <summary>
            Формирует SQL выражение
            </summary>
            <param name="searchQueryBuilder">Объект построитель поискового запроса</param>
            <param name="nestedElementLevel">Уровень вложенности элемента коллекции. 0 означает уровень атрибута верхнего уровня</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchWorkItemFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)">
            <summary>
            Возвращает true если два поисковых элемента идентичны
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.SearchWorkItemFilterItem.GetCriterionEqualityHash">
            <summary>
            Возвращает хеш, соответствующий функции функции <see cref="M:ProgramSoyuz.PLM.Scripting.SearchWorkItemFilterItem.IsEqualTo(ProgramSoyuz.PLM.Scripting.SearchExpressionItem)"/>
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Configuration">
            <summary>
              Структурирующая сущность для объединения групп объектов, определяющих ту или иную PLM конфигурацию.
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.Null">
            <summary>
              Специальный объект для обозначения явно заданной нулевой конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.m_pData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.m_pRealObject">
            <summary>
              Ссылка на реальный объект
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
              При десериализации, заново пытаемся получить "реальный объект"
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.CreateWrapper(ProgramSoyuz.DataModel.ConfigurationBase)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "configuration">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.CloneWrapperWithoutChanges(System.Boolean,System.Boolean)">
            <summary>
              Создает новый враппер по тому же объекту кеша
            </summary>
            <param name = "original"></param>
            <param name="doNotUseCache"> </param>
            <returns>Вновь созданная скриптовая оболочка объекта кеша</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.#ctor(ProgramSoyuz.DataModel.ConfigurationBase)">
            <summary>
              Конструктор оболочки по реальному объекту.
            </summary>
            <param name = "template">Реальный объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.#ctor">
            <summary>
              Конструктор специальной оболочки, обозначающей явно заданную нулевую конфигурацию.
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.#ctor(ProgramSoyuz.PLM.Scripting.Configuration,System.String)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "parent">Родительский объект</param>
            <param name = "nameKey">Программное название объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.#ctor(ProgramSoyuz.PLM.Scripting.Configuration.CreationData)">
            <summary>
              Конструктор нового объекта для сохранения в PLM
            </summary>
            <param name = "pData">Набор данных для создания нового объекта. Передается по ссылке</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportingOptionFlags)">
            <summary>
              Инициализирует этот объект по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name = "importFlags"></param>
            <param name="options"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.ProgramSoyuz#PLM#Scripting#IConfigurationObject#InitLinksFrom(ProgramSoyuz.DataModel.ObjectPackDataBase,ProgramSoyuz.PLM.Scripting.ConfigurationObjectsCache,ProgramSoyuz.DataModel.ConfigurationImportFlags,ProgramSoyuz.DataModel.ImportPacketPhaseEnum,ProgramSoyuz.DataModel.ImportingOptionFlags,System.Int32)">
            <summary>
              Инициализирует ссылки этого объекта по набору свойств
            </summary>
            <param name = "data">Набор свойств</param>
            <param name = "objectsCache">Индекс объектов по GUIDу</param>
            <param name = "importFlags"></param>
            <param name="importPhase"> </param>
            <param name="options"></param>
            <param name="packVersion"></param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.GetChangesInfo(System.Text.StringBuilder)">
            <summary>
            Формирует строку с названием измененных атрибутов и свойств
            </summary>
            <returns>Строка с перечисленными через запятую названиями полей и атрибутов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.GetDifferencesReport(ProgramSoyuz.PLM.Scripting.ScriptingObject,ProgramSoyuz.PLM.Scripting.RtfFormatter)">
            <summary>
            Формирует подробный отчет о различии между двумя объектами одного типа
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.IdAssigned(System.UInt32)">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту его идентификатора
            </summary>
            <param name = "id">id сохраненного объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.SaveCompleted">
            <summary>
              Вызывается изнутри инфраструктуры сохранения для сообщения объекту,
              что сохранение произошло успешно, и внутренние врапперы можно сбросить
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.MoveTo(ProgramSoyuz.PLM.Scripting.Configuration)">
            <summary>
              Перенос объекта к другому родителю.
            </summary>
            <param name = "parent">Новый родительский объект</param>
            <remarks>
              Происходит только перенос к другому родителю. 
              Какого-либо сохранения общих свойств этим методом не осуществляется
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.DoCancelChanges(System.Boolean)">
            <summary>
              Отмена измений, сделанных в объекте
            </summary>
            <param name = "sendNotifications">true, если следует рассылать нотификации об изменениниях</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.DoEraseChildrenOrRelated">
            <summary>
              Каскадное удаление дочерних объектов, 
              а так же малозначимых объектов, ссылающихся на данный
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.GetRelatedObjects(ProgramSoyuz.PLM.Scripting.ScriptingBaseObject.SearchLinkedObjectsRange)">
            <summary>
              Перечисляет все объекты так или иначе связанные с данным
            </summary>
            <param name = "range">Диапазон поиска связанных объектов</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.CheckWrappedObject">
            <summary>
              Обновляет ссылку на объект из кеша так, чтобы использовалась последняя версия.
              Ссылка может стать нулевой, если объект удалён
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.UpdateWrappedObject(ProgramSoyuz.DataModel.DataObject)">
            <summary>
            Обновляет обернутый объект, заменяя его на указанный.
            Кешированные элементы скриптового объекта при этом сбрасываются
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.DoAutoCorrectBeforeSave">
            <summary>
            Выполняет автокоррекцию внесенных изменений (например Trim для NameKey)
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.GetNameUILocalized(System.String)">
            <summary>
              Обозначение конфигурации (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.GetTitleLocalized(System.String)">
            <summary>
              Наименование конфигурации (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.GetAuthorLocalized(System.String)">
            <summary>
              Разработчик конфигурации (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.GetDescriptionLocalized(System.String)">
            <summary>
              Пользовательские заметки об объекте (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.GetNotesLocalized(System.String)">
            <summary>
              Пользовательские заметки об объекте (с поддержкой локализации)
            </summary>
            <param name="languageCode">Код языка</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.IncrementRevision">
            <summary>
              Увеличивает на единичку элемент версии конфигурации после последней точки
            </summary>
            <returns>true если все получилось</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.OverridePassword(System.String)">
            <summary>
            Установка пароля без проверки старого
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.GetChild(System.String)">
            <summary>
              Доступ к дочерней конфигурации по основному пути наследования rootNameKey\NameKey1\..\NameKeyN
            </summary>
            <returns>Найденный объект или null</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.m_pOtherParentList">
            <summary>
              Оболочка для работы со списком элементов коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.AddOtherParent(ProgramSoyuz.PLM.Scripting.Configuration)">
            <summary>
              Добавление дополнительного родителя к объекту
            </summary>
            <param name = "otherParent">Дополнительный родитель</param>
            <returns>true если такого родителя еще не было</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.RemoveOtherParent(ProgramSoyuz.PLM.Scripting.Configuration)">
            <summary>
              Удаление дополнительного родителя объекта
            </summary>
            <param name = "template">Дополнительный родитель</param>
            <returns>true если такого родитель был и исключен из списка дополнительных</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.IsBasedOn(ProgramSoyuz.PLM.Scripting.Configuration)">
            <summary>
              Возвращает true, если объект является унаследованным от указанного
            </summary>
            <remarks>
              Считается что объект наследует самого себя
            </remarks>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.IsChildOf(ProgramSoyuz.PLM.Scripting.Configuration)">
            <summary>
              Проверяет является ли этот объект дочерним по отношению к pConfiguration. 
              Проверка производится с учетом множественного наследования.
            </summary>
            <param name = "template">Шаблон, проверяемый на то, что он является родительским к данному</param>
            <returns>true если этот объект является дочерним по отношению к pConfiguration или совпадает с ним</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.GetAllParents">
            <summary>
              Формирует список всех родительских конфигураций и себя в порядке от старших к младшим
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.DoGetAllParents(System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.Configuration})">
            <summary>
              Формирует список всех родительских конфигураций и себя в порядке от старших к младшим
            </summary>
            <param name = "parents">Список родительских конфигураций</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.ToString">
            <summary>
              Возвращает основное название объекта по умолчанию
            </summary>
            <returns>Возвращает основное название объекта по умолчанию</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.ToString(ProgramSoyuz.Common.WordFormEnum)">
            <summary>
              Возвращает основное название объекта по умолчанию
            </summary>
            <returns>Возвращает основное название объекта по умолчанию</returns>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.ConfigurationEntities">
            <summary>
              Список сущностей, относящихся к объектам, включаемым в состав конфигурации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.EnumBoundObjects">
            <summary>
              Перебирает все объекты конфигурирования, привязанные к данной конфигурации
            </summary>
            <returns>Перечисление найденных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.EnumLocalizationStrings(System.String)">
            <summary>
              Перебирает все строки локализации указанного языка по всем объектам конфигурирования, привязанным к данной конфигурации
            </summary>
            <returns>Перечисление найденных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.EnumServiceDataObjects(System.Boolean)">
            <summary>
              Перебирает все сервисные объекты еонтейнеры и ИО, привязанные к данной конфигурации
            </summary>
            <param name = "strict">Если false, то в перебор попадают контейнеры других конфигураций,
            если в них есть ИО из данной конфигурации</param>
            <returns>Перечисление найденных объектов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.EnumBoundObjects(ProgramSoyuz.DataModel.EntityIdentifier)">
            <summary>
              Перебирает все объекты указанного типа, привязанные к данной конфигурации
            </summary>
            <param name = "entity">Требуемый тип сущности</param>
            <returns>Перечисление найденных объектов</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Entity">
            <summary>
              Возвращает идентификатор сущности
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.ChangedData">
            <summary>
              Ссылка на объект с измененными данными для сохранения или создания нового объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.PendingChanges">
            <summary>
            Возвращает набор данных с изменениями основных свойств объекта, накопленных в данной скриптовой оболочке
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.RealObject">
            <summary>
              Доступ к атрибутируемому "реальному" объекту. 
              Используется в процессе десериализации атрибутов.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.WrappedObject">
            <summary>
              Возвращает обернутый объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.IsDirtySelf">
            <summary>
              Возвращает true, если объект (или рекурсивно объекты, от которых этот объект зависит) 
              был изменен и требует сохранения
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.ParentConfigurationId">
            <summary>
              Идентификатор конфигурации, к которой относится этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.NameKey">
            <summary>
              Программное название объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.NameUILocalized">
            <summary>
              Обозначение конфигурации (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.NameUI">
            <summary>
              Обозначение конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.TitleLocalized">
            <summary>
              Наименование конфигурации (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Title">
            <summary>
              Наименование конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.AuthorLocalized">
            <summary>
              Разработчик конфигурации (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Author">
            <summary>
              Разработчик конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.DescriptionLocalized">
            <summary>
              Пользовательские заметки об объекте (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Description">
            <summary>
              Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.NotesLocalized">
            <summary>
              Пользовательские заметки об объекте (с поддержкой локализации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Notes">
            <summary>
              Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Params">
            <summary>
              Пользовательские дополнительные параметры объекта, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.LanguageCode">
            <summary>
            Код языка: ru, en и пр
            Используются строки по <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/>: "ru", "en", "fi", и пр.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Kind">
            <summary>
            Подтип объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.RequiredFrameworkVersion">
            <summary>
            Минимальная версия фреймворка, необходимая для установки конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Version">
            <summary>
              Версия конфигурации, прописанная в момент очередной фиксации изменений конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.DistributiveURL">
            <summary>
              URL к месту хранения дистрибутива конфигурации на сервере разработки
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.DistributiveServerSignature">
            <summary>
              Контрольная подпись сервера для проверки подлинности источника конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.IsModified">
            <summary>
              Признак наличия изменений в конфигурации по отношению к зафиксированной версии
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Password">
            <summary>
              Пароль для операций изменения заблокированной конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.OldPassword">
            <summary>
              Текущий пароль для операций изменения заблокированной конфигурации,
              подтверждающий установку нового пароля
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.ProtectionData">
            <summary>
              Шифрованные данные защиты конфигурации (используется при импорте пакетов конфигурации)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.IsLocked">
            <summary>
              Возвращает true если конфигурация закрыта от редактирования
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.IsAbstract">
            <summary>
              Возвращает true если конфигурация является базовой и не предназначена для самостоятельного использования
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.IsActive">
            <summary>
              Возвращает true если конфигурация является активной - ее объекты могут использоваться в системе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.IsBoundToCurrentDatabase">
            <summary>
              Возвращает true если конфигурация является активной - ее объекты могут использоваться в системе
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.OriginalDatabaseId">
            <summary>
              Глобальный идентификатор базы, в которой конфигурация разрабатывается
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.DateCreated">
            <summary>
              Локальное дата/время создания объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.CreatedByUser">
            <summary>
              Пользователь, создавший этот объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.DateModified">
            <summary>
              Локальное дата/время последнего изменения объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.ModifiedByUser">
            <summary>
              Пользователь, изменившмй этот объект последним
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.ChangesCounter">
            <summary>
              Суммарный счетчик изменений конфигурации
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Icon">
            <summary>
              Иконка, установленная для этого объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.DisplayIcon">
            <summary>
              Иконка, показываемая в UI
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Parent">
            <summary>
              Доступ к родительскому объекту по прямой ветке наследования
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Root">
            <summary>
            Возвращает корневой объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration._Children">
            <summary>
              Возвращает перечислитель дочерних (по прямой ветке наследования) конфигураций.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration._AllChildren">
            <summary>
              Перечисляет рекурсивно всех детей (по прямой ветке наследования) (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration._AllDescendants">
            <summary>
            Возвращает перечислитель дочерних (по прямой и дополнительной веткам наследования на все уровни) конфигураций
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.Children">
            <summary>
              Возвращает перечислитель дочерних (по прямой ветке наследования) конфигураций
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.AllChildren">
            <summary>
              Возвращает перечислитель дочерних (по прямой ветке наследования на все уровни) конфигураций
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.AllDescendants">
            <summary>
            Возвращает перечислитель дочерних (по прямой и дополнительной веткам наследования на все уровни) конфигураций
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.OtherChildren">
            <summary>
              Возвращает массив дочерних (по дополнительной ветке наследования) конфигураций.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration._OtherChildren">
            <summary>
              Возвращает массив дочерних (по дополнительной ветке наследования) конфигураций.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.ExistingOtherParents">
            <summary>
              Возвращает перечислитель существующих дополнительных родителей объекта
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.OtherParents">
            <summary>
              Возвращает перечислитель элементов коллекции спискового атрибута, существующих в базе.
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#Configuration}#DirectChildren">
            <summary>
              Перебор непосредственных прямых детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.ProgramSoyuz#Common#ITreeLikeEntity{ProgramSoyuz#PLM#Scripting#Configuration}#AllDirectChildren">
            <summary>
              Перечисляет рекурсивно всех прямых детей (сам объект в перебор не попадает)
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Configuration.CreationData">
            <summary>
              Класс для хранения измененных данных, или набор для создания нового объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.GlobalIdentifier">
            <summary>
              Глобальный идентификатор этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.NameKey">
            <summary>
              Программное название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.NameUI">
            <summary>
              Пользовательское название объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.Title">
            <summary>
              Наименование конфигурации (дополнительное название)
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.Author">
            <summary>
              Автор конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.Description">
            <summary>
              Описание конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.Notes">
            <summary>
              Пользовательские заметки об объекте
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.Params">
            <summary>
              Пользовательские дополнительные параметры объекта, возможно определяющие программное поведение
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.LanguageCode">
            <summary>
            Код языка пакета локализации: ru, en и пр 
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.RequiredFrameworkVersion">
            <summary>
            Минимальная версия фреймворка, необходимая для установки конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.Kind">
            <summary>
            Подтип объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.Version">
            <summary>
              Версия конфигурации, прописанная в момент очередной фиксации изменений конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.Modified">
            <summary>
              Признак наличия изменений в конфигурации по отношению к зафиксированной версии
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.Password">
            <summary>
              Пароль для операций изменения заблокированной конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.PasswordHash">
            <summary>
              Хеш нового пароля
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.PasswordSaltValue">
            <summary>
              Соль хеша
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.OldPassword">
            <summary>
              Текущий пароль для операций изменения заблокированной конфигурации, 
              подтверждающий операцию смены пароля
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.OldPasswordHash">
            <summary>
              Хеш текущего пароля
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.ProtectionData">
            <summary>
              Шифрованные данные защиты конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.IgnorePassword">
            <summary>
            Флаг установлен, если пароль меняется без проверки старого
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.Flags">
            <summary>
              Набор битовых флагов объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.m_Parent">
            <summary>
              Родительский (по прямой ветке наследования) объект
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.OtherParentsToAdd">
            <summary>
              Дополнительные родительские объекты для добавления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.OtherParentsToRemove">
            <summary>
              Дополнительные родительские объекты для удаления
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.m_Icon">
            <summary>
              Иконка для этого объекта
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.OriginalDatabaseId">
            <summary>
            Глобальный идентификатор базы, в которой конфигурация разрабатывается
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.DistributiveURL">
            <summary>
              URL к месту хранения дистрибутива конфигурации на сервере разработки
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.DistributiveServerSignature">
            <summary>
              Контрольная подпись сервера для проверки подлинности источника конфигурации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.WriteTo(ProgramSoyuz.DataModel.ConfigurationBase.Body)">
            <summary>
              Копирует инициализированные поля этого класса в соответствующие поля структуры данных сохраняемого объекта
            </summary>
            <param name = "pBody">Данные сохраняемого объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.GetChangesLevel(System.Type)">
            <summary>
            Определяет уровень изменений, накопленных в этом объекте: данные или скин
            </summary>
            <param name="dataType">Тип данных для сохранения объекта в пакете, производный от <see cref="T:ProgramSoyuz.DataModel.ObjectPackDataBase"/></param>
            <returns>Флаги, характеризующие имеющиеся изменения</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.Parent">
            <summary>
              Родительский объект
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.OtherParentsChanged">
            <summary>
              Возвращает true если есть изменения в списках дополнительных родиетелей
            </summary>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.CreationData.Icon">
            <summary>
              Иконка для этого объекта
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList">
            <summary>
              Класс оболочка для операций со списком дополнительных родителей
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList.m_pOwner">
            <summary>
              Шаблон, чья коллекция
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList.m_ExistingOtherParents">
            <summary>
              Список существующих элементов коллекции
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList.#ctor(ProgramSoyuz.PLM.Scripting.Configuration)">
            <summary>
              Конструктор
            </summary>
            <param name = "pOwner">Шаблон, чья коллекция</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref = "T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              An <see cref = "T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList.Add(ProgramSoyuz.PLM.Scripting.Configuration)">
            <summary>
              Adds an item to the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name = "item">The object to add to the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList.Clear">
            <summary>
              Removes all items from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList.Contains(ProgramSoyuz.PLM.Scripting.Configuration)">
            <summary>
              Determines whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <returns>
              true if <paramref name = "item" /> is found in the <see cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
            <param name = "item">The object to locate in the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList.CopyTo(ProgramSoyuz.PLM.Scripting.Configuration[],System.Int32)">
            <summary>
              Copies the elements of the <see cref = "T:System.Collections.Generic.ICollection`1" /> to an <see
               cref = "T:System.Array" />, starting at a particular <see cref = "T:System.Array" /> index.
            </summary>
            <param name = "array">The one-dimensional <see cref = "T:System.Array" /> that is the destination of the elements copied from <see
               cref = "T:System.Collections.Generic.ICollection`1" />. The <see cref = "T:System.Array" /> must have zero-based indexing.</param>
            <param name = "arrayIndex">The zero-based index in <paramref name = "array" /> at which copying begins.</param>
            <exception cref = "T:System.ArgumentNullException"><paramref name = "array" /> is null.</exception>
            <exception cref = "T:System.ArgumentOutOfRangeException"><paramref name = "arrayIndex" /> is less than 0.</exception>
            <exception cref = "T:System.ArgumentException"><paramref name = "array" /> is multidimensional.-or-<paramref
              name = "arrayIndex" /> is equal to or greater than the length of <paramref name = "array" />.-or-The number of elements in the source <see
               cref = "T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref
               name = "arrayIndex" /> to the end of the destination <paramref name = "array" />.-or-Type cannot be cast automatically to the type of the destination <paramref
               name = "array" />.</exception>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList.Remove(ProgramSoyuz.PLM.Scripting.Configuration)">
            <summary>
              Removes the first occurrence of a specific object from the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              true if <paramref name = "item" /> was successfully removed from the <see
               cref = "T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref
               name = "item" /> is not found in the original <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <param name = "item">The object to remove from the <see cref = "T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref = "T:System.NotSupportedException">The <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList.Count">
            <summary>
              Gets the number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
              The number of elements contained in the <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.Configuration.OtherParentList.IsReadOnly">
            <summary>
              Gets a value indicating whether the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
              true if the <see cref = "T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AccessRuleCustomizationBase">
            <summary>
            Базовый класс для кастомизаторов правил доступа
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRuleCustomizationBase.CheckCustomizationCode(ProgramSoyuz.DataModel.AccessRuleBase.KindEnum,System.String,ProgramSoyuz.PLM.Scripting.CustomizationMethod[]@,System.CodeDom.Compiler.CompilerError[]@,System.Int32@)">
            <summary>
            Проверочная компиляция кода кастомизации объекта
            </summary>
            <param name="kind">Тип правила доступа</param>
            <param name="csCode">Текст одного или нескольких методов</param>
            <param name="missingHandlers">На выходе список методов, которые можно добавить к коду</param>
            <param name="aErrors">Список ошибок компиляции либо null</param>
            <param name="nHeaderLines">Число строк, вставленных перед переданным для компиляции кодом</param>
            <returns>true если компиляция прошла успешно</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRuleCustomizationBase.GetDefaultImplementation(ProgramSoyuz.DataModel.AccessRuleBase.KindEnum,ProgramSoyuz.PLM.Scripting.CustomizationMethod[])">
            <summary>
            Формирует реализацию по умолчанию для запрошенных методов кастомизации
            </summary>
            <param name="kind">Тип правила доступа</param>
            <param name="handlers">массив идентификаторов интересующих методов кастомизации,
            либо null если интересуют все методы для этого объекта</param>
            <returns>Строку с кодом</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.AccessRuleCustomization`2">
            <summary>
            Базовый класс для кастомизаторов правил доступа
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRuleCustomization`2.#ctor">
            <summary>
            Конструктор таких объектов вызывается только кодом загрузки кастомизации
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRuleCustomization`2.Check(ProgramSoyuz.PLM.Scripting.User,`0,`1,ProgramSoyuz.DataModel.OperationIdentifier,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Проверка возможности выполнения указанной операции с данным объектом.
            </summary>
            <param name="user">Пользователь, чья операция проверяется</param>
            <param name="obj">Объект, с которым производится операция</param>
            <param name="target">Объект, параметр операции (создание/перенос)</param>
            <param name="op">Код операции</param>
            <param name="attrNameKey">Ключ атрибута для проверки операции с атрибутом</param>
            <param name="element">Элемент коллекции, с атрибутом которого производится операция</param>
            <returns>Возвращает true если операция разрешена</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.AccessRuleCustomization`2.CheckCustomOperation(ProgramSoyuz.PLM.Scripting.User,`0,`1,ProgramSoyuz.PLM.Scripting.NamedValue,System.String,ProgramSoyuz.PLM.Scripting.CollectionElement)">
            <summary>
            Проверка возможности выполнения указанной операции с данным объектом.
            </summary>
            <param name="user">Пользователь, чья операция проверяется</param>
            <param name="obj">Объект, с которым производится операция</param>
            <param name="target">Объект, параметр операции (создание/перенос)</param>
            <param name="op">ИЗ пользовательской операции</param>
            <param name="attrNameKey">Ключ атрибута для проверки операции с атрибутом</param>
            <param name="element">Элемент коллекции, с атрибутом которого производится операция</param>
            <returns>Возвращает true если операция разрешена</returns>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.CaseShape">
            <summary>
            Кейс для свита.
            </summary>
            <remarks>
            Не имеет собственного DataSource.
            Все коннекшены исходят от свича, но рисуются от кейса.
            </remarks>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.CaseShape.IsVirtual">
            <summary>
            Виртуальный этап.
            Такой этап существует только на диаграмме, у него нет реального этапа в ядре PLM.
            У виртуального этапа может быть заполнено свойство <see cref="P:ProgramSoyuz.PLM.Scripting.PrintingDocuments.WF.CaseShape.Owner"/>.
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper">
            <summary>
            Вспомогательный класс для вспомогательных методов для формирования печатных интерактивных документов
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper._interpreter">
            <summary>
            Интерпретатор внедрённых выражений
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper.Parse(System.String,DynamicExpresso.Parameter[])">
            <summary>
            Parse a text expression and returns a Lambda class that can be used to invoke it.
            </summary>
            <param name="expressionText">Expression statement</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper.Parse(System.String,System.Type,DynamicExpresso.Parameter[])">
            <summary>
            Parse a text expression and returns a Lambda class that can be used to invoke it.
            If the expression cannot be converted to the type specified in the expressionType parameter
            an exception is throw.
            </summary>
            <param name="expressionText">Expression statement</param>
            <param name="expressionType">The expected return type. Use void or object type if there isn't an expected return type.</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper.Parse``1(System.String,System.String[])">
            <summary>
            Parse a text expression and convert it into a delegate.
            </summary>
            <typeparam name="TDelegate">Delegate to use</typeparam>
            <param name="expressionText">Expression statement</param>
            <param name="parametersNames">Names of the parameters. If not specified the parameters names defined inside the delegate are used.</param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper.Eval(System.String,DynamicExpresso.Parameter[])">
            <summary>
            Parse and invoke the specified expression.
            </summary>
            <param name="expressionText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper.Eval``1(System.String,DynamicExpresso.Parameter[])">
            <summary>
            Parse and invoke the specified expression.
            </summary>
            <param name="expressionText"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper.Eval(System.String,System.Type,DynamicExpresso.Parameter[])">
            <summary>
            Parse and invoke the specified expression.
            </summary>
            <param name="expressionText"></param>
            <param name="expressionType">The return type of the expression. Use void or object if you don't know the expected return type.</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper.PrintingDocToMetafileArray(ProgramSoyuz.PLM.Scripting.DocumentPageDesc[])">
            <summary>
            Выдает массив метафайлов для печатного документа (одна страница - один метафайл)
            </summary>
            <param name="pages">Страницы для печати</param>
            <returns>Массив метафайлов</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper.PrintingDocToXps(ProgramSoyuz.PLM.Scripting.DocumentPageDesc[],System.String)">
            <summary>
            Сохраняет печатный документ в XPS-файл
            </summary>
            <param name="pages">Страницы для печати</param>
            <param name="fileName">Имя XPS-файла</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper.PrintingDocToTiff(ProgramSoyuz.PLM.Scripting.DocumentPageDesc[],System.String,System.Single,System.Int64,System.Drawing.Imaging.EncoderValue)">
            <summary>
            Сохраняет печатный документ в Tiff-файл
            </summary>
            <param name="pages">Страницы для печати</param>
            <param name="fileName">Имя Tiff-файла</param>
            <param name="dpi">Разрешение</param>
            <param name="colorDepth">Глубина цвета</param>
            <param name="compression">Сжатие</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper.PrintingDocToPdf(ProgramSoyuz.PLM.Scripting.DocumentPageDesc[],System.String)">
            <summary>
            Сохраняет печатный документ в PDF-файл
            </summary>
            <param name="pages">Страницы для печати</param>
            <param name="fileName">Имя PDF-файла</param>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.PrintingDocumentsHelper.Interpreter">
            <summary>
            Интерпретатор внедрённых выражений
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImportExport.RegistryItemExporter">
            <summary>
            Вспомогательный класс для экспорта элементов реестра в пакет
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.RegistryItemExporter.m_TargetRegistryItems">
            <summary>
            Список объектов, добавляемых в пакет целиком
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RegistryItemExporter.FilterCommonItems(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.RegistryItem})">
            <summary>
            Фильтрует входную последовательность, оставляя лишь общие элементы и
            элементы относящиеся к учетным записям, соотнесенным с какой-нибудь конфигурацией
            </summary>
            <param name="input">Входная последовательность элементов реестра</param>
            <returns>Фильтрованная последовательность</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RegistryItemExporter.Add(ProgramSoyuz.PLM.Scripting.RegistryItem,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Добавляет в пакет указанный элемент реестра
            </summary>
            <param name="item">Добавляемый объект</param>
            <param name="withAncestors">true если следует добавить все родительские объекты</param>
            <param name="withChildren">true если следует включить дочерние объекты</param>
            <param name="withRelatedObjects">true если следует включить в пакет прочие объекты с неустановленной конфигурацией</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RegistryItemExporter.Add(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.RegistryItem},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Добавляет в пакет указанные элементы реестра
            </summary>
            <param name="objects">Добавляемые объекты</param>
            <param name="withAncestors">true если следует добавить все родительские объекты</param>
            <param name="withChildren">true если следует включить дочерние объекты</param>
            <param name="withRelatedObjects">true если следует включить в пакет прочие объекты с неустановленной конфигурацией</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RegistryItemExporter.CalcObjectsToExport(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.RegistryItem},System.Boolean,System.Boolean)">
            <summary>
            Формирует набор объектов, подлежащих экспорту
            </summary>
            <param name = "objects">Добавляемые объекты</param>
            <param name = "withAncestors">true если следует добавить все родительские объекты</param>
            <param name = "withChildren">true если следует добавить всю ветвь дочерних объектов по прямому наследованию</param>
            <returns>Множество объектов для экспорта</returns>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RegistryItemExporter.AddRegistryItem(ProgramSoyuz.PLM.Scripting.RegistryItem,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Добавляет объекты в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="additionQueue">Очередь для объектов на добавление в пакет</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RegistryItemExporter.AddGenericObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject},System.Boolean)">
            <summary>
            Добавляет объекты в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="additionQueue">Очередь для объектов на добавление в пакет</param>
            <param name="withRelatedObjects">true если следует включить в пакет прочие объекты с неустановленной конфигурацией</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.RegistryItemExporter.AddObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Boolean)">
            <summary>
            Добавляет объект в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="withRelatedObjects">true если следует включить в пакет прочие объекты с неустановленной конфигурацией</param>
            <returns>Возвращает true, если объект добавлен в пакет, false, если добавлен только линк</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.RegistryItemExporter.TargetRegistryItems">
            <summary>
            Список элементов реестра, добавляемых в пакет целиком
            </summary>
        </member>
        <member name="T:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter">
            <summary>
            Вспомогательный класс для экспорта атрибутируемых объектов в пакет
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.m_TargetObjects">
            <summary>
            Список объектов, добавляемых в пакет целиком
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.IncludeConfigurationObjects">
            <summary>
            Если true то вместе с объектом добавляются и необходимые для него объекты конфигурации
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.IncludeParents">
            <summary>
            Если true то вместе с объектом добавляются и все его родительские объекты в цепочке хранения
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.IncludeOtherParents">
            <summary>
            Если true то вместе с объектом добавляются и все его родительские объекты, где он присутствует в ввиде ярлыков
            </summary>
        </member>
        <member name="F:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.IncludeAttributeLinks">
            <summary>
            Если true то вместе с объектом добавляются и объекты, упомянутые в атрибутах объекта
            </summary>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.Add(ProgramSoyuz.PLM.Scripting.AttributableObject)">
            <summary>
            Добавляет в пакет указанный объект
            </summary>
            <param name="obj">Добавляемый объект</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.Add(ProgramSoyuz.PLM.Scripting.AttributableObject,ProgramSoyuz.DataModel.ObjectPackDataBase.ObjectRestoreModeEnum)">
            <summary>
            Добавляет в пакет указанный объект
            </summary>
            <param name="obj">Добавляемый объект</param>
            <param name="restoreMode">Режим импорта объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.Add(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject})">
            <summary>
            Добавляет в пакет указанные объекты
            </summary>
            <param name="objects">Добавляемые объекты</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.Add(System.Collections.Generic.IEnumerable{ProgramSoyuz.PLM.Scripting.AttributableObject},ProgramSoyuz.DataModel.ObjectPackDataBase.ObjectRestoreModeEnum)">
            <summary>
            Добавляет в пакет указанные объекты
            </summary>
            <param name="objects">Добавляемые объекты</param>
            <param name="restoreMode">Режим импорта объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.AddTarget(ProgramSoyuz.PLM.Scripting.AttributableObject,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject},ProgramSoyuz.DataModel.ObjectPackDataBase.ObjectRestoreModeEnum)">
            <summary>
            Добавляет объекты в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="additionQueue">Очередь для объектов на добавление в пакет</param>
            <param name="restoreMode">Режим импорта объекта</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.AddGenericObject(ProgramSoyuz.PLM.Scripting.ScriptingObject,System.Collections.Generic.ICollection{ProgramSoyuz.PLM.Scripting.ScriptingObject})">
            <summary>
            Добавляет объекты в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <param name="additionQueue">Очередь для объектов на добавление в пакет</param>
        </member>
        <member name="M:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.AddObject(ProgramSoyuz.PLM.Scripting.ScriptingObject)">
            <summary>
            Добавляет объект в пакет.
            </summary>
            <param name="obj">Объект для добавления в пакет</param>
            <returns>Возвращает true, если объект добавлен в пакет, false, если добавлен только линк</returns>
        </member>
        <member name="P:ProgramSoyuz.PLM.Scripting.ImportExport.AttributableObjectExporter.TargetObjects">
            <summary>
            Список ролей, добавляемых в пакет целиком
            </summary>
        </member>
    </members>
</doc>
